
;; Function summaryStats_t::summaryStats_t() (_ZN14summaryStats_tC2Ev)



Pass 0

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:104000 MMX_REGS:104000 FP_TOP_SSE_REGS:104000 FP_SECOND_SSE_REGS:104000 FLOAT_SSE_REGS:104000 FLOAT_INT_REGS:72000 INT_SSE_REGS:104000 FLOAT_INT_SSE_REGS:104000 ALL_REGS:104000 MEM:32000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:136000 INDEX_REGS:0 LEGACY_REGS:136000 GENERAL_REGS:136000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:168000 MEM:32000

  Register 58 pref DIREG, else GENERAL_REGS
  Register 59 pref FLOAT_INT_SSE_REGS or none


Pass 1

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:104000 MMX_REGS:104000 FP_TOP_SSE_REGS:104000 FP_SECOND_SSE_REGS:104000 FLOAT_SSE_REGS:104000 FLOAT_INT_REGS:72000 INT_SSE_REGS:104000 FLOAT_INT_SSE_REGS:104000 ALL_REGS:104000 MEM:32000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:136000 INDEX_REGS:0 LEGACY_REGS:136000 GENERAL_REGS:136000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:168000 MEM:32000

66 registers.

Register 58 used 8 times across 9 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS; pointer.

Register 59 used 8 times across 16 insns in block 0; set 1 time; FLOAT_INT_SSE_REGS or none.

1 basic blocks, 2 edges.

Basic block 0 prev -1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 5.
;; Register 59 in 0.
(note:HI 1 0 9 ("./CppStatUtilities.cc") 32)

;; Start of basic block 0, registers live: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 9 1 6 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 6 9 7 0 ./CppStatUtilities.cc:32 (set (reg/f:DI 58 [ this ])
        (reg:DI 5 di [ this ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))

(note:HI 7 6 11 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 11 7 12 0 ("./CppStatUtilities.cc") 33)

(insn:HI 12 11 13 0 ./CppStatUtilities.cc:33 (set (reg:DF 59)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn:HI 13 12 15 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (reg/f:DI 58 [ this ]) [3 <variable>.min+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 6 (insn_list:REG_DEP_TRUE 12 (nil)))
    (nil))

(insn:HI 15 13 17 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 8 [0x8])) [3 <variable>.max+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 17 15 19 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 16 [0x10])) [3 <variable>.med+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 19 17 21 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 24 [0x18])) [3 <variable>.mean+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 21 19 23 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 32 [0x20])) [3 <variable>.mad+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 23 21 25 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 40 [0x28])) [3 <variable>.q1+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 25 23 26 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 48 [0x30])) [3 <variable>.q3+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 59)
        (expr_list:REG_DEAD (reg/f:DI 58 [ this ])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note:HI 26 25 27 NOTE_INSN_FUNCTION_END)

(note:HI 27 26 0 ("./CppStatUtilities.cc") 34)


;; Function summaryStats_t::summaryStats_t() (_ZN14summaryStats_tC1Ev)



Pass 0

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:104000 MMX_REGS:104000 FP_TOP_SSE_REGS:104000 FP_SECOND_SSE_REGS:104000 FLOAT_SSE_REGS:104000 FLOAT_INT_REGS:72000 INT_SSE_REGS:104000 FLOAT_INT_SSE_REGS:104000 ALL_REGS:104000 MEM:32000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:136000 INDEX_REGS:0 LEGACY_REGS:136000 GENERAL_REGS:136000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:168000 MEM:32000

  Register 58 pref DIREG, else GENERAL_REGS
  Register 59 pref FLOAT_INT_SSE_REGS or none


Pass 1

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:104000 MMX_REGS:104000 FP_TOP_SSE_REGS:104000 FP_SECOND_SSE_REGS:104000 FLOAT_SSE_REGS:104000 FLOAT_INT_REGS:72000 INT_SSE_REGS:104000 FLOAT_INT_SSE_REGS:104000 ALL_REGS:104000 MEM:32000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:136000 INDEX_REGS:0 LEGACY_REGS:136000 GENERAL_REGS:136000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:168000 MEM:32000

66 registers.

Register 58 used 8 times across 9 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS; pointer.

Register 59 used 8 times across 16 insns in block 0; set 1 time; FLOAT_INT_SSE_REGS or none.

1 basic blocks, 2 edges.

Basic block 0 prev -1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 5.
;; Register 59 in 0.
(note:HI 1 0 6 ("./CppStatUtilities.cc") 32)

;; Start of basic block 0, registers live: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 6 4 0 ./CppStatUtilities.cc:32 (set (reg/f:DI 58 [ this ])
        (reg:DI 5 di [ this ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))

(note:HI 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 8 4 9 0 ("./CppStatUtilities.cc") 33)

(insn:HI 9 8 10 0 ./CppStatUtilities.cc:33 (set (reg:DF 59)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn:HI 10 9 12 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (reg/f:DI 58 [ this ]) [3 <variable>.min+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 3 (insn_list:REG_DEP_TRUE 9 (nil)))
    (nil))

(insn:HI 12 10 14 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 8 [0x8])) [3 <variable>.max+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 14 12 16 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 16 [0x10])) [3 <variable>.med+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 16 14 18 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 24 [0x18])) [3 <variable>.mean+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 18 16 20 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 32 [0x20])) [3 <variable>.mad+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 20 18 22 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 40 [0x28])) [3 <variable>.q1+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 22 20 23 0 ./CppStatUtilities.cc:33 (set (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 48 [0x30])) [3 <variable>.q3+0 S8 A64])
        (reg:DF 59)) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 59)
        (expr_list:REG_DEAD (reg/f:DI 58 [ this ])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note:HI 23 22 24 NOTE_INSN_FUNCTION_END)

(note:HI 24 23 0 ("./CppStatUtilities.cc") 34)


;; Function summaryStats_t& summaryStats_t::operator=(const summaryStats_t&) (_ZN14summaryStats_taSERKS_)



Pass 0

  Register 59 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:120536 MMX_REGS:120536 FP_TOP_SSE_REGS:120536 FP_SECOND_SSE_REGS:120536 FLOAT_SSE_REGS:120536 FLOAT_INT_REGS:83448 INT_SSE_REGS:120536 FLOAT_INT_SSE_REGS:120536 ALL_REGS:120536 MEM:35088
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1000 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:107536 MMX_REGS:107536 FP_TOP_SSE_REGS:107536 FP_SECOND_SSE_REGS:107536 FLOAT_SSE_REGS:107536 FLOAT_INT_REGS:74448 INT_SSE_REGS:107536 FLOAT_INT_SSE_REGS:107536 ALL_REGS:107536 MEM:32088
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168

  Register 59 pref DIREG, else GENERAL_REGS
  Register 60 pref SIREG, else GENERAL_REGS
  Register 61 pref FLOAT_INT_SSE_REGS or none
  Register 62 pref FLOAT_INT_SSE_REGS or none
  Register 63 pref FLOAT_INT_SSE_REGS or none
  Register 64 pref FLOAT_INT_SSE_REGS or none
  Register 65 pref FLOAT_INT_SSE_REGS or none
  Register 66 pref FLOAT_INT_SSE_REGS or none
  Register 67 pref FLOAT_INT_SSE_REGS or none


Pass 1

  Register 59 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:120536 MMX_REGS:120536 FP_TOP_SSE_REGS:120536 FP_SECOND_SSE_REGS:120536 FLOAT_SSE_REGS:120536 FLOAT_INT_REGS:83448 INT_SSE_REGS:120536 FLOAT_INT_SSE_REGS:120536 ALL_REGS:120536 MEM:35088
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1000 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:107536 MMX_REGS:107536 FP_TOP_SSE_REGS:107536 FP_SECOND_SSE_REGS:107536 FLOAT_SSE_REGS:107536 FLOAT_INT_REGS:74448 INT_SSE_REGS:107536 FLOAT_INT_SSE_REGS:107536 ALL_REGS:107536 MEM:32088
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:30464 INDEX_REGS:0 LEGACY_REGS:30464 GENERAL_REGS:30464 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:37632 MEM:7168

69 registers.

Register 59 used 10 times across 19 insns; set 1 time; pref DIREG, else GENERAL_REGS; pointer.

Register 60 used 9 times across 16 insns; set 1 time; user var; pref SIREG, else GENERAL_REGS; pointer.

Register 61 used 2 times across 4 insns in block 1; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 62 used 2 times across 4 insns in block 1; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 63 used 2 times across 4 insns in block 1; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 64 used 2 times across 4 insns in block 1; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 65 used 2 times across 4 insns in block 1; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 66 used 2 times across 4 insns in block 1; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 67 used 2 times across 2 insns in block 1; set 1 time; FLOAT_INT_SSE_REGS or none.

3 basic blocks, 5 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [10.4%]  1 [89.6%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 8964, maybe hot.
Predecessors:  0 [89.6%]  (fallthru)
Successors:  2 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

Basic block 2 prev 1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  0 [10.4%]  1 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 61 in 0.
;; Register 62 in 0.
;; Register 63 in 0.
;; Register 64 in 0.
;; Register 65 in 0.
;; Register 66 in 0.
;; Register 67 in 0.
(note:HI 1 0 7 ("./CppStatUtilities.cc") 37)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 7 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 7 4 0 ./CppStatUtilities.cc:37 (set (reg/f:DI 59 [ this ])
        (reg:DI 5 di [ this ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:37 (set (reg/v/f:DI 60 [ other ])
        (reg:DI 4 si [ other ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 4 si [ other ])
        (nil)))

(note:HI 5 4 9 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 9 5 10 0 ("./CppStatUtilities.cc") 39)

(insn:HI 10 9 11 0 ./CppStatUtilities.cc:39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ this ])
            (reg/v/f:DI 60 [ other ]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 3 (insn_list:REG_DEP_TRUE 4 (nil)))
    (nil))

(jump_insn:HI 11 10 14 0 ./CppStatUtilities.cc:39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1036 [0x40c])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60

(note:HI 14 11 13 ("./CppStatUtilities.cc") 41)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60
(note:HI 13 14 15 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 15 13 16 1 ./CppStatUtilities.cc:41 (set (reg:DF 61 [ <variable>.min ])
        (mem/s:DF (reg/v/f:DI 60 [ other ]) [3 <variable>.min+0 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (reg/v/f:DI 60 [ other ]) [3 <variable>.min+0 S8 A64])
        (nil)))

(insn:HI 16 15 17 1 ./CppStatUtilities.cc:41 (set (mem/s:DF (reg/f:DI 59 [ this ]) [3 <variable>.min+0 S8 A64])
        (reg:DF 61 [ <variable>.min ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_DEAD (reg:DF 61 [ <variable>.min ])
        (nil)))

(note:HI 17 16 18 1 ("./CppStatUtilities.cc") 42)

(insn:HI 18 17 19 1 ./CppStatUtilities.cc:42 (set (reg:DF 62 [ <variable>.max ])
        (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 8 [0x8])) [3 <variable>.max+0 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 8 [0x8])) [3 <variable>.max+0 S8 A64])
        (nil)))

(insn:HI 19 18 20 1 ./CppStatUtilities.cc:42 (set (mem/s:DF (plus:DI (reg/f:DI 59 [ this ])
                (const_int 8 [0x8])) [3 <variable>.max+0 S8 A64])
        (reg:DF 62 [ <variable>.max ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_DEAD (reg:DF 62 [ <variable>.max ])
        (nil)))

(note:HI 20 19 21 1 ("./CppStatUtilities.cc") 43)

(insn:HI 21 20 22 1 ./CppStatUtilities.cc:43 (set (reg:DF 63 [ <variable>.med ])
        (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 16 [0x10])) [3 <variable>.med+0 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 16 [0x10])) [3 <variable>.med+0 S8 A64])
        (nil)))

(insn:HI 22 21 23 1 ./CppStatUtilities.cc:43 (set (mem/s:DF (plus:DI (reg/f:DI 59 [ this ])
                (const_int 16 [0x10])) [3 <variable>.med+0 S8 A64])
        (reg:DF 63 [ <variable>.med ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 21 (nil))
    (expr_list:REG_DEAD (reg:DF 63 [ <variable>.med ])
        (nil)))

(note:HI 23 22 24 1 ("./CppStatUtilities.cc") 44)

(insn:HI 24 23 25 1 ./CppStatUtilities.cc:44 (set (reg:DF 64 [ <variable>.mean ])
        (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 24 [0x18])) [3 <variable>.mean+0 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 24 [0x18])) [3 <variable>.mean+0 S8 A64])
        (nil)))

(insn:HI 25 24 26 1 ./CppStatUtilities.cc:44 (set (mem/s:DF (plus:DI (reg/f:DI 59 [ this ])
                (const_int 24 [0x18])) [3 <variable>.mean+0 S8 A64])
        (reg:DF 64 [ <variable>.mean ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 24 (nil))
    (expr_list:REG_DEAD (reg:DF 64 [ <variable>.mean ])
        (nil)))

(note:HI 26 25 27 1 ("./CppStatUtilities.cc") 45)

(insn:HI 27 26 28 1 ./CppStatUtilities.cc:45 (set (reg:DF 65 [ <variable>.mad ])
        (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 32 [0x20])) [3 <variable>.mad+0 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 32 [0x20])) [3 <variable>.mad+0 S8 A64])
        (nil)))

(insn:HI 28 27 29 1 ./CppStatUtilities.cc:45 (set (mem/s:DF (plus:DI (reg/f:DI 59 [ this ])
                (const_int 32 [0x20])) [3 <variable>.mad+0 S8 A64])
        (reg:DF 65 [ <variable>.mad ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:DF 65 [ <variable>.mad ])
        (nil)))

(note:HI 29 28 30 1 ("./CppStatUtilities.cc") 46)

(insn:HI 30 29 31 1 ./CppStatUtilities.cc:46 (set (reg:DF 66 [ <variable>.q1 ])
        (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 40 [0x28])) [3 <variable>.q1+0 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 40 [0x28])) [3 <variable>.q1+0 S8 A64])
        (nil)))

(insn:HI 31 30 32 1 ./CppStatUtilities.cc:46 (set (mem/s:DF (plus:DI (reg/f:DI 59 [ this ])
                (const_int 40 [0x28])) [3 <variable>.q1+0 S8 A64])
        (reg:DF 66 [ <variable>.q1 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 30 (nil))
    (expr_list:REG_DEAD (reg:DF 66 [ <variable>.q1 ])
        (nil)))

(note:HI 32 31 33 1 ("./CppStatUtilities.cc") 47)

(insn:HI 33 32 34 1 ./CppStatUtilities.cc:47 (set (reg:DF 67 [ <variable>.q3 ])
        (mem/s:DF (plus:DI (reg/v/f:DI 60 [ other ])
                (const_int 48 [0x30])) [3 <variable>.q3+0 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 59 [ this ])
                (const_int 48 [0x30])) [3 <variable>.q3+0 S8 A64])
        (expr_list:REG_DEAD (reg/v/f:DI 60 [ other ])
            (nil))))

(insn:HI 34 33 35 1 ./CppStatUtilities.cc:47 (set (mem/s:DF (plus:DI (reg/f:DI 59 [ this ])
                (const_int 48 [0x30])) [3 <variable>.q3+0 S8 A64])
        (reg:DF 67 [ <variable>.q3 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:DF 67 [ <variable>.q3 ])
        (nil)))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
(code_label:HI 35 34 36 2 6 "" [1 uses])

(note:HI 36 35 40 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 40 36 41 2 NOTE_INSN_FUNCTION_END)

(note:HI 41 40 43 2 ("./CppStatUtilities.cc") 51)

(insn:HI 43 41 49 2 ./CppStatUtilities.cc:51 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 59 [ this ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 59 [ this ])
        (nil)))

(insn:HI 49 43 0 2 ./CppStatUtilities.cc:51 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 43 (nil))
    (nil))
;; End of basic block 2, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void whichMax(double*, int, double&, int&) (_Z8whichMaxPdiRdRi)



Pass 0

  Register 62 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3850 INDEX_REGS:1300 LEGACY_REGS:3850 GENERAL_REGS:3850 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:5250 MEM:1400
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7826 MMX_REGS:7826 FP_TOP_SSE_REGS:7826 FP_SECOND_SSE_REGS:7826 FLOAT_SSE_REGS:7826 FLOAT_INT_REGS:5418 INT_SSE_REGS:7826 FLOAT_INT_SSE_REGS:7826 ALL_REGS:7826 MEM:2318
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7969 MMX_REGS:7969 FP_TOP_SSE_REGS:7969 FP_SECOND_SSE_REGS:7969 FLOAT_SSE_REGS:7969 FLOAT_INT_REGS:5517 INT_SSE_REGS:7969 FLOAT_INT_SSE_REGS:7969 ALL_REGS:7969 MEM:2161
  Register 65 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:32825 MMX_REGS:32825 FP_TOP_SSE_REGS:32825 FP_SECOND_SSE_REGS:32825 FLOAT_SSE_REGS:32825 FLOAT_INT_REGS:22725 INT_SSE_REGS:32825 FLOAT_INT_SSE_REGS:32825 ALL_REGS:32825 MEM:10100
  Register 66 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:12831 MMX_REGS:12831 FP_TOP_SSE_REGS:12831 FP_SECOND_SSE_REGS:12831 FLOAT_SSE_REGS:12831 FLOAT_INT_REGS:8883 INT_SSE_REGS:12831 FLOAT_INT_SSE_REGS:12831 ALL_REGS:12831 MEM:3948
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 76 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36270 MMX_REGS:36270 FP_TOP_SSE_REGS:36270 FP_SECOND_SSE_REGS:36270 FLOAT_SSE_REGS:36270 FLOAT_INT_REGS:25110 INT_SSE_REGS:36270 FLOAT_INT_SSE_REGS:36270 ALL_REGS:36270 MEM:9587
  Register 80 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 81 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 82 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 83 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 84 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 85 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 86 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 87 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 88 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 90 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 91 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 93 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 96 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 99 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 102 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 103 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 105 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412

  Register 62 pref SSE_REGS, else INT_SSE_REGS
  Register 63 pref DIREG, else GENERAL_REGS
  Register 64 pref SIREG, else GENERAL_REGS
  Register 65 pref DREG, else GENERAL_REGS
  Register 66 pref CREG, else GENERAL_REGS
  Register 67 pref FLOAT_INT_SSE_REGS or none
  Register 72 pref GENERAL_REGS or none
  Register 73 pref GENERAL_REGS or none
  Register 75 pref GENERAL_REGS or none
  Register 76 pref SSE_REGS, else INT_SSE_REGS
  Register 77 pref GENERAL_REGS or none
  Register 80 pref SSE_REGS, else INT_SSE_REGS
  Register 81 pref SSE_REGS, else INT_SSE_REGS
  Register 82 pref SSE_REGS, else INT_SSE_REGS
  Register 83 pref SSE_REGS, else INT_SSE_REGS
  Register 84 pref SSE_REGS, else INT_SSE_REGS
  Register 85 pref SSE_REGS, else INT_SSE_REGS
  Register 86 pref SSE_REGS, else INT_SSE_REGS
  Register 87 pref SSE_REGS, else INT_SSE_REGS
  Register 88 pref GENERAL_REGS or none
  Register 90 pref SSE_REGS, else INT_SSE_REGS
  Register 91 pref GENERAL_REGS or none
  Register 93 pref SSE_REGS, else INT_SSE_REGS
  Register 94 pref GENERAL_REGS or none
  Register 96 pref SSE_REGS, else INT_SSE_REGS
  Register 97 pref GENERAL_REGS or none
  Register 99 pref SSE_REGS, else INT_SSE_REGS
  Register 100 pref GENERAL_REGS or none
  Register 102 pref SSE_REGS, else INT_SSE_REGS
  Register 103 pref GENERAL_REGS or none
  Register 105 pref SSE_REGS, else INT_SSE_REGS


Pass 1

  Register 62 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3850 INDEX_REGS:1300 LEGACY_REGS:3850 GENERAL_REGS:3850 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:5250 MEM:1400
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7826 MMX_REGS:7826 FP_TOP_SSE_REGS:7826 FP_SECOND_SSE_REGS:7826 FLOAT_SSE_REGS:7826 FLOAT_INT_REGS:5418 INT_SSE_REGS:7826 FLOAT_INT_SSE_REGS:7826 ALL_REGS:7826 MEM:2318
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7969 MMX_REGS:7969 FP_TOP_SSE_REGS:7969 FP_SECOND_SSE_REGS:7969 FLOAT_SSE_REGS:7969 FLOAT_INT_REGS:5517 INT_SSE_REGS:7969 FLOAT_INT_SSE_REGS:7969 ALL_REGS:7969 MEM:2161
  Register 65 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:32825 MMX_REGS:32825 FP_TOP_SSE_REGS:32825 FP_SECOND_SSE_REGS:32825 FLOAT_SSE_REGS:32825 FLOAT_INT_REGS:22725 INT_SSE_REGS:32825 FLOAT_INT_SSE_REGS:32825 ALL_REGS:32825 MEM:10100
  Register 66 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:12831 MMX_REGS:12831 FP_TOP_SSE_REGS:12831 FP_SECOND_SSE_REGS:12831 FLOAT_SSE_REGS:12831 FLOAT_INT_REGS:8883 INT_SSE_REGS:12831 FLOAT_INT_SSE_REGS:12831 ALL_REGS:12831 MEM:3948
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 76 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36270 MMX_REGS:36270 FP_TOP_SSE_REGS:36270 FP_SECOND_SSE_REGS:36270 FLOAT_SSE_REGS:36270 FLOAT_INT_REGS:25110 INT_SSE_REGS:36270 FLOAT_INT_SSE_REGS:36270 ALL_REGS:36270 MEM:9587
  Register 80 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 81 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 82 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 83 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 84 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 85 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 86 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 87 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1260
  Register 88 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 90 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 91 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 93 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 96 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 99 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 102 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412
  Register 103 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 105 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1412

106 registers.

Register 62 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 63 used 6 times across 42 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 64 used 6 times across 139 insns; set 1 time; user var; dies in 0 places; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 65 used 34 times across 138 insns; set 1 time; user var; dies in 0 places; pref DREG, else GENERAL_REGS; pointer.

Register 66 used 18 times across 137 insns; set 1 time; user var; dies in 0 places; pref CREG, else GENERAL_REGS; pointer.

Register 67 used 2 times across 4 insns in block 0; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 72 used 10 times across 25 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 73 used 2 times across 6 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 75 used 30 times across 123 insns; set 9 times; dies in 0 places; GENERAL_REGS or none; pointer.

Register 76 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 77 used 33 times across 250 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 80 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 81 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 82 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 83 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 84 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 85 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 86 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 87 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 88 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 90 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 91 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 93 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 94 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 96 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 97 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 99 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 100 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 102 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

Register 103 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 105 used 3 times across 4 insns; set 1 time; pref SSE_REGS, else INT_SSE_REGS.

53 basic blocks, 81 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [10.0%]  1 [90.0%]  (fallthru)
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%]  (fallthru)
Successors:  5 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  36 [100.0%]  52 [100.0%]  8 [12.5%] 
Successors:  37 [50.0%]  3 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 76 77
Invalid sum of incoming frequencies 1721, should be 1013

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
Successors:  37 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 76 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  0 [10.0%]  51 [10.0%]  (loop_exit) 7 [10.0%]  35 [10.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  1 [100.0%] 
Successors:  7 [50.0%]  6 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 65 66 72

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
Successors:  7 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 65 66 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  5 [50.0%]  6 [100.0%]  (fallthru)
Successors:  8 [90.0%]  (fallthru,dfs_back) 4 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  7 [90.0%]  (fallthru,dfs_back)
Successors:  9 [87.5%]  (fallthru) 2 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
Invalid sum of incoming frequencies 900, should be 771

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  8 [87.5%]  (fallthru)
Successors:  10 [85.7%]  (fallthru) 33 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  9 [85.7%]  (fallthru)
Successors:  11 [83.3%]  (fallthru) 30 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  10 [83.3%]  (fallthru)
Successors:  12 [80.0%]  (fallthru) 27 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  11 [80.0%]  (fallthru)
Successors:  13 [75.0%]  (fallthru) 24 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  12 [75.0%]  (fallthru)
Successors:  14 [66.7%]  (fallthru) 21 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [66.7%]  (fallthru)
Successors:  15 [50.0%]  (fallthru) 18 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 75 77
Invalid sum of incoming frequencies 300, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
Successors:  17 [50.0%]  16 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 81
Invalid sum of incoming frequencies 450, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 81
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [50.0%]  16 [100.0%]  (fallthru)
Successors:  18 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 14 [50.0%] 
Successors:  20 [50.0%]  19 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 82
Invalid sum of incoming frequencies 1350, should be 900

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
Successors:  20 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  18 [50.0%]  19 [100.0%]  (fallthru)
Successors:  21 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  20 [100.0%]  (fallthru) 13 [33.3%] 
Successors:  23 [50.0%]  22 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 83
Invalid sum of incoming frequencies 1050, should be 900

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  21 [50.0%]  (fallthru)
Successors:  23 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  21 [50.0%]  22 [100.0%]  (fallthru)
Successors:  24 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  23 [100.0%]  (fallthru) 12 [25.0%] 
Successors:  26 [50.0%]  25 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 84
Invalid sum of incoming frequencies 1050, should be 900

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  24 [50.0%]  (fallthru)
Successors:  26 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 84
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  24 [50.0%]  25 [100.0%]  (fallthru)
Successors:  27 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  26 [100.0%]  (fallthru) 11 [20.0%] 
Successors:  29 [50.0%]  28 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 85
Invalid sum of incoming frequencies 1035, should be 900

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  27 [50.0%]  (fallthru)
Successors:  29 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 85
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 29 prev 28, next 30, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  27 [50.0%]  28 [100.0%]  (fallthru)
Successors:  30 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 30 prev 29, next 31, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  29 [100.0%]  (fallthru) 10 [16.7%] 
Successors:  32 [50.0%]  31 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 86
Invalid sum of incoming frequencies 1020, should be 900

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  30 [50.0%]  (fallthru)
Successors:  32 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 86
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  30 [50.0%]  31 [100.0%]  (fallthru)
Successors:  33 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  32 [100.0%]  (fallthru) 9 [14.3%] 
Successors:  35 [50.0%]  34 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 87
Invalid sum of incoming frequencies 1007, should be 900

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  33 [50.0%]  (fallthru)
Successors:  35 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 87
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  33 [50.0%]  34 [100.0%]  (fallthru)
Successors:  36 [90.0%]  (fallthru,dfs_back) 4 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 714, maybe hot.
Predecessors:  35 [90.0%]  (fallthru,dfs_back)
Successors:  2 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 37 prev 36, next 38, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%] 
Successors:  39 [50.0%]  38 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 73 75 77 80

Basic block 38 prev 37, next 39, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  37 [50.0%]  (fallthru)
Successors:  39 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 73 75 77 80
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 39 prev 38, next 40, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  37 [50.0%]  38 [100.0%]  (fallthru)
Successors:  41 [50.0%]  40 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 88 90

Basic block 40 prev 39, next 41, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  39 [50.0%]  (fallthru)
Successors:  41 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 88 90
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 41 prev 40, next 42, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  39 [50.0%]  40 [100.0%]  (fallthru)
Successors:  43 [50.0%]  42 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 91 93

Basic block 42 prev 41, next 43, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  41 [50.0%]  (fallthru)
Successors:  43 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 91 93
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 43 prev 42, next 44, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  41 [50.0%]  42 [100.0%]  (fallthru)
Successors:  45 [50.0%]  44 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 94 96

Basic block 44 prev 43, next 45, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  43 [50.0%]  (fallthru)
Successors:  45 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 94 96
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 45 prev 44, next 46, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  43 [50.0%]  44 [100.0%]  (fallthru)
Successors:  47 [50.0%]  46 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 97 99

Basic block 46 prev 45, next 47, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  45 [50.0%]  (fallthru)
Successors:  47 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 97 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 47 prev 46, next 48, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  45 [50.0%]  46 [100.0%]  (fallthru)
Successors:  49 [50.0%]  48 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 100 102

Basic block 48 prev 47, next 49, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  47 [50.0%]  (fallthru)
Successors:  49 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 49 prev 48, next 50, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  47 [50.0%]  48 [100.0%]  (fallthru)
Successors:  51 [50.0%]  50 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 103 105

Basic block 50 prev 49, next 51, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  49 [50.0%]  (fallthru)
Successors:  51 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 103 105
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 51 prev 50, next 52, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  49 [50.0%]  50 [100.0%]  (fallthru)
Successors:  52 [90.0%]  (fallthru,dfs_back) 4 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

Basic block 52 prev 51, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  51 [90.0%]  (fallthru,dfs_back)
Successors:  2 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Register 67 in 0.
(note:HI 1 0 11 ("./CppStatUtilities.cc") 134)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 11 1 5 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 5 11 6 0 ./CppStatUtilities.cc:134 (set (reg/v/f:DI 63 [ data ])
        (reg:DI 5 di [ data ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:134 (set (reg/v:SI 64 [ dataLen ])
        (reg:SI 4 si [ dataLen ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ dataLen ])
        (nil)))

(insn:HI 7 6 8 0 ./CppStatUtilities.cc:134 (set (reg/v/f:DI 65 [ maxVal ])
        (reg:DI 1 dx [ maxVal ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 1 dx [ maxVal ])
        (nil)))

(insn:HI 8 7 9 0 ./CppStatUtilities.cc:134 (set (reg/v/f:DI 66 [ maxInd ])
        (reg:DI 2 cx [ maxInd ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 2 cx [ maxInd ])
        (nil)))

(note:HI 9 8 13 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 13 9 14 0 ("./CppStatUtilities.cc") 136)

(insn:HI 14 13 15 0 ./CppStatUtilities.cc:136 (set (reg:DF 67)
        (mem:DF (reg/v/f:DI 63 [ data ]) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 5 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ data ]) [3 S8 A64])
        (nil)))

(insn:HI 15 14 16 0 ./CppStatUtilities.cc:136 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 67)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 7 (insn_list:REG_DEP_TRUE 14 (nil)))
    (expr_list:REG_DEAD (reg:DF 67)
        (nil)))

(note:HI 16 15 17 0 ("./CppStatUtilities.cc") 137)

(insn:HI 17 16 18 0 ./CppStatUtilities.cc:137 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (const_int 0 [0x0])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 8 (nil))
    (nil))

(note:HI 18 17 19 0 ("./CppStatUtilities.cc") 140)

(insn:HI 19 18 20 0 ./CppStatUtilities.cc:140 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 64 [ dataLen ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 6 (nil))
    (nil))

(jump_insn:HI 20 19 528 0 ./CppStatUtilities.cc:140 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 54)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 19 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66
(note:HI 528 20 530 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 530 528 531 1 (set (pc)
        (label_ref 529)) 548 {jump} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66

(barrier:HI 531 530 60)

(note:HI 60 531 25 NOTE_INSN_LOOP_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 25 60 26 2 13 "" [3 uses])

(note:HI 26 25 27 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 27 26 28 2 ("./CppStatUtilities.cc") 142)

(insn:HI 28 27 29 2 ./CppStatUtilities.cc:142 (set (reg:DF 76 [ D.34589 ])
        (mem:DF (reg/f:DI 75 [ ivtmp.221 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 29 28 30 2 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 76 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 28 (nil))
    (nil))

(jump_insn:HI 30 29 36 2 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 40)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 29 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 76 77

(note:HI 36 30 35 ("./CppStatUtilities.cc") 144)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 76 77
(note:HI 35 36 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 37 35 38 3 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 76 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 76 [ D.34589 ])
        (nil)))

(note:HI 38 37 39 3 ("./CppStatUtilities.cc") 145)

(insn:HI 39 38 538 3 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))

(jump_insn:HI 538 39 539 3 (set (pc)
        (label_ref 40)) 548 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

(barrier:HI 539 538 61)

(note:HI 61 539 49 NOTE_INSN_LOOP_END)

(note:HI 49 61 50 NOTE_INSN_FUNCTION_END)

(note:HI 50 49 54 ("./CppStatUtilities.cc") 148)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label:HI 54 50 59 4 17 "" [4 uses])

(note:HI 59 54 529 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66
(code_label:HI 529 59 22 5 59 "" [1 uses])

(note:HI 22 529 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 23 22 68 5 NOTE_INSN_DELETED)

(note:HI 68 23 69 5 NOTE_INSN_DELETED)

(insn:HI 69 68 70 5 (parallel [
            (set (reg:SI 72)
                (plus:SI (reg/v:SI 64 [ dataLen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 70 69 73 5 (parallel [
            (set (reg:SI 72)
                (and:SI (reg:SI 72)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 69 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 73 70 74 5 ("./CppStatUtilities.cc") 142)

(insn:HI 74 73 75 5 ./CppStatUtilities.cc:142 (set (reg:DF 62 [ D.34589 ])
        (mem:DF (reg/v/f:DI 63 [ data ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 75 74 76 5 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 62 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 74 (nil))
    (nil))

(jump_insn:HI 76 75 85 5 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 96)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 75 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 65 66 72

(note:HI 85 76 83 ("./CppStatUtilities.cc") 144)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 65 66 72
(note:HI 83 85 80 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 80 83 81 6 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 62 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 62 [ D.34589 ])
        (nil)))

(note:HI 81 80 82 6 ("./CppStatUtilities.cc") 145)

(insn:HI 82 81 96 6 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72
(code_label:HI 96 82 92 7 19 "" [1 uses])

(note:HI 92 96 87 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 87 92 88 7 ("./CppStatUtilities.cc") 140)

(insn:HI 88 87 89 7 ./CppStatUtilities.cc:140 (set (reg/v:SI 77 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 89 88 90 7 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/f:DI 75 [ ivtmp.221 ])
                (plus:DI (reg/v/f:DI 63 [ data ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 90 89 91 7 ./CppStatUtilities.cc:140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 77 [ i ])
            (reg/v:SI 64 [ dataLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 88 (nil))
    (nil))

(jump_insn:HI 91 90 315 7 ./CppStatUtilities.cc:140 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 54)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 90 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
(note:HI 315 91 313 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 313 315 314 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 314 313 284 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 25)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 313 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
(note:HI 284 314 282 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 282 284 283 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 283 282 253 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 532)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 282 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
(note:HI 253 283 251 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 251 253 252 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 252 251 222 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 533)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 251 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
(note:HI 222 252 220 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 220 222 221 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 221 220 191 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 534)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 220 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
(note:HI 191 221 189 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 189 191 190 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 190 189 160 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 535)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 189 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
(note:HI 160 190 158 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 158 160 159 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 159 158 129 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 536)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 158 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 72 75 77
(note:HI 129 159 127 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 127 129 128 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 72)
        (nil)))

(jump_insn:HI 128 127 104 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 537)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 127 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 75 77

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66
(note:HI 104 128 100 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 100 104 101 15 ("./CppStatUtilities.cc") 142)

(insn:HI 101 100 102 15 ./CppStatUtilities.cc:142 (set (reg:DF 81 [ D.34589 ])
        (mem:DF (plus:DI (reg/v/f:DI 63 [ data ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 102 101 103 15 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 81 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 101 (nil))
    (nil))

(jump_insn:HI 103 102 112 15 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 123)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 102 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 81

(note:HI 112 103 110 ("./CppStatUtilities.cc") 144)

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 81
(note:HI 110 112 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 107 110 108 16 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 81 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 81 [ D.34589 ])
        (nil)))

(note:HI 108 107 109 16 ("./CppStatUtilities.cc") 145)

(insn:HI 109 108 123 16 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66
(code_label:HI 123 109 119 17 21 "" [1 uses])

(note:HI 119 123 114 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 114 119 115 17 ("./CppStatUtilities.cc") 140)

(insn:HI 115 114 116 17 ./CppStatUtilities.cc:140 (set (reg/v:SI 77 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 116 115 537 17 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/f:DI 75 [ ivtmp.221 ])
                (plus:DI (reg/v/f:DI 63 [ data ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 63 [ data ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 537 116 135 18 65 "" [1 uses])

(note:HI 135 537 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 131 135 132 18 ("./CppStatUtilities.cc") 142)

(insn:HI 132 131 133 18 ./CppStatUtilities.cc:142 (set (reg:DF 82 [ D.34589 ])
        (mem:DF (reg/f:DI 75 [ ivtmp.221 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 133 132 134 18 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 82 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 132 (nil))
    (nil))

(jump_insn:HI 134 133 143 18 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 154)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 133 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 82

(note:HI 143 134 141 ("./CppStatUtilities.cc") 144)

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 82
(note:HI 141 143 138 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:HI 138 141 139 19 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 82 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 82 [ D.34589 ])
        (nil)))

(note:HI 139 138 140 19 ("./CppStatUtilities.cc") 145)

(insn:HI 140 139 154 19 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 154 140 150 20 24 "" [1 uses])

(note:HI 150 154 145 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note:HI 145 150 146 20 ("./CppStatUtilities.cc") 140)

(insn:HI 146 145 147 20 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 147 146 536 20 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/f:DI 75 [ ivtmp.221 ])
                (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 536 147 166 21 64 "" [1 uses])

(note:HI 166 536 162 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note:HI 162 166 163 21 ("./CppStatUtilities.cc") 142)

(insn:HI 163 162 164 21 ./CppStatUtilities.cc:142 (set (reg:DF 83 [ D.34589 ])
        (mem:DF (reg/f:DI 75 [ ivtmp.221 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 164 163 165 21 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 83 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 163 (nil))
    (nil))

(jump_insn:HI 165 164 174 21 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 185)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 164 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 83

(note:HI 174 165 172 ("./CppStatUtilities.cc") 144)

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 83
(note:HI 172 174 169 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 169 172 170 22 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 83 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 83 [ D.34589 ])
        (nil)))

(note:HI 170 169 171 22 ("./CppStatUtilities.cc") 145)

(insn:HI 171 170 185 22 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 185 171 181 23 27 "" [1 uses])

(note:HI 181 185 176 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note:HI 176 181 177 23 ("./CppStatUtilities.cc") 140)

(insn:HI 177 176 178 23 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 178 177 535 23 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/f:DI 75 [ ivtmp.221 ])
                (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 535 178 197 24 63 "" [1 uses])

(note:HI 197 535 193 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note:HI 193 197 194 24 ("./CppStatUtilities.cc") 142)

(insn:HI 194 193 195 24 ./CppStatUtilities.cc:142 (set (reg:DF 84 [ D.34589 ])
        (mem:DF (reg/f:DI 75 [ ivtmp.221 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 195 194 196 24 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 84 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 194 (nil))
    (nil))

(jump_insn:HI 196 195 205 24 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 216)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 195 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 84

(note:HI 205 196 203 ("./CppStatUtilities.cc") 144)

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 84
(note:HI 203 205 200 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:HI 200 203 201 25 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 84 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 84 [ D.34589 ])
        (nil)))

(note:HI 201 200 202 25 ("./CppStatUtilities.cc") 145)

(insn:HI 202 201 216 25 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 216 202 212 26 30 "" [1 uses])

(note:HI 212 216 207 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note:HI 207 212 208 26 ("./CppStatUtilities.cc") 140)

(insn:HI 208 207 209 26 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 209 208 534 26 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/f:DI 75 [ ivtmp.221 ])
                (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 534 209 228 27 62 "" [1 uses])

(note:HI 228 534 224 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note:HI 224 228 225 27 ("./CppStatUtilities.cc") 142)

(insn:HI 225 224 226 27 ./CppStatUtilities.cc:142 (set (reg:DF 85 [ D.34589 ])
        (mem:DF (reg/f:DI 75 [ ivtmp.221 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 226 225 227 27 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 85 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 225 (nil))
    (nil))

(jump_insn:HI 227 226 236 27 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 247)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 226 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 85

(note:HI 236 227 234 ("./CppStatUtilities.cc") 144)

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 85
(note:HI 234 236 231 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:HI 231 234 232 28 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 85 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 85 [ D.34589 ])
        (nil)))

(note:HI 232 231 233 28 ("./CppStatUtilities.cc") 145)

(insn:HI 233 232 247 28 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 247 233 243 29 33 "" [1 uses])

(note:HI 243 247 238 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note:HI 238 243 239 29 ("./CppStatUtilities.cc") 140)

(insn:HI 239 238 240 29 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 240 239 533 29 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/f:DI 75 [ ivtmp.221 ])
                (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 533 240 259 30 61 "" [1 uses])

(note:HI 259 533 255 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note:HI 255 259 256 30 ("./CppStatUtilities.cc") 142)

(insn:HI 256 255 257 30 ./CppStatUtilities.cc:142 (set (reg:DF 86 [ D.34589 ])
        (mem:DF (reg/f:DI 75 [ ivtmp.221 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 257 256 258 30 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 86 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 256 (nil))
    (nil))

(jump_insn:HI 258 257 267 30 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 278)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 257 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 86

(note:HI 267 258 265 ("./CppStatUtilities.cc") 144)

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 86
(note:HI 265 267 262 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:HI 262 265 263 31 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 86 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 86 [ D.34589 ])
        (nil)))

(note:HI 263 262 264 31 ("./CppStatUtilities.cc") 145)

(insn:HI 264 263 278 31 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 278 264 274 32 36 "" [1 uses])

(note:HI 274 278 269 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note:HI 269 274 270 32 ("./CppStatUtilities.cc") 140)

(insn:HI 270 269 271 32 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 271 270 532 32 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/f:DI 75 [ ivtmp.221 ])
                (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 532 271 290 33 60 "" [1 uses])

(note:HI 290 532 286 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note:HI 286 290 287 33 ("./CppStatUtilities.cc") 142)

(insn:HI 287 286 288 33 ./CppStatUtilities.cc:142 (set (reg:DF 87 [ D.34589 ])
        (mem:DF (reg/f:DI 75 [ ivtmp.221 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 288 287 289 33 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 87 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 287 (nil))
    (nil))

(jump_insn:HI 289 288 298 33 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 309)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 288 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 87

(note:HI 298 289 296 ("./CppStatUtilities.cc") 144)

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 87
(note:HI 296 298 293 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:HI 293 296 294 34 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 87 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 87 [ D.34589 ])
        (nil)))

(note:HI 294 293 295 34 ("./CppStatUtilities.cc") 145)

(insn:HI 295 294 309 34 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 309 295 305 35 39 "" [1 uses])

(note:HI 305 309 300 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note:HI 300 305 301 35 ("./CppStatUtilities.cc") 140)

(insn:HI 301 300 302 35 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 302 301 303 35 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/f:DI 75 [ ivtmp.221 ])
                (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 303 302 304 35 ./CppStatUtilities.cc:140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 77 [ i ])
            (reg/v:SI 64 [ dataLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 301 (nil))
    (nil))

(jump_insn:HI 304 303 311 35 ./CppStatUtilities.cc:140 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 54)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 303 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(note:HI 311 304 524 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 524 311 525 36 (set (pc)
        (label_ref 25)) 548 {jump} (nil)
    (nil))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

(barrier:HI 525 524 40)

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 40 525 41 37 14 "" [2 uses])

(note:HI 41 40 42 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note:HI 42 41 498 37 ("./CppStatUtilities.cc") 140)

(insn:HI 498 42 317 37 ./CppStatUtilities.cc:140 (parallel [
            (set (reg:SI 73)
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 317 498 318 37 ("./CppStatUtilities.cc") 142)

(insn:HI 318 317 319 37 ./CppStatUtilities.cc:142 (set (reg:DF 80 [ D.34589 ])
        (mem:DF (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 319 318 320 37 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 80 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 318 (nil))
    (nil))

(jump_insn:HI 320 319 329 37 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 340)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 319 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 73 75 77 80

(note:HI 329 320 327 ("./CppStatUtilities.cc") 144)

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 73 75 77 80
(note:HI 327 329 324 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:HI 324 327 325 38 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 80 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 80 [ D.34589 ])
        (nil)))

(note:HI 325 324 326 38 ("./CppStatUtilities.cc") 145)

(insn:HI 326 325 340 38 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg:SI 73)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 73)
        (nil)))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 340 326 336 39 42 "" [1 uses])

(note:HI 336 340 331 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note:HI 331 336 332 39 ("./CppStatUtilities.cc") 140)

(insn:HI 332 331 343 39 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 88 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 343 332 344 39 ("./CppStatUtilities.cc") 142)

(insn:HI 344 343 345 39 ./CppStatUtilities.cc:142 (set (reg:DF 90 [ D.34589 ])
        (mem:DF (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 345 344 346 39 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 90 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 344 (nil))
    (nil))

(jump_insn:HI 346 345 355 39 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 366)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 345 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 88 90

(note:HI 355 346 353 ("./CppStatUtilities.cc") 144)

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 88 90
(note:HI 353 355 350 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn:HI 350 353 351 40 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 90 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 90 [ D.34589 ])
        (nil)))

(note:HI 351 350 352 40 ("./CppStatUtilities.cc") 145)

(insn:HI 352 351 366 40 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 88 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 88 [ i ])
        (nil)))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 366 352 362 41 44 "" [1 uses])

(note:HI 362 366 357 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note:HI 357 362 358 41 ("./CppStatUtilities.cc") 140)

(insn:HI 358 357 369 41 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 91 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 369 358 370 41 ("./CppStatUtilities.cc") 142)

(insn:HI 370 369 371 41 ./CppStatUtilities.cc:142 (set (reg:DF 93 [ D.34589 ])
        (mem:DF (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 371 370 372 41 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 93 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 370 (nil))
    (nil))

(jump_insn:HI 372 371 381 41 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 392)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 371 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 91 93

(note:HI 381 372 379 ("./CppStatUtilities.cc") 144)

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 91 93
(note:HI 379 381 376 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:HI 376 379 377 42 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 93 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 93 [ D.34589 ])
        (nil)))

(note:HI 377 376 378 42 ("./CppStatUtilities.cc") 145)

(insn:HI 378 377 392 42 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 91 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 91 [ i ])
        (nil)))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 392 378 388 43 46 "" [1 uses])

(note:HI 388 392 383 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(note:HI 383 388 384 43 ("./CppStatUtilities.cc") 140)

(insn:HI 384 383 395 43 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 395 384 396 43 ("./CppStatUtilities.cc") 142)

(insn:HI 396 395 397 43 ./CppStatUtilities.cc:142 (set (reg:DF 96 [ D.34589 ])
        (mem:DF (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                (const_int 32 [0x20])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 397 396 398 43 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 96 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 396 (nil))
    (nil))

(jump_insn:HI 398 397 407 43 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 418)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 397 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 94 96

(note:HI 407 398 405 ("./CppStatUtilities.cc") 144)

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 94 96
(note:HI 405 407 402 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn:HI 402 405 403 44 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 96 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 96 [ D.34589 ])
        (nil)))

(note:HI 403 402 404 44 ("./CppStatUtilities.cc") 145)

(insn:HI 404 403 418 44 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 94 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 94 [ i ])
        (nil)))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 418 404 414 45 48 "" [1 uses])

(note:HI 414 418 409 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(note:HI 409 414 410 45 ("./CppStatUtilities.cc") 140)

(insn:HI 410 409 421 45 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 97 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 421 410 422 45 ("./CppStatUtilities.cc") 142)

(insn:HI 422 421 423 45 ./CppStatUtilities.cc:142 (set (reg:DF 99 [ D.34589 ])
        (mem:DF (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                (const_int 40 [0x28])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 423 422 424 45 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 99 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 422 (nil))
    (nil))

(jump_insn:HI 424 423 433 45 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 444)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 423 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 97 99

(note:HI 433 424 431 ("./CppStatUtilities.cc") 144)

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 97 99
(note:HI 431 433 428 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn:HI 428 431 429 46 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 99 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 99 [ D.34589 ])
        (nil)))

(note:HI 429 428 430 46 ("./CppStatUtilities.cc") 145)

(insn:HI 430 429 444 46 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 97 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 97 [ i ])
        (nil)))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 444 430 440 47 50 "" [1 uses])

(note:HI 440 444 435 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(note:HI 435 440 436 47 ("./CppStatUtilities.cc") 140)

(insn:HI 436 435 447 47 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 100 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 447 436 448 47 ("./CppStatUtilities.cc") 142)

(insn:HI 448 447 449 47 ./CppStatUtilities.cc:142 (set (reg:DF 102 [ D.34589 ])
        (mem:DF (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                (const_int 48 [0x30])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 449 448 450 47 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 102 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 448 (nil))
    (nil))

(jump_insn:HI 450 449 459 47 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 470)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 449 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 100 102

(note:HI 459 450 457 ("./CppStatUtilities.cc") 144)

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 100 102
(note:HI 457 459 454 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn:HI 454 457 455 48 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 102 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 102 [ D.34589 ])
        (nil)))

(note:HI 455 454 456 48 ("./CppStatUtilities.cc") 145)

(insn:HI 456 455 470 48 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 100 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 100 [ i ])
        (nil)))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 470 456 466 49 52 "" [1 uses])

(note:HI 466 470 461 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note:HI 461 466 462 49 ("./CppStatUtilities.cc") 140)

(insn:HI 462 461 473 49 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 103 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 473 462 474 49 ("./CppStatUtilities.cc") 142)

(insn:HI 474 473 475 49 ./CppStatUtilities.cc:142 (set (reg:DF 105 [ D.34589 ])
        (mem:DF (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                (const_int 56 [0x38])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 475 474 476 49 ./CppStatUtilities.cc:142 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 105 [ D.34589 ])
            (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 474 (nil))
    (nil))

(jump_insn:HI 476 475 485 49 ./CppStatUtilities.cc:142 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 496)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 475 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 49, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 103 105

(note:HI 485 476 483 ("./CppStatUtilities.cc") 144)

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77 103 105
(note:HI 483 485 480 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn:HI 480 483 481 50 ./CppStatUtilities.cc:144 (set (mem:DF (reg/v/f:DI 65 [ maxVal ]) [3 S8 A64])
        (reg:DF 105 [ D.34589 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 105 [ D.34589 ])
        (nil)))

(note:HI 481 480 482 50 ("./CppStatUtilities.cc") 145)

(insn:HI 482 481 496 50 ./CppStatUtilities.cc:145 (set (mem:SI (reg/v/f:DI 66 [ maxInd ]) [5 S4 A32])
        (reg/v:SI 103 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 103 [ i ])
        (nil)))
;; End of basic block 50, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(code_label:HI 496 482 492 51 54 "" [1 uses])

(note:HI 492 496 487 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(note:HI 487 492 488 51 ("./CppStatUtilities.cc") 140)

(insn:HI 488 487 489 51 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 489 488 490 51 ./CppStatUtilities.cc:140 (parallel [
            (set (reg/f:DI 75 [ ivtmp.221 ])
                (plus:DI (reg/f:DI 75 [ ivtmp.221 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 490 489 491 51 ./CppStatUtilities.cc:140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 77 [ i ])
            (reg/v:SI 64 [ dataLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 488 (nil))
    (nil))

(jump_insn:HI 491 490 495 51 ./CppStatUtilities.cc:140 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 54)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 490 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 51, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77
(note:HI 495 491 526 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 526 495 527 52 (set (pc)
        (label_ref 25)) 548 {jump} (nil)
    (nil))
;; End of basic block 52, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 66 75 77

(barrier:HI 527 526 0)


;; Function void whichMin(double*, int, double&, int&) (_Z8whichMinPdiRdRi)



Pass 0

  Register 60 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3850 INDEX_REGS:1300 LEGACY_REGS:3850 GENERAL_REGS:3850 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:5250 MEM:1300
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7826 MMX_REGS:7826 FP_TOP_SSE_REGS:7826 FP_SECOND_SSE_REGS:7826 FLOAT_SSE_REGS:7826 FLOAT_INT_REGS:5418 INT_SSE_REGS:7826 FLOAT_INT_SSE_REGS:7826 ALL_REGS:7826 MEM:2318
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7969 MMX_REGS:7969 FP_TOP_SSE_REGS:7969 FP_SECOND_SSE_REGS:7969 FLOAT_SSE_REGS:7969 FLOAT_INT_REGS:5517 INT_SSE_REGS:7969 FLOAT_INT_SSE_REGS:7969 ALL_REGS:7969 MEM:2161
  Register 63 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:32825 MMX_REGS:32825 FP_TOP_SSE_REGS:32825 FP_SECOND_SSE_REGS:32825 FLOAT_SSE_REGS:32825 FLOAT_INT_REGS:22725 INT_SSE_REGS:32825 FLOAT_INT_SSE_REGS:32825 ALL_REGS:32825 MEM:10100
  Register 64 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:12831 MMX_REGS:12831 FP_TOP_SSE_REGS:12831 FP_SECOND_SSE_REGS:12831 FLOAT_SSE_REGS:12831 FLOAT_INT_REGS:8883 INT_SSE_REGS:12831 FLOAT_INT_SSE_REGS:12831 ALL_REGS:12831 MEM:3948
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 66 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 75 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 76 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36270 MMX_REGS:36270 FP_TOP_SSE_REGS:36270 FP_SECOND_SSE_REGS:36270 FLOAT_SSE_REGS:36270 FLOAT_INT_REGS:25110 INT_SSE_REGS:36270 FLOAT_INT_SSE_REGS:36270 ALL_REGS:36270 MEM:9587
  Register 80 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 81 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 82 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 83 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 84 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 85 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 86 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 87 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 88 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 89 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 90 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 91 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 92 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 93 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 94 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 95 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 98 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 99 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 102 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 103 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 106 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 107 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 110 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 111 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 112 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 114 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 115 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 118 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 119 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212

  Register 60 pref SSE_REGS or none
  Register 61 pref DIREG, else GENERAL_REGS
  Register 62 pref SIREG, else GENERAL_REGS
  Register 63 pref DREG, else GENERAL_REGS
  Register 64 pref CREG, else GENERAL_REGS
  Register 65 pref FLOAT_INT_SSE_REGS or none
  Register 66 pref SSE_REGS or none
  Register 71 pref GENERAL_REGS or none
  Register 72 pref GENERAL_REGS or none
  Register 74 pref GENERAL_REGS or none
  Register 75 pref SSE_REGS or none
  Register 76 pref SSE_REGS or none
  Register 77 pref GENERAL_REGS or none
  Register 80 pref SSE_REGS or none
  Register 81 pref SSE_REGS or none
  Register 82 pref SSE_REGS or none
  Register 83 pref SSE_REGS or none
  Register 84 pref SSE_REGS or none
  Register 85 pref SSE_REGS or none
  Register 86 pref SSE_REGS or none
  Register 87 pref SSE_REGS or none
  Register 88 pref SSE_REGS or none
  Register 89 pref SSE_REGS or none
  Register 90 pref SSE_REGS or none
  Register 91 pref SSE_REGS or none
  Register 92 pref SSE_REGS or none
  Register 93 pref SSE_REGS or none
  Register 94 pref SSE_REGS or none
  Register 95 pref SSE_REGS or none
  Register 96 pref GENERAL_REGS or none
  Register 98 pref SSE_REGS or none
  Register 99 pref SSE_REGS or none
  Register 100 pref GENERAL_REGS or none
  Register 102 pref SSE_REGS or none
  Register 103 pref SSE_REGS or none
  Register 104 pref GENERAL_REGS or none
  Register 106 pref SSE_REGS or none
  Register 107 pref SSE_REGS or none
  Register 108 pref GENERAL_REGS or none
  Register 110 pref SSE_REGS or none
  Register 111 pref SSE_REGS or none
  Register 112 pref GENERAL_REGS or none
  Register 114 pref SSE_REGS or none
  Register 115 pref SSE_REGS or none
  Register 116 pref GENERAL_REGS or none
  Register 118 pref SSE_REGS or none
  Register 119 pref SSE_REGS or none


Pass 1

  Register 60 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3850 INDEX_REGS:1300 LEGACY_REGS:3850 GENERAL_REGS:3850 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:5250 MEM:1300
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7826 MMX_REGS:7826 FP_TOP_SSE_REGS:7826 FP_SECOND_SSE_REGS:7826 FLOAT_SSE_REGS:7826 FLOAT_INT_REGS:5418 INT_SSE_REGS:7826 FLOAT_INT_SSE_REGS:7826 ALL_REGS:7826 MEM:2318
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7969 MMX_REGS:7969 FP_TOP_SSE_REGS:7969 FP_SECOND_SSE_REGS:7969 FLOAT_SSE_REGS:7969 FLOAT_INT_REGS:5517 INT_SSE_REGS:7969 FLOAT_INT_SSE_REGS:7969 ALL_REGS:7969 MEM:2161
  Register 63 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:32825 MMX_REGS:32825 FP_TOP_SSE_REGS:32825 FP_SECOND_SSE_REGS:32825 FLOAT_SSE_REGS:32825 FLOAT_INT_REGS:22725 INT_SSE_REGS:32825 FLOAT_INT_SSE_REGS:32825 ALL_REGS:32825 MEM:10100
  Register 64 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:12831 MMX_REGS:12831 FP_TOP_SSE_REGS:12831 FP_SECOND_SSE_REGS:12831 FLOAT_SSE_REGS:12831 FLOAT_INT_REGS:8883 INT_SSE_REGS:12831 FLOAT_INT_SSE_REGS:12831 ALL_REGS:12831 MEM:3948
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 66 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 75 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 76 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36270 MMX_REGS:36270 FP_TOP_SSE_REGS:36270 FP_SECOND_SSE_REGS:36270 FLOAT_SSE_REGS:36270 FLOAT_INT_REGS:25110 INT_SSE_REGS:36270 FLOAT_INT_SSE_REGS:36270 ALL_REGS:36270 MEM:9587
  Register 80 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 81 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 82 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 83 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 84 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 85 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 86 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 87 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 88 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 89 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 90 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 91 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 92 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 93 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 94 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:3465 INDEX_REGS:1170 LEGACY_REGS:3465 GENERAL_REGS:3465 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:4725 MEM:1170
  Register 95 costs: AREG:1170 DREG:1170 CREG:1170 BREG:1170 SIREG:1170 DIREG:1170 AD_REGS:1170 Q_REGS:1170 NON_Q_REGS:2700 INDEX_REGS:1170 LEGACY_REGS:2700 GENERAL_REGS:2700 FP_TOP_REG:1890 FP_SECOND_REG:1890 FLOAT_REGS:1890 SSE_REGS:0 FP_TOP_SSE_REGS:1890 FP_SECOND_SSE_REGS:1890 FLOAT_SSE_REGS:1890 FLOAT_INT_REGS:1890 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1890 ALL_REGS:3780 MEM:1080
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 98 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 99 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 102 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 103 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 106 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 107 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 110 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 111 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 112 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 114 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 115 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1963 MMX_REGS:1963 FP_TOP_SSE_REGS:1963 FP_SECOND_SSE_REGS:1963 FLOAT_SSE_REGS:1963 FLOAT_INT_REGS:1359 INT_SSE_REGS:1963 FLOAT_INT_SSE_REGS:1963 ALL_REGS:1963 MEM:604
  Register 118 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3880 INDEX_REGS:1313 LEGACY_REGS:3880 GENERAL_REGS:3880 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:5292 MEM:1311
  Register 119 costs: AREG:1313 DREG:1313 CREG:1313 BREG:1313 SIREG:1313 DIREG:1313 AD_REGS:1313 Q_REGS:1313 NON_Q_REGS:3030 INDEX_REGS:1313 LEGACY_REGS:3030 GENERAL_REGS:3030 FP_TOP_REG:2121 FP_SECOND_REG:2121 FLOAT_REGS:2121 SSE_REGS:0 FP_TOP_SSE_REGS:2121 FP_SECOND_SSE_REGS:2121 FLOAT_SSE_REGS:2121 FLOAT_INT_REGS:2121 INT_SSE_REGS:1313 FLOAT_INT_SSE_REGS:2121 ALL_REGS:4242 MEM:1212

120 registers.

Register 60 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 61 used 6 times across 44 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 62 used 6 times across 155 insns; set 1 time; user var; dies in 0 places; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 63 used 34 times across 154 insns; set 1 time; user var; dies in 0 places; pref DREG, else GENERAL_REGS; pointer.

Register 64 used 18 times across 153 insns; set 1 time; user var; dies in 0 places; pref CREG, else GENERAL_REGS; pointer.

Register 65 used 2 times across 4 insns in block 0; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 66 used 2 times across 4 insns in block 5; set 1 time; SSE_REGS or none.

Register 71 used 10 times across 26 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 72 used 2 times across 7 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 74 used 30 times across 137 insns; set 9 times; dies in 0 places; GENERAL_REGS or none; pointer.

Register 75 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 76 used 2 times across 4 insns in block 2; set 1 time; SSE_REGS or none.

Register 77 used 33 times across 278 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 80 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 81 used 2 times across 4 insns in block 37; set 1 time; SSE_REGS or none.

Register 82 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 83 used 2 times across 4 insns in block 15; set 1 time; SSE_REGS or none.

Register 84 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 85 used 2 times across 4 insns in block 18; set 1 time; SSE_REGS or none.

Register 86 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 87 used 2 times across 4 insns in block 21; set 1 time; SSE_REGS or none.

Register 88 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 89 used 2 times across 4 insns in block 24; set 1 time; SSE_REGS or none.

Register 90 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 91 used 2 times across 4 insns in block 27; set 1 time; SSE_REGS or none.

Register 92 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 93 used 2 times across 4 insns in block 30; set 1 time; SSE_REGS or none.

Register 94 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 95 used 2 times across 4 insns in block 33; set 1 time; SSE_REGS or none.

Register 96 used 2 times across 7 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 98 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 99 used 2 times across 4 insns in block 39; set 1 time; SSE_REGS or none.

Register 100 used 2 times across 7 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 102 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 103 used 2 times across 4 insns in block 41; set 1 time; SSE_REGS or none.

Register 104 used 2 times across 7 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 106 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 107 used 2 times across 4 insns in block 43; set 1 time; SSE_REGS or none.

Register 108 used 2 times across 7 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 110 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 111 used 2 times across 4 insns in block 45; set 1 time; SSE_REGS or none.

Register 112 used 2 times across 7 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 114 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 115 used 2 times across 4 insns in block 47; set 1 time; SSE_REGS or none.

Register 116 used 2 times across 7 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 118 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 119 used 2 times across 4 insns in block 49; set 1 time; SSE_REGS or none.

53 basic blocks, 81 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [10.0%]  1 [90.0%]  (fallthru)
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%]  (fallthru)
Successors:  5 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  36 [100.0%]  52 [100.0%]  8 [12.5%] 
Successors:  37 [50.0%]  3 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 75 77
Invalid sum of incoming frequencies 1721, should be 1013

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
Successors:  37 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 75 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  0 [10.0%]  51 [10.0%]  (loop_exit) 7 [10.0%]  35 [10.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  1 [100.0%] 
Successors:  7 [50.0%]  6 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 62 63 64 71

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
Successors:  7 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 62 63 64 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  5 [50.0%]  6 [100.0%]  (fallthru)
Successors:  8 [90.0%]  (fallthru,dfs_back) 4 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  7 [90.0%]  (fallthru,dfs_back)
Successors:  9 [87.5%]  (fallthru) 2 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
Invalid sum of incoming frequencies 900, should be 771

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  8 [87.5%]  (fallthru)
Successors:  10 [85.7%]  (fallthru) 33 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  9 [85.7%]  (fallthru)
Successors:  11 [83.3%]  (fallthru) 30 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  10 [83.3%]  (fallthru)
Successors:  12 [80.0%]  (fallthru) 27 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  11 [80.0%]  (fallthru)
Successors:  13 [75.0%]  (fallthru) 24 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  12 [75.0%]  (fallthru)
Successors:  14 [66.7%]  (fallthru) 21 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [66.7%]  (fallthru)
Successors:  15 [50.0%]  (fallthru) 18 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 74 77
Invalid sum of incoming frequencies 300, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
Successors:  17 [50.0%]  16 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 82
Invalid sum of incoming frequencies 450, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [50.0%]  16 [100.0%]  (fallthru)
Successors:  18 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 14 [50.0%] 
Successors:  20 [50.0%]  19 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 84
Invalid sum of incoming frequencies 1350, should be 900

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
Successors:  20 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 84
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  18 [50.0%]  19 [100.0%]  (fallthru)
Successors:  21 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  20 [100.0%]  (fallthru) 13 [33.3%] 
Successors:  23 [50.0%]  22 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 86
Invalid sum of incoming frequencies 1050, should be 900

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  21 [50.0%]  (fallthru)
Successors:  23 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 86
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  21 [50.0%]  22 [100.0%]  (fallthru)
Successors:  24 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  23 [100.0%]  (fallthru) 12 [25.0%] 
Successors:  26 [50.0%]  25 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 88
Invalid sum of incoming frequencies 1050, should be 900

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  24 [50.0%]  (fallthru)
Successors:  26 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  24 [50.0%]  25 [100.0%]  (fallthru)
Successors:  27 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  26 [100.0%]  (fallthru) 11 [20.0%] 
Successors:  29 [50.0%]  28 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 90
Invalid sum of incoming frequencies 1035, should be 900

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  27 [50.0%]  (fallthru)
Successors:  29 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 90
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 29 prev 28, next 30, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  27 [50.0%]  28 [100.0%]  (fallthru)
Successors:  30 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 30 prev 29, next 31, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  29 [100.0%]  (fallthru) 10 [16.7%] 
Successors:  32 [50.0%]  31 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 92
Invalid sum of incoming frequencies 1020, should be 900

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  30 [50.0%]  (fallthru)
Successors:  32 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 92
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  30 [50.0%]  31 [100.0%]  (fallthru)
Successors:  33 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  32 [100.0%]  (fallthru) 9 [14.3%] 
Successors:  35 [50.0%]  34 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 94
Invalid sum of incoming frequencies 1007, should be 900

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  33 [50.0%]  (fallthru)
Successors:  35 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 94
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  33 [50.0%]  34 [100.0%]  (fallthru)
Successors:  36 [90.0%]  (fallthru,dfs_back) 4 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 714, maybe hot.
Predecessors:  35 [90.0%]  (fallthru,dfs_back)
Successors:  2 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 37 prev 36, next 38, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%] 
Successors:  39 [50.0%]  38 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 72 74 77 80

Basic block 38 prev 37, next 39, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  37 [50.0%]  (fallthru)
Successors:  39 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 72 74 77 80
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 39 prev 38, next 40, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  37 [50.0%]  38 [100.0%]  (fallthru)
Successors:  41 [50.0%]  40 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 96 98

Basic block 40 prev 39, next 41, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  39 [50.0%]  (fallthru)
Successors:  41 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 96 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 41 prev 40, next 42, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  39 [50.0%]  40 [100.0%]  (fallthru)
Successors:  43 [50.0%]  42 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 100 102

Basic block 42 prev 41, next 43, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  41 [50.0%]  (fallthru)
Successors:  43 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 43 prev 42, next 44, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  41 [50.0%]  42 [100.0%]  (fallthru)
Successors:  45 [50.0%]  44 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 104 106

Basic block 44 prev 43, next 45, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  43 [50.0%]  (fallthru)
Successors:  45 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 104 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 45 prev 44, next 46, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  43 [50.0%]  44 [100.0%]  (fallthru)
Successors:  47 [50.0%]  46 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 108 110

Basic block 46 prev 45, next 47, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  45 [50.0%]  (fallthru)
Successors:  47 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 108 110
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 47 prev 46, next 48, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  45 [50.0%]  46 [100.0%]  (fallthru)
Successors:  49 [50.0%]  48 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 112 114

Basic block 48 prev 47, next 49, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  47 [50.0%]  (fallthru)
Successors:  49 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 112 114
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 49 prev 48, next 50, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  47 [50.0%]  48 [100.0%]  (fallthru)
Successors:  51 [50.0%]  50 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 116 118

Basic block 50 prev 49, next 51, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  49 [50.0%]  (fallthru)
Successors:  51 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 116 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 51 prev 50, next 52, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  49 [50.0%]  50 [100.0%]  (fallthru)
Successors:  52 [90.0%]  (fallthru,dfs_back) 4 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

Basic block 52 prev 51, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  51 [90.0%]  (fallthru,dfs_back)
Successors:  2 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Register 65 in 0.
;; Register 66 in 21.
;; Register 76 in 21.
;; Register 81 in 21.
;; Register 83 in 21.
;; Register 85 in 21.
;; Register 87 in 21.
;; Register 89 in 21.
;; Register 91 in 21.
;; Register 93 in 21.
;; Register 95 in 21.
;; Register 99 in 21.
;; Register 103 in 21.
;; Register 107 in 21.
;; Register 111 in 21.
;; Register 115 in 21.
;; Register 119 in 21.
(note:HI 1 0 9 ("./CppStatUtilities.cc") 153)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 9 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 9 4 0 ./CppStatUtilities.cc:153 (set (reg/v/f:DI 61 [ data ])
        (reg:DI 5 di [ data ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:153 (set (reg/v:SI 62 [ dataLen ])
        (reg:SI 4 si [ dataLen ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ dataLen ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:153 (set (reg/v/f:DI 63 [ minVal ])
        (reg:DI 1 dx [ minVal ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 1 dx [ minVal ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:153 (set (reg/v/f:DI 64 [ minInd ])
        (reg:DI 2 cx [ minInd ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 2 cx [ minInd ])
        (nil)))

(note:HI 7 6 11 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 11 7 12 0 ("./CppStatUtilities.cc") 155)

(insn:HI 12 11 13 0 ./CppStatUtilities.cc:155 (set (reg:DF 65)
        (mem:DF (reg/v/f:DI 61 [ data ]) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 3 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 61 [ data ]) [3 S8 A64])
        (nil)))

(insn:HI 13 12 14 0 ./CppStatUtilities.cc:155 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 65)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 5 (insn_list:REG_DEP_TRUE 12 (nil)))
    (expr_list:REG_DEAD (reg:DF 65)
        (nil)))

(note:HI 14 13 15 0 ("./CppStatUtilities.cc") 156)

(insn:HI 15 14 16 0 ./CppStatUtilities.cc:156 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (const_int 0 [0x0])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 6 (nil))
    (nil))

(note:HI 16 15 17 0 ("./CppStatUtilities.cc") 159)

(insn:HI 17 16 18 0 ./CppStatUtilities.cc:159 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 62 [ dataLen ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(jump_insn:HI 18 17 541 0 ./CppStatUtilities.cc:159 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 53)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 17 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64
(note:HI 541 18 543 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 543 541 544 1 (set (pc)
        (label_ref 542)) 548 {jump} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64

(barrier:HI 544 543 59)

(note:HI 59 544 23 NOTE_INSN_LOOP_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 23 59 24 2 82 "" [3 uses])

(note:HI 24 23 25 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 25 24 26 2 ("./CppStatUtilities.cc") 161)

(insn:HI 26 25 27 2 ./CppStatUtilities.cc:161 (set (reg:DF 75 [ D.34607 ])
        (mem:DF (reg/f:DI 74 [ ivtmp.257 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 27 26 28 2 ./CppStatUtilities.cc:161 (set (reg:DF 76)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 28 27 29 2 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 76)
            (reg:DF 75 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_TRUE 27 (nil)))
    (expr_list:REG_DEAD (reg:DF 76)
        (nil)))

(jump_insn:HI 29 28 35 2 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 39)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 28 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 75 77

(note:HI 35 29 34 ("./CppStatUtilities.cc") 163)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 75 77
(note:HI 34 35 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 36 34 37 3 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 75 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 75 [ D.34607 ])
        (nil)))

(note:HI 37 36 38 3 ("./CppStatUtilities.cc") 164)

(insn:HI 38 37 551 3 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))

(jump_insn:HI 551 38 552 3 (set (pc)
        (label_ref 39)) 548 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

(barrier:HI 552 551 60)

(note:HI 60 552 48 NOTE_INSN_LOOP_END)

(note:HI 48 60 49 NOTE_INSN_FUNCTION_END)

(note:HI 49 48 53 ("./CppStatUtilities.cc") 167)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label:HI 53 49 58 4 86 "" [4 uses])

(note:HI 58 53 542 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64
(code_label:HI 542 58 20 5 128 "" [1 uses])

(note:HI 20 542 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 21 20 66 5 NOTE_INSN_DELETED)

(note:HI 66 21 67 5 NOTE_INSN_DELETED)

(insn:HI 67 66 68 5 (parallel [
            (set (reg:SI 71)
                (plus:SI (reg/v:SI 62 [ dataLen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 68 67 71 5 (parallel [
            (set (reg:SI 71)
                (and:SI (reg:SI 71)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 67 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 71 68 72 5 ("./CppStatUtilities.cc") 161)

(insn:HI 72 71 73 5 ./CppStatUtilities.cc:161 (set (reg:DF 60 [ D.34607 ])
        (mem:DF (reg/v/f:DI 61 [ data ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 73 72 74 5 ./CppStatUtilities.cc:161 (set (reg:DF 66)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 74 73 75 5 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 66)
            (reg:DF 60 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 72 (insn_list:REG_DEP_TRUE 73 (nil)))
    (expr_list:REG_DEAD (reg:DF 66)
        (nil)))

(jump_insn:HI 75 74 84 5 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 95)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 74 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 62 63 64 71

(note:HI 84 75 82 ("./CppStatUtilities.cc") 163)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 62 63 64 71
(note:HI 82 84 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 79 82 80 6 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 60 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 60 [ D.34607 ])
        (nil)))

(note:HI 80 79 81 6 ("./CppStatUtilities.cc") 164)

(insn:HI 81 80 95 6 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71
(code_label:HI 95 81 91 7 88 "" [1 uses])

(note:HI 91 95 86 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 86 91 87 7 ("./CppStatUtilities.cc") 159)

(insn:HI 87 86 88 7 ./CppStatUtilities.cc:159 (set (reg/v:SI 77 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 88 87 89 7 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/f:DI 74 [ ivtmp.257 ])
                (plus:DI (reg/v/f:DI 61 [ data ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 89 88 90 7 ./CppStatUtilities.cc:159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 77 [ i ])
            (reg/v:SI 62 [ dataLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 87 (nil))
    (nil))

(jump_insn:HI 90 89 321 7 ./CppStatUtilities.cc:159 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 53)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 89 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
(note:HI 321 90 319 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 319 321 320 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 320 319 289 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 23)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 319 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
(note:HI 289 320 287 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 287 289 288 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 288 287 257 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 545)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 287 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
(note:HI 257 288 255 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 255 257 256 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 256 255 225 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 546)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 255 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
(note:HI 225 256 223 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 223 225 224 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 224 223 193 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 547)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 223 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
(note:HI 193 224 191 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 191 193 192 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 192 191 161 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 548)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 191 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
(note:HI 161 192 159 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 159 161 160 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 160 159 129 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 549)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 159 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 71 74 77
(note:HI 129 160 127 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 127 129 128 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 71)
        (nil)))

(jump_insn:HI 128 127 104 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 550)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 127 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 74 77

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64
(note:HI 104 128 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 99 104 100 15 ("./CppStatUtilities.cc") 161)

(insn:HI 100 99 101 15 ./CppStatUtilities.cc:161 (set (reg:DF 82 [ D.34607 ])
        (mem:DF (plus:DI (reg/v/f:DI 61 [ data ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 101 100 102 15 ./CppStatUtilities.cc:161 (set (reg:DF 83)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 102 101 103 15 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 83)
            (reg:DF 82 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 100 (insn_list:REG_DEP_TRUE 101 (nil)))
    (expr_list:REG_DEAD (reg:DF 83)
        (nil)))

(jump_insn:HI 103 102 112 15 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 123)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 102 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 82

(note:HI 112 103 110 ("./CppStatUtilities.cc") 163)

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 82
(note:HI 110 112 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 107 110 108 16 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 82 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 82 [ D.34607 ])
        (nil)))

(note:HI 108 107 109 16 ("./CppStatUtilities.cc") 164)

(insn:HI 109 108 123 16 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64
(code_label:HI 123 109 119 17 90 "" [1 uses])

(note:HI 119 123 114 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 114 119 115 17 ("./CppStatUtilities.cc") 159)

(insn:HI 115 114 116 17 ./CppStatUtilities.cc:159 (set (reg/v:SI 77 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 116 115 550 17 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/f:DI 74 [ ivtmp.257 ])
                (plus:DI (reg/v/f:DI 61 [ data ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 61 [ data ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 550 116 136 18 134 "" [1 uses])

(note:HI 136 550 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 131 136 132 18 ("./CppStatUtilities.cc") 161)

(insn:HI 132 131 133 18 ./CppStatUtilities.cc:161 (set (reg:DF 84 [ D.34607 ])
        (mem:DF (reg/f:DI 74 [ ivtmp.257 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 133 132 134 18 ./CppStatUtilities.cc:161 (set (reg:DF 85)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 134 133 135 18 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 85)
            (reg:DF 84 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 132 (insn_list:REG_DEP_TRUE 133 (nil)))
    (expr_list:REG_DEAD (reg:DF 85)
        (nil)))

(jump_insn:HI 135 134 144 18 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 155)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 134 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 84

(note:HI 144 135 142 ("./CppStatUtilities.cc") 163)

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 84
(note:HI 142 144 139 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:HI 139 142 140 19 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 84 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 84 [ D.34607 ])
        (nil)))

(note:HI 140 139 141 19 ("./CppStatUtilities.cc") 164)

(insn:HI 141 140 155 19 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 155 141 151 20 93 "" [1 uses])

(note:HI 151 155 146 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note:HI 146 151 147 20 ("./CppStatUtilities.cc") 159)

(insn:HI 147 146 148 20 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 148 147 549 20 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/f:DI 74 [ ivtmp.257 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 549 148 168 21 133 "" [1 uses])

(note:HI 168 549 163 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note:HI 163 168 164 21 ("./CppStatUtilities.cc") 161)

(insn:HI 164 163 165 21 ./CppStatUtilities.cc:161 (set (reg:DF 86 [ D.34607 ])
        (mem:DF (reg/f:DI 74 [ ivtmp.257 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 165 164 166 21 ./CppStatUtilities.cc:161 (set (reg:DF 87)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 166 165 167 21 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 87)
            (reg:DF 86 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 164 (insn_list:REG_DEP_TRUE 165 (nil)))
    (expr_list:REG_DEAD (reg:DF 87)
        (nil)))

(jump_insn:HI 167 166 176 21 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 187)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 166 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 86

(note:HI 176 167 174 ("./CppStatUtilities.cc") 163)

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 86
(note:HI 174 176 171 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 171 174 172 22 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 86 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 86 [ D.34607 ])
        (nil)))

(note:HI 172 171 173 22 ("./CppStatUtilities.cc") 164)

(insn:HI 173 172 187 22 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 187 173 183 23 96 "" [1 uses])

(note:HI 183 187 178 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note:HI 178 183 179 23 ("./CppStatUtilities.cc") 159)

(insn:HI 179 178 180 23 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 180 179 548 23 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/f:DI 74 [ ivtmp.257 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 548 180 200 24 132 "" [1 uses])

(note:HI 200 548 195 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note:HI 195 200 196 24 ("./CppStatUtilities.cc") 161)

(insn:HI 196 195 197 24 ./CppStatUtilities.cc:161 (set (reg:DF 88 [ D.34607 ])
        (mem:DF (reg/f:DI 74 [ ivtmp.257 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 197 196 198 24 ./CppStatUtilities.cc:161 (set (reg:DF 89)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 198 197 199 24 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 89)
            (reg:DF 88 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 196 (insn_list:REG_DEP_TRUE 197 (nil)))
    (expr_list:REG_DEAD (reg:DF 89)
        (nil)))

(jump_insn:HI 199 198 208 24 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 219)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 198 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 88

(note:HI 208 199 206 ("./CppStatUtilities.cc") 163)

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 88
(note:HI 206 208 203 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:HI 203 206 204 25 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 88 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 88 [ D.34607 ])
        (nil)))

(note:HI 204 203 205 25 ("./CppStatUtilities.cc") 164)

(insn:HI 205 204 219 25 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 219 205 215 26 99 "" [1 uses])

(note:HI 215 219 210 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note:HI 210 215 211 26 ("./CppStatUtilities.cc") 159)

(insn:HI 211 210 212 26 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 212 211 547 26 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/f:DI 74 [ ivtmp.257 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 547 212 232 27 131 "" [1 uses])

(note:HI 232 547 227 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note:HI 227 232 228 27 ("./CppStatUtilities.cc") 161)

(insn:HI 228 227 229 27 ./CppStatUtilities.cc:161 (set (reg:DF 90 [ D.34607 ])
        (mem:DF (reg/f:DI 74 [ ivtmp.257 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 229 228 230 27 ./CppStatUtilities.cc:161 (set (reg:DF 91)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 230 229 231 27 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 91)
            (reg:DF 90 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 228 (insn_list:REG_DEP_TRUE 229 (nil)))
    (expr_list:REG_DEAD (reg:DF 91)
        (nil)))

(jump_insn:HI 231 230 240 27 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 251)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 230 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 90

(note:HI 240 231 238 ("./CppStatUtilities.cc") 163)

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 90
(note:HI 238 240 235 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:HI 235 238 236 28 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 90 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 90 [ D.34607 ])
        (nil)))

(note:HI 236 235 237 28 ("./CppStatUtilities.cc") 164)

(insn:HI 237 236 251 28 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 251 237 247 29 102 "" [1 uses])

(note:HI 247 251 242 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note:HI 242 247 243 29 ("./CppStatUtilities.cc") 159)

(insn:HI 243 242 244 29 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 244 243 546 29 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/f:DI 74 [ ivtmp.257 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 546 244 264 30 130 "" [1 uses])

(note:HI 264 546 259 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note:HI 259 264 260 30 ("./CppStatUtilities.cc") 161)

(insn:HI 260 259 261 30 ./CppStatUtilities.cc:161 (set (reg:DF 92 [ D.34607 ])
        (mem:DF (reg/f:DI 74 [ ivtmp.257 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 261 260 262 30 ./CppStatUtilities.cc:161 (set (reg:DF 93)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 262 261 263 30 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 93)
            (reg:DF 92 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 260 (insn_list:REG_DEP_TRUE 261 (nil)))
    (expr_list:REG_DEAD (reg:DF 93)
        (nil)))

(jump_insn:HI 263 262 272 30 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 283)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 262 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 92

(note:HI 272 263 270 ("./CppStatUtilities.cc") 163)

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 92
(note:HI 270 272 267 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:HI 267 270 268 31 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 92 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 92 [ D.34607 ])
        (nil)))

(note:HI 268 267 269 31 ("./CppStatUtilities.cc") 164)

(insn:HI 269 268 283 31 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 283 269 279 32 105 "" [1 uses])

(note:HI 279 283 274 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note:HI 274 279 275 32 ("./CppStatUtilities.cc") 159)

(insn:HI 275 274 276 32 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 276 275 545 32 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/f:DI 74 [ ivtmp.257 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 545 276 296 33 129 "" [1 uses])

(note:HI 296 545 291 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note:HI 291 296 292 33 ("./CppStatUtilities.cc") 161)

(insn:HI 292 291 293 33 ./CppStatUtilities.cc:161 (set (reg:DF 94 [ D.34607 ])
        (mem:DF (reg/f:DI 74 [ ivtmp.257 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 293 292 294 33 ./CppStatUtilities.cc:161 (set (reg:DF 95)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 294 293 295 33 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 95)
            (reg:DF 94 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 292 (insn_list:REG_DEP_TRUE 293 (nil)))
    (expr_list:REG_DEAD (reg:DF 95)
        (nil)))

(jump_insn:HI 295 294 304 33 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 315)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 294 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 94

(note:HI 304 295 302 ("./CppStatUtilities.cc") 163)

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 94
(note:HI 302 304 299 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:HI 299 302 300 34 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 94 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 94 [ D.34607 ])
        (nil)))

(note:HI 300 299 301 34 ("./CppStatUtilities.cc") 164)

(insn:HI 301 300 315 34 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 315 301 311 35 108 "" [1 uses])

(note:HI 311 315 306 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note:HI 306 311 307 35 ("./CppStatUtilities.cc") 159)

(insn:HI 307 306 308 35 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 308 307 309 35 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/f:DI 74 [ ivtmp.257 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 309 308 310 35 ./CppStatUtilities.cc:159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 77 [ i ])
            (reg/v:SI 62 [ dataLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 307 (nil))
    (nil))

(jump_insn:HI 310 309 317 35 ./CppStatUtilities.cc:159 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 53)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 309 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(note:HI 317 310 537 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 537 317 538 36 (set (pc)
        (label_ref 23)) 548 {jump} (nil)
    (nil))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

(barrier:HI 538 537 39)

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 39 538 40 37 83 "" [2 uses])

(note:HI 40 39 41 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note:HI 41 40 511 37 ("./CppStatUtilities.cc") 159)

(insn:HI 511 41 323 37 ./CppStatUtilities.cc:159 (parallel [
            (set (reg:SI 72)
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 323 511 324 37 ("./CppStatUtilities.cc") 161)

(insn:HI 324 323 325 37 ./CppStatUtilities.cc:161 (set (reg:DF 80 [ D.34607 ])
        (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 325 324 326 37 ./CppStatUtilities.cc:161 (set (reg:DF 81)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 326 325 327 37 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 81)
            (reg:DF 80 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 324 (insn_list:REG_DEP_TRUE 325 (nil)))
    (expr_list:REG_DEAD (reg:DF 81)
        (nil)))

(jump_insn:HI 327 326 336 37 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 347)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 326 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 72 74 77 80

(note:HI 336 327 334 ("./CppStatUtilities.cc") 163)

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 72 74 77 80
(note:HI 334 336 331 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:HI 331 334 332 38 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 80 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 80 [ D.34607 ])
        (nil)))

(note:HI 332 331 333 38 ("./CppStatUtilities.cc") 164)

(insn:HI 333 332 347 38 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg:SI 72)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 72)
        (nil)))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 347 333 343 39 111 "" [1 uses])

(note:HI 343 347 338 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note:HI 338 343 339 39 ("./CppStatUtilities.cc") 159)

(insn:HI 339 338 350 39 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 96 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 350 339 351 39 ("./CppStatUtilities.cc") 161)

(insn:HI 351 350 352 39 ./CppStatUtilities.cc:161 (set (reg:DF 98 [ D.34607 ])
        (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 352 351 353 39 ./CppStatUtilities.cc:161 (set (reg:DF 99)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 353 352 354 39 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 99)
            (reg:DF 98 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 351 (insn_list:REG_DEP_TRUE 352 (nil)))
    (expr_list:REG_DEAD (reg:DF 99)
        (nil)))

(jump_insn:HI 354 353 363 39 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 374)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 353 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 96 98

(note:HI 363 354 361 ("./CppStatUtilities.cc") 163)

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 96 98
(note:HI 361 363 358 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn:HI 358 361 359 40 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 98 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 98 [ D.34607 ])
        (nil)))

(note:HI 359 358 360 40 ("./CppStatUtilities.cc") 164)

(insn:HI 360 359 374 40 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 96 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 96 [ i ])
        (nil)))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 374 360 370 41 113 "" [1 uses])

(note:HI 370 374 365 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note:HI 365 370 366 41 ("./CppStatUtilities.cc") 159)

(insn:HI 366 365 377 41 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 100 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 377 366 378 41 ("./CppStatUtilities.cc") 161)

(insn:HI 378 377 379 41 ./CppStatUtilities.cc:161 (set (reg:DF 102 [ D.34607 ])
        (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 379 378 380 41 ./CppStatUtilities.cc:161 (set (reg:DF 103)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 380 379 381 41 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 103)
            (reg:DF 102 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 378 (insn_list:REG_DEP_TRUE 379 (nil)))
    (expr_list:REG_DEAD (reg:DF 103)
        (nil)))

(jump_insn:HI 381 380 390 41 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 401)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 380 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 100 102

(note:HI 390 381 388 ("./CppStatUtilities.cc") 163)

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 100 102
(note:HI 388 390 385 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:HI 385 388 386 42 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 102 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 102 [ D.34607 ])
        (nil)))

(note:HI 386 385 387 42 ("./CppStatUtilities.cc") 164)

(insn:HI 387 386 401 42 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 100 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 100 [ i ])
        (nil)))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 401 387 397 43 115 "" [1 uses])

(note:HI 397 401 392 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(note:HI 392 397 393 43 ("./CppStatUtilities.cc") 159)

(insn:HI 393 392 404 43 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 104 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 404 393 405 43 ("./CppStatUtilities.cc") 161)

(insn:HI 405 404 406 43 ./CppStatUtilities.cc:161 (set (reg:DF 106 [ D.34607 ])
        (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                (const_int 32 [0x20])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 406 405 407 43 ./CppStatUtilities.cc:161 (set (reg:DF 107)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 407 406 408 43 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 107)
            (reg:DF 106 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 405 (insn_list:REG_DEP_TRUE 406 (nil)))
    (expr_list:REG_DEAD (reg:DF 107)
        (nil)))

(jump_insn:HI 408 407 417 43 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 428)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 407 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 104 106

(note:HI 417 408 415 ("./CppStatUtilities.cc") 163)

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 104 106
(note:HI 415 417 412 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn:HI 412 415 413 44 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 106 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 106 [ D.34607 ])
        (nil)))

(note:HI 413 412 414 44 ("./CppStatUtilities.cc") 164)

(insn:HI 414 413 428 44 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 104 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 104 [ i ])
        (nil)))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 428 414 424 45 117 "" [1 uses])

(note:HI 424 428 419 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(note:HI 419 424 420 45 ("./CppStatUtilities.cc") 159)

(insn:HI 420 419 431 45 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 108 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 431 420 432 45 ("./CppStatUtilities.cc") 161)

(insn:HI 432 431 433 45 ./CppStatUtilities.cc:161 (set (reg:DF 110 [ D.34607 ])
        (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                (const_int 40 [0x28])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 433 432 434 45 ./CppStatUtilities.cc:161 (set (reg:DF 111)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 434 433 435 45 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 111)
            (reg:DF 110 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 432 (insn_list:REG_DEP_TRUE 433 (nil)))
    (expr_list:REG_DEAD (reg:DF 111)
        (nil)))

(jump_insn:HI 435 434 444 45 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 455)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 434 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 108 110

(note:HI 444 435 442 ("./CppStatUtilities.cc") 163)

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 108 110
(note:HI 442 444 439 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn:HI 439 442 440 46 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 110 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 110 [ D.34607 ])
        (nil)))

(note:HI 440 439 441 46 ("./CppStatUtilities.cc") 164)

(insn:HI 441 440 455 46 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 108 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 108 [ i ])
        (nil)))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 455 441 451 47 119 "" [1 uses])

(note:HI 451 455 446 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(note:HI 446 451 447 47 ("./CppStatUtilities.cc") 159)

(insn:HI 447 446 458 47 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 112 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 458 447 459 47 ("./CppStatUtilities.cc") 161)

(insn:HI 459 458 460 47 ./CppStatUtilities.cc:161 (set (reg:DF 114 [ D.34607 ])
        (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                (const_int 48 [0x30])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 460 459 461 47 ./CppStatUtilities.cc:161 (set (reg:DF 115)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 461 460 462 47 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 115)
            (reg:DF 114 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 459 (insn_list:REG_DEP_TRUE 460 (nil)))
    (expr_list:REG_DEAD (reg:DF 115)
        (nil)))

(jump_insn:HI 462 461 471 47 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 482)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 461 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 112 114

(note:HI 471 462 469 ("./CppStatUtilities.cc") 163)

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 112 114
(note:HI 469 471 466 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn:HI 466 469 467 48 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 114 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 114 [ D.34607 ])
        (nil)))

(note:HI 467 466 468 48 ("./CppStatUtilities.cc") 164)

(insn:HI 468 467 482 48 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 112 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 112 [ i ])
        (nil)))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 482 468 478 49 121 "" [1 uses])

(note:HI 478 482 473 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note:HI 473 478 474 49 ("./CppStatUtilities.cc") 159)

(insn:HI 474 473 485 49 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 116 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 485 474 486 49 ("./CppStatUtilities.cc") 161)

(insn:HI 486 485 487 49 ./CppStatUtilities.cc:161 (set (reg:DF 118 [ D.34607 ])
        (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                (const_int 56 [0x38])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 487 486 488 49 ./CppStatUtilities.cc:161 (set (reg:DF 119)
        (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (nil)))

(insn:HI 488 487 489 49 ./CppStatUtilities.cc:161 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 119)
            (reg:DF 118 [ D.34607 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 486 (insn_list:REG_DEP_TRUE 487 (nil)))
    (expr_list:REG_DEAD (reg:DF 119)
        (nil)))

(jump_insn:HI 489 488 498 49 ./CppStatUtilities.cc:161 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 509)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 488 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 49, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 116 118

(note:HI 498 489 496 ("./CppStatUtilities.cc") 163)

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77 116 118
(note:HI 496 498 493 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn:HI 493 496 494 50 ./CppStatUtilities.cc:163 (set (mem:DF (reg/v/f:DI 63 [ minVal ]) [3 S8 A64])
        (reg:DF 118 [ D.34607 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 118 [ D.34607 ])
        (nil)))

(note:HI 494 493 495 50 ("./CppStatUtilities.cc") 164)

(insn:HI 495 494 509 50 ./CppStatUtilities.cc:164 (set (mem:SI (reg/v/f:DI 64 [ minInd ]) [5 S4 A32])
        (reg/v:SI 116 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 116 [ i ])
        (nil)))
;; End of basic block 50, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(code_label:HI 509 495 505 51 123 "" [1 uses])

(note:HI 505 509 500 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(note:HI 500 505 501 51 ("./CppStatUtilities.cc") 159)

(insn:HI 501 500 502 51 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 502 501 503 51 ./CppStatUtilities.cc:159 (parallel [
            (set (reg/f:DI 74 [ ivtmp.257 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.257 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 503 502 504 51 ./CppStatUtilities.cc:159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 77 [ i ])
            (reg/v:SI 62 [ dataLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 501 (nil))
    (nil))

(jump_insn:HI 504 503 508 51 ./CppStatUtilities.cc:159 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 53)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 503 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 51, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77
(note:HI 508 504 539 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 539 508 540 52 (set (pc)
        (label_ref 23)) 548 {jump} (nil)
    (nil))
;; End of basic block 52, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 64 74 77

(barrier:HI 540 539 0)


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii)



Pass 0

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1000 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18889 MMX_REGS:18889 FP_TOP_SSE_REGS:18889 FP_SECOND_SSE_REGS:18889 FLOAT_SSE_REGS:18889 FLOAT_INT_REGS:13077 INT_SSE_REGS:18889 FLOAT_INT_SSE_REGS:18889 ALL_REGS:18889 MEM:5359

  Register 58 pref DIREG, else GENERAL_REGS
  Register 59 pref SIREG, else GENERAL_REGS


Pass 1

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1000 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18889 MMX_REGS:18889 FP_TOP_SSE_REGS:18889 FP_SECOND_SSE_REGS:18889 FLOAT_SSE_REGS:18889 FLOAT_INT_REGS:13077 INT_SSE_REGS:18889 FLOAT_INT_SSE_REGS:18889 ALL_REGS:18889 MEM:5359

60 registers.

Register 58 used 2 times across 3 insns in block 0; set 1 time; user var; 4 bytes; pref DIREG, else GENERAL_REGS.

Register 59 used 2 times across 4 insns; set 1 time; user var; 4 bytes; pref SIREG, else GENERAL_REGS.

4 basic blocks, 7 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  3 [54.7%]  1 [45.3%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 4533, maybe hot.
Predecessors:  0 [45.3%]  (fallthru)
Successors:  3 [73.8%]  2 [26.2%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1189, maybe hot.
Predecessors:  1 [26.2%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 3 prev 2, next -2, loop_depth 0, count 0, freq 8811, maybe hot.
Predecessors:  0 [54.7%]  1 [73.8%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 5.
(note:HI 1 0 7 ("./CppStatUtilities.cc") 601)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 7 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 7 4 0 ./CppStatUtilities.cc:601 (set (reg/v:SI 58 [ __initialize_p ])
        (reg:SI 5 di [ __initialize_p ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 5 di [ __initialize_p ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:601 (set (reg/v:SI 59 [ __priority ])
        (reg:SI 4 si [ __priority ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ __priority ])
        (nil)))

(note:HI 5 4 9 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 9 5 10 0 ("./CppStatUtilities.cc") 601)

(insn:HI 10 9 11 0 ./CppStatUtilities.cc:601 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 58 [ __initialize_p ])
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 3 (nil))
    (expr_list:REG_DEAD (reg/v:SI 58 [ __initialize_p ])
        (nil)))

(jump_insn:HI 11 10 13 0 ./CppStatUtilities.cc:601 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 33)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5467 [0x155b])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
(note:HI 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 14 13 15 1 ./CppStatUtilities.cc:601 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 59 [ __priority ])
            (const_int 65535 [0xffff]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg/v:SI 59 [ __priority ])
        (nil)))

(jump_insn:HI 15 14 18 1 ./CppStatUtilities.cc:601 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 33)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 7378 [0x1cd2])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note:HI 18 15 17 ("/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream") 76)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 17 18 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 19 17 20 2 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream:76 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt8__ioinit") [flags 0x2] <var_decl 0x2b5eb61c5c60 __ioinit>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 20 19 21 2 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream:76 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41] <function_decl 0x2b5eb598b000 __comp_ctor >) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 19 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 21 20 22 2 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream:76 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x40] <var_decl 0x2b5eb64fe840 __dso_handle>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 22 21 23 2 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream:76 (set (reg:DI 4 si)
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 23 22 24 2 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream:76 (set (reg:DI 5 di)
        (symbol_ref:DI ("__tcf_0") [flags 0x3] <function_decl 0x2b5eb64c6400 __tcf_0>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn/j:HI 24 23 25 2 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream:76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41] <function_decl 0x2b5eb64c6500 __cxa_atexit>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 21 (insn_list:REG_DEP_TRUE 22 (insn_list:REG_DEP_TRUE 23 (nil))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 0 [0x0])
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (nil)))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 25 24 28)

(note:HI 28 25 29 NOTE_INSN_FUNCTION_END)

(note:HI 29 28 33 ("./CppStatUtilities.cc") 601)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label:HI 33 29 36 3 152 "" [2 uses])

(note:HI 36 33 0 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function (static initializers for ./CppStatUtilities.cc) (_GLOBAL__I__ZN14summaryStats_tC2Ev)



Pass 0




Pass 1


58 registers.

1 basic blocks, 2 edges.

Basic block 0 prev -1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note:HI 1 0 3 ("./CppStatUtilities.cc") 602)

(note:HI 3 1 7 NOTE_INSN_FUNCTION_BEG)

(note:HI 7 3 6 ("./CppStatUtilities.cc") 602)

;; Start of basic block 0, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 6 7 8 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 8 6 9 0 ./CppStatUtilities.cc:602 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 9 8 10 0 ./CppStatUtilities.cc:602 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn/j:HI 10 9 11 0 ./CppStatUtilities.cc:602 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3] <function_decl 0x2b5eb64c6300 __static_initialization_and_destruction_0>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 8 (insn_list:REG_DEP_TRUE 9 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si)
        (expr_list:REG_DEAD (reg:SI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 11 10 12)

(note:HI 12 11 0 NOTE_INSN_FUNCTION_END)


;; Function void __tcf_0(void*) (__tcf_0)



Pass 0




Pass 1


59 registers.

1 basic blocks, 2 edges.

Basic block 0 prev -1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note:HI 1 0 4 ("/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream") 76)

(note:HI 4 1 8 NOTE_INSN_FUNCTION_BEG)

(note:HI 8 4 6 ("/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream") 76)

;; Start of basic block 0, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 6 8 9 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 9 6 10 0 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream:76 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt8__ioinit") [flags 0x2] <var_decl 0x2b5eb61c5c60 __ioinit>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn/j:HI 10 9 11 0 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/iostream:76 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41] <function_decl 0x2b5eb598b200 __comp_dtor >) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 9 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 11 10 12)

(note:HI 12 11 0 NOTE_INSN_FUNCTION_END)


;; Function void summaryStats_t::print(FILE*) const (_ZNK14summaryStats_t5printEP8_IO_FILE)



Pass 0

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:104000 MMX_REGS:104000 FP_TOP_SSE_REGS:104000 FP_SECOND_SSE_REGS:104000 FLOAT_SSE_REGS:104000 FLOAT_INT_REGS:72000 INT_SSE_REGS:104000 FLOAT_INT_SSE_REGS:104000 ALL_REGS:104000 MEM:32000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1000 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000

  Register 58 pref DIREG, else GENERAL_REGS
  Register 59 pref DIREG, else GENERAL_REGS


Pass 1

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:104000 MMX_REGS:104000 FP_TOP_SSE_REGS:104000 FP_SECOND_SSE_REGS:104000 FLOAT_SSE_REGS:104000 FLOAT_INT_REGS:72000 INT_SSE_REGS:104000 FLOAT_INT_SSE_REGS:104000 ALL_REGS:104000 MEM:32000
  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1000 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000

66 registers.

Register 58 used 8 times across 9 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS; pointer.

Register 59 used 2 times across 10 insns in block 0; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

1 basic blocks, 2 edges.

Basic block 0 prev -1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 5.
;; Register 59 in 0.
(note:HI 1 0 7 ("./CppStatUtilities.cc") 63)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 7 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 7 4 0 ./CppStatUtilities.cc:63 (set (reg/f:DI 58 [ this ])
        (reg:DI 5 di [ this ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:63 (set (reg/v/f:DI 59 [ f ])
        (reg:DI 4 si [ f ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 4 si [ f ])
        (nil)))

(note:HI 5 4 9 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 9 5 10 0 ("./CppStatUtilities.cc") 65)

(note:HI 10 9 11 0 NOTE_INSN_DELETED)

(note:HI 11 10 12 0 NOTE_INSN_DELETED)

(note:HI 12 11 13 0 NOTE_INSN_DELETED)

(note:HI 13 12 14 0 NOTE_INSN_DELETED)

(note:HI 14 13 15 0 NOTE_INSN_DELETED)

(note:HI 15 14 16 0 NOTE_INSN_DELETED)

(insn:HI 16 15 17 0 ./CppStatUtilities.cc:65 (set (reg:DF 27 xmm6 [ <variable>.mad ])
        (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 32 [0x20])) [3 <variable>.mad+0 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn:HI 17 16 18 0 ./CppStatUtilities.cc:65 (set (reg:DF 26 xmm5 [ <variable>.max ])
        (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 8 [0x8])) [3 <variable>.max+0 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 18 17 19 0 ./CppStatUtilities.cc:65 (set (reg:DF 25 xmm4 [ <variable>.q3 ])
        (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 48 [0x30])) [3 <variable>.q3+0 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 19 18 20 0 ./CppStatUtilities.cc:65 (set (reg:DF 24 xmm3 [ <variable>.mean ])
        (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 24 [0x18])) [3 <variable>.mean+0 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 20 19 21 0 ./CppStatUtilities.cc:65 (set (reg:DF 23 xmm2 [ <variable>.med ])
        (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 16 [0x10])) [3 <variable>.med+0 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 21 20 22 0 ./CppStatUtilities.cc:65 (set (reg:DF 22 xmm1 [ <variable>.q1 ])
        (mem/s:DF (plus:DI (reg/f:DI 58 [ this ])
                (const_int 40 [0x28])) [3 <variable>.q1+0 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 22 21 23 0 ./CppStatUtilities.cc:65 (set (reg:DF 21 xmm0 [ <variable>.min ])
        (mem/s:DF (reg/f:DI 58 [ this ]) [3 <variable>.min+0 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/f:DI 58 [ this ])
        (nil)))

(insn:HI 23 22 24 0 ./CppStatUtilities.cc:65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2] <string_cst 0x2b5eb6645740>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 24 23 25 0 ./CppStatUtilities.cc:65 (set (reg:DI 5 di [ f ])
        (reg/v/f:DI 59 [ f ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 4 (nil))
    (expr_list:REG_DEAD (reg/v/f:DI 59 [ f ])
        (nil)))

(insn:HI 25 24 26 0 ./CppStatUtilities.cc:65 (set (reg:QI 0 ax)
        (const_int 7 [0x7])) 55 {*movqi_1} (nil)
    (nil))

(call_insn/j:HI 26 25 27 0 ./CppStatUtilities.cc:65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 16 (insn_list:REG_DEP_TRUE 17 (insn_list:REG_DEP_TRUE 18 (insn_list:REG_DEP_TRUE 19 (insn_list:REG_DEP_TRUE 20 (insn_list:REG_DEP_TRUE 21 (insn_list:REG_DEP_TRUE 22 (insn_list:REG_DEP_TRUE 23 (insn_list:REG_DEP_TRUE 24 (insn_list:REG_DEP_TRUE 25 (nil)))))))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:DF 27 xmm6 [ <variable>.mad ])
            (expr_list:REG_DEAD (reg:DF 26 xmm5 [ <variable>.max ])
                (expr_list:REG_DEAD (reg:DF 25 xmm4 [ <variable>.q3 ])
                    (expr_list:REG_DEAD (reg:DF 24 xmm3 [ <variable>.mean ])
                        (expr_list:REG_DEAD (reg:DF 23 xmm2 [ <variable>.med ])
                            (expr_list:REG_DEAD (reg:DF 22 xmm1 [ <variable>.q1 ])
                                (expr_list:REG_DEAD (reg:DF 21 xmm0 [ <variable>.min ])
                                    (expr_list:REG_DEAD (reg:DI 4 si)
                                        (expr_list:REG_DEAD (reg:DI 5 di [ f ])
                                            (expr_list:REG_UNUSED (reg:SI 0 ax)
                                                (nil))))))))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ f ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ <variable>.min ]))
                    (expr_list:REG_DEP_TRUE (use (reg:DF 22 xmm1 [ <variable>.q1 ]))
                        (expr_list:REG_DEP_TRUE (use (reg:DF 23 xmm2 [ <variable>.med ]))
                            (expr_list:REG_DEP_TRUE (use (reg:DF 24 xmm3 [ <variable>.mean ]))
                                (expr_list:REG_DEP_TRUE (use (reg:DF 25 xmm4 [ <variable>.q3 ]))
                                    (expr_list:REG_DEP_TRUE (use (reg:DF 26 xmm5 [ <variable>.max ]))
                                        (expr_list:REG_DEP_TRUE (use (reg:DF 27 xmm6 [ <variable>.mad ]))
                                            (nil))))))))))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 27 26 28)

(note:HI 28 27 29 NOTE_INSN_FUNCTION_END)

(note:HI 29 28 0 ("./CppStatUtilities.cc") 66)


;; Function void signalPeakPar(const double*, int, PeakPar_t*&, int&) (_Z13signalPeakParPKdiRP9PeakPar_tRi)



Pass 0

  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:328 INDEX_REGS:0 LEGACY_REGS:328 GENERAL_REGS:328 SSE_REGS:24934 MMX_REGS:24934 FP_TOP_SSE_REGS:24934 FP_SECOND_SSE_REGS:24934 FLOAT_SSE_REGS:24934 FLOAT_INT_REGS:17262 INT_SSE_REGS:24934 FLOAT_INT_SSE_REGS:24934 ALL_REGS:24934 MEM:5918
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7111 MMX_REGS:7111 FP_TOP_SSE_REGS:7111 FP_SECOND_SSE_REGS:7111 FLOAT_SSE_REGS:7111 FLOAT_INT_REGS:4923 INT_SSE_REGS:7111 FLOAT_INT_SSE_REGS:7111 ALL_REGS:7111 MEM:2188
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5330 MMX_REGS:5330 FP_TOP_SSE_REGS:5330 FP_SECOND_SSE_REGS:5330 FLOAT_SSE_REGS:5330 FLOAT_INT_REGS:3690 INT_SSE_REGS:5330 FLOAT_INT_SSE_REGS:5330 ALL_REGS:5330 MEM:1640
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1885 MMX_REGS:1885 FP_TOP_SSE_REGS:1885 FP_SECOND_SSE_REGS:1885 FLOAT_SSE_REGS:1885 FLOAT_INT_REGS:1305 INT_SSE_REGS:1885 FLOAT_INT_SSE_REGS:1885 ALL_REGS:1885 MEM:526
  Register 84 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3848 MMX_REGS:3848 INT_SSE_REGS:3848 MEM:1014
  Register 85 costs: AREG:164 DREG:164 CREG:164 BREG:164 SIREG:164 DIREG:164 AD_REGS:164 Q_REGS:164 NON_Q_REGS:164 INDEX_REGS:164 LEGACY_REGS:164 GENERAL_REGS:164 SSE_REGS:76825 MMX_REGS:76825 INT_SSE_REGS:76825 MEM:18438
  Register 86 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6786 MMX_REGS:6786 FP_TOP_SSE_REGS:6786 FP_SECOND_SSE_REGS:6786 FLOAT_SSE_REGS:6786 FLOAT_INT_REGS:4698 INT_SSE_REGS:6786 FLOAT_INT_SSE_REGS:6786 ALL_REGS:6786 MEM:1842
  Register 91 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:14326 MMX_REGS:14326 FP_TOP_SSE_REGS:14326 FP_SECOND_SSE_REGS:14326 FLOAT_SSE_REGS:14326 FLOAT_INT_REGS:9918 INT_SSE_REGS:14326 FLOAT_INT_SSE_REGS:14326 ALL_REGS:14326 MEM:4318
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:14235 MMX_REGS:14235 FP_TOP_SSE_REGS:14235 FP_SECOND_SSE_REGS:14235 FLOAT_SSE_REGS:14235 FLOAT_INT_REGS:9855 INT_SSE_REGS:14235 FLOAT_INT_SSE_REGS:14235 ALL_REGS:14235 MEM:4380
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1148 INDEX_REGS:0 LEGACY_REGS:1148 GENERAL_REGS:1148 SSE_REGS:31330 MMX_REGS:31330 FP_TOP_SSE_REGS:31330 FP_SECOND_SSE_REGS:31330 FLOAT_SSE_REGS:31330 FLOAT_INT_REGS:21690 INT_SSE_REGS:31330 FLOAT_INT_SSE_REGS:31330 ALL_REGS:31330 MEM:9558
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3172 MMX_REGS:3172 FP_TOP_SSE_REGS:3172 FP_SECOND_SSE_REGS:3172 FLOAT_SSE_REGS:3172 FLOAT_INT_REGS:2196 INT_SSE_REGS:3172 FLOAT_INT_SSE_REGS:3172 ALL_REGS:3172 MEM:976
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:2805 INT_SSE_REGS:2805 FLOAT_INT_SSE_REGS:2805 ALL_REGS:2805 MEM:1013
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:426 INDEX_REGS:0 LEGACY_REGS:426 GENERAL_REGS:426 SSE_REGS:4212 MMX_REGS:4212 FP_TOP_SSE_REGS:4212 FP_SECOND_SSE_REGS:4212 FLOAT_SSE_REGS:4212 FLOAT_INT_REGS:2916 INT_SSE_REGS:4212 FLOAT_INT_SSE_REGS:4212 ALL_REGS:4212 MEM:1209
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8385 MMX_REGS:8385 FP_TOP_SSE_REGS:8385 FP_SECOND_SSE_REGS:8385 FLOAT_SSE_REGS:8385 FLOAT_INT_REGS:5805 INT_SSE_REGS:8385 FLOAT_INT_SSE_REGS:8385 ALL_REGS:8385 MEM:2129
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6175 MMX_REGS:6175 INT_SSE_REGS:6175 MEM:1647
  Register 101 costs: AREG:21021 DREG:21021 CREG:21021 BREG:21021 SIREG:21021 DIREG:21021 AD_REGS:21021 Q_REGS:21021 NON_Q_REGS:33584 INDEX_REGS:21021 LEGACY_REGS:33584 GENERAL_REGS:33584 FP_TOP_REG:33957 FP_SECOND_REG:33957 FLOAT_REGS:33957 SSE_REGS:0 FP_TOP_SSE_REGS:33957 FP_SECOND_SSE_REGS:33957 FLOAT_SSE_REGS:33957 FLOAT_INT_REGS:33957 INT_SSE_REGS:21021 FLOAT_INT_SSE_REGS:33957 ALL_REGS:49476 MEM:14932
  Register 102 costs: AREG:37648 DREG:37648 CREG:37648 BREG:37648 SIREG:37648 DIREG:37648 AD_REGS:37648 Q_REGS:37648 NON_Q_REGS:50670 INDEX_REGS:37648 LEGACY_REGS:50670 GENERAL_REGS:50670 FP_TOP_REG:60816 FP_SECOND_REG:60816 FLOAT_REGS:60816 SSE_REGS:0 FP_TOP_SSE_REGS:60816 FP_SECOND_SSE_REGS:60816 FLOAT_SSE_REGS:60816 FLOAT_INT_REGS:60816 INT_SSE_REGS:37648 FLOAT_INT_SSE_REGS:60816 ALL_REGS:76902 MEM:25630
  Register 103 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9022 MMX_REGS:9022 INT_SSE_REGS:9022 MEM:2366
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8125 MMX_REGS:8125 INT_SSE_REGS:8125 MEM:2485
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 INT_SSE_REGS:3900 MEM:1100
  Register 109 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 INT_SSE_REGS:3900 MEM:1100
  Register 110 costs: AREG:1612 DREG:1612 CREG:1612 BREG:1612 SIREG:1612 DIREG:1612 AD_REGS:1612 Q_REGS:1612 NON_Q_REGS:3023 INDEX_REGS:1612 LEGACY_REGS:3023 GENERAL_REGS:3023 FP_TOP_REG:2604 FP_SECOND_REG:2604 FLOAT_REGS:2604 SSE_REGS:0 FP_TOP_SSE_REGS:2604 FP_SECOND_SSE_REGS:2604 FLOAT_SSE_REGS:2604 FLOAT_INT_REGS:2604 INT_SSE_REGS:1612 FLOAT_INT_SSE_REGS:2604 ALL_REGS:4347 MEM:1283
  Register 111 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1690 MMX_REGS:1690 FP_TOP_SSE_REGS:1690 FP_SECOND_SSE_REGS:1690 FLOAT_SSE_REGS:1690 FLOAT_INT_REGS:1170 INT_SSE_REGS:1690 FLOAT_INT_SSE_REGS:1690 ALL_REGS:1690 MEM:477
  Register 112 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:21879 MMX_REGS:21879 FP_TOP_SSE_REGS:21879 FP_SECOND_SSE_REGS:21879 FLOAT_SSE_REGS:21879 FLOAT_INT_REGS:15147 INT_SSE_REGS:21879 FLOAT_INT_SSE_REGS:21879 ALL_REGS:21879 MEM:6621
  Register 113 costs: AREG:-113 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:21645 MMX_REGS:21645 FP_TOP_SSE_REGS:21645 FP_SECOND_SSE_REGS:21645 FLOAT_SSE_REGS:21645 FLOAT_INT_REGS:14985 INT_SSE_REGS:21645 FLOAT_INT_SSE_REGS:21645 ALL_REGS:21645 MEM:6549
  Register 114 costs: AREG:-114 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:23998 MMX_REGS:23998 FP_TOP_SSE_REGS:23998 FP_SECOND_SSE_REGS:23998 FLOAT_SSE_REGS:23998 FLOAT_INT_REGS:16614 INT_SSE_REGS:23998 FLOAT_INT_SSE_REGS:23998 ALL_REGS:23998 MEM:7273
  Register 115 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5889 MMX_REGS:5889 FP_TOP_SSE_REGS:5889 FP_SECOND_SSE_REGS:5889 FLOAT_SSE_REGS:5889 FLOAT_INT_REGS:4077 INT_SSE_REGS:5889 FLOAT_INT_SSE_REGS:5889 ALL_REGS:5889 MEM:1473
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-114 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:76063 MMX_REGS:76063 FP_TOP_SSE_REGS:76063 FP_SECOND_SSE_REGS:76063 FLOAT_SSE_REGS:76063 FLOAT_INT_REGS:52659 INT_SSE_REGS:76063 FLOAT_INT_SSE_REGS:76063 ALL_REGS:76063 MEM:23404
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-114 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:20293 MMX_REGS:20293 INT_SSE_REGS:20293 MEM:4840
  Register 118 costs: AREG:0 DREG:-114 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 119 costs: AREG:0 DREG:0 CREG:-114 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5668 MMX_REGS:5668 FP_TOP_SSE_REGS:5668 FP_SECOND_SSE_REGS:5668 FLOAT_SSE_REGS:5668 FLOAT_INT_REGS:3924 INT_SSE_REGS:5668 FLOAT_INT_SSE_REGS:5668 ALL_REGS:5668 MEM:1744
  Register 123 costs: AREG:1131 DREG:1131 CREG:1131 BREG:1131 SIREG:1131 DIREG:1131 AD_REGS:1131 Q_REGS:1131 NON_Q_REGS:2610 INDEX_REGS:1131 LEGACY_REGS:2610 GENERAL_REGS:2610 FP_TOP_REG:1827 FP_SECOND_REG:1827 FLOAT_REGS:1827 SSE_REGS:0 FP_TOP_SSE_REGS:1827 FP_SECOND_SSE_REGS:1827 FLOAT_SSE_REGS:1827 FLOAT_INT_REGS:1827 INT_SSE_REGS:1131 FLOAT_INT_SSE_REGS:1827 ALL_REGS:3654 MEM:1044
  Register 124 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:364 MMX_REGS:364 FP_TOP_SSE_REGS:364 FP_SECOND_SSE_REGS:364 FLOAT_SSE_REGS:364 FLOAT_INT_REGS:252 INT_SSE_REGS:364 FLOAT_INT_SSE_REGS:364 ALL_REGS:364 MEM:112
  Register 126 costs: AREG:299 DREG:299 CREG:299 BREG:299 SIREG:299 DIREG:299 AD_REGS:299 Q_REGS:299 NON_Q_REGS:690 INDEX_REGS:299 LEGACY_REGS:690 GENERAL_REGS:690 FP_TOP_REG:483 FP_SECOND_REG:483 FLOAT_REGS:483 SSE_REGS:0 FP_TOP_SSE_REGS:483 FP_SECOND_SSE_REGS:483 FLOAT_SSE_REGS:483 FLOAT_INT_REGS:483 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:483 ALL_REGS:966 MEM:276
  Register 127 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22802 MMX_REGS:22802 FP_TOP_SSE_REGS:22802 FP_SECOND_SSE_REGS:22802 FLOAT_SSE_REGS:22802 FLOAT_INT_REGS:15786 INT_SSE_REGS:22802 FLOAT_INT_SSE_REGS:22802 ALL_REGS:22802 MEM:6139
  Register 129 costs: AREG:702 DREG:702 CREG:702 BREG:702 SIREG:702 DIREG:702 AD_REGS:702 Q_REGS:702 NON_Q_REGS:1620 INDEX_REGS:702 LEGACY_REGS:1620 GENERAL_REGS:1620 FP_TOP_REG:1134 FP_SECOND_REG:1134 FLOAT_REGS:1134 SSE_REGS:0 FP_TOP_SSE_REGS:1134 FP_SECOND_SSE_REGS:1134 FLOAT_SSE_REGS:1134 FLOAT_INT_REGS:1134 INT_SSE_REGS:702 FLOAT_INT_SSE_REGS:1134 ALL_REGS:2268 MEM:648
  Register 134 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2132 MMX_REGS:2132 FP_TOP_SSE_REGS:2132 FP_SECOND_SSE_REGS:2132 FLOAT_SSE_REGS:2132 FLOAT_INT_REGS:1476 INT_SSE_REGS:2132 FLOAT_INT_SSE_REGS:2132 ALL_REGS:2132 MEM:656
  Register 135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2132 MMX_REGS:2132 FP_TOP_SSE_REGS:2132 FP_SECOND_SSE_REGS:2132 FLOAT_SSE_REGS:2132 FLOAT_INT_REGS:1476 INT_SSE_REGS:2132 FLOAT_INT_SSE_REGS:2132 ALL_REGS:2132 MEM:574
  Register 137 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2834 MMX_REGS:2834 FP_TOP_SSE_REGS:2834 FP_SECOND_SSE_REGS:2834 FLOAT_SSE_REGS:2834 FLOAT_INT_REGS:1962 INT_SSE_REGS:2834 FLOAT_INT_SSE_REGS:2834 ALL_REGS:2834 MEM:872
  Register 140 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:174 INDEX_REGS:0 LEGACY_REGS:174 GENERAL_REGS:174 SSE_REGS:3393 MMX_REGS:3393 FP_TOP_SSE_REGS:3393 FP_SECOND_SSE_REGS:3393 FLOAT_SSE_REGS:3393 FLOAT_INT_REGS:2349 INT_SSE_REGS:3393 FLOAT_INT_SSE_REGS:3393 ALL_REGS:3393 MEM:1044
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:166 INDEX_REGS:0 LEGACY_REGS:166 GENERAL_REGS:166 SSE_REGS:3237 MMX_REGS:3237 FP_TOP_SSE_REGS:3237 FP_SECOND_SSE_REGS:3237 FLOAT_SSE_REGS:3237 FLOAT_INT_REGS:2241 INT_SSE_REGS:3237 FLOAT_INT_SSE_REGS:3237 ALL_REGS:3237 MEM:996
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:166 INDEX_REGS:0 LEGACY_REGS:166 GENERAL_REGS:166 SSE_REGS:2158 MMX_REGS:2158 FP_TOP_SSE_REGS:2158 FP_SECOND_SSE_REGS:2158 FLOAT_SSE_REGS:2158 FLOAT_INT_REGS:1494 INT_SSE_REGS:2158 FLOAT_INT_SSE_REGS:2158 ALL_REGS:2158 MEM:664
  Register 152 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 153 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 INT_SSE_REGS:3900 MEM:1100
  Register 154 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:800
  Register 156 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 157 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:800
  Register 158 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 159 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:800
  Register 160 costs: AREG:38467 DREG:38467 CREG:38467 BREG:38467 SIREG:38467 DIREG:38467 AD_REGS:38467 Q_REGS:38467 NON_Q_REGS:71515 INDEX_REGS:38467 LEGACY_REGS:71515 GENERAL_REGS:71515 FP_TOP_REG:62139 FP_SECOND_REG:62139 FLOAT_REGS:62139 SSE_REGS:0 FP_TOP_SSE_REGS:62139 FP_SECOND_SSE_REGS:62139 FLOAT_SSE_REGS:62139 FLOAT_INT_REGS:62139 INT_SSE_REGS:38467 FLOAT_INT_SSE_REGS:62139 ALL_REGS:102963 MEM:28819
  Register 161 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:654 INDEX_REGS:0 LEGACY_REGS:654 GENERAL_REGS:654 SSE_REGS:7930 MMX_REGS:7930 FP_TOP_SSE_REGS:7930 FP_SECOND_SSE_REGS:7930 FLOAT_SSE_REGS:7930 FLOAT_INT_REGS:5490 INT_SSE_REGS:7930 FLOAT_INT_SSE_REGS:7930 ALL_REGS:7930 MEM:2353
  Register 162 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26637 MMX_REGS:26637 FP_TOP_SSE_REGS:26637 FP_SECOND_SSE_REGS:26637 FLOAT_SSE_REGS:26637 FLOAT_INT_REGS:18441 INT_SSE_REGS:26637 FLOAT_INT_SSE_REGS:26637 ALL_REGS:26637 MEM:8130
  Register 163 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7696 MMX_REGS:7696 INT_SSE_REGS:7696 MEM:1976
  Register 174 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6435 MMX_REGS:6435 FP_TOP_SSE_REGS:6435 FP_SECOND_SSE_REGS:6435 FLOAT_SSE_REGS:6435 FLOAT_INT_REGS:4455 INT_SSE_REGS:6435 FLOAT_INT_SSE_REGS:6435 ALL_REGS:6435 MEM:1645
  Register 175 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15756 MMX_REGS:15756 FP_TOP_SSE_REGS:15756 FP_SECOND_SSE_REGS:15756 FLOAT_SSE_REGS:15756 FLOAT_INT_REGS:10908 INT_SSE_REGS:15756 FLOAT_INT_SSE_REGS:15756 ALL_REGS:15756 MEM:4848
  Register 176 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1212 INDEX_REGS:0 LEGACY_REGS:1212 GENERAL_REGS:1212 SSE_REGS:10504 MMX_REGS:10504 FP_TOP_SSE_REGS:10504 FP_SECOND_SSE_REGS:10504 FLOAT_SSE_REGS:10504 FLOAT_INT_REGS:7272 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:10504 ALL_REGS:10504 MEM:3232
  Register 178 costs: AREG:164 DREG:164 CREG:164 BREG:164 SIREG:164 DIREG:164 AD_REGS:164 Q_REGS:164 NON_Q_REGS:164 INDEX_REGS:164 LEGACY_REGS:164 GENERAL_REGS:164 SSE_REGS:2296 MMX_REGS:2296 FP_TOP_SSE_REGS:2296 FP_SECOND_SSE_REGS:2296 FLOAT_SSE_REGS:2296 FLOAT_INT_REGS:1640 INT_SSE_REGS:2296 FLOAT_INT_SSE_REGS:2296 ALL_REGS:2296 MEM:656
  Register 179 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8047 MMX_REGS:8047 FP_TOP_SSE_REGS:8047 FP_SECOND_SSE_REGS:8047 FLOAT_SSE_REGS:8047 FLOAT_INT_REGS:5571 INT_SSE_REGS:8047 FLOAT_INT_SSE_REGS:8047 ALL_REGS:8047 MEM:1916
  Register 180 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3432 MMX_REGS:3432 FP_TOP_SSE_REGS:3432 FP_SECOND_SSE_REGS:3432 FLOAT_SSE_REGS:3432 FLOAT_INT_REGS:2376 INT_SSE_REGS:3432 FLOAT_INT_SSE_REGS:3432 ALL_REGS:3432 MEM:951
  Register 182 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1118 MMX_REGS:1118 INT_SSE_REGS:1118 MEM:301
  Register 184 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2795 MMX_REGS:2795 FP_TOP_SSE_REGS:2795 FP_SECOND_SSE_REGS:2795 FLOAT_SSE_REGS:2795 FLOAT_INT_REGS:1935 INT_SSE_REGS:2795 FLOAT_INT_SSE_REGS:2795 ALL_REGS:2795 MEM:645
  Register 186 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 FP_TOP_SSE_REGS:2912 FP_SECOND_SSE_REGS:2912 FLOAT_SSE_REGS:2912 FLOAT_INT_REGS:2016 INT_SSE_REGS:2912 FLOAT_INT_SSE_REGS:2912 ALL_REGS:2912 MEM:873
  Register 194 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:481 MMX_REGS:481 FP_TOP_SSE_REGS:481 FP_SECOND_SSE_REGS:481 FLOAT_SSE_REGS:481 FLOAT_INT_REGS:333 INT_SSE_REGS:481 FLOAT_INT_SSE_REGS:481 ALL_REGS:481 MEM:131
  Register 195 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:559 MMX_REGS:559 FP_TOP_SSE_REGS:559 FP_SECOND_SSE_REGS:559 FLOAT_SSE_REGS:559 FLOAT_INT_REGS:387 INT_SSE_REGS:559 FLOAT_INT_SSE_REGS:559 ALL_REGS:559 MEM:152
  Register 196 costs: AREG:260 DREG:260 CREG:260 BREG:260 SIREG:260 DIREG:260 AD_REGS:260 Q_REGS:260 NON_Q_REGS:600 INDEX_REGS:260 LEGACY_REGS:600 GENERAL_REGS:600 FP_TOP_REG:420 FP_SECOND_REG:420 FLOAT_REGS:420 SSE_REGS:0 FP_TOP_SSE_REGS:420 FP_SECOND_SSE_REGS:420 FLOAT_SSE_REGS:420 FLOAT_INT_REGS:420 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:420 ALL_REGS:840 MEM:240
  Register 197 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19227 MMX_REGS:19227 FP_TOP_SSE_REGS:19227 FP_SECOND_SSE_REGS:19227 FLOAT_SSE_REGS:19227 FLOAT_INT_REGS:13311 INT_SSE_REGS:19227 FLOAT_INT_SSE_REGS:19227 ALL_REGS:19227 MEM:5138
  Register 199 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2292 INDEX_REGS:0 LEGACY_REGS:2292 GENERAL_REGS:2292 MEM:10420
  Register 200 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 201 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 202 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 203 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:63804 MMX_REGS:63804 FP_TOP_SSE_REGS:63804 FP_SECOND_SSE_REGS:63804 FLOAT_SSE_REGS:63804 FLOAT_INT_REGS:44172 INT_SSE_REGS:63804 FLOAT_INT_SSE_REGS:63804 ALL_REGS:63804 MEM:18778
  Register 204 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 205 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 206 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 207 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 208 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 209 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 212 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 213 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 214 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 216 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 217 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 218 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 219 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 220 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 221 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 223 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1212 INDEX_REGS:0 LEGACY_REGS:1212 GENERAL_REGS:1212 SSE_REGS:10504 MMX_REGS:10504 FP_TOP_SSE_REGS:10504 FP_SECOND_SSE_REGS:10504 FLOAT_SSE_REGS:10504 FLOAT_INT_REGS:7272 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:10504 ALL_REGS:10504 MEM:3232
  Register 224 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 225 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 226 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 227 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15756 MMX_REGS:15756 FP_TOP_SSE_REGS:15756 FP_SECOND_SSE_REGS:15756 FLOAT_SSE_REGS:15756 FLOAT_INT_REGS:10908 INT_SSE_REGS:15756 FLOAT_INT_SSE_REGS:15756 ALL_REGS:15756 MEM:4848
  Register 228 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 229 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 230 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 231 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 232 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 233 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 235 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1212 INDEX_REGS:0 LEGACY_REGS:1212 GENERAL_REGS:1212 MEM:3838
  Register 236 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 237 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 238 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 239 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15756 MMX_REGS:15756 FP_TOP_SSE_REGS:15756 FP_SECOND_SSE_REGS:15756 FLOAT_SSE_REGS:15756 FLOAT_INT_REGS:10908 INT_SSE_REGS:15756 FLOAT_INT_SSE_REGS:15756 ALL_REGS:15756 MEM:4848
  Register 240 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 241 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 242 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 243 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 244 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 245 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 246 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1212
  Register 247 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 248 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 249 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 250 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 251 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 252 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 253 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 254 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 255 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 257 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 258 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 259 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 260 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 261 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 262 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 263 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 264 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 265 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 267 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 268 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 269 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 270 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 271 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 272 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 273 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 274 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 275 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 276 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:630
  Register 284 costs: AREG:559 DREG:559 CREG:559 BREG:559 SIREG:559 DIREG:559 AD_REGS:559 Q_REGS:559 NON_Q_REGS:1290 INDEX_REGS:559 LEGACY_REGS:1290 GENERAL_REGS:1290 FP_TOP_REG:903 FP_SECOND_REG:903 FLOAT_REGS:903 SSE_REGS:0 FP_TOP_SSE_REGS:903 FP_SECOND_SSE_REGS:903 FLOAT_SSE_REGS:903 FLOAT_INT_REGS:903 INT_SSE_REGS:559 FLOAT_INT_SSE_REGS:903 ALL_REGS:1806 MEM:516
  Register 286 costs: AREG:507 DREG:507 CREG:507 BREG:507 SIREG:507 DIREG:507 AD_REGS:507 Q_REGS:507 NON_Q_REGS:1170 INDEX_REGS:507 LEGACY_REGS:1170 GENERAL_REGS:1170 FP_TOP_REG:819 FP_SECOND_REG:819 FLOAT_REGS:819 SSE_REGS:0 FP_TOP_SSE_REGS:819 FP_SECOND_SSE_REGS:819 FLOAT_SSE_REGS:819 FLOAT_INT_REGS:819 INT_SSE_REGS:507 FLOAT_INT_SSE_REGS:819 ALL_REGS:1638 MEM:468
  Register 287 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:227
  Register 288 costs: AREG:455 DREG:455 CREG:455 BREG:455 SIREG:455 DIREG:455 AD_REGS:455 Q_REGS:455 NON_Q_REGS:1050 INDEX_REGS:455 LEGACY_REGS:1050 GENERAL_REGS:1050 FP_TOP_REG:735 FP_SECOND_REG:735 FLOAT_REGS:735 SSE_REGS:0 FP_TOP_SSE_REGS:735 FP_SECOND_SSE_REGS:735 FLOAT_SSE_REGS:735 FLOAT_INT_REGS:735 INT_SSE_REGS:455 FLOAT_INT_SSE_REGS:735 ALL_REGS:1470 MEM:420
  Register 289 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:741 MMX_REGS:741 FP_TOP_SSE_REGS:741 FP_SECOND_SSE_REGS:741 FLOAT_SSE_REGS:741 FLOAT_INT_REGS:513 INT_SSE_REGS:741 FLOAT_INT_SSE_REGS:741 ALL_REGS:741 MEM:202
  Register 290 costs: AREG:403 DREG:403 CREG:403 BREG:403 SIREG:403 DIREG:403 AD_REGS:403 Q_REGS:403 NON_Q_REGS:930 INDEX_REGS:403 LEGACY_REGS:930 GENERAL_REGS:930 FP_TOP_REG:651 FP_SECOND_REG:651 FLOAT_REGS:651 SSE_REGS:0 FP_TOP_SSE_REGS:651 FP_SECOND_SSE_REGS:651 FLOAT_SSE_REGS:651 FLOAT_INT_REGS:651 INT_SSE_REGS:403 FLOAT_INT_SSE_REGS:651 ALL_REGS:1302 MEM:372
  Register 291 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:663 MMX_REGS:663 FP_TOP_SSE_REGS:663 FP_SECOND_SSE_REGS:663 FLOAT_SSE_REGS:663 FLOAT_INT_REGS:459 INT_SSE_REGS:663 FLOAT_INT_SSE_REGS:663 ALL_REGS:663 MEM:181
  Register 292 costs: AREG:364 DREG:364 CREG:364 BREG:364 SIREG:364 DIREG:364 AD_REGS:364 Q_REGS:364 NON_Q_REGS:840 INDEX_REGS:364 LEGACY_REGS:840 GENERAL_REGS:840 FP_TOP_REG:588 FP_SECOND_REG:588 FLOAT_REGS:588 SSE_REGS:0 FP_TOP_SSE_REGS:588 FP_SECOND_SSE_REGS:588 FLOAT_SSE_REGS:588 FLOAT_INT_REGS:588 INT_SSE_REGS:364 FLOAT_INT_SSE_REGS:588 ALL_REGS:1176 MEM:336
  Register 293 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:163
  Register 294 costs: AREG:325 DREG:325 CREG:325 BREG:325 SIREG:325 DIREG:325 AD_REGS:325 Q_REGS:325 NON_Q_REGS:750 INDEX_REGS:325 LEGACY_REGS:750 GENERAL_REGS:750 FP_TOP_REG:525 FP_SECOND_REG:525 FLOAT_REGS:525 SSE_REGS:0 FP_TOP_SSE_REGS:525 FP_SECOND_SSE_REGS:525 FLOAT_SSE_REGS:525 FLOAT_INT_REGS:525 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:525 ALL_REGS:1050 MEM:300
  Register 295 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:533 MMX_REGS:533 FP_TOP_SSE_REGS:533 FP_SECOND_SSE_REGS:533 FLOAT_SSE_REGS:533 FLOAT_INT_REGS:369 INT_SSE_REGS:533 FLOAT_INT_SSE_REGS:533 ALL_REGS:533 MEM:145
  Register 296 costs: AREG:286 DREG:286 CREG:286 BREG:286 SIREG:286 DIREG:286 AD_REGS:286 Q_REGS:286 NON_Q_REGS:660 INDEX_REGS:286 LEGACY_REGS:660 GENERAL_REGS:660 FP_TOP_REG:462 FP_SECOND_REG:462 FLOAT_REGS:462 SSE_REGS:0 FP_TOP_SSE_REGS:462 FP_SECOND_SSE_REGS:462 FLOAT_SSE_REGS:462 FLOAT_INT_REGS:462 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:462 ALL_REGS:924 MEM:264
  Register 298 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:481 MMX_REGS:481 FP_TOP_SSE_REGS:481 FP_SECOND_SSE_REGS:481 FLOAT_SSE_REGS:481 FLOAT_INT_REGS:333 INT_SSE_REGS:481 FLOAT_INT_SSE_REGS:481 ALL_REGS:481 MEM:131
  Register 299 costs: AREG:221 DREG:221 CREG:221 BREG:221 SIREG:221 DIREG:221 AD_REGS:221 Q_REGS:221 NON_Q_REGS:510 INDEX_REGS:221 LEGACY_REGS:510 GENERAL_REGS:510 FP_TOP_REG:357 FP_SECOND_REG:357 FLOAT_REGS:357 SSE_REGS:0 FP_TOP_SSE_REGS:357 FP_SECOND_SSE_REGS:357 FLOAT_SSE_REGS:357 FLOAT_INT_REGS:357 INT_SSE_REGS:221 FLOAT_INT_SSE_REGS:357 ALL_REGS:714 MEM:204
  Register 300 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:377 MMX_REGS:377 FP_TOP_SSE_REGS:377 FP_SECOND_SSE_REGS:377 FLOAT_SSE_REGS:377 FLOAT_INT_REGS:261 INT_SSE_REGS:377 FLOAT_INT_SSE_REGS:377 ALL_REGS:377 MEM:102
  Register 301 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:416 MMX_REGS:416 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:288 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:113
  Register 302 costs: AREG:195 DREG:195 CREG:195 BREG:195 SIREG:195 DIREG:195 AD_REGS:195 Q_REGS:195 NON_Q_REGS:450 INDEX_REGS:195 LEGACY_REGS:450 GENERAL_REGS:450 FP_TOP_REG:315 FP_SECOND_REG:315 FLOAT_REGS:315 SSE_REGS:0 FP_TOP_SSE_REGS:315 FP_SECOND_SSE_REGS:315 FLOAT_SSE_REGS:315 FLOAT_INT_REGS:315 INT_SSE_REGS:195 FLOAT_INT_SSE_REGS:315 ALL_REGS:630 MEM:180
  Register 303 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:338 MMX_REGS:338 FP_TOP_SSE_REGS:338 FP_SECOND_SSE_REGS:338 FLOAT_SSE_REGS:338 FLOAT_INT_REGS:234 INT_SSE_REGS:338 FLOAT_INT_SSE_REGS:338 ALL_REGS:338 MEM:92
  Register 304 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:377 MMX_REGS:377 FP_TOP_SSE_REGS:377 FP_SECOND_SSE_REGS:377 FLOAT_SSE_REGS:377 FLOAT_INT_REGS:261 INT_SSE_REGS:377 FLOAT_INT_SSE_REGS:377 ALL_REGS:377 MEM:102
  Register 305 costs: AREG:182 DREG:182 CREG:182 BREG:182 SIREG:182 DIREG:182 AD_REGS:182 Q_REGS:182 NON_Q_REGS:420 INDEX_REGS:182 LEGACY_REGS:420 GENERAL_REGS:420 FP_TOP_REG:294 FP_SECOND_REG:294 FLOAT_REGS:294 SSE_REGS:0 FP_TOP_SSE_REGS:294 FP_SECOND_SSE_REGS:294 FLOAT_SSE_REGS:294 FLOAT_INT_REGS:294 INT_SSE_REGS:182 FLOAT_INT_SSE_REGS:294 ALL_REGS:588 MEM:168
  Register 306 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:81
  Register 307 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:338 MMX_REGS:338 FP_TOP_SSE_REGS:338 FP_SECOND_SSE_REGS:338 FLOAT_SSE_REGS:338 FLOAT_INT_REGS:234 INT_SSE_REGS:338 FLOAT_INT_SSE_REGS:338 ALL_REGS:338 MEM:92
  Register 308 costs: AREG:156 DREG:156 CREG:156 BREG:156 SIREG:156 DIREG:156 AD_REGS:156 Q_REGS:156 NON_Q_REGS:360 INDEX_REGS:156 LEGACY_REGS:360 GENERAL_REGS:360 FP_TOP_REG:252 FP_SECOND_REG:252 FLOAT_REGS:252 SSE_REGS:0 FP_TOP_SSE_REGS:252 FP_SECOND_SSE_REGS:252 FLOAT_SSE_REGS:252 FLOAT_INT_REGS:252 INT_SSE_REGS:156 FLOAT_INT_SSE_REGS:252 ALL_REGS:504 MEM:144
  Register 309 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:273 MMX_REGS:273 FP_TOP_SSE_REGS:273 FP_SECOND_SSE_REGS:273 FLOAT_SSE_REGS:273 FLOAT_INT_REGS:189 INT_SSE_REGS:273 FLOAT_INT_SSE_REGS:273 ALL_REGS:273 MEM:74
  Register 310 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:81
  Register 311 costs: AREG:143 DREG:143 CREG:143 BREG:143 SIREG:143 DIREG:143 AD_REGS:143 Q_REGS:143 NON_Q_REGS:330 INDEX_REGS:143 LEGACY_REGS:330 GENERAL_REGS:330 FP_TOP_REG:231 FP_SECOND_REG:231 FLOAT_REGS:231 SSE_REGS:0 FP_TOP_SSE_REGS:231 FP_SECOND_SSE_REGS:231 FLOAT_SSE_REGS:231 FLOAT_INT_REGS:231 INT_SSE_REGS:143 FLOAT_INT_SSE_REGS:231 ALL_REGS:462 MEM:132
  Register 312 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:247 MMX_REGS:247 FP_TOP_SSE_REGS:247 FP_SECOND_SSE_REGS:247 FLOAT_SSE_REGS:247 FLOAT_INT_REGS:171 INT_SSE_REGS:247 FLOAT_INT_SSE_REGS:247 ALL_REGS:247 MEM:57
  Register 313 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:273 MMX_REGS:273 FP_TOP_SSE_REGS:273 FP_SECOND_SSE_REGS:273 FLOAT_SSE_REGS:273 FLOAT_INT_REGS:189 INT_SSE_REGS:273 FLOAT_INT_SSE_REGS:273 ALL_REGS:273 MEM:74
  Register 314 costs: AREG:130 DREG:130 CREG:130 BREG:130 SIREG:130 DIREG:130 AD_REGS:130 Q_REGS:130 NON_Q_REGS:300 INDEX_REGS:130 LEGACY_REGS:300 GENERAL_REGS:300 FP_TOP_REG:210 FP_SECOND_REG:210 FLOAT_REGS:210 SSE_REGS:0 FP_TOP_SSE_REGS:210 FP_SECOND_SSE_REGS:210 FLOAT_SSE_REGS:210 FLOAT_INT_REGS:210 INT_SSE_REGS:130 FLOAT_INT_SSE_REGS:210 ALL_REGS:420 MEM:120

  Register 75 pref INDEX_REGS, else GENERAL_REGS
  Register 78 pref GENERAL_REGS or none
  Register 79 pref GENERAL_REGS or none
  Register 83 pref GENERAL_REGS or none
  Register 84 pref GENERAL_REGS or none
  Register 85 pref GENERAL_REGS or none
  Register 86 pref GENERAL_REGS or none
  Register 91 pref AREG, else GENERAL_REGS
  Register 93 pref GENERAL_REGS or none
  Register 95 pref INDEX_REGS, else GENERAL_REGS
  Register 96 pref GENERAL_REGS or none
  Register 97 pref GENERAL_REGS or none
  Register 98 pref INDEX_REGS, else GENERAL_REGS
  Register 99 pref DIREG, else GENERAL_REGS
  Register 100 pref GENERAL_REGS or none
  Register 101 pref SSE_REGS or none
  Register 102 pref SSE_REGS or none
  Register 103 pref GENERAL_REGS or none
  Register 104 pref GENERAL_REGS or none
  Register 108 pref GENERAL_REGS or none
  Register 109 pref GENERAL_REGS or none
  Register 110 pref SSE_REGS or none
  Register 111 pref GENERAL_REGS or none
  Register 112 pref AREG, else GENERAL_REGS
  Register 113 pref AREG, else GENERAL_REGS
  Register 114 pref AREG, else GENERAL_REGS
  Register 115 pref DIREG, else GENERAL_REGS
  Register 116 pref DIREG, else GENERAL_REGS
  Register 117 pref SIREG, else GENERAL_REGS
  Register 118 pref DREG, else GENERAL_REGS
  Register 119 pref CREG, else GENERAL_REGS
  Register 123 pref SSE_REGS or none
  Register 124 pref INDEX_REGS, else GENERAL_REGS
  Register 126 pref SSE_REGS or none
  Register 127 pref GENERAL_REGS or none
  Register 129 pref SSE_REGS or none
  Register 134 pref GENERAL_REGS or none
  Register 135 pref GENERAL_REGS or none
  Register 137 pref GENERAL_REGS or none
  Register 140 pref INDEX_REGS, else GENERAL_REGS
  Register 145 pref INDEX_REGS, else GENERAL_REGS
  Register 150 pref INDEX_REGS, else GENERAL_REGS
  Register 152 pref INDEX_REGS, else GENERAL_REGS
  Register 153 pref GENERAL_REGS or none
  Register 154 pref FLOAT_INT_SSE_REGS or none
  Register 156 pref INDEX_REGS, else GENERAL_REGS
  Register 157 pref FLOAT_INT_SSE_REGS or none
  Register 158 pref INDEX_REGS, else GENERAL_REGS
  Register 159 pref FLOAT_INT_SSE_REGS or none
  Register 160 pref SSE_REGS or none
  Register 161 pref INDEX_REGS, else GENERAL_REGS
  Register 162 pref GENERAL_REGS or none
  Register 163 pref GENERAL_REGS or none
  Register 174 pref GENERAL_REGS or none
  Register 175 pref GENERAL_REGS or none
  Register 176 pref INDEX_REGS, else GENERAL_REGS
  Register 178 pref GENERAL_REGS or none
  Register 179 pref GENERAL_REGS or none
  Register 180 pref GENERAL_REGS or none
  Register 182 pref GENERAL_REGS or none
  Register 184 pref GENERAL_REGS or none
  Register 186 pref GENERAL_REGS or none
  Register 194 pref GENERAL_REGS or none
  Register 195 pref GENERAL_REGS or none
  Register 196 pref SSE_REGS or none
  Register 197 pref GENERAL_REGS or none
  Register 199 pref INDEX_REGS, else GENERAL_REGS
  Register 200 pref GENERAL_REGS or none
  Register 201 pref INDEX_REGS, else GENERAL_REGS
  Register 202 pref FLOAT_INT_SSE_REGS or none
  Register 203 pref GENERAL_REGS or none
  Register 204 pref GENERAL_REGS or none
  Register 205 pref INDEX_REGS, else GENERAL_REGS
  Register 206 pref FLOAT_INT_SSE_REGS or none
  Register 207 pref GENERAL_REGS or none
  Register 208 pref INDEX_REGS, else GENERAL_REGS
  Register 209 pref FLOAT_INT_SSE_REGS or none
  Register 212 pref GENERAL_REGS or none
  Register 213 pref INDEX_REGS, else GENERAL_REGS
  Register 214 pref FLOAT_INT_SSE_REGS or none
  Register 216 pref GENERAL_REGS or none
  Register 217 pref INDEX_REGS, else GENERAL_REGS
  Register 218 pref FLOAT_INT_SSE_REGS or none
  Register 219 pref GENERAL_REGS or none
  Register 220 pref INDEX_REGS, else GENERAL_REGS
  Register 221 pref FLOAT_INT_SSE_REGS or none
  Register 223 pref INDEX_REGS, else GENERAL_REGS
  Register 224 pref GENERAL_REGS or none
  Register 225 pref INDEX_REGS, else GENERAL_REGS
  Register 226 pref FLOAT_INT_SSE_REGS or none
  Register 227 pref GENERAL_REGS or none
  Register 228 pref GENERAL_REGS or none
  Register 229 pref INDEX_REGS, else GENERAL_REGS
  Register 230 pref FLOAT_INT_SSE_REGS or none
  Register 231 pref GENERAL_REGS or none
  Register 232 pref INDEX_REGS, else GENERAL_REGS
  Register 233 pref FLOAT_INT_SSE_REGS or none
  Register 235 pref INDEX_REGS, else GENERAL_REGS
  Register 236 pref GENERAL_REGS or none
  Register 237 pref INDEX_REGS, else GENERAL_REGS
  Register 238 pref FLOAT_INT_SSE_REGS or none
  Register 239 pref GENERAL_REGS or none
  Register 240 pref GENERAL_REGS or none
  Register 241 pref INDEX_REGS, else GENERAL_REGS
  Register 242 pref FLOAT_INT_SSE_REGS or none
  Register 243 pref GENERAL_REGS or none
  Register 244 pref INDEX_REGS, else GENERAL_REGS
  Register 245 pref FLOAT_INT_SSE_REGS or none
  Register 246 pref GENERAL_REGS or none
  Register 247 pref GENERAL_REGS or none
  Register 248 pref INDEX_REGS, else GENERAL_REGS
  Register 249 pref FLOAT_INT_SSE_REGS or none
  Register 250 pref GENERAL_REGS or none
  Register 251 pref INDEX_REGS, else GENERAL_REGS
  Register 252 pref FLOAT_INT_SSE_REGS or none
  Register 253 pref GENERAL_REGS or none
  Register 254 pref INDEX_REGS, else GENERAL_REGS
  Register 255 pref FLOAT_INT_SSE_REGS or none
  Register 257 pref GENERAL_REGS or none
  Register 258 pref INDEX_REGS, else GENERAL_REGS
  Register 259 pref FLOAT_INT_SSE_REGS or none
  Register 260 pref GENERAL_REGS or none
  Register 261 pref INDEX_REGS, else GENERAL_REGS
  Register 262 pref FLOAT_INT_SSE_REGS or none
  Register 263 pref GENERAL_REGS or none
  Register 264 pref INDEX_REGS, else GENERAL_REGS
  Register 265 pref FLOAT_INT_SSE_REGS or none
  Register 267 pref GENERAL_REGS or none
  Register 268 pref INDEX_REGS, else GENERAL_REGS
  Register 269 pref FLOAT_INT_SSE_REGS or none
  Register 270 pref GENERAL_REGS or none
  Register 271 pref INDEX_REGS, else GENERAL_REGS
  Register 272 pref FLOAT_INT_SSE_REGS or none
  Register 273 pref GENERAL_REGS or none
  Register 274 pref INDEX_REGS, else GENERAL_REGS
  Register 275 pref FLOAT_INT_SSE_REGS or none
  Register 276 pref GENERAL_REGS or none
  Register 284 pref SSE_REGS or none
  Register 286 pref SSE_REGS or none
  Register 287 pref GENERAL_REGS or none
  Register 288 pref SSE_REGS or none
  Register 289 pref GENERAL_REGS or none
  Register 290 pref SSE_REGS or none
  Register 291 pref GENERAL_REGS or none
  Register 292 pref SSE_REGS or none
  Register 293 pref GENERAL_REGS or none
  Register 294 pref SSE_REGS or none
  Register 295 pref GENERAL_REGS or none
  Register 296 pref SSE_REGS or none
  Register 298 pref GENERAL_REGS or none
  Register 299 pref SSE_REGS or none
  Register 300 pref GENERAL_REGS or none
  Register 301 pref GENERAL_REGS or none
  Register 302 pref SSE_REGS or none
  Register 303 pref GENERAL_REGS or none
  Register 304 pref GENERAL_REGS or none
  Register 305 pref SSE_REGS or none
  Register 306 pref GENERAL_REGS or none
  Register 307 pref GENERAL_REGS or none
  Register 308 pref SSE_REGS or none
  Register 309 pref GENERAL_REGS or none
  Register 310 pref GENERAL_REGS or none
  Register 311 pref SSE_REGS or none
  Register 312 pref GENERAL_REGS or none
  Register 313 pref GENERAL_REGS or none
  Register 314 pref SSE_REGS or none


Pass 1

  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:328 INDEX_REGS:0 LEGACY_REGS:328 GENERAL_REGS:328 SSE_REGS:24934 MMX_REGS:24934 FP_TOP_SSE_REGS:24934 FP_SECOND_SSE_REGS:24934 FLOAT_SSE_REGS:24934 FLOAT_INT_REGS:17262 INT_SSE_REGS:24934 FLOAT_INT_SSE_REGS:24934 ALL_REGS:24934 MEM:5918
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7111 MMX_REGS:7111 FP_TOP_SSE_REGS:7111 FP_SECOND_SSE_REGS:7111 FLOAT_SSE_REGS:7111 FLOAT_INT_REGS:4923 INT_SSE_REGS:7111 FLOAT_INT_SSE_REGS:7111 ALL_REGS:7111 MEM:2188
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5330 MMX_REGS:5330 FP_TOP_SSE_REGS:5330 FP_SECOND_SSE_REGS:5330 FLOAT_SSE_REGS:5330 FLOAT_INT_REGS:3690 INT_SSE_REGS:5330 FLOAT_INT_SSE_REGS:5330 ALL_REGS:5330 MEM:1640
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1885 MMX_REGS:1885 FP_TOP_SSE_REGS:1885 FP_SECOND_SSE_REGS:1885 FLOAT_SSE_REGS:1885 FLOAT_INT_REGS:1305 INT_SSE_REGS:1885 FLOAT_INT_SSE_REGS:1885 ALL_REGS:1885 MEM:526
  Register 84 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3848 MMX_REGS:3848 INT_SSE_REGS:3848 MEM:1014
  Register 85 costs: AREG:164 DREG:164 CREG:164 BREG:164 SIREG:164 DIREG:164 AD_REGS:164 Q_REGS:164 NON_Q_REGS:164 INDEX_REGS:164 LEGACY_REGS:164 GENERAL_REGS:164 SSE_REGS:76825 MMX_REGS:76825 INT_SSE_REGS:76825 MEM:18438
  Register 86 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6786 MMX_REGS:6786 FP_TOP_SSE_REGS:6786 FP_SECOND_SSE_REGS:6786 FLOAT_SSE_REGS:6786 FLOAT_INT_REGS:4698 INT_SSE_REGS:6786 FLOAT_INT_SSE_REGS:6786 ALL_REGS:6786 MEM:1842
  Register 91 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:14326 MMX_REGS:14326 FP_TOP_SSE_REGS:14326 FP_SECOND_SSE_REGS:14326 FLOAT_SSE_REGS:14326 FLOAT_INT_REGS:9918 INT_SSE_REGS:14326 FLOAT_INT_SSE_REGS:14326 ALL_REGS:14326 MEM:4318
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:14235 MMX_REGS:14235 FP_TOP_SSE_REGS:14235 FP_SECOND_SSE_REGS:14235 FLOAT_SSE_REGS:14235 FLOAT_INT_REGS:9855 INT_SSE_REGS:14235 FLOAT_INT_SSE_REGS:14235 ALL_REGS:14235 MEM:4380
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1148 INDEX_REGS:0 LEGACY_REGS:1148 GENERAL_REGS:1148 SSE_REGS:31330 MMX_REGS:31330 FP_TOP_SSE_REGS:31330 FP_SECOND_SSE_REGS:31330 FLOAT_SSE_REGS:31330 FLOAT_INT_REGS:21690 INT_SSE_REGS:31330 FLOAT_INT_SSE_REGS:31330 ALL_REGS:31330 MEM:9558
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3172 MMX_REGS:3172 FP_TOP_SSE_REGS:3172 FP_SECOND_SSE_REGS:3172 FLOAT_SSE_REGS:3172 FLOAT_INT_REGS:2196 INT_SSE_REGS:3172 FLOAT_INT_SSE_REGS:3172 ALL_REGS:3172 MEM:976
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:2805 INT_SSE_REGS:2805 FLOAT_INT_SSE_REGS:2805 ALL_REGS:2805 MEM:1013
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:426 INDEX_REGS:0 LEGACY_REGS:426 GENERAL_REGS:426 SSE_REGS:4212 MMX_REGS:4212 FP_TOP_SSE_REGS:4212 FP_SECOND_SSE_REGS:4212 FLOAT_SSE_REGS:4212 FLOAT_INT_REGS:2916 INT_SSE_REGS:4212 FLOAT_INT_SSE_REGS:4212 ALL_REGS:4212 MEM:1209
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8385 MMX_REGS:8385 FP_TOP_SSE_REGS:8385 FP_SECOND_SSE_REGS:8385 FLOAT_SSE_REGS:8385 FLOAT_INT_REGS:5805 INT_SSE_REGS:8385 FLOAT_INT_SSE_REGS:8385 ALL_REGS:8385 MEM:2129
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6175 MMX_REGS:6175 INT_SSE_REGS:6175 MEM:1647
  Register 101 costs: AREG:21021 DREG:21021 CREG:21021 BREG:21021 SIREG:21021 DIREG:21021 AD_REGS:21021 Q_REGS:21021 NON_Q_REGS:33584 INDEX_REGS:21021 LEGACY_REGS:33584 GENERAL_REGS:33584 FP_TOP_REG:33957 FP_SECOND_REG:33957 FLOAT_REGS:33957 SSE_REGS:0 FP_TOP_SSE_REGS:33957 FP_SECOND_SSE_REGS:33957 FLOAT_SSE_REGS:33957 FLOAT_INT_REGS:33957 INT_SSE_REGS:21021 FLOAT_INT_SSE_REGS:33957 ALL_REGS:49476 MEM:14932
  Register 102 costs: AREG:37648 DREG:37648 CREG:37648 BREG:37648 SIREG:37648 DIREG:37648 AD_REGS:37648 Q_REGS:37648 NON_Q_REGS:50670 INDEX_REGS:37648 LEGACY_REGS:50670 GENERAL_REGS:50670 FP_TOP_REG:60816 FP_SECOND_REG:60816 FLOAT_REGS:60816 SSE_REGS:0 FP_TOP_SSE_REGS:60816 FP_SECOND_SSE_REGS:60816 FLOAT_SSE_REGS:60816 FLOAT_INT_REGS:60816 INT_SSE_REGS:37648 FLOAT_INT_SSE_REGS:60816 ALL_REGS:76902 MEM:25630
  Register 103 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9022 MMX_REGS:9022 INT_SSE_REGS:9022 MEM:2366
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8125 MMX_REGS:8125 INT_SSE_REGS:8125 MEM:2485
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 INT_SSE_REGS:3900 MEM:1100
  Register 109 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 INT_SSE_REGS:3900 MEM:1100
  Register 110 costs: AREG:1612 DREG:1612 CREG:1612 BREG:1612 SIREG:1612 DIREG:1612 AD_REGS:1612 Q_REGS:1612 NON_Q_REGS:3023 INDEX_REGS:1612 LEGACY_REGS:3023 GENERAL_REGS:3023 FP_TOP_REG:2604 FP_SECOND_REG:2604 FLOAT_REGS:2604 SSE_REGS:0 FP_TOP_SSE_REGS:2604 FP_SECOND_SSE_REGS:2604 FLOAT_SSE_REGS:2604 FLOAT_INT_REGS:2604 INT_SSE_REGS:1612 FLOAT_INT_SSE_REGS:2604 ALL_REGS:4347 MEM:1283
  Register 111 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1690 MMX_REGS:1690 FP_TOP_SSE_REGS:1690 FP_SECOND_SSE_REGS:1690 FLOAT_SSE_REGS:1690 FLOAT_INT_REGS:1170 INT_SSE_REGS:1690 FLOAT_INT_SSE_REGS:1690 ALL_REGS:1690 MEM:477
  Register 112 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:21879 MMX_REGS:21879 FP_TOP_SSE_REGS:21879 FP_SECOND_SSE_REGS:21879 FLOAT_SSE_REGS:21879 FLOAT_INT_REGS:15147 INT_SSE_REGS:21879 FLOAT_INT_SSE_REGS:21879 ALL_REGS:21879 MEM:6621
  Register 113 costs: AREG:-113 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:21645 MMX_REGS:21645 FP_TOP_SSE_REGS:21645 FP_SECOND_SSE_REGS:21645 FLOAT_SSE_REGS:21645 FLOAT_INT_REGS:14985 INT_SSE_REGS:21645 FLOAT_INT_SSE_REGS:21645 ALL_REGS:21645 MEM:6549
  Register 114 costs: AREG:-114 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:23998 MMX_REGS:23998 FP_TOP_SSE_REGS:23998 FP_SECOND_SSE_REGS:23998 FLOAT_SSE_REGS:23998 FLOAT_INT_REGS:16614 INT_SSE_REGS:23998 FLOAT_INT_SSE_REGS:23998 ALL_REGS:23998 MEM:7273
  Register 115 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5889 MMX_REGS:5889 FP_TOP_SSE_REGS:5889 FP_SECOND_SSE_REGS:5889 FLOAT_SSE_REGS:5889 FLOAT_INT_REGS:4077 INT_SSE_REGS:5889 FLOAT_INT_SSE_REGS:5889 ALL_REGS:5889 MEM:1473
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-114 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:76063 MMX_REGS:76063 FP_TOP_SSE_REGS:76063 FP_SECOND_SSE_REGS:76063 FLOAT_SSE_REGS:76063 FLOAT_INT_REGS:52659 INT_SSE_REGS:76063 FLOAT_INT_SSE_REGS:76063 ALL_REGS:76063 MEM:23404
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-114 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:20293 MMX_REGS:20293 INT_SSE_REGS:20293 MEM:4840
  Register 118 costs: AREG:0 DREG:-114 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 119 costs: AREG:0 DREG:0 CREG:-114 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5668 MMX_REGS:5668 FP_TOP_SSE_REGS:5668 FP_SECOND_SSE_REGS:5668 FLOAT_SSE_REGS:5668 FLOAT_INT_REGS:3924 INT_SSE_REGS:5668 FLOAT_INT_SSE_REGS:5668 ALL_REGS:5668 MEM:1744
  Register 123 costs: AREG:1131 DREG:1131 CREG:1131 BREG:1131 SIREG:1131 DIREG:1131 AD_REGS:1131 Q_REGS:1131 NON_Q_REGS:2610 INDEX_REGS:1131 LEGACY_REGS:2610 GENERAL_REGS:2610 FP_TOP_REG:1827 FP_SECOND_REG:1827 FLOAT_REGS:1827 SSE_REGS:0 FP_TOP_SSE_REGS:1827 FP_SECOND_SSE_REGS:1827 FLOAT_SSE_REGS:1827 FLOAT_INT_REGS:1827 INT_SSE_REGS:1131 FLOAT_INT_SSE_REGS:1827 ALL_REGS:3654 MEM:1044
  Register 124 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:364 MMX_REGS:364 FP_TOP_SSE_REGS:364 FP_SECOND_SSE_REGS:364 FLOAT_SSE_REGS:364 FLOAT_INT_REGS:252 INT_SSE_REGS:364 FLOAT_INT_SSE_REGS:364 ALL_REGS:364 MEM:112
  Register 126 costs: AREG:299 DREG:299 CREG:299 BREG:299 SIREG:299 DIREG:299 AD_REGS:299 Q_REGS:299 NON_Q_REGS:690 INDEX_REGS:299 LEGACY_REGS:690 GENERAL_REGS:690 FP_TOP_REG:483 FP_SECOND_REG:483 FLOAT_REGS:483 SSE_REGS:0 FP_TOP_SSE_REGS:483 FP_SECOND_SSE_REGS:483 FLOAT_SSE_REGS:483 FLOAT_INT_REGS:483 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:483 ALL_REGS:966 MEM:276
  Register 127 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22802 MMX_REGS:22802 FP_TOP_SSE_REGS:22802 FP_SECOND_SSE_REGS:22802 FLOAT_SSE_REGS:22802 FLOAT_INT_REGS:15786 INT_SSE_REGS:22802 FLOAT_INT_SSE_REGS:22802 ALL_REGS:22802 MEM:6139
  Register 129 costs: AREG:702 DREG:702 CREG:702 BREG:702 SIREG:702 DIREG:702 AD_REGS:702 Q_REGS:702 NON_Q_REGS:1620 INDEX_REGS:702 LEGACY_REGS:1620 GENERAL_REGS:1620 FP_TOP_REG:1134 FP_SECOND_REG:1134 FLOAT_REGS:1134 SSE_REGS:0 FP_TOP_SSE_REGS:1134 FP_SECOND_SSE_REGS:1134 FLOAT_SSE_REGS:1134 FLOAT_INT_REGS:1134 INT_SSE_REGS:702 FLOAT_INT_SSE_REGS:1134 ALL_REGS:2268 MEM:648
  Register 134 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2132 MMX_REGS:2132 FP_TOP_SSE_REGS:2132 FP_SECOND_SSE_REGS:2132 FLOAT_SSE_REGS:2132 FLOAT_INT_REGS:1476 INT_SSE_REGS:2132 FLOAT_INT_SSE_REGS:2132 ALL_REGS:2132 MEM:656
  Register 135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2132 MMX_REGS:2132 FP_TOP_SSE_REGS:2132 FP_SECOND_SSE_REGS:2132 FLOAT_SSE_REGS:2132 FLOAT_INT_REGS:1476 INT_SSE_REGS:2132 FLOAT_INT_SSE_REGS:2132 ALL_REGS:2132 MEM:574
  Register 137 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2834 MMX_REGS:2834 FP_TOP_SSE_REGS:2834 FP_SECOND_SSE_REGS:2834 FLOAT_SSE_REGS:2834 FLOAT_INT_REGS:1962 INT_SSE_REGS:2834 FLOAT_INT_SSE_REGS:2834 ALL_REGS:2834 MEM:872
  Register 140 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:174 INDEX_REGS:0 LEGACY_REGS:174 GENERAL_REGS:174 SSE_REGS:3393 MMX_REGS:3393 FP_TOP_SSE_REGS:3393 FP_SECOND_SSE_REGS:3393 FLOAT_SSE_REGS:3393 FLOAT_INT_REGS:2349 INT_SSE_REGS:3393 FLOAT_INT_SSE_REGS:3393 ALL_REGS:3393 MEM:1044
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:166 INDEX_REGS:0 LEGACY_REGS:166 GENERAL_REGS:166 SSE_REGS:3237 MMX_REGS:3237 FP_TOP_SSE_REGS:3237 FP_SECOND_SSE_REGS:3237 FLOAT_SSE_REGS:3237 FLOAT_INT_REGS:2241 INT_SSE_REGS:3237 FLOAT_INT_SSE_REGS:3237 ALL_REGS:3237 MEM:996
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:166 INDEX_REGS:0 LEGACY_REGS:166 GENERAL_REGS:166 SSE_REGS:2158 MMX_REGS:2158 FP_TOP_SSE_REGS:2158 FP_SECOND_SSE_REGS:2158 FLOAT_SSE_REGS:2158 FLOAT_INT_REGS:1494 INT_SSE_REGS:2158 FLOAT_INT_SSE_REGS:2158 ALL_REGS:2158 MEM:664
  Register 152 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 153 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 INT_SSE_REGS:3900 MEM:1100
  Register 154 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:800
  Register 156 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 157 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:800
  Register 158 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 159 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:800
  Register 160 costs: AREG:38467 DREG:38467 CREG:38467 BREG:38467 SIREG:38467 DIREG:38467 AD_REGS:38467 Q_REGS:38467 NON_Q_REGS:71515 INDEX_REGS:38467 LEGACY_REGS:71515 GENERAL_REGS:71515 FP_TOP_REG:62139 FP_SECOND_REG:62139 FLOAT_REGS:62139 SSE_REGS:0 FP_TOP_SSE_REGS:62139 FP_SECOND_SSE_REGS:62139 FLOAT_SSE_REGS:62139 FLOAT_INT_REGS:62139 INT_SSE_REGS:38467 FLOAT_INT_SSE_REGS:62139 ALL_REGS:102963 MEM:28819
  Register 161 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:654 INDEX_REGS:0 LEGACY_REGS:654 GENERAL_REGS:654 SSE_REGS:7930 MMX_REGS:7930 FP_TOP_SSE_REGS:7930 FP_SECOND_SSE_REGS:7930 FLOAT_SSE_REGS:7930 FLOAT_INT_REGS:5490 INT_SSE_REGS:7930 FLOAT_INT_SSE_REGS:7930 ALL_REGS:7930 MEM:2353
  Register 162 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26637 MMX_REGS:26637 FP_TOP_SSE_REGS:26637 FP_SECOND_SSE_REGS:26637 FLOAT_SSE_REGS:26637 FLOAT_INT_REGS:18441 INT_SSE_REGS:26637 FLOAT_INT_SSE_REGS:26637 ALL_REGS:26637 MEM:8130
  Register 163 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7696 MMX_REGS:7696 INT_SSE_REGS:7696 MEM:1976
  Register 174 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6435 MMX_REGS:6435 FP_TOP_SSE_REGS:6435 FP_SECOND_SSE_REGS:6435 FLOAT_SSE_REGS:6435 FLOAT_INT_REGS:4455 INT_SSE_REGS:6435 FLOAT_INT_SSE_REGS:6435 ALL_REGS:6435 MEM:1645
  Register 175 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15756 MMX_REGS:15756 FP_TOP_SSE_REGS:15756 FP_SECOND_SSE_REGS:15756 FLOAT_SSE_REGS:15756 FLOAT_INT_REGS:10908 INT_SSE_REGS:15756 FLOAT_INT_SSE_REGS:15756 ALL_REGS:15756 MEM:4848
  Register 176 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1212 INDEX_REGS:0 LEGACY_REGS:1212 GENERAL_REGS:1212 SSE_REGS:10504 MMX_REGS:10504 FP_TOP_SSE_REGS:10504 FP_SECOND_SSE_REGS:10504 FLOAT_SSE_REGS:10504 FLOAT_INT_REGS:7272 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:10504 ALL_REGS:10504 MEM:3232
  Register 178 costs: AREG:164 DREG:164 CREG:164 BREG:164 SIREG:164 DIREG:164 AD_REGS:164 Q_REGS:164 NON_Q_REGS:164 INDEX_REGS:164 LEGACY_REGS:164 GENERAL_REGS:164 SSE_REGS:2296 MMX_REGS:2296 FP_TOP_SSE_REGS:2296 FP_SECOND_SSE_REGS:2296 FLOAT_SSE_REGS:2296 FLOAT_INT_REGS:1640 INT_SSE_REGS:2296 FLOAT_INT_SSE_REGS:2296 ALL_REGS:2296 MEM:656
  Register 179 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8047 MMX_REGS:8047 FP_TOP_SSE_REGS:8047 FP_SECOND_SSE_REGS:8047 FLOAT_SSE_REGS:8047 FLOAT_INT_REGS:5571 INT_SSE_REGS:8047 FLOAT_INT_SSE_REGS:8047 ALL_REGS:8047 MEM:1916
  Register 180 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3432 MMX_REGS:3432 FP_TOP_SSE_REGS:3432 FP_SECOND_SSE_REGS:3432 FLOAT_SSE_REGS:3432 FLOAT_INT_REGS:2376 INT_SSE_REGS:3432 FLOAT_INT_SSE_REGS:3432 ALL_REGS:3432 MEM:951
  Register 182 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1118 MMX_REGS:1118 INT_SSE_REGS:1118 MEM:301
  Register 184 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2795 MMX_REGS:2795 FP_TOP_SSE_REGS:2795 FP_SECOND_SSE_REGS:2795 FLOAT_SSE_REGS:2795 FLOAT_INT_REGS:1935 INT_SSE_REGS:2795 FLOAT_INT_SSE_REGS:2795 ALL_REGS:2795 MEM:645
  Register 186 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 FP_TOP_SSE_REGS:2912 FP_SECOND_SSE_REGS:2912 FLOAT_SSE_REGS:2912 FLOAT_INT_REGS:2016 INT_SSE_REGS:2912 FLOAT_INT_SSE_REGS:2912 ALL_REGS:2912 MEM:873
  Register 194 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:481 MMX_REGS:481 FP_TOP_SSE_REGS:481 FP_SECOND_SSE_REGS:481 FLOAT_SSE_REGS:481 FLOAT_INT_REGS:333 INT_SSE_REGS:481 FLOAT_INT_SSE_REGS:481 ALL_REGS:481 MEM:131
  Register 195 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:559 MMX_REGS:559 FP_TOP_SSE_REGS:559 FP_SECOND_SSE_REGS:559 FLOAT_SSE_REGS:559 FLOAT_INT_REGS:387 INT_SSE_REGS:559 FLOAT_INT_SSE_REGS:559 ALL_REGS:559 MEM:152
  Register 196 costs: AREG:260 DREG:260 CREG:260 BREG:260 SIREG:260 DIREG:260 AD_REGS:260 Q_REGS:260 NON_Q_REGS:600 INDEX_REGS:260 LEGACY_REGS:600 GENERAL_REGS:600 FP_TOP_REG:420 FP_SECOND_REG:420 FLOAT_REGS:420 SSE_REGS:0 FP_TOP_SSE_REGS:420 FP_SECOND_SSE_REGS:420 FLOAT_SSE_REGS:420 FLOAT_INT_REGS:420 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:420 ALL_REGS:840 MEM:240
  Register 197 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19227 MMX_REGS:19227 FP_TOP_SSE_REGS:19227 FP_SECOND_SSE_REGS:19227 FLOAT_SSE_REGS:19227 FLOAT_INT_REGS:13311 INT_SSE_REGS:19227 FLOAT_INT_SSE_REGS:19227 ALL_REGS:19227 MEM:5138
  Register 199 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2292 INDEX_REGS:0 LEGACY_REGS:2292 GENERAL_REGS:2292 MEM:10420
  Register 200 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 201 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 202 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 203 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:63804 MMX_REGS:63804 FP_TOP_SSE_REGS:63804 FP_SECOND_SSE_REGS:63804 FLOAT_SSE_REGS:63804 FLOAT_INT_REGS:44172 INT_SSE_REGS:63804 FLOAT_INT_SSE_REGS:63804 ALL_REGS:63804 MEM:18778
  Register 204 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 205 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 206 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 207 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 208 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 209 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 212 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 213 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 214 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 216 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 217 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 218 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 219 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 220 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 221 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 223 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1212 INDEX_REGS:0 LEGACY_REGS:1212 GENERAL_REGS:1212 SSE_REGS:10504 MMX_REGS:10504 FP_TOP_SSE_REGS:10504 FP_SECOND_SSE_REGS:10504 FLOAT_SSE_REGS:10504 FLOAT_INT_REGS:7272 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:10504 ALL_REGS:10504 MEM:3232
  Register 224 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 225 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 226 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 227 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15756 MMX_REGS:15756 FP_TOP_SSE_REGS:15756 FP_SECOND_SSE_REGS:15756 FLOAT_SSE_REGS:15756 FLOAT_INT_REGS:10908 INT_SSE_REGS:15756 FLOAT_INT_SSE_REGS:15756 ALL_REGS:15756 MEM:4848
  Register 228 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 229 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 230 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 231 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 232 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 233 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 235 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1212 INDEX_REGS:0 LEGACY_REGS:1212 GENERAL_REGS:1212 MEM:3838
  Register 236 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 237 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 238 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 239 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15756 MMX_REGS:15756 FP_TOP_SSE_REGS:15756 FP_SECOND_SSE_REGS:15756 FLOAT_SSE_REGS:15756 FLOAT_INT_REGS:10908 INT_SSE_REGS:15756 FLOAT_INT_SSE_REGS:15756 ALL_REGS:15756 MEM:4848
  Register 240 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 241 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 242 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 243 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 INT_SSE_REGS:7878 MEM:2222
  Register 244 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 245 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:6868 INDEX_REGS:0 LEGACY_REGS:6868 GENERAL_REGS:6868 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:8484 MEM:1616
  Register 246 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1212
  Register 247 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 248 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 249 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 250 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 251 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 252 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 253 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 254 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 255 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 257 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 258 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 259 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 260 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 261 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 262 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 263 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 264 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 265 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 267 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 268 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 269 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 270 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 271 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 272 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 273 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 INT_SSE_REGS:3510 MEM:990
  Register 274 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 275 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 276 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:630
  Register 284 costs: AREG:559 DREG:559 CREG:559 BREG:559 SIREG:559 DIREG:559 AD_REGS:559 Q_REGS:559 NON_Q_REGS:1290 INDEX_REGS:559 LEGACY_REGS:1290 GENERAL_REGS:1290 FP_TOP_REG:903 FP_SECOND_REG:903 FLOAT_REGS:903 SSE_REGS:0 FP_TOP_SSE_REGS:903 FP_SECOND_SSE_REGS:903 FLOAT_SSE_REGS:903 FLOAT_INT_REGS:903 INT_SSE_REGS:559 FLOAT_INT_SSE_REGS:903 ALL_REGS:1806 MEM:516
  Register 286 costs: AREG:507 DREG:507 CREG:507 BREG:507 SIREG:507 DIREG:507 AD_REGS:507 Q_REGS:507 NON_Q_REGS:1170 INDEX_REGS:507 LEGACY_REGS:1170 GENERAL_REGS:1170 FP_TOP_REG:819 FP_SECOND_REG:819 FLOAT_REGS:819 SSE_REGS:0 FP_TOP_SSE_REGS:819 FP_SECOND_SSE_REGS:819 FLOAT_SSE_REGS:819 FLOAT_INT_REGS:819 INT_SSE_REGS:507 FLOAT_INT_SSE_REGS:819 ALL_REGS:1638 MEM:468
  Register 287 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:227
  Register 288 costs: AREG:455 DREG:455 CREG:455 BREG:455 SIREG:455 DIREG:455 AD_REGS:455 Q_REGS:455 NON_Q_REGS:1050 INDEX_REGS:455 LEGACY_REGS:1050 GENERAL_REGS:1050 FP_TOP_REG:735 FP_SECOND_REG:735 FLOAT_REGS:735 SSE_REGS:0 FP_TOP_SSE_REGS:735 FP_SECOND_SSE_REGS:735 FLOAT_SSE_REGS:735 FLOAT_INT_REGS:735 INT_SSE_REGS:455 FLOAT_INT_SSE_REGS:735 ALL_REGS:1470 MEM:420
  Register 289 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:741 MMX_REGS:741 FP_TOP_SSE_REGS:741 FP_SECOND_SSE_REGS:741 FLOAT_SSE_REGS:741 FLOAT_INT_REGS:513 INT_SSE_REGS:741 FLOAT_INT_SSE_REGS:741 ALL_REGS:741 MEM:202
  Register 290 costs: AREG:403 DREG:403 CREG:403 BREG:403 SIREG:403 DIREG:403 AD_REGS:403 Q_REGS:403 NON_Q_REGS:930 INDEX_REGS:403 LEGACY_REGS:930 GENERAL_REGS:930 FP_TOP_REG:651 FP_SECOND_REG:651 FLOAT_REGS:651 SSE_REGS:0 FP_TOP_SSE_REGS:651 FP_SECOND_SSE_REGS:651 FLOAT_SSE_REGS:651 FLOAT_INT_REGS:651 INT_SSE_REGS:403 FLOAT_INT_SSE_REGS:651 ALL_REGS:1302 MEM:372
  Register 291 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:663 MMX_REGS:663 FP_TOP_SSE_REGS:663 FP_SECOND_SSE_REGS:663 FLOAT_SSE_REGS:663 FLOAT_INT_REGS:459 INT_SSE_REGS:663 FLOAT_INT_SSE_REGS:663 ALL_REGS:663 MEM:181
  Register 292 costs: AREG:364 DREG:364 CREG:364 BREG:364 SIREG:364 DIREG:364 AD_REGS:364 Q_REGS:364 NON_Q_REGS:840 INDEX_REGS:364 LEGACY_REGS:840 GENERAL_REGS:840 FP_TOP_REG:588 FP_SECOND_REG:588 FLOAT_REGS:588 SSE_REGS:0 FP_TOP_SSE_REGS:588 FP_SECOND_SSE_REGS:588 FLOAT_SSE_REGS:588 FLOAT_INT_REGS:588 INT_SSE_REGS:364 FLOAT_INT_SSE_REGS:588 ALL_REGS:1176 MEM:336
  Register 293 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:163
  Register 294 costs: AREG:325 DREG:325 CREG:325 BREG:325 SIREG:325 DIREG:325 AD_REGS:325 Q_REGS:325 NON_Q_REGS:750 INDEX_REGS:325 LEGACY_REGS:750 GENERAL_REGS:750 FP_TOP_REG:525 FP_SECOND_REG:525 FLOAT_REGS:525 SSE_REGS:0 FP_TOP_SSE_REGS:525 FP_SECOND_SSE_REGS:525 FLOAT_SSE_REGS:525 FLOAT_INT_REGS:525 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:525 ALL_REGS:1050 MEM:300
  Register 295 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:533 MMX_REGS:533 FP_TOP_SSE_REGS:533 FP_SECOND_SSE_REGS:533 FLOAT_SSE_REGS:533 FLOAT_INT_REGS:369 INT_SSE_REGS:533 FLOAT_INT_SSE_REGS:533 ALL_REGS:533 MEM:145
  Register 296 costs: AREG:286 DREG:286 CREG:286 BREG:286 SIREG:286 DIREG:286 AD_REGS:286 Q_REGS:286 NON_Q_REGS:660 INDEX_REGS:286 LEGACY_REGS:660 GENERAL_REGS:660 FP_TOP_REG:462 FP_SECOND_REG:462 FLOAT_REGS:462 SSE_REGS:0 FP_TOP_SSE_REGS:462 FP_SECOND_SSE_REGS:462 FLOAT_SSE_REGS:462 FLOAT_INT_REGS:462 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:462 ALL_REGS:924 MEM:264
  Register 298 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:481 MMX_REGS:481 FP_TOP_SSE_REGS:481 FP_SECOND_SSE_REGS:481 FLOAT_SSE_REGS:481 FLOAT_INT_REGS:333 INT_SSE_REGS:481 FLOAT_INT_SSE_REGS:481 ALL_REGS:481 MEM:131
  Register 299 costs: AREG:221 DREG:221 CREG:221 BREG:221 SIREG:221 DIREG:221 AD_REGS:221 Q_REGS:221 NON_Q_REGS:510 INDEX_REGS:221 LEGACY_REGS:510 GENERAL_REGS:510 FP_TOP_REG:357 FP_SECOND_REG:357 FLOAT_REGS:357 SSE_REGS:0 FP_TOP_SSE_REGS:357 FP_SECOND_SSE_REGS:357 FLOAT_SSE_REGS:357 FLOAT_INT_REGS:357 INT_SSE_REGS:221 FLOAT_INT_SSE_REGS:357 ALL_REGS:714 MEM:204
  Register 300 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:377 MMX_REGS:377 FP_TOP_SSE_REGS:377 FP_SECOND_SSE_REGS:377 FLOAT_SSE_REGS:377 FLOAT_INT_REGS:261 INT_SSE_REGS:377 FLOAT_INT_SSE_REGS:377 ALL_REGS:377 MEM:102
  Register 301 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:416 MMX_REGS:416 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:288 INT_SSE_REGS:416 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:113
  Register 302 costs: AREG:195 DREG:195 CREG:195 BREG:195 SIREG:195 DIREG:195 AD_REGS:195 Q_REGS:195 NON_Q_REGS:450 INDEX_REGS:195 LEGACY_REGS:450 GENERAL_REGS:450 FP_TOP_REG:315 FP_SECOND_REG:315 FLOAT_REGS:315 SSE_REGS:0 FP_TOP_SSE_REGS:315 FP_SECOND_SSE_REGS:315 FLOAT_SSE_REGS:315 FLOAT_INT_REGS:315 INT_SSE_REGS:195 FLOAT_INT_SSE_REGS:315 ALL_REGS:630 MEM:180
  Register 303 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:338 MMX_REGS:338 FP_TOP_SSE_REGS:338 FP_SECOND_SSE_REGS:338 FLOAT_SSE_REGS:338 FLOAT_INT_REGS:234 INT_SSE_REGS:338 FLOAT_INT_SSE_REGS:338 ALL_REGS:338 MEM:92
  Register 304 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:377 MMX_REGS:377 FP_TOP_SSE_REGS:377 FP_SECOND_SSE_REGS:377 FLOAT_SSE_REGS:377 FLOAT_INT_REGS:261 INT_SSE_REGS:377 FLOAT_INT_SSE_REGS:377 ALL_REGS:377 MEM:102
  Register 305 costs: AREG:182 DREG:182 CREG:182 BREG:182 SIREG:182 DIREG:182 AD_REGS:182 Q_REGS:182 NON_Q_REGS:420 INDEX_REGS:182 LEGACY_REGS:420 GENERAL_REGS:420 FP_TOP_REG:294 FP_SECOND_REG:294 FLOAT_REGS:294 SSE_REGS:0 FP_TOP_SSE_REGS:294 FP_SECOND_SSE_REGS:294 FLOAT_SSE_REGS:294 FLOAT_INT_REGS:294 INT_SSE_REGS:182 FLOAT_INT_SSE_REGS:294 ALL_REGS:588 MEM:168
  Register 306 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:81
  Register 307 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:338 MMX_REGS:338 FP_TOP_SSE_REGS:338 FP_SECOND_SSE_REGS:338 FLOAT_SSE_REGS:338 FLOAT_INT_REGS:234 INT_SSE_REGS:338 FLOAT_INT_SSE_REGS:338 ALL_REGS:338 MEM:92
  Register 308 costs: AREG:156 DREG:156 CREG:156 BREG:156 SIREG:156 DIREG:156 AD_REGS:156 Q_REGS:156 NON_Q_REGS:360 INDEX_REGS:156 LEGACY_REGS:360 GENERAL_REGS:360 FP_TOP_REG:252 FP_SECOND_REG:252 FLOAT_REGS:252 SSE_REGS:0 FP_TOP_SSE_REGS:252 FP_SECOND_SSE_REGS:252 FLOAT_SSE_REGS:252 FLOAT_INT_REGS:252 INT_SSE_REGS:156 FLOAT_INT_SSE_REGS:252 ALL_REGS:504 MEM:144
  Register 309 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:273 MMX_REGS:273 FP_TOP_SSE_REGS:273 FP_SECOND_SSE_REGS:273 FLOAT_SSE_REGS:273 FLOAT_INT_REGS:189 INT_SSE_REGS:273 FLOAT_INT_SSE_REGS:273 ALL_REGS:273 MEM:74
  Register 310 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:81
  Register 311 costs: AREG:143 DREG:143 CREG:143 BREG:143 SIREG:143 DIREG:143 AD_REGS:143 Q_REGS:143 NON_Q_REGS:330 INDEX_REGS:143 LEGACY_REGS:330 GENERAL_REGS:330 FP_TOP_REG:231 FP_SECOND_REG:231 FLOAT_REGS:231 SSE_REGS:0 FP_TOP_SSE_REGS:231 FP_SECOND_SSE_REGS:231 FLOAT_SSE_REGS:231 FLOAT_INT_REGS:231 INT_SSE_REGS:143 FLOAT_INT_SSE_REGS:231 ALL_REGS:462 MEM:132
  Register 312 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:247 MMX_REGS:247 FP_TOP_SSE_REGS:247 FP_SECOND_SSE_REGS:247 FLOAT_SSE_REGS:247 FLOAT_INT_REGS:171 INT_SSE_REGS:247 FLOAT_INT_SSE_REGS:247 ALL_REGS:247 MEM:57
  Register 313 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:273 MMX_REGS:273 FP_TOP_SSE_REGS:273 FP_SECOND_SSE_REGS:273 FLOAT_SSE_REGS:273 FLOAT_INT_REGS:189 INT_SSE_REGS:273 FLOAT_INT_SSE_REGS:273 ALL_REGS:273 MEM:74
  Register 314 costs: AREG:130 DREG:130 CREG:130 BREG:130 SIREG:130 DIREG:130 AD_REGS:130 Q_REGS:130 NON_Q_REGS:300 INDEX_REGS:130 LEGACY_REGS:300 GENERAL_REGS:300 FP_TOP_REG:210 FP_SECOND_REG:210 FLOAT_REGS:210 SSE_REGS:0 FP_TOP_SSE_REGS:210 FP_SECOND_SSE_REGS:210 FLOAT_SSE_REGS:210 FLOAT_INT_REGS:210 INT_SSE_REGS:130 FLOAT_INT_SSE_REGS:210 ALL_REGS:420 MEM:120

316 registers.

Register 75 used 3 times across 12 insns; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 78 used 3 times across 17 insns; set 1 time; GENERAL_REGS or none.

Register 79 used 3 times across 6 insns; set 1 time; GENERAL_REGS or none.

Register 83 used 9 times across 45 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 84 used 7 times across 37 insns; set 3 times; user var; dies in 2 places; 4 bytes; GENERAL_REGS or none.

Register 85 used 47 times across 142 insns; set 20 times; user var; dies in 2 places; 4 bytes; GENERAL_REGS or none.

Register 86 used 17 times across 67 insns; set 9 times; dies in 8 places; GENERAL_REGS or none; pointer.

Register 91 used 11 times across 49 insns; set 1 time; pref AREG, else GENERAL_REGS; pointer.

Register 93 used 45 times across 65 insns; set 16 times; GENERAL_REGS or none.

Register 95 used 7 times across 38 insns; set 2 times; pref INDEX_REGS, else GENERAL_REGS.

Register 96 used 5 times across 9 insns; set 3 times; 4 bytes; GENERAL_REGS or none.

Register 97 used 3 times across 12 insns; set 2 times; 1 bytes; GENERAL_REGS or none.

Register 98 used 7 times across 33 insns; set 3 times; dies in 2 places; pref INDEX_REGS, else GENERAL_REGS.

Register 99 used 9 times across 27 insns; set 6 times; pref DIREG, else GENERAL_REGS.

Register 100 used 7 times across 30 insns; set 4 times; 4 bytes; GENERAL_REGS or none.

Register 101 used 11 times across 145 insns; set 7 times; user var; SSE_REGS or none.

Register 102 used 32 times across 168 insns; set 5 times; user var; SSE_REGS or none.

Register 103 used 11 times across 147 insns; set 4 times; user var; 4 bytes; GENERAL_REGS or none.

Register 104 used 27 times across 238 insns; set 16 times; user var; 4 bytes; GENERAL_REGS or none.

Register 108 used 3 times across 10 insns in block 50; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 109 used 3 times across 10 insns in block 50; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 110 used 3 times across 4 insns; set 1 time; SSE_REGS or none.

Register 111 used 2 times across 4 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 112 used 15 times across 463 insns; set 1 time; crosses 2 calls; pref AREG, else GENERAL_REGS; pointer.

Register 113 used 13 times across 471 insns; set 1 time; crosses 4 calls; pref AREG, else GENERAL_REGS; pointer.

Register 114 used 16 times across 473 insns; set 1 time; crosses 3 calls; pref AREG, else GENERAL_REGS; pointer.

Register 115 used 4 times across 15 insns; set 1 time; crosses 2 calls; pref DIREG, else GENERAL_REGS.

Register 116 used 42 times across 480 insns; set 1 time; user var; dies in 0 places; crosses 4 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 117 used 11 times across 274 insns; set 1 time; user var; dies in 0 places; crosses 3 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 118 used 2 times across 322 insns; set 1 time; user var; crosses 4 calls; pref DREG, else GENERAL_REGS; pointer.

Register 119 used 4 times across 324 insns; set 1 time; user var; crosses 4 calls; pref CREG, else GENERAL_REGS; pointer.

Register 123 used 2 times across 4 insns in block 8; set 1 time; SSE_REGS or none.

Register 124 used 2 times across 2 insns in block 6; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 126 used 2 times across 4 insns in block 11; set 1 time; SSE_REGS or none.

Register 127 used 2 times across 2 insns in block 14; set 1 time; GENERAL_REGS or none.

Register 129 used 2 times across 4 insns in block 20; set 1 time; SSE_REGS or none.

Register 134 used 2 times across 2 insns in block 59; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 135 used 2 times across 2 insns in block 28; set 1 time; GENERAL_REGS or none.

Register 137 used 2 times across 2 insns in block 33; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 140 used 3 times across 2 insns in block 35; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 145 used 3 times across 2 insns in block 38; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 150 used 2 times across 2 insns in block 39; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 152 used 2 times across 2 insns in block 50; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 153 used 3 times across 10 insns in block 50; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 154 used 2 times across 2 insns in block 50; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 156 used 2 times across 2 insns in block 50; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 157 used 2 times across 2 insns in block 50; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 158 used 2 times across 2 insns in block 50; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 159 used 2 times across 2 insns in block 50; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 160 used 10 times across 39 insns; set 2 times; dies in 2 places; SSE_REGS or none.

Register 161 used 8 times across 52 insns; set 3 times; dies in 3 places; pref INDEX_REGS, else GENERAL_REGS.

Register 162 used 6 times across 40 insns; set 1 time; GENERAL_REGS or none.

Register 163 used 5 times across 154 insns; set 1 time; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 174 used 6 times across 27 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 175 used 6 times across 15 insns in block 57; set 1 time; GENERAL_REGS or none; pointer.

Register 176 used 4 times across 13 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 178 used 2 times across 2 insns in block 59; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 179 used 10 times across 21 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 180 used 8 times across 16 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 182 used 3 times across 2 insns in block 9; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 184 used 7 times across 18 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 186 used 15 times across 45 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 194 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 195 used 2 times across 6 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 196 used 2 times across 4 insns in block 111; set 1 time; SSE_REGS or none.

Register 197 used 30 times across 67 insns; set 9 times; dies in 0 places; GENERAL_REGS or none.

Register 199 used 21 times across 248 insns; set 5 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 200 used 3 times across 10 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 201 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 202 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 203 used 37 times across 136 insns; set 5 times; GENERAL_REGS or none; pointer.

Register 204 used 3 times across 10 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 205 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 206 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 207 used 3 times across 10 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 208 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 209 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 212 used 3 times across 10 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 213 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 214 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 216 used 3 times across 10 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 217 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 218 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 219 used 3 times across 5 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 220 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 221 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 223 used 4 times across 13 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 224 used 3 times across 10 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 225 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 226 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 227 used 6 times across 15 insns in block 57; set 1 time; GENERAL_REGS or none; pointer.

Register 228 used 3 times across 10 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 229 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 230 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 231 used 3 times across 5 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 232 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 233 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 235 used 5 times across 18 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 236 used 3 times across 10 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 237 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 238 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 239 used 6 times across 15 insns in block 57; set 1 time; GENERAL_REGS or none; pointer.

Register 240 used 3 times across 10 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 241 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 242 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 243 used 3 times across 10 insns in block 57; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 244 used 2 times across 2 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 245 used 2 times across 2 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 246 used 2 times across 4 insns in block 57; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 247 used 3 times across 10 insns in block 54; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 248 used 2 times across 2 insns in block 54; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 249 used 2 times across 2 insns in block 54; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 250 used 3 times across 10 insns in block 54; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 251 used 2 times across 2 insns in block 54; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 252 used 2 times across 2 insns in block 54; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 253 used 3 times across 10 insns in block 54; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 254 used 2 times across 2 insns in block 54; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 255 used 2 times across 2 insns in block 54; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 257 used 3 times across 10 insns in block 55; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 258 used 2 times across 2 insns in block 55; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 259 used 2 times across 2 insns in block 55; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 260 used 3 times across 10 insns in block 55; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 261 used 2 times across 2 insns in block 55; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 262 used 2 times across 2 insns in block 55; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 263 used 3 times across 10 insns in block 55; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 264 used 2 times across 2 insns in block 55; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 265 used 2 times across 2 insns in block 55; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 267 used 3 times across 10 insns in block 56; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 268 used 2 times across 2 insns in block 56; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 269 used 2 times across 2 insns in block 56; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 270 used 3 times across 10 insns in block 56; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 271 used 2 times across 2 insns in block 56; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 272 used 2 times across 2 insns in block 56; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 273 used 3 times across 10 insns in block 56; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 274 used 2 times across 2 insns in block 56; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 275 used 2 times across 2 insns in block 56; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 276 used 2 times across 4 insns in block 56; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 284 used 2 times across 4 insns in block 92; set 1 time; SSE_REGS or none.

Register 286 used 2 times across 4 insns in block 99; set 1 time; SSE_REGS or none.

Register 287 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 288 used 2 times across 4 insns in block 101; set 1 time; SSE_REGS or none.

Register 289 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 290 used 2 times across 4 insns in block 103; set 1 time; SSE_REGS or none.

Register 291 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 292 used 2 times across 4 insns in block 105; set 1 time; SSE_REGS or none.

Register 293 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 294 used 2 times across 4 insns in block 107; set 1 time; SSE_REGS or none.

Register 295 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 296 used 2 times across 4 insns in block 109; set 1 time; SSE_REGS or none.

Register 298 used 2 times across 5 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 299 used 2 times across 4 insns in block 112; set 1 time; SSE_REGS or none.

Register 300 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 301 used 2 times across 6 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 302 used 2 times across 4 insns in block 113; set 1 time; SSE_REGS or none.

Register 303 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 304 used 2 times across 6 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 305 used 2 times across 4 insns in block 114; set 1 time; SSE_REGS or none.

Register 306 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 307 used 2 times across 6 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 308 used 2 times across 4 insns in block 115; set 1 time; SSE_REGS or none.

Register 309 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 310 used 2 times across 6 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 311 used 2 times across 4 insns in block 116; set 1 time; SSE_REGS or none.

Register 312 used 2 times across 6 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 313 used 2 times across 6 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 314 used 2 times across 4 insns in block 117; set 1 time; SSE_REGS or none.

119 basic blocks, 194 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1145, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [99.0%]  1 [1.0%]  (fallthru)
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117 118 119

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  0 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1134, maybe hot.
Predecessors:  0 [99.0%] 
Successors:  4 [99.0%]  3 [1.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 114 115 116 117 118 119

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  2 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 1122, maybe hot.
Predecessors:  2 [99.0%] 
Successors:  7 [99.0%]  5 [1.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 114 115 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 117 118 119

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  4 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 142, maybe hot.
Predecessors:  10 [5.0%]  (loop_exit)
Successors:  12 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 104 112 113 114 116 117 118 119
Invalid sum of incoming frequencies 12, should be 142

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  4 [99.0%] 
Successors:  46 [21.0%]  8 [79.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 117 118 119

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 878, maybe hot.
Predecessors:  7 [79.0%]  (fallthru)
Successors:  47 [50.0%]  9 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112 113 114 116 117 118 119

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 439, maybe hot.
Predecessors:  8 [50.0%]  (fallthru)
Successors:  92 [87.5%]  10 [12.5%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

Basic block 10 prev 9, next 11, loop_depth 1, count 0, freq 244, maybe hot.
Predecessors:  110 [100.0%]  118 [100.0%]  9 [12.5%]  (fallthru) 93 [14.3%] 
Successors:  6 [5.0%]  (loop_exit) 11 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 104 112 113 114 116 117 118 119
Invalid sum of incoming frequencies 390, should be 244

Basic block 11 prev 10, next 12, loop_depth 1, count 0, freq 232, maybe hot.
Predecessors:  10 [95.0%]  (fallthru)
Successors:  12 [11.0%]  (fallthru,loop_exit) 111 [89.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 104 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 195

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 439, maybe hot.
Predecessors:  117 [11.0%]  (loop_exit) 6 [100.0%]  92 [11.0%]  99 [11.0%]  101 [11.0%]  103 [11.0%]  105 [11.0%]  107 [11.0%]  109 [11.0%]  111 [11.0%]  (loop_exit) 112 [11.0%]  (loop_exit) 113 [11.0%]  (loop_exit) 114 [11.0%]  (loop_exit) 115 [11.0%]  (loop_exit) 116 [11.0%]  (loop_exit) 11 [11.0%]  (fallthru,loop_exit)
Successors:  48 [100.0%]  13 (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 104 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 104 112 113 114 116 117 118 119

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 0.
Predecessors:  12 (fallthru)
Successors:  49 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 104 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 104 112 113 114 116 118 119

Basic block 14 prev 13, next 15, loop_depth 1, count 0, freq 8778, maybe hot.
Predecessors:  34 [90.0%]  (dfs_back) 48 [100.0%] 
Successors:  16 [50.0%]  15 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162

Basic block 15 prev 14, next 16, loop_depth 1, count 0, freq 4389, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
Successors:  29 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161

Basic block 16 prev 15, next 17, loop_depth 1, count 0, freq 4389, maybe hot.
Predecessors:  14 [50.0%] 
Successors:  24 [50.0%]  17 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162

Basic block 17 prev 16, next 18, loop_depth 1, count 0, freq 2194, maybe hot.
Predecessors:  16 [50.0%]  (fallthru)
Successors:  24 [50.0%]  18 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 78 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162

Basic block 18 prev 17, next 19, loop_depth 1, count 0, freq 1097, maybe hot.
Predecessors:  17 [50.0%]  (fallthru)
Successors:  20 [50.0%]  19 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161

Basic block 19 prev 18, next 20, loop_depth 1, count 0, freq 549, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
Successors:  23 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 96 102 103 112 113 114 116 117 118 119 160 161

Basic block 20 prev 19, next 21, loop_depth 1, count 0, freq 549, maybe hot.
Predecessors:  18 [50.0%] 
Successors:  22 [50.0%]  21 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161

Basic block 21 prev 20, next 22, loop_depth 1, count 0, freq 274, maybe hot.
Predecessors:  20 [50.0%]  (fallthru)
Successors:  23 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 96 102 103 112 113 114 116 117 118 119 160 161

Basic block 22 prev 21, next 23, loop_depth 1, count 0, freq 274, maybe hot.
Predecessors:  20 [50.0%] 
Successors:  23 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 96 102 103 112 113 114 116 117 118 119 160 161

Basic block 23 prev 22, next 24, loop_depth 1, count 0, freq 1097, maybe hot.
Predecessors:  22 [100.0%]  (fallthru) 19 [100.0%]  21 [100.0%] 
Successors:  29 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 96 102 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161

Basic block 24 prev 23, next 25, loop_depth 1, count 0, freq 3292, maybe hot.
Predecessors:  16 [50.0%]  17 [50.0%] 
Successors:  29 [50.0%]  25 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162

Basic block 25 prev 24, next 26, loop_depth 1, count 0, freq 1646, maybe hot.
Predecessors:  24 [50.0%]  (fallthru)
Successors:  29 [50.0%]  26 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162

Basic block 26 prev 25, next 27, loop_depth 1, count 0, freq 823, maybe hot.
Predecessors:  25 [50.0%]  (fallthru)
Successors:  59 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 85 102 103 112 113 114 116 117 118 119 161 162
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 85 102 103 112 113 114 116 117 118 119 161 162

Basic block 27 prev 26, next 28, loop_depth 2, count 0, freq 416, maybe hot.
Predecessors:  82 [100.0%]  91 [100.0%]  61 [12.5%] 
Successors:  83 [95.0%]  28 [5.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Invalid sum of incoming frequencies 678, should be 416

Basic block 28 prev 27, next 29, loop_depth 1, count 0, freq 823, maybe hot.
Predecessors:  85 [5.0%]  (loop_exit) 27 [5.0%]  (fallthru,loop_exit) 59 [5.0%]  60 [11.0%]  68 [5.0%]  90 [11.0%]  (loop_exit) 70 [5.0%]  89 [5.0%]  (loop_exit) 72 [5.0%]  86 [5.0%]  (loop_exit) 74 [5.0%]  88 [5.0%]  (loop_exit) 76 [5.0%]  84 [5.0%]  (loop_exit) 78 [5.0%]  87 [5.0%]  (loop_exit) 80 [5.0%]  81 [11.0%]  83 [5.0%]  (loop_exit)
Successors:  29 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161
Invalid sum of incoming frequencies 562, should be 823

Basic block 29 prev 28, next 30, loop_depth 1, count 0, freq 8778, maybe hot.
Predecessors:  28 [100.0%]  (fallthru) 15 [100.0%]  24 [50.0%]  25 [50.0%]  23 [100.0%] 
Successors:  31 [50.0%]  30 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161

Basic block 30 prev 29, next 31, loop_depth 1, count 0, freq 4389, maybe hot.
Predecessors:  29 [50.0%]  (fallthru)
Successors:  34 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 102 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161

Basic block 31 prev 30, next 32, loop_depth 1, count 0, freq 4389, maybe hot.
Predecessors:  29 [50.0%] 
Successors:  34 [50.0%]  32 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161

Basic block 32 prev 31, next 33, loop_depth 1, count 0, freq 2194, maybe hot.
Predecessors:  31 [50.0%]  (fallthru)
Successors:  34 [50.0%]  33 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 160 161

Basic block 33 prev 32, next 34, loop_depth 1, count 0, freq 1097, maybe hot.
Predecessors:  32 [50.0%]  (fallthru)
Successors:  34 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 112 113 114 116 117 118 119 160 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161

Basic block 34 prev 33, next 35, loop_depth 1, count 0, freq 8778, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 31 [50.0%]  32 [50.0%]  30 [100.0%] 
Successors:  14 [90.0%]  (dfs_back) 35 [10.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 878, maybe hot.
Predecessors:  34 [10.0%]  (fallthru,loop_exit)
Successors:  36 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 118 119 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97 98 99 100 101 102 103 112 113 114 116 118 119

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  35 [100.0%]  (fallthru) 46 [100.0%] 
Successors:  38 [50.0%]  37 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97 98 99 100 101 102 103 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97 98 99 100 101 102 103 112 113 114 116 118 119

Basic block 37 prev 36, next 38, loop_depth 0, count 0, freq 556, maybe hot.
Predecessors:  36 [50.0%]  (fallthru)
Successors:  42 [50.0%]  38 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97 98 99 100 101 102 103 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 101 102 103 112 113 114 116 118 119

Basic block 38 prev 37, next 39, loop_depth 0, count 0, freq 833, maybe hot.
Predecessors:  36 [50.0%]  37 [50.0%]  (fallthru)
Successors:  39 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 101 102 103 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 101 102 112 113 114 116 118 119

Basic block 39 prev 38, next 40, loop_depth 0, count 0, freq 833, maybe hot.
Predecessors:  38 [100.0%]  (fallthru) 49 [100.0%] 
Successors:  44 [50.0%]  40 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 101 102 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 102 110 112 113 114 116 118 119

Basic block 40 prev 39, next 41, loop_depth 0, count 0, freq 417, maybe hot.
Predecessors:  39 [50.0%]  (fallthru)
Successors:  42 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 112 113 114 116 118 119

Basic block 41 prev 40, next 42, loop_depth 0, count 0, freq 208, maybe hot.
Predecessors:  44 [50.0%] 
Successors:  42 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 112 113 114 116 118 119

Basic block 42 prev 41, next 43, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  37 [50.0%]  40 [100.0%]  41 [100.0%]  (fallthru) 45 [100.0%] 
Successors:  43 [10.0%]  (fallthru) 50 [90.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 119

Basic block 43 prev 42, next 44, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  56 [10.0%]  57 [10.0%]  (loop_exit) 50 [10.0%]  42 [10.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Invalid sum of incoming frequencies 504, should be 1111

Basic block 44 prev 43, next 45, loop_depth 0, count 0, freq 417, maybe hot.
Predecessors:  39 [50.0%] 
Successors:  41 [50.0%]  45 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 102 110 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 112 113 114 116 118 119

Basic block 45 prev 44, next 46, loop_depth 0, count 0, freq 209, maybe hot.
Predecessors:  44 [50.0%]  (fallthru)
Successors:  42 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 112 113 114 116 118 119

Basic block 46 prev 45, next 47, loop_depth 0, count 0, freq 233, maybe hot.
Predecessors:  7 [21.0%] 
Successors:  36 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97 98 99 100 101 102 103 112 113 114 116 118 119

Basic block 47 prev 46, next 48, loop_depth 0, count 0, freq 439, maybe hot.
Predecessors:  8 [50.0%] 
Successors:  48 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 112 113 114 116 117 118 119

Basic block 48 prev 47, next 49, loop_depth 0, count 0, freq 878, maybe hot.
Predecessors:  47 [100.0%]  (fallthru) 12 [100.0%] 
Successors:  14 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161

Basic block 49 prev 48, next 50, loop_depth 0, count 0, freq 0.
Predecessors:  13 [100.0%] 
Successors:  39 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 104 112 113 114 116 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 101 102 112 113 114 116 118 119

Basic block 50 prev 49, next 51, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  42 [90.0%] 
Successors:  51 [90.0%]  (fallthru,dfs_back) 43 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203

Basic block 51 prev 50, next 52, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  50 [90.0%]  (fallthru,dfs_back)
Successors:  52 [75.0%]  (fallthru) 57 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203
Invalid sum of incoming frequencies 900, should be 600

Basic block 52 prev 51, next 53, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  51 [75.0%]  (fallthru)
Successors:  53 [66.7%]  (fallthru) 56 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203

Basic block 53 prev 52, next 54, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  52 [66.7%]  (fallthru)
Successors:  54 [50.0%]  (fallthru) 55 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 199 203
Invalid sum of incoming frequencies 300, should be 900

Basic block 54 prev 53, next 55, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  53 [50.0%]  (fallthru)
Successors:  55 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 203
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
Invalid sum of incoming frequencies 450, should be 900

Basic block 55 prev 54, next 56, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  54 [100.0%]  (fallthru) 53 [50.0%] 
Successors:  56 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
Invalid sum of incoming frequencies 1350, should be 900

Basic block 56 prev 55, next 57, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  55 [100.0%]  (fallthru) 52 [33.3%] 
Successors:  57 [90.0%]  (fallthru,dfs_back) 43 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
Invalid sum of incoming frequencies 1050, should be 900

Basic block 57 prev 56, next 58, loop_depth 1, count 0, freq 2025, maybe hot.
Predecessors:  56 [90.0%]  (fallthru,dfs_back) 58 [100.0%]  51 [25.0%] 
Successors:  58 [90.0%]  (fallthru,dfs_back) 43 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
Invalid sum of incoming frequencies 2783, should be 2025

Basic block 58 prev 57, next 59, loop_depth 1, count 0, freq 1823, maybe hot.
Predecessors:  57 [90.0%]  (fallthru,dfs_back)
Successors:  57 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203

Basic block 59 prev 58, next 60, loop_depth 1, count 0, freq 823, maybe hot.
Predecessors:  26 [100.0%] 
Successors:  60 [95.0%]  (fallthru) 28 [5.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 85 102 103 112 113 114 116 117 118 119 161 162
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179

Basic block 60 prev 59, next 61, loop_depth 1, count 0, freq 782, maybe hot.
Predecessors:  59 [95.0%]  (fallthru)
Successors:  28 [11.0%]  61 [89.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

Basic block 61 prev 60, next 62, loop_depth 1, count 0, freq 597, maybe hot.
Predecessors:  60 [89.0%]  (fallthru,dfs_back)
Successors:  62 [87.5%]  (fallthru) 27 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

Basic block 62 prev 61, next 63, loop_depth 1, count 0, freq 580, maybe hot.
Predecessors:  61 [87.5%]  (fallthru)
Successors:  63 [85.7%]  (fallthru) 80 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

Basic block 63 prev 62, next 64, loop_depth 1, count 0, freq 557, maybe hot.
Predecessors:  62 [85.7%]  (fallthru)
Successors:  64 [83.3%]  (fallthru) 78 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

Basic block 64 prev 63, next 65, loop_depth 1, count 0, freq 522, maybe hot.
Predecessors:  63 [83.3%]  (fallthru)
Successors:  65 [80.0%]  (fallthru) 76 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

Basic block 65 prev 64, next 66, loop_depth 1, count 0, freq 464, maybe hot.
Predecessors:  64 [80.0%]  (fallthru)
Successors:  66 [75.0%]  (fallthru) 74 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

Basic block 66 prev 65, next 67, loop_depth 1, count 0, freq 348, maybe hot.
Predecessors:  65 [75.0%]  (fallthru)
Successors:  67 [66.7%]  (fallthru) 72 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

Basic block 67 prev 66, next 68, loop_depth 1, count 0, freq 696, maybe hot.
Predecessors:  66 [66.7%]  (fallthru)
Successors:  68 [50.0%]  (fallthru) 70 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 197
Invalid sum of incoming frequencies 232, should be 696

Basic block 68 prev 67, next 69, loop_depth 1, count 0, freq 696, maybe hot.
Predecessors:  67 [50.0%]  (fallthru)
Successors:  69 [95.0%]  (fallthru) 28 [5.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162
Invalid sum of incoming frequencies 348, should be 696

Basic block 69 prev 68, next 70, loop_depth 1, count 0, freq 661, maybe hot.
Predecessors:  68 [95.0%]  (fallthru)
Successors:  70 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 70 prev 69, next 71, loop_depth 1, count 0, freq 661, maybe hot.
Predecessors:  69 [100.0%]  (fallthru) 67 [50.0%] 
Successors:  71 [95.0%]  (fallthru) 28 [5.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Invalid sum of incoming frequencies 1009, should be 661

Basic block 71 prev 70, next 72, loop_depth 1, count 0, freq 628, maybe hot.
Predecessors:  70 [95.0%]  (fallthru)
Successors:  72 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 72 prev 71, next 73, loop_depth 1, count 0, freq 628, maybe hot.
Predecessors:  71 [100.0%]  (fallthru) 66 [33.3%] 
Successors:  73 [95.0%]  (fallthru) 28 [5.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Invalid sum of incoming frequencies 744, should be 628

Basic block 73 prev 72, next 74, loop_depth 1, count 0, freq 597, maybe hot.
Predecessors:  72 [95.0%]  (fallthru)
Successors:  74 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 74 prev 73, next 75, loop_depth 1, count 0, freq 597, maybe hot.
Predecessors:  73 [100.0%]  (fallthru) 65 [25.0%] 
Successors:  75 [95.0%]  (fallthru) 28 [5.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Invalid sum of incoming frequencies 713, should be 597

Basic block 75 prev 74, next 76, loop_depth 1, count 0, freq 567, maybe hot.
Predecessors:  74 [95.0%]  (fallthru)
Successors:  76 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 76 prev 75, next 77, loop_depth 1, count 0, freq 567, maybe hot.
Predecessors:  75 [100.0%]  (fallthru) 64 [20.0%] 
Successors:  77 [95.0%]  (fallthru) 28 [5.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Invalid sum of incoming frequencies 671, should be 567

Basic block 77 prev 76, next 78, loop_depth 1, count 0, freq 539, maybe hot.
Predecessors:  76 [95.0%]  (fallthru)
Successors:  78 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 78 prev 77, next 79, loop_depth 1, count 0, freq 539, maybe hot.
Predecessors:  77 [100.0%]  (fallthru) 63 [16.7%] 
Successors:  79 [95.0%]  (fallthru) 28 [5.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 79 prev 78, next 80, loop_depth 1, count 0, freq 512, maybe hot.
Predecessors:  78 [95.0%]  (fallthru)
Successors:  80 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 80 prev 79, next 81, loop_depth 1, count 0, freq 512, maybe hot.
Predecessors:  79 [100.0%]  (fallthru) 62 [14.3%] 
Successors:  81 [95.0%]  (fallthru) 28 [5.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 81 prev 80, next 82, loop_depth 1, count 0, freq 487, maybe hot.
Predecessors:  80 [95.0%]  (fallthru)
Successors:  28 [11.0%]  82 [89.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 82 prev 81, next 83, loop_depth 1, count 0, freq 358, maybe hot.
Predecessors:  81 [89.0%]  (fallthru,dfs_back)
Successors:  27 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 83 prev 82, next 84, loop_depth 2, count 0, freq 395, maybe hot.
Predecessors:  27 [95.0%] 
Successors:  84 [95.0%]  (fallthru) 28 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

Basic block 84 prev 83, next 85, loop_depth 2, count 0, freq 375, maybe hot.
Predecessors:  83 [95.0%]  (fallthru)
Successors:  85 [95.0%]  (fallthru) 28 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

Basic block 85 prev 84, next 86, loop_depth 2, count 0, freq 356, maybe hot.
Predecessors:  84 [95.0%]  (fallthru)
Successors:  86 [95.0%]  (fallthru) 28 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

Basic block 86 prev 85, next 87, loop_depth 2, count 0, freq 338, maybe hot.
Predecessors:  85 [95.0%]  (fallthru)
Successors:  87 [95.0%]  (fallthru) 28 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

Basic block 87 prev 86, next 88, loop_depth 2, count 0, freq 321, maybe hot.
Predecessors:  86 [95.0%]  (fallthru)
Successors:  88 [95.0%]  (fallthru) 28 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

Basic block 88 prev 87, next 89, loop_depth 2, count 0, freq 305, maybe hot.
Predecessors:  87 [95.0%]  (fallthru)
Successors:  89 [95.0%]  (fallthru) 28 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

Basic block 89 prev 88, next 90, loop_depth 2, count 0, freq 290, maybe hot.
Predecessors:  88 [95.0%]  (fallthru)
Successors:  90 [95.0%]  (fallthru) 28 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

Basic block 90 prev 89, next 91, loop_depth 2, count 0, freq 275, maybe hot.
Predecessors:  89 [95.0%]  (fallthru)
Successors:  28 [11.0%]  (loop_exit) 91 [89.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 91 prev 90, next 92, loop_depth 2, count 0, freq 245, maybe hot.
Predecessors:  90 [89.0%]  (fallthru,dfs_back)
Successors:  27 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

Basic block 92 prev 91, next 93, loop_depth 0, count 0, freq 439, maybe hot.
Predecessors:  9 [87.5%] 
Successors:  12 [11.0%]  93 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 184

Basic block 93 prev 92, next 94, loop_depth 0, count 0, freq 371, maybe hot.
Predecessors:  92 [89.0%]  (fallthru)
Successors:  94 [85.7%]  (fallthru) 10 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 184
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

Basic block 94 prev 93, next 95, loop_depth 0, count 0, freq 297, maybe hot.
Predecessors:  93 [85.7%]  (fallthru)
Successors:  95 [83.3%]  (fallthru) 109 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

Basic block 95 prev 94, next 96, loop_depth 0, count 0, freq 278, maybe hot.
Predecessors:  94 [83.3%]  (fallthru)
Successors:  96 [80.0%]  (fallthru) 107 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

Basic block 96 prev 95, next 97, loop_depth 0, count 0, freq 247, maybe hot.
Predecessors:  95 [80.0%]  (fallthru)
Successors:  97 [75.0%]  (fallthru) 105 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

Basic block 97 prev 96, next 98, loop_depth 0, count 0, freq 186, maybe hot.
Predecessors:  96 [75.0%]  (fallthru)
Successors:  98 [66.7%]  (fallthru) 103 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

Basic block 98 prev 97, next 99, loop_depth 0, count 0, freq 371, maybe hot.
Predecessors:  97 [66.7%]  (fallthru)
Successors:  99 [50.0%]  (fallthru) 101 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
Invalid sum of incoming frequencies 124, should be 371

Basic block 99 prev 98, next 100, loop_depth 0, count 0, freq 393, maybe hot.
Predecessors:  98 [50.0%]  (fallthru)
Successors:  12 [11.0%]  100 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119
Invalid sum of incoming frequencies 186, should be 393

Basic block 100 prev 99, next 101, loop_depth 0, count 0, freq 332, maybe hot.
Predecessors:  99 [89.0%]  (fallthru)
Successors:  101 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

Basic block 101 prev 100, next 102, loop_depth 0, count 0, freq 352, maybe hot.
Predecessors:  100 [100.0%]  (fallthru) 98 [50.0%] 
Successors:  12 [11.0%]  102 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 287
Invalid sum of incoming frequencies 518, should be 352

Basic block 102 prev 101, next 103, loop_depth 0, count 0, freq 298, maybe hot.
Predecessors:  101 [89.0%]  (fallthru)
Successors:  103 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

Basic block 103 prev 102, next 104, loop_depth 0, count 0, freq 315, maybe hot.
Predecessors:  102 [100.0%]  (fallthru) 97 [33.3%] 
Successors:  12 [11.0%]  104 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 289

Basic block 104 prev 103, next 105, loop_depth 0, count 0, freq 266, maybe hot.
Predecessors:  103 [89.0%]  (fallthru)
Successors:  105 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 289
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

Basic block 105 prev 104, next 106, loop_depth 0, count 0, freq 282, maybe hot.
Predecessors:  104 [100.0%]  (fallthru) 96 [25.0%] 
Successors:  12 [11.0%]  106 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 291

Basic block 106 prev 105, next 107, loop_depth 0, count 0, freq 239, maybe hot.
Predecessors:  105 [89.0%]  (fallthru)
Successors:  107 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 291
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

Basic block 107 prev 106, next 108, loop_depth 0, count 0, freq 252, maybe hot.
Predecessors:  106 [100.0%]  (fallthru) 95 [20.0%] 
Successors:  12 [11.0%]  108 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 293

Basic block 108 prev 107, next 109, loop_depth 0, count 0, freq 213, maybe hot.
Predecessors:  107 [89.0%]  (fallthru)
Successors:  109 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 293
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

Basic block 109 prev 108, next 110, loop_depth 0, count 0, freq 226, maybe hot.
Predecessors:  108 [100.0%]  (fallthru) 94 [16.7%] 
Successors:  12 [11.0%]  110 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 295

Basic block 110 prev 109, next 111, loop_depth 0, count 0, freq 191, maybe hot.
Predecessors:  109 [89.0%]  (fallthru)
Successors:  10 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 295
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

Basic block 111 prev 110, next 112, loop_depth 1, count 0, freq 207, maybe hot.
Predecessors:  11 [89.0%] 
Successors:  12 [11.0%]  (loop_exit) 112 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 195
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 194 298

Basic block 112 prev 111, next 113, loop_depth 1, count 0, freq 175, maybe hot.
Predecessors:  111 [89.0%]  (fallthru)
Successors:  12 [11.0%]  (loop_exit) 113 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 194 298
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 301

Basic block 113 prev 112, next 114, loop_depth 1, count 0, freq 157, maybe hot.
Predecessors:  112 [89.0%]  (fallthru)
Successors:  12 [11.0%]  (loop_exit) 114 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 300 304

Basic block 114 prev 113, next 115, loop_depth 1, count 0, freq 141, maybe hot.
Predecessors:  113 [89.0%]  (fallthru)
Successors:  12 [11.0%]  (loop_exit) 115 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 300 304
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 303 307

Basic block 115 prev 114, next 116, loop_depth 1, count 0, freq 126, maybe hot.
Predecessors:  114 [89.0%]  (fallthru)
Successors:  12 [11.0%]  (loop_exit) 116 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 303 307
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 306 310

Basic block 116 prev 115, next 117, loop_depth 1, count 0, freq 113, maybe hot.
Predecessors:  115 [89.0%]  (fallthru)
Successors:  12 [11.0%]  (loop_exit) 117 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 306 310
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 309 313

Basic block 117 prev 116, next 118, loop_depth 1, count 0, freq 101, maybe hot.
Predecessors:  116 [89.0%]  (fallthru)
Successors:  12 [11.0%]  (loop_exit) 118 [89.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 309 313
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 312

Basic block 118 prev 117, next -2, loop_depth 1, count 0, freq 91, maybe hot.
Predecessors:  117 [89.0%]  (fallthru)
Successors:  10 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 312
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

;; Register 108 in 1.
;; Register 109 in 1.
;; Register 123 in 21.
;; Register 124 in 0.
;; Register 126 in 21.
;; Register 127 in 0.
;; Register 129 in 21.
;; Register 134 in 0.
;; Register 135 in 0.
;; Register 137 in 0.
;; Register 140 in 0.
;; Register 145 in 0.
;; Register 150 in 0.
;; Register 152 in 0.
;; Register 153 in 1.
;; Register 154 in 0.
;; Register 156 in 0.
;; Register 157 in 0.
;; Register 158 in 0.
;; Register 159 in 0.
;; Register 175 in 1.
;; Register 176 in 4.
;; Register 178 in 0.
;; Register 182 in 0.
;; Register 196 in 21.
;; Register 200 in 1.
;; Register 201 in 0.
;; Register 202 in 0.
;; Register 204 in 1.
;; Register 205 in 0.
;; Register 206 in 0.
;; Register 207 in 1.
;; Register 208 in 0.
;; Register 209 in 0.
;; Register 212 in 2.
;; Register 213 in 0.
;; Register 214 in 0.
;; Register 216 in 2.
;; Register 217 in 0.
;; Register 218 in 0.
;; Register 219 in 2.
;; Register 220 in 0.
;; Register 221 in 0.
;; Register 223 in 4.
;; Register 224 in 2.
;; Register 225 in 0.
;; Register 226 in 0.
;; Register 227 in 1.
;; Register 228 in 2.
;; Register 229 in 0.
;; Register 230 in 0.
;; Register 231 in 2.
;; Register 232 in 0.
;; Register 233 in 0.
;; Register 235 in 4.
;; Register 236 in 2.
;; Register 237 in 0.
;; Register 238 in 0.
;; Register 239 in 1.
;; Register 240 in 2.
;; Register 241 in 0.
;; Register 242 in 0.
;; Register 243 in 2.
;; Register 244 in 0.
;; Register 245 in 0.
;; Register 246 in 4.
;; Register 247 in 1.
;; Register 248 in 0.
;; Register 249 in 0.
;; Register 250 in 1.
;; Register 251 in 0.
;; Register 252 in 0.
;; Register 253 in 1.
;; Register 254 in 0.
;; Register 255 in 0.
;; Register 257 in 1.
;; Register 258 in 0.
;; Register 259 in 0.
;; Register 260 in 1.
;; Register 261 in 0.
;; Register 262 in 0.
;; Register 263 in 1.
;; Register 264 in 0.
;; Register 265 in 0.
;; Register 267 in 1.
;; Register 268 in 0.
;; Register 269 in 0.
;; Register 270 in 1.
;; Register 271 in 0.
;; Register 272 in 0.
;; Register 273 in 1.
;; Register 274 in 0.
;; Register 275 in 0.
;; Register 276 in 0.
;; Register 284 in 21.
;; Register 286 in 21.
;; Register 288 in 21.
;; Register 290 in 21.
;; Register 292 in 21.
;; Register 294 in 21.
;; Register 296 in 21.
;; Register 299 in 21.
;; Register 302 in 21.
;; Register 305 in 21.
;; Register 308 in 21.
;; Register 311 in 21.
;; Register 314 in 21.
(note:HI 1 0 26 ("./CppStatUtilities.cc") 498)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 26 1 20 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 20 26 21 0 ./CppStatUtilities.cc:498 (set (reg/v/f:DI 116 [ x ])
        (reg:DI 5 di [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))

(insn:HI 21 20 22 0 ./CppStatUtilities.cc:498 (set (reg/v:SI 117 [ xSize ])
        (reg:SI 4 si [ xSize ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ xSize ])
        (nil)))

(insn:HI 22 21 23 0 ./CppStatUtilities.cc:498 (set (reg/v/f:DI 118 [ peakPar ])
        (reg:DI 1 dx [ peakPar ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 1 dx [ peakPar ])
        (nil)))

(insn:HI 23 22 24 0 ./CppStatUtilities.cc:498 (set (reg/v/f:DI 119 [ nPeaks ])
        (reg:DI 2 cx [ nPeaks ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 2 cx [ nPeaks ])
        (nil)))

(note:HI 24 23 28 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 28 24 29 0 ("./CppStatUtilities.cc") 501)

(insn:HI 29 28 30 0 ./CppStatUtilities.cc:501 (set (reg:DI 115 [ D.35195 ])
        (sign_extend:DI (reg/v:SI 117 [ xSize ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 21 (nil))
    (nil))

(insn:HI 30 29 31 0 ./CppStatUtilities.cc:501 (set (reg:DI 4 si)
        (const_int 4 [0x4])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 31 30 32 0 ./CppStatUtilities.cc:501 (set (reg:DI 5 di [ D.35195 ])
        (reg:DI 115 [ D.35195 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 29 (nil))
    (nil))

(call_insn:HI 32 31 33 0 ./CppStatUtilities.cc:501 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41] <function_decl 0x2b5eb3cbd200 calloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 30 (insn_list:REG_DEP_TRUE 31 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.35195 ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.35195 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 33 32 35 0 ./CppStatUtilities.cc:501 (set (reg/f:DI 114 [ D.35196 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 120)
            (nil))))

(note:HI 35 33 36 0 ("./CppStatUtilities.cc") 502)

(insn:HI 36 35 37 0 ./CppStatUtilities.cc:502 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 114 [ D.35196 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 33 (nil))
    (nil))

(jump_insn:HI 37 36 39 0 ./CppStatUtilities.cc:502 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 36 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117 118 119

;; Start of basic block 1, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 39 37 40 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 40 39 41 1 ./CppStatUtilities.cc:502 (set (reg:SI 2 cx)
        (const_int 502 [0x1f6])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 41 40 42 1 ./CppStatUtilities.cc:502 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 42 41 43 1 ./CppStatUtilities.cc:502 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 43 42 44 1 ./CppStatUtilities.cc:502 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 44 43 45 1 ./CppStatUtilities.cc:502 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 45 44 46 1 ./CppStatUtilities.cc:502 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 40 (insn_list:REG_DEP_TRUE 41 (insn_list:REG_DEP_TRUE 42 (insn_list:REG_DEP_TRUE 43 (insn_list:REG_DEP_TRUE 44 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 46 45 47 1 ./CppStatUtilities.cc:502 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 47 46 48 1 ./CppStatUtilities.cc:502 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 1, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 48 47 49)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 116 117 118 119
(code_label:HI 49 48 50 2 161 "" [1 uses])

(note:HI 50 49 51 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 51 50 52 2 ("./CppStatUtilities.cc") 504)

(insn:HI 52 51 53 2 ./CppStatUtilities.cc:504 (set (reg:DI 4 si)
        (const_int 4 [0x4])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 53 52 54 2 ./CppStatUtilities.cc:504 (set (reg:DI 5 di [ D.35195 ])
        (reg:DI 115 [ D.35195 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 54 53 55 2 ./CppStatUtilities.cc:504 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41] <function_decl 0x2b5eb3cbd200 calloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 52 (insn_list:REG_DEP_TRUE 53 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.35195 ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.35195 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 55 54 57 2 ./CppStatUtilities.cc:504 (set (reg/f:DI 113 [ D.35200 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 54 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 121)
            (nil))))

(note:HI 57 55 58 2 ("./CppStatUtilities.cc") 505)

(insn:HI 58 57 59 2 ./CppStatUtilities.cc:505 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 113 [ D.35200 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 55 (nil))
    (nil))

(jump_insn:HI 59 58 61 2 ./CppStatUtilities.cc:505 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 58 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 114 115 116 117 118 119

;; Start of basic block 3, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 61 59 62 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 62 61 63 3 ./CppStatUtilities.cc:505 (set (reg:SI 2 cx)
        (const_int 505 [0x1f9])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 63 62 64 3 ./CppStatUtilities.cc:505 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 64 63 65 3 ./CppStatUtilities.cc:505 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 65 64 66 3 ./CppStatUtilities.cc:505 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 66 65 67 3 ./CppStatUtilities.cc:505 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 67 66 68 3 ./CppStatUtilities.cc:505 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 62 (insn_list:REG_DEP_TRUE 63 (insn_list:REG_DEP_TRUE 64 (insn_list:REG_DEP_TRUE 65 (insn_list:REG_DEP_TRUE 66 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 68 67 69 3 ./CppStatUtilities.cc:505 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 69 68 70 3 ./CppStatUtilities.cc:505 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 68 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 3, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 70 69 71)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 114 115 116 117 118 119
(code_label:HI 71 70 72 4 163 "" [1 uses])

(note:HI 72 71 73 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 73 72 74 4 ("./CppStatUtilities.cc") 507)

(insn:HI 74 73 75 4 ./CppStatUtilities.cc:507 (set (reg:DI 4 si)
        (const_int 4 [0x4])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 75 74 76 4 ./CppStatUtilities.cc:507 (set (reg:DI 5 di [ D.35195 ])
        (reg:DI 115 [ D.35195 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 115 [ D.35195 ])
        (nil)))

(call_insn:HI 76 75 77 4 ./CppStatUtilities.cc:507 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41] <function_decl 0x2b5eb3cbd200 calloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 74 (insn_list:REG_DEP_TRUE 75 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.35195 ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.35195 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 77 76 79 4 ./CppStatUtilities.cc:507 (set (reg/f:DI 112 [ D.35203 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 76 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 122)
            (nil))))

(note:HI 79 77 80 4 ("./CppStatUtilities.cc") 508)

(insn:HI 80 79 81 4 ./CppStatUtilities.cc:508 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 112 [ D.35203 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 77 (nil))
    (nil))

(jump_insn:HI 81 80 83 4 ./CppStatUtilities.cc:508 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 80 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 117 118 119

;; Start of basic block 5, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 83 81 84 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 84 83 85 5 ./CppStatUtilities.cc:508 (set (reg:SI 2 cx)
        (const_int 508 [0x1fc])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 85 84 86 5 ./CppStatUtilities.cc:508 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 86 85 87 5 ./CppStatUtilities.cc:508 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 87 86 88 5 ./CppStatUtilities.cc:508 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 88 87 89 5 ./CppStatUtilities.cc:508 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 89 88 90 5 ./CppStatUtilities.cc:508 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 84 (insn_list:REG_DEP_TRUE 85 (insn_list:REG_DEP_TRUE 86 (insn_list:REG_DEP_TRUE 87 (insn_list:REG_DEP_TRUE 88 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 90 89 91 5 ./CppStatUtilities.cc:508 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 91 90 92 5 ./CppStatUtilities.cc:508 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 90 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 5, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 92 91 541)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 112 113 114 116 117 118 119
(code_label:HI 541 92 123 6 225 "" [1 uses])

(note:HI 123 541 125 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 125 123 126 6 ./CppStatUtilities.cc:514 (set (reg:DI 124 [ i.504 ])
        (sign_extend:DI (reg/v:SI 104 [ i ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(note:HI 126 125 127 6 NOTE_INSN_DELETED)

(insn:HI 127 126 1490 6 ./CppStatUtilities.cc:514 (set (reg:DI 93 [ prephitmp.466 ])
        (plus:DI (mult:DI (reg:DI 124 [ i.504 ])
                (const_int 8 [0x8]))
            (reg/v/f:DI 116 [ x ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 125 (nil))
    (expr_list:REG_DEAD (reg:DI 124 [ i.504 ])
        (nil)))

(jump_insn:HI 1490 127 1491 6 (set (pc)
        (label_ref 146)) 548 {jump} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 104 112 113 114 116 117 118 119

(barrier:HI 1491 1490 93)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 117 118 119
(code_label:HI 93 1491 94 7 165 "" [1 uses])

(note:HI 94 93 95 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 95 94 97 7 ("./CppStatUtilities.cc") 501)

(note:HI 97 95 99 7 ("./CppStatUtilities.cc") 504)

(note:HI 99 97 101 7 ("./CppStatUtilities.cc") 507)

(note:HI 101 99 102 7 ("./CppStatUtilities.cc") 512)

(insn:HI 102 101 103 7 ./CppStatUtilities.cc:512 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 117 [ xSize ])
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 103 102 105 7 ./CppStatUtilities.cc:512 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 449)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 102 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 117 118 119

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 117 118 119
(note:HI 105 103 106 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 106 105 107 8 ./CppStatUtilities.cc:512 (parallel [
            (set (reg/f:DI 111 [ D.35206 ])
                (plus:DI (reg/v/f:DI 116 [ x ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 107 106 108 8 ./CppStatUtilities.cc:512 (set (reg:DF 123)
        (mem:DF (plus:DI (reg/v/f:DI 116 [ x ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 116 [ x ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 108 107 113 8 ./CppStatUtilities.cc:512 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 123)
                        (mem:DF (reg/v/f:DI 116 [ x ]) [3 S8 A64]))
                    (label_ref:DI 464)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 107 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 123)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                            (nil))))))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112 113 114 116 117 118 119

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112 113 114 116 117 118 119
(note:HI 113 108 114 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 114 113 115 9 ./CppStatUtilities.cc:512 (set (reg/f:DI 86 [ ivtmp.495 ])
        (reg/f:DI 111 [ D.35206 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 111 [ D.35206 ])
        (nil)))

(insn:HI 115 114 1133 9 ./CppStatUtilities.cc:512 (set (reg/v:SI 104 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 1133 115 1134 9 NOTE_INSN_DELETED)

(insn:HI 1134 1133 1135 9 (parallel [
            (set (reg:SI 182)
                (plus:SI (reg/v:SI 117 [ xSize ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1135 1134 1310 9 NOTE_INSN_DELETED)

(insn:HI 1310 1135 1311 9 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 182)
                        (const_int 7 [0x7]))
                    (const_int 0 [0x0])))
            (set (reg:SI 184)
                (and:SI (reg:SI 182)
                    (const_int 7 [0x7])))
        ]) 301 {*andsi_2} (insn_list:REG_DEP_TRUE 1134 (nil))
    (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(jump_insn:HI 1311 1310 520 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1492)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1310 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

(note:HI 520 1311 116 NOTE_INSN_LOOP_BEG)

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
(code_label:HI 116 520 117 10 172 "" [3 uses])

(note:HI 117 116 118 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 118 117 119 10 ("./CppStatUtilities.cc") 514)

(insn:HI 119 118 120 10 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 83 [ i.503 ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 120 119 121 10 ./CppStatUtilities.cc:514 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 83 [ i.503 ])
            (reg/v:SI 117 [ xSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 119 (nil))
    (nil))

(jump_insn:HI 121 120 132 10 ./CppStatUtilities.cc:514 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s:DI 541)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 120 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 104 112 113 114 116 117 118 119

(note:HI 132 121 131 ("./CppStatUtilities.cc") 498)

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 104 112 113 114 116 117 118 119
(note:HI 131 132 133 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 133 131 1460 11 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 86 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 86 [ ivtmp.495 ])
        (nil)))

(insn:HI 1460 133 134 11 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 186)
                (plus:DI (reg:DI 93 [ prephitmp.466 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 133 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 134 1460 135 11 ./CppStatUtilities.cc:498 (set (reg/f:DI 195 [ ivtmp.495 ])
        (reg/f:DI 186)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 1460 (nil))
    (nil))

(note:HI 135 134 136 11 ("./CppStatUtilities.cc") 514)

(insn:HI 136 135 137 11 ./CppStatUtilities.cc:514 (set (reg:DF 126)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 137 136 521 11 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 126)
                        (mem:DF (reg:DI 93 [ prephitmp.466 ]) [3 S8 A64]))
                    (label_ref:DI 1555)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 136 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 126)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
                            (nil))))))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 195

(note:HI 521 137 146 NOTE_INSN_LOOP_END)

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 104 112 113 114 116 117 118 119
(code_label:HI 146 521 147 12 175 "" [15 uses])

(note:HI 147 146 148 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 148 147 149 12 ("./CppStatUtilities.cc") 519)

(insn:HI 149 148 150 12 ./CppStatUtilities.cc:519 (set (mem:SI (reg/f:DI 114 [ D.35196 ]) [5 S4 A32])
        (reg/v:SI 104 [ i ])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 150 149 151 12 ("./CppStatUtilities.cc") 520)

(insn:HI 151 150 152 12 ./CppStatUtilities.cc:520 (set (reg/v:DF 102 [ minVal ])
        (mem:DF (reg:DI 93 [ prephitmp.466 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DI 93 [ prephitmp.466 ])
        (nil)))

(note:HI 152 151 153 12 ("./CppStatUtilities.cc") 523)

(insn:HI 153 152 154 12 ./CppStatUtilities.cc:523 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 154 153 159 12 ("./CppStatUtilities.cc") 525)

(insn:HI 159 154 155 12 ./CppStatUtilities.cc:525 (set (reg/v:DF 101 [ maxVal ])
        (reg/v:DF 102 [ minVal ])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 155 159 156 12 ./CppStatUtilities.cc:525 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 117 [ xSize ])
            (reg/v:SI 85 [ i.501 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 153 (nil))
    (nil))

(jump_insn:HI 156 155 1579 12 ./CppStatUtilities.cc:525 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 472)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 155 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 104 112 113 114 116 117 118 119

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 104 112 113 114 116 118 119
(note:HI 1579 156 1580 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1580 1579 1581 13 (set (pc)
        (label_ref 477)) 548 {jump} (nil)
    (nil))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 104 112 113 114 116 118 119

(barrier:HI 1581 1580 524)

(note:HI 524 1581 162 NOTE_INSN_LOOP_BEG)

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161
(code_label:HI 162 524 163 14 181 "" [2 uses])

(note:HI 163 162 164 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 164 163 165 14 ("./CppStatUtilities.cc") 528)

(insn:HI 165 164 166 14 ./CppStatUtilities.cc:528 (set (reg:DI 127 [ i.501 ])
        (sign_extend:DI (reg/v:SI 85 [ i.501 ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 166 165 167 14 ./CppStatUtilities.cc:528 (parallel [
            (set (reg:DI 75 [ temp.534 ])
                (ashift:DI (reg:DI 127 [ i.501 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 165 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 127 [ i.501 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 167 166 168 14 ./CppStatUtilities.cc:528 (set (reg:DI 95 [ prephitmp.451 ])
        (reg:DI 75 [ temp.534 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 166 (nil))
    (nil))

(insn:HI 168 167 169 14 ./CppStatUtilities.cc:528 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg:DI 95 [ prephitmp.451 ])
                    (reg/v/f:DI 116 [ x ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 167 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 169 168 170 14 ./CppStatUtilities.cc:528 (set (reg:DF 160)
        (mem:DF (reg:DI 162) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 168 (nil))
    (nil))

(insn:HI 170 169 171 14 ./CppStatUtilities.cc:528 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 102 [ minVal ])
            (reg:DF 160))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 169 (nil))
    (nil))

(jump_insn:HI 171 170 176 14 ./CppStatUtilities.cc:528 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 180)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 170 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 103 112 113 114 116 117 118 119 160 161
(note:HI 176 171 177 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:HI 177 176 1501 15 ./CppStatUtilities.cc:528 (set (reg/v:DF 102 [ minVal ])
        (reg:DF 160)) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 1501 177 1502 15 (set (pc)
        (label_ref 280)) 548 {jump} (nil)
    (nil))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161

(barrier:HI 1502 1501 180)

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162
(code_label:HI 180 1502 181 16 182 "" [1 uses])

(note:HI 181 180 182 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 182 181 183 16 ("./CppStatUtilities.cc") 533)

(insn:HI 183 182 184 16 ./CppStatUtilities.cc:533 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 160)
            (reg/v:DF 102 [ minVal ]))) 31 {*cmpfp_iu_sse} (nil)
    (nil))

(jump_insn:HI 184 183 189 16 ./CppStatUtilities.cc:533 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 234)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 183 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162
(note:HI 189 184 190 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 190 189 191 17 NOTE_INSN_DELETED)

(insn:HI 191 190 192 17 ./CppStatUtilities.cc:533 (set (reg:DI 78 [ temp.527 ])
        (plus:DI (plus:DI (reg/v/f:DI 116 [ x ])
                (reg:DI 95 [ prephitmp.451 ]))
            (const_int -8 [0xfffffffffffffff8]))) 196 {*lea_2_rex64} (nil)
    (nil))

(jump_insn:HI 192 191 198 17 ./CppStatUtilities.cc:533 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (reg:DI 78 [ temp.527 ]) [3 S8 A64]))
                    (label_ref:DI 234)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 191 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (nil)))))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 78 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162

(note:HI 198 192 197 ("./CppStatUtilities.cc") 535)

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161
(note:HI 197 198 199 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:HI 199 197 200 18 ./CppStatUtilities.cc:535 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 85 [ i.501 ])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 200 199 202 18 ./CppStatUtilities.cc:535 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 199 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161
(note:HI 202 200 203 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:HI 203 202 1503 19 ./CppStatUtilities.cc:535 (parallel [
            (set (reg:SI 96 [ prephitmp.445 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(jump_insn:HI 1503 203 1504 19 (set (pc)
        (label_ref 224)) 548 {jump} (nil)
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 96 102 103 112 113 114 116 117 118 119 160 161

(barrier:HI 1504 1503 206)

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161
(code_label:HI 206 1504 207 20 191 "" [1 uses])

(note:HI 207 206 208 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:HI 208 207 209 20 ./CppStatUtilities.cc:535 (set (reg:DF 129)
        (mem:DF (plus:DI (plus:DI (reg/v/f:DI 116 [ x ])
                    (reg:DI 95 [ prephitmp.451 ]))
                (const_int -16 [0xfffffffffffffff0])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/v/f:DI 116 [ x ])
                    (reg:DI 95 [ prephitmp.451 ]))
                (const_int -16 [0xfffffffffffffff0])) [3 S8 A64])
        (nil)))

(insn:HI 209 208 210 20 ./CppStatUtilities.cc:535 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 129)
            (reg/v:DF 102 [ minVal ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 208 (nil))
    (expr_list:REG_DEAD (reg:DF 129)
        (nil)))

(jump_insn:HI 210 209 212 20 ./CppStatUtilities.cc:535 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 216)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 209 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161
(note:HI 212 210 213 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:HI 213 212 1505 21 ./CppStatUtilities.cc:535 (parallel [
            (set (reg:SI 96 [ prephitmp.445 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(jump_insn:HI 1505 213 1506 21 (set (pc)
        (label_ref 224)) 548 {jump} (nil)
    (nil))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 96 102 103 112 113 114 116 117 118 119 160 161

(barrier:HI 1506 1505 216)

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 102 103 112 113 114 116 117 118 119 160 161
(code_label:HI 216 1506 217 22 194 "" [1 uses])

(note:HI 217 216 218 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note:HI 218 217 219 22 ("./CppStatUtilities.cc") 537)

(insn:HI 219 218 221 22 ./CppStatUtilities.cc:537 (parallel [
            (set (reg:SI 96 [ prephitmp.445 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 221 219 222 22 ./CppStatUtilities.cc:537 (set (mem:SI (plus:DI (mult:DI (reg:DI 161 [ count ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])
        (reg:SI 96 [ prephitmp.445 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 219 (nil))
    (expr_list:REG_DEAD (reg:DI 161 [ count ])
        (nil)))

(note:HI 222 221 223 22 ("./CppStatUtilities.cc") 538)

(insn:HI 223 222 535 22 ./CppStatUtilities.cc:538 (parallel [
            (set (reg/v:SI 103 [ count ])
                (plus:SI (reg/v:SI 103 [ count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 535 223 224 22 (set (reg:DI 161 [ count ])
        (sign_extend:DI (reg/v:SI 103 [ count ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 223 (nil))
    (nil))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 96 102 103 112 113 114 116 117 118 119 160 161

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 78 85 95 96 102 103 112 113 114 116 117 118 119 160 161
(code_label:HI 224 535 225 23 193 "" [2 uses])

(note:HI 225 224 226 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note:HI 226 225 228 23 ("./CppStatUtilities.cc") 541)

(insn:HI 228 226 229 23 ./CppStatUtilities.cc:541 (set (mem:SI (plus:DI (mult:DI (reg:DI 161 [ count ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])
        (reg:SI 96 [ prephitmp.445 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 96 [ prephitmp.445 ])
        (nil)))

(note:HI 229 228 230 23 ("./CppStatUtilities.cc") 542)

(insn:HI 230 229 1507 23 ./CppStatUtilities.cc:542 (set (reg/v:DF 101 [ maxVal ])
        (mem:DF (reg:DI 78 [ temp.527 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DI 78 [ temp.527 ])
        (nil)))

(jump_insn:HI 1507 230 1508 23 (set (pc)
        (label_ref 280)) 548 {jump} (nil)
    (nil))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161

(barrier:HI 1508 1507 234)

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162
(code_label:HI 234 1508 235 24 186 "" [2 uses])

(note:HI 235 234 236 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note:HI 236 235 237 24 ("./CppStatUtilities.cc") 545)

(jump_insn:HI 237 236 242 24 ./CppStatUtilities.cc:545 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (reg:DF 160))
                    (label_ref:DI 280)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (nil)))))))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162
(note:HI 242 237 243 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note:HI 243 242 244 25 NOTE_INSN_DELETED)

(insn:HI 244 243 245 25 ./CppStatUtilities.cc:545 (set (reg:DI 79 [ temp.526 ])
        (plus:DI (plus:DI (reg/v/f:DI 116 [ x ])
                (reg:DI 75 [ temp.534 ]))
            (const_int -8 [0xfffffffffffffff8]))) 196 {*lea_2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 75 [ temp.534 ])
        (nil)))

(jump_insn:HI 245 244 1558 25 ./CppStatUtilities.cc:545 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (reg:DI 79 [ temp.526 ]) [3 S8 A64]))
                    (label_ref:DI 280)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 244 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (nil)))))))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 85 95 101 102 103 112 113 114 116 117 118 119 160 161 162

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 85 102 103 112 113 114 116 117 118 119 161 162
(note:HI 1558 245 1560 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1560 1558 1561 26 (set (pc)
        (label_ref 1559)) 548 {jump} (nil)
    (nil))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 85 102 103 112 113 114 116 117 118 119 161 162

(barrier:HI 1561 1560 251)

(note:HI 251 1561 522 ("./CppStatUtilities.cc") 547)

(note:HI 522 251 268 59 NOTE_INSN_LOOP_BEG)

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(code_label:HI 268 522 269 27 200 "" [3 uses])

(note:HI 269 268 270 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 270 269 523 27 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (eq (reg/v:DF 102 [ minVal ])
                        (mem:DF (reg:DI 197 [ ivtmp.489 ]) [3 S8 A64]))
                    (label_ref 260)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
                        (nil)))))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

(note:HI 523 270 271 NOTE_INSN_LOOP_END)

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119
(code_label:HI 271 523 272 28 202 "" [18 uses])

(note:HI 272 271 273 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note:HI 273 272 274 28 ("./CppStatUtilities.cc") 548)

(insn:HI 274 273 275 28 ./CppStatUtilities.cc:548 (parallel [
            (set (reg/v:SI 103 [ count ])
                (plus:SI (reg/v:SI 103 [ count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 275 274 276 28 ("./CppStatUtilities.cc") 555)

(insn:HI 276 275 277 28 ./CppStatUtilities.cc:555 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 277 276 278 28 ./CppStatUtilities.cc:555 (set (reg:DI 135 [ i.501 ])
        (sign_extend:DI (reg/v:SI 85 [ i.501 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 276 (nil))
    (nil))

(insn:HI 278 277 279 28 ./CppStatUtilities.cc:555 (parallel [
            (set (reg:DI 95 [ prephitmp.451 ])
                (ashift:DI (reg:DI 135 [ i.501 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 277 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 135 [ i.501 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 279 278 536 28 NOTE_INSN_DELETED)

(insn:HI 536 279 537 28 (set (reg:DF 160)
        (mem:DF (plus:DI (reg/v/f:DI 116 [ x ])
                (reg:DI 95 [ prephitmp.451 ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 278 (nil))
    (nil))

(insn:HI 537 536 280 28 (set (reg:DI 161 [ count ])
        (sign_extend:DI (reg/v:SI 103 [ count ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 274 (nil))
    (nil))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161
(code_label:HI 280 537 281 29 185 "" [4 uses])

(note:HI 281 280 282 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note:HI 282 281 284 29 ("./CppStatUtilities.cc") 559)

(insn:HI 284 282 285 29 ./CppStatUtilities.cc:559 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 160)
            (reg/v:DF 101 [ maxVal ]))) 31 {*cmpfp_iu_sse} (nil)
    (nil))

(jump_insn:HI 285 284 290 29 ./CppStatUtilities.cc:559 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 294)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 284 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 102 103 112 113 114 116 117 118 119 160 161
(note:HI 290 285 291 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn:HI 291 290 1515 30 ./CppStatUtilities.cc:559 (set (reg/v:DF 101 [ maxVal ])
        (reg:DF 160)) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 160)
        (nil)))

(jump_insn:HI 1515 291 1516 30 (set (pc)
        (label_ref 316)) 548 {jump} (nil)
    (nil))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161

(barrier:HI 1516 1515 294)

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161
(code_label:HI 294 1516 295 31 203 "" [1 uses])

(note:HI 295 294 296 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note:HI 296 295 297 31 ("./CppStatUtilities.cc") 563)

(insn:HI 297 296 298 31 ./CppStatUtilities.cc:563 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 101 [ maxVal ])
            (reg:DF 160))) 31 {*cmpfp_iu_sse} (nil)
    (nil))

(jump_insn:HI 298 297 303 31 ./CppStatUtilities.cc:563 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 316)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 297 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 95 101 102 103 112 113 114 116 117 118 119 160 161
(note:HI 303 298 304 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 304 303 310 32 ./CppStatUtilities.cc:563 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 101 [ maxVal ])
                        (mem:DF (plus:DI (plus:DI (reg/v/f:DI 116 [ x ])
                                    (reg:DI 95 [ prephitmp.451 ]))
                                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64]))
                    (label_ref:DI 316)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DI 95 [ prephitmp.451 ])
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                            (nil))))))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 160 161

(note:HI 310 304 309 ("./CppStatUtilities.cc") 565)

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 112 113 114 116 117 118 119 160 161
(note:HI 309 310 312 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:HI 312 309 313 33 ./CppStatUtilities.cc:565 (parallel [
            (set (reg:SI 137)
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 161 [ count ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 313 312 314 33 ./CppStatUtilities.cc:565 (set (mem:SI (plus:DI (mult:DI (reg:DI 161 [ count ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])
        (reg:SI 137)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 312 (nil))
    (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_EQUAL (plus:SI (reg/v:SI 85 [ i.501 ])
                (const_int -1 [0xffffffffffffffff]))
            (nil))))

(note:HI 314 313 315 33 ("./CppStatUtilities.cc") 566)

(insn:HI 315 314 316 33 ./CppStatUtilities.cc:566 (set (reg/v:DF 102 [ minVal ])
        (reg:DF 160)) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 160)
        (nil)))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161
(code_label:HI 316 315 317 34 206 "" [3 uses])

(note:HI 317 316 318 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note:HI 318 317 319 34 ("./CppStatUtilities.cc") 568)

(insn:HI 319 318 320 34 ./CppStatUtilities.cc:568 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 320 319 321 34 ("./CppStatUtilities.cc") 525)

(insn:HI 321 320 322 34 ./CppStatUtilities.cc:525 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 117 [ xSize ])
            (reg/v:SI 85 [ i.501 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 319 (nil))
    (nil))

(jump_insn:HI 322 321 525 34 ./CppStatUtilities.cc:525 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 162)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 321 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161

(note:HI 525 322 324 NOTE_INSN_LOOP_END)

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 118 119 161
(note:HI 324 525 326 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn:HI 326 324 328 35 ./CppStatUtilities.cc:525 (parallel [
            (set (reg/v:SI 84 [ i.502 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 85 [ i.501 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 328 326 329 35 ./CppStatUtilities.cc:525 (parallel [
            (set (reg:DI 98 [ prephitmp.418 ])
                (ashift:DI (reg:DI 161 [ count ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 161 [ count ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 329 328 330 35 ./CppStatUtilities.cc:525 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ count ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(insn:HI 330 329 332 35 ./CppStatUtilities.cc:525 (set (reg:QI 97 [ prephitmp.420 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0x0]))) 527 {*setcc_1} (insn_list:REG_DEP_TRUE 329 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_EQUAL (eq:QI (reg/v:SI 103 [ count ])
                (const_int 0 [0x0]))
            (nil))))

(insn:HI 332 330 333 35 ./CppStatUtilities.cc:525 (parallel [
            (set (reg:SI 100 [ prephitmp.406 ])
                (plus:SI (reg/v:SI 103 [ count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 333 332 335 35 ./CppStatUtilities.cc:525 (set (reg:DI 140 [ prephitmp.406 ])
        (sign_extend:DI (reg:SI 100 [ prephitmp.406 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 332 (nil))
    (nil))

(note:HI 335 333 336 35 NOTE_INSN_DELETED)

(insn:HI 336 335 337 35 ./CppStatUtilities.cc:525 (set (reg:DI 99 [ prephitmp.410 ])
        (plus:DI (mult:DI (reg:DI 140 [ prephitmp.406 ])
                (const_int 2 [0x2]))
            (reg:DI 140 [ prephitmp.406 ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 333 (nil))
    (expr_list:REG_DEAD (reg:DI 140 [ prephitmp.406 ])
        (nil)))

(note:HI 337 336 338 35 NOTE_INSN_DELETED)

(insn:HI 338 337 339 35 ./CppStatUtilities.cc:525 (parallel [
            (set (reg:DI 99 [ prephitmp.410 ])
                (ashift:DI (reg:DI 99 [ prephitmp.410 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 336 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97 98 99 100 101 102 103 112 113 114 116 118 119

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97 98 99 100 101 102 103 112 113 114 116 118 119
(code_label:HI 339 338 340 36 212 "" [1 uses])

(note:HI 340 339 341 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note:HI 341 340 342 36 ("./CppStatUtilities.cc") 573)

(insn:HI 342 341 343 36 ./CppStatUtilities.cc:573 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 114 [ D.35196 ])
                    (reg:DI 98 [ prephitmp.418 ])) [5 S4 A32])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 343 342 514 36 ./CppStatUtilities.cc:573 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 347)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 342 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97 98 99 100 101 102 103 112 113 114 116 118 119

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97 98 99 100 101 102 103 112 113 114 116 118 119
(note:HI 514 343 344 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn:HI 344 514 345 37 ./CppStatUtilities.cc:573 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ prephitmp.420 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (expr_list:REG_DEAD (reg:QI 97 [ prephitmp.420 ])
        (nil)))

(jump_insn:HI 345 344 347 37 ./CppStatUtilities.cc:573 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 378)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 344 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 101 102 103 112 113 114 116 118 119

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 101 102 103 112 113 114 116 118 119
(code_label:HI 347 345 348 38 215 "" [1 uses])

(note:HI 348 347 349 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:HI 349 348 350 38 ./CppStatUtilities.cc:573 (parallel [
            (set (reg:SI 100 [ prephitmp.406 ])
                (plus:SI (reg/v:SI 103 [ count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 103 [ count ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 350 349 352 38 ./CppStatUtilities.cc:573 (set (reg:DI 145 [ prephitmp.406 ])
        (sign_extend:DI (reg:SI 100 [ prephitmp.406 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 349 (nil))
    (nil))

(note:HI 352 350 353 38 NOTE_INSN_DELETED)

(insn:HI 353 352 354 38 ./CppStatUtilities.cc:573 (set (reg:DI 99 [ prephitmp.410 ])
        (plus:DI (mult:DI (reg:DI 145 [ prephitmp.406 ])
                (const_int 2 [0x2]))
            (reg:DI 145 [ prephitmp.406 ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 350 (nil))
    (expr_list:REG_DEAD (reg:DI 145 [ prephitmp.406 ])
        (nil)))

(note:HI 354 353 355 38 NOTE_INSN_DELETED)

(insn:HI 355 354 356 38 ./CppStatUtilities.cc:573 (parallel [
            (set (reg:DI 99 [ prephitmp.410 ])
                (ashift:DI (reg:DI 99 [ prephitmp.410 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 353 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 101 102 112 113 114 116 118 119

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 101 102 112 113 114 116 118 119
(code_label:HI 356 355 357 39 216 "" [1 uses])

(note:HI 357 356 358 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn:HI 358 357 359 39 ./CppStatUtilities.cc:573 (set (reg:DI 150 [ i.502 ])
        (sign_extend:DI (reg/v:SI 84 [ i.502 ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 359 358 360 39 ./CppStatUtilities.cc:573 (set (reg:DF 110 [ D.35219 ])
        (mem:DF (plus:DI (mult:DI (reg:DI 150 [ i.502 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 358 (nil))
    (expr_list:REG_DEAD (reg:DI 150 [ i.502 ])
        (nil)))

(insn:HI 360 359 361 39 ./CppStatUtilities.cc:573 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 110 [ D.35219 ])
            (reg/v:DF 101 [ maxVal ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 359 (nil))
    (expr_list:REG_DEAD (reg/v:DF 101 [ maxVal ])
        (nil)))

(jump_insn:HI 361 360 367 39 ./CppStatUtilities.cc:573 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 441)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 360 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 102 110 112 113 114 116 118 119

(note:HI 367 361 366 ("./CppStatUtilities.cc") 575)

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 112 113 114 116 118 119
(note:HI 366 367 368 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn:HI 368 366 369 40 ./CppStatUtilities.cc:575 (set (mem:SI (plus:DI (reg/f:DI 113 [ D.35200 ])
                (reg:DI 98 [ prephitmp.418 ])) [5 S4 A32])
        (reg/v:SI 84 [ i.502 ])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 369 368 370 40 ("./CppStatUtilities.cc") 576)

(insn:HI 370 369 1520 40 ./CppStatUtilities.cc:576 (set (mem:SI (plus:DI (reg/f:DI 112 [ D.35203 ])
                (reg:DI 98 [ prephitmp.418 ])) [5 S4 A32])
        (reg/v:SI 84 [ i.502 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 84 [ i.502 ])
        (expr_list:REG_DEAD (reg:DI 98 [ prephitmp.418 ])
            (nil))))

(jump_insn:HI 1520 370 1521 40 (set (pc)
        (label_ref 378)) 548 {jump} (nil)
    (nil))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 112 113 114 116 118 119

(barrier:HI 1521 1520 374)

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 112 113 114 116 118 119
(code_label:HI 374 1521 375 41 220 "" [1 uses])

(note:HI 375 374 376 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note:HI 376 375 377 41 ("./CppStatUtilities.cc") 580)

(insn:HI 377 376 378 41 ./CppStatUtilities.cc:580 (set (mem:SI (plus:DI (reg/f:DI 112 [ D.35203 ])
                (reg:DI 98 [ prephitmp.418 ])) [5 S4 A32])
        (reg/v:SI 84 [ i.502 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 84 [ i.502 ])
        (expr_list:REG_DEAD (reg:DI 98 [ prephitmp.418 ])
            (nil))))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 112 113 114 116 118 119

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 112 113 114 116 118 119
(code_label:HI 378 377 379 42 213 "" [3 uses])

(note:HI 379 378 380 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note:HI 380 379 381 42 ("./CppStatUtilities.cc") 583)

(insn:HI 381 380 382 42 ./CppStatUtilities.cc:583 (set (mem:SI (reg/v/f:DI 119 [ nPeaks ]) [5 S4 A32])
        (reg:SI 100 [ prephitmp.406 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 100 [ prephitmp.406 ])
        (nil)))

(note:HI 382 381 383 42 ("./CppStatUtilities.cc") 584)

(insn:HI 383 382 384 42 ./CppStatUtilities.cc:584 (set (reg:DI 5 di [ prephitmp.410 ])
        (reg:DI 99 [ prephitmp.410 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 99 [ prephitmp.410 ])
        (nil)))

(call_insn:HI 384 383 385 42 ./CppStatUtilities.cc:584 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 383 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ prephitmp.410 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ prephitmp.410 ]))
        (nil)))

(insn:HI 385 384 387 42 ./CppStatUtilities.cc:584 (set (reg/f:DI 91 [ ivtmp.477 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 384 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 151)
            (nil))))

(insn:HI 387 385 388 42 ./CppStatUtilities.cc:584 (set (mem/f:DI (reg/v/f:DI 118 [ peakPar ]) [17 S8 A64])
        (reg/f:DI 91 [ ivtmp.477 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 385 (nil))
    (expr_list:REG_DEAD (reg/v/f:DI 118 [ peakPar ])
        (nil)))

(note:HI 388 387 389 42 ("./CppStatUtilities.cc") 586)

(insn:HI 389 388 390 42 ./CppStatUtilities.cc:586 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem:SI (reg/v/f:DI 119 [ nPeaks ]) [5 S4 A32])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 390 389 526 42 ./CppStatUtilities.cc:586 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1563)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 389 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 119

(note:HI 526 390 527 NOTE_INSN_LOOP_BEG)

(note:HI 527 526 429 NOTE_INSN_LOOP_END)

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114
(code_label:HI 429 527 430 43 221 "" [3 uses])

(note:HI 430 429 431 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(note:HI 431 430 432 43 ("./CppStatUtilities.cc") 598)

(insn:HI 432 431 433 43 ./CppStatUtilities.cc:598 (set (reg:DI 5 di [ minLInd ])
        (reg/f:DI 114 [ D.35196 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 114 [ D.35196 ])
        (nil)))

(call_insn:HI 433 432 434 43 ./CppStatUtilities.cc:598 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 432 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ minLInd ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ minLInd ]))
        (nil)))

(note:HI 434 433 435 43 ("./CppStatUtilities.cc") 599)

(insn:HI 435 434 436 43 ./CppStatUtilities.cc:599 (set (reg:DI 5 di [ minRInd ])
        (reg/f:DI 112 [ D.35203 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 112 [ D.35203 ])
        (nil)))

(call_insn:HI 436 435 437 43 ./CppStatUtilities.cc:599 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 435 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ minRInd ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ minRInd ]))
        (nil)))

(note:HI 437 436 438 43 ("./CppStatUtilities.cc") 600)

(insn:HI 438 437 439 43 ./CppStatUtilities.cc:600 (set (reg:DI 5 di [ maxInd ])
        (reg/f:DI 113 [ D.35200 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 113 [ D.35200 ])
        (nil)))

(call_insn/j:HI 439 438 440 43 ./CppStatUtilities.cc:600 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 438 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ maxInd ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ maxInd ]))
        (nil)))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 440 439 441)

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 102 110 112 113 114 116 118 119
(code_label:HI 441 440 442 44 217 "" [1 uses])

(note:HI 442 441 443 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(note:HI 443 442 444 44 ("./CppStatUtilities.cc") 578)

(insn:HI 444 443 445 44 ./CppStatUtilities.cc:578 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 102 [ minVal ])
            (reg:DF 110 [ D.35219 ]))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 102 [ minVal ])
        (expr_list:REG_DEAD (reg:DF 110 [ D.35219 ])
            (nil))))

(jump_insn:HI 445 444 1532 44 ./CppStatUtilities.cc:578 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 374)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 444 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 112 113 114 116 118 119

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 112 113 114 116 118 119
(note:HI 1532 445 1533 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1533 1532 1534 45 (set (pc)
        (label_ref 378)) 548 {jump} (nil)
    (nil))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 112 113 114 116 118 119

(barrier:HI 1534 1533 449)

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 118 119
(code_label:HI 449 1534 450 46 167 "" [1 uses])

(note:HI 450 449 451 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(note:HI 451 450 452 46 ("./CppStatUtilities.cc") 519)

(insn:HI 452 451 453 46 ./CppStatUtilities.cc:519 (set (mem:SI (reg/f:DI 114 [ D.35196 ]) [5 S4 A32])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 453 452 454 46 ("./CppStatUtilities.cc") 520)

(insn:HI 454 453 455 46 ./CppStatUtilities.cc:520 (set (reg/v:DF 102 [ minVal ])
        (mem:DF (reg/v/f:DI 116 [ x ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 455 454 456 46 ./CppStatUtilities.cc:520 (set (reg/v:DF 101 [ maxVal ])
        (reg/v:DF 102 [ minVal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 454 (nil))
    (nil))

(insn:HI 456 455 457 46 ./CppStatUtilities.cc:520 (set (reg/v:SI 103 [ count ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 457 456 458 46 ./CppStatUtilities.cc:520 (set (reg/v:SI 84 [ i.502 ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 458 457 459 46 ./CppStatUtilities.cc:520 (set (reg:DI 98 [ prephitmp.418 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 459 458 460 46 ./CppStatUtilities.cc:520 (set (reg:QI 97 [ prephitmp.420 ])
        (const_int 1 [0x1])) 55 {*movqi_1} (nil)
    (nil))

(insn:HI 460 459 461 46 ./CppStatUtilities.cc:520 (set (reg:SI 100 [ prephitmp.406 ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 461 460 1535 46 ./CppStatUtilities.cc:520 (set (reg:DI 99 [ prephitmp.410 ])
        (const_int 48 [0x30])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn:HI 1535 461 1536 46 (set (pc)
        (label_ref 339)) 548 {jump} (nil)
    (nil))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97 98 99 100 101 102 103 112 113 114 116 118 119

(barrier:HI 1536 1535 464)

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 117 118 119
(code_label:HI 464 1536 465 47 169 "" [1 uses])

(note:HI 465 464 466 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(note:HI 466 465 467 47 ("./CppStatUtilities.cc") 519)

(insn:HI 467 466 468 47 ./CppStatUtilities.cc:519 (set (mem:SI (reg/f:DI 114 [ D.35196 ]) [5 S4 A32])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 468 467 469 47 ("./CppStatUtilities.cc") 520)

(insn:HI 469 468 470 47 ./CppStatUtilities.cc:520 (set (reg/v:DF 102 [ minVal ])
        (mem:DF (reg/v/f:DI 116 [ x ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 470 469 471 47 ./CppStatUtilities.cc:520 (set (reg/v:DF 101 [ maxVal ])
        (reg/v:DF 102 [ minVal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 469 (nil))
    (nil))

(insn:HI 471 470 472 47 ./CppStatUtilities.cc:520 (set (reg/v:SI 85 [ i.501 ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 112 113 114 116 117 118 119

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 112 113 114 116 117 118 119
(code_label:HI 472 471 473 48 180 "" [1 uses])

(note:HI 473 472 474 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn:HI 474 473 538 48 ./CppStatUtilities.cc:520 (set (reg/v:SI 103 [ count ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 538 474 1537 48 (set (reg:DI 161 [ count ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn:HI 1537 538 1538 48 (set (pc)
        (label_ref 162)) 548 {jump} (nil)
    (nil))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 161

(barrier:HI 1538 1537 477)

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 104 112 113 114 116 118 119
(code_label:HI 477 1538 478 49 178 "" [1 uses])

(note:HI 478 477 479 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note:HI 479 478 480 49 ("./CppStatUtilities.cc") 570)

(insn:HI 480 479 481 49 ./CppStatUtilities.cc:570 (set (reg/v:SI 84 [ i.502 ])
        (reg/v:SI 104 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 104 [ i ])
        (nil)))

(insn:HI 481 480 482 49 ./CppStatUtilities.cc:570 (set (reg/v:DF 101 [ maxVal ])
        (reg/v:DF 102 [ minVal ])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 482 481 483 49 ./CppStatUtilities.cc:570 (set (reg:DI 98 [ prephitmp.418 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 483 482 484 49 ./CppStatUtilities.cc:570 (set (reg:SI 100 [ prephitmp.406 ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 484 483 1539 49 ./CppStatUtilities.cc:570 (set (reg:DI 99 [ prephitmp.410 ])
        (const_int 48 [0x30])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn:HI 1539 484 1540 49 (set (pc)
        (label_ref 356)) 548 {jump} (nil)
    (nil))
;; End of basic block 49, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 98 99 100 101 102 112 113 114 116 118 119

(barrier:HI 1540 1539 1563)

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 119
(code_label:HI 1563 1540 392 50 304 "" [1 uses])

(note:HI 392 1563 542 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn:HI 542 392 559 50 (set (reg/v:SI 163)
        (mem:SI (reg/v/f:DI 119 [ nPeaks ]) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 119 [ nPeaks ])
        (nil)))

(note:HI 559 542 560 50 NOTE_INSN_DELETED)

(note:HI 560 559 561 50 NOTE_INSN_DELETED)

(note:HI 561 560 562 50 NOTE_INSN_DELETED)

(insn:HI 562 561 563 50 (parallel [
            (set (reg:SI 174)
                (plus:SI (reg/v:SI 163)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 542 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 563 562 566 50 (parallel [
            (set (reg:SI 174)
                (and:SI (reg:SI 174)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 562 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 566 563 567 50 ("./CppStatUtilities.cc") 498)

(note:HI 567 566 568 50 ("./CppStatUtilities.cc") 588)

(insn:HI 568 567 569 50 ./CppStatUtilities.cc:588 (set (reg:SI 153)
        (mem:SI (reg/f:DI 114 [ D.35196 ]) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (reg/f:DI 114 [ D.35196 ]) [5 S4 A32])
        (nil)))

(insn:HI 569 568 570 50 ./CppStatUtilities.cc:588 (set (reg:DI 152)
        (sign_extend:DI (reg:SI 153))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 568 (nil))
    (nil))

(insn:HI 570 569 571 50 ./CppStatUtilities.cc:588 (set (reg:DF 154)
        (mem:DF (plus:DI (mult:DI (reg:DI 152)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 569 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 152)
            (nil))))

(insn:HI 571 570 572 50 ./CppStatUtilities.cc:588 (set (mem/s:DF (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (reg:DF 154)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 570 (nil))
    (expr_list:REG_DEAD (reg:DF 154)
        (nil)))

(note:HI 572 571 573 50 ("./CppStatUtilities.cc") 498)

(note:HI 573 572 574 50 ("./CppStatUtilities.cc") 589)

(insn:HI 574 573 575 50 ./CppStatUtilities.cc:589 (set (mem/s:SI (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                (const_int 16 [0x10])) [5 <variable>.startInd+0 S4 A8])
        (reg:SI 153)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(note:HI 575 574 576 50 ("./CppStatUtilities.cc") 591)

(insn:HI 576 575 577 50 ./CppStatUtilities.cc:591 (set (reg:SI 109 [ D.35278 ])
        (mem:SI (reg/f:DI 112 [ D.35203 ]) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (reg/f:DI 112 [ D.35203 ]) [5 S4 A32])
        (nil)))

(insn:HI 577 576 578 50 ./CppStatUtilities.cc:591 (set (reg:DI 156 [ D.35278 ])
        (sign_extend:DI (reg:SI 109 [ D.35278 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 576 (nil))
    (nil))

(insn:HI 578 577 579 50 ./CppStatUtilities.cc:591 (set (reg:DF 157)
        (mem:DF (plus:DI (mult:DI (reg:DI 156 [ D.35278 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 577 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 156 [ D.35278 ])
            (nil))))

(insn:HI 579 578 580 50 ./CppStatUtilities.cc:591 (set (mem/s:DF (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (reg:DF 157)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 578 (nil))
    (expr_list:REG_DEAD (reg:DF 157)
        (nil)))

(note:HI 580 579 581 50 ("./CppStatUtilities.cc") 592)

(insn:HI 581 580 582 50 ./CppStatUtilities.cc:592 (set (mem/s:SI (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                (const_int 32 [0x20])) [5 <variable>.endInd+0 S4 A8])
        (reg:SI 109 [ D.35278 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 109 [ D.35278 ])
        (nil)))

(note:HI 582 581 583 50 ("./CppStatUtilities.cc") 594)

(insn:HI 583 582 584 50 ./CppStatUtilities.cc:594 (set (reg:SI 108 [ D.35285 ])
        (mem:SI (reg/f:DI 113 [ D.35200 ]) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (reg/f:DI 113 [ D.35200 ]) [5 S4 A32])
        (nil)))

(insn:HI 584 583 585 50 ./CppStatUtilities.cc:594 (set (reg:DI 158 [ D.35285 ])
        (sign_extend:DI (reg:SI 108 [ D.35285 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 583 (nil))
    (nil))

(insn:HI 585 584 586 50 ./CppStatUtilities.cc:594 (set (reg:DF 159)
        (mem:DF (plus:DI (mult:DI (reg:DI 158 [ D.35285 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 584 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 158 [ D.35285 ])
            (nil))))

(insn:HI 586 585 587 50 ./CppStatUtilities.cc:594 (set (mem/s:DF (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (reg:DF 159)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 585 (nil))
    (expr_list:REG_DEAD (reg:DF 159)
        (nil)))

(note:HI 587 586 588 50 ("./CppStatUtilities.cc") 595)

(insn:HI 588 587 590 50 ./CppStatUtilities.cc:595 (set (mem/s:SI (reg/f:DI 91 [ ivtmp.477 ]) [5 <variable>.maxInd+0 S4 A8])
        (reg:SI 108 [ D.35285 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 108 [ D.35285 ])
        (nil)))

(insn:HI 590 588 591 50 ./CppStatUtilities.cc:595 (set (reg:DI 199 [ ivtmp.471 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 591 590 592 50 ./CppStatUtilities.cc:595 (parallel [
            (set (reg/f:DI 203 [ ivtmp.477 ])
                (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 592 591 593 50 ("./CppStatUtilities.cc") 586)

(insn:HI 593 592 594 50 ./CppStatUtilities.cc:586 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 163)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 594 593 724 50 ./CppStatUtilities.cc:586 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 429)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 593 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 50, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203
(note:HI 724 594 722 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn:HI 722 724 723 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 174)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 723 722 683 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 394)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 722 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 51, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203
(note:HI 683 723 681 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn:HI 681 683 682 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 174)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 682 681 642 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1566)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 681 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 52, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203

;; Start of basic block 53, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 174 199 203
(note:HI 642 682 640 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn:HI 640 642 641 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 174)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(jump_insn:HI 641 640 632 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1567)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 640 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 53, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 199 203

;; Start of basic block 54, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112 113 114 116 163 203
(note:HI 632 641 603 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(note:HI 603 632 604 54 ("./CppStatUtilities.cc") 498)

(note:HI 604 603 605 54 ("./CppStatUtilities.cc") 588)

(insn:HI 605 604 606 54 ./CppStatUtilities.cc:588 (set (reg:SI 247)
        (mem:SI (plus:DI (reg/f:DI 114 [ D.35196 ])
                (const_int 4 [0x4])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 114 [ D.35196 ])
                (const_int 4 [0x4])) [5 S4 A32])
        (nil)))

(insn:HI 606 605 607 54 ./CppStatUtilities.cc:588 (set (reg:DI 248)
        (sign_extend:DI (reg:SI 247))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 605 (nil))
    (nil))

(insn:HI 607 606 608 54 ./CppStatUtilities.cc:588 (set (reg:DF 249)
        (mem:DF (plus:DI (mult:DI (reg:DI 248)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 606 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 248)
            (nil))))

(insn:HI 608 607 609 54 ./CppStatUtilities.cc:588 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (reg:DF 249)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 607 (nil))
    (expr_list:REG_DEAD (reg:DF 249)
        (nil)))

(note:HI 609 608 610 54 ("./CppStatUtilities.cc") 498)

(note:HI 610 609 611 54 ("./CppStatUtilities.cc") 589)

(insn:HI 611 610 612 54 ./CppStatUtilities.cc:589 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 16 [0x10])) [5 <variable>.startInd+0 S4 A8])
        (reg:SI 247)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 247)
        (nil)))

(note:HI 612 611 613 54 ("./CppStatUtilities.cc") 591)

(insn:HI 613 612 614 54 ./CppStatUtilities.cc:591 (set (reg:SI 250 [ D.35278 ])
        (mem:SI (plus:DI (reg/f:DI 112 [ D.35203 ])
                (const_int 4 [0x4])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 112 [ D.35203 ])
                (const_int 4 [0x4])) [5 S4 A32])
        (nil)))

(insn:HI 614 613 615 54 ./CppStatUtilities.cc:591 (set (reg:DI 251 [ D.35278 ])
        (sign_extend:DI (reg:SI 250 [ D.35278 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 613 (nil))
    (nil))

(insn:HI 615 614 616 54 ./CppStatUtilities.cc:591 (set (reg:DF 252)
        (mem:DF (plus:DI (mult:DI (reg:DI 251 [ D.35278 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 614 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 251 [ D.35278 ])
            (nil))))

(insn:HI 616 615 617 54 ./CppStatUtilities.cc:591 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (reg:DF 252)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 615 (nil))
    (expr_list:REG_DEAD (reg:DF 252)
        (nil)))

(note:HI 617 616 618 54 ("./CppStatUtilities.cc") 592)

(insn:HI 618 617 619 54 ./CppStatUtilities.cc:592 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 32 [0x20])) [5 <variable>.endInd+0 S4 A8])
        (reg:SI 250 [ D.35278 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 250 [ D.35278 ])
        (nil)))

(note:HI 619 618 620 54 ("./CppStatUtilities.cc") 594)

(insn:HI 620 619 621 54 ./CppStatUtilities.cc:594 (set (reg:SI 253 [ D.35285 ])
        (mem:SI (plus:DI (reg/f:DI 113 [ D.35200 ])
                (const_int 4 [0x4])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 113 [ D.35200 ])
                (const_int 4 [0x4])) [5 S4 A32])
        (nil)))

(insn:HI 621 620 622 54 ./CppStatUtilities.cc:594 (set (reg:DI 254 [ D.35285 ])
        (sign_extend:DI (reg:SI 253 [ D.35285 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 620 (nil))
    (nil))

(insn:HI 622 621 623 54 ./CppStatUtilities.cc:594 (set (reg:DF 255)
        (mem:DF (plus:DI (mult:DI (reg:DI 254 [ D.35285 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 621 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 254 [ D.35285 ])
            (nil))))

(insn:HI 623 622 624 54 ./CppStatUtilities.cc:594 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (reg:DF 255)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 622 (nil))
    (expr_list:REG_DEAD (reg:DF 255)
        (expr_list:REG_DEAD (reg/f:DI 203 [ ivtmp.477 ])
            (nil))))

(note:HI 624 623 625 54 ("./CppStatUtilities.cc") 595)

(insn:HI 625 624 627 54 ./CppStatUtilities.cc:595 (set (mem/s:SI (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                (const_int 48 [0x30])) [5 <variable>.maxInd+0 S4 A8])
        (reg:SI 253 [ D.35285 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 253 [ D.35285 ])
        (nil)))

(insn:HI 627 625 628 54 ./CppStatUtilities.cc:595 (set (reg:DI 199 [ ivtmp.471 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 628 627 629 54 ./CppStatUtilities.cc:595 (parallel [
            (set (reg/f:DI 203 [ ivtmp.477 ])
                (plus:DI (reg/f:DI 91 [ ivtmp.477 ])
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 91 [ ivtmp.477 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 629 628 1567 54 ("./CppStatUtilities.cc") 586)
;; End of basic block 54, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203

;; Start of basic block 55, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
(code_label:HI 1567 629 673 55 306 "" [1 uses])

(note:HI 673 1567 644 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(note:HI 644 673 645 55 ("./CppStatUtilities.cc") 498)

(note:HI 645 644 646 55 ("./CppStatUtilities.cc") 588)

(insn:HI 646 645 647 55 ./CppStatUtilities.cc:588 (set (reg:SI 257)
        (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])
        (nil)))

(insn:HI 647 646 648 55 ./CppStatUtilities.cc:588 (set (reg:DI 258)
        (sign_extend:DI (reg:SI 257))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 646 (nil))
    (nil))

(insn:HI 648 647 649 55 ./CppStatUtilities.cc:588 (set (reg:DF 259)
        (mem:DF (plus:DI (mult:DI (reg:DI 258)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 647 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 258)
            (nil))))

(insn:HI 649 648 650 55 ./CppStatUtilities.cc:588 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (reg:DF 259)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 648 (nil))
    (expr_list:REG_DEAD (reg:DF 259)
        (nil)))

(note:HI 650 649 651 55 ("./CppStatUtilities.cc") 498)

(note:HI 651 650 652 55 ("./CppStatUtilities.cc") 589)

(insn:HI 652 651 653 55 ./CppStatUtilities.cc:589 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 16 [0x10])) [5 <variable>.startInd+0 S4 A8])
        (reg:SI 257)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 257)
        (nil)))

(note:HI 653 652 654 55 ("./CppStatUtilities.cc") 591)

(insn:HI 654 653 655 55 ./CppStatUtilities.cc:591 (set (reg:SI 260 [ D.35278 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])
        (nil)))

(insn:HI 655 654 656 55 ./CppStatUtilities.cc:591 (set (reg:DI 261 [ D.35278 ])
        (sign_extend:DI (reg:SI 260 [ D.35278 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 654 (nil))
    (nil))

(insn:HI 656 655 657 55 ./CppStatUtilities.cc:591 (set (reg:DF 262)
        (mem:DF (plus:DI (mult:DI (reg:DI 261 [ D.35278 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 655 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 261 [ D.35278 ])
            (nil))))

(insn:HI 657 656 658 55 ./CppStatUtilities.cc:591 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (reg:DF 262)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 656 (nil))
    (expr_list:REG_DEAD (reg:DF 262)
        (nil)))

(note:HI 658 657 659 55 ("./CppStatUtilities.cc") 592)

(insn:HI 659 658 660 55 ./CppStatUtilities.cc:592 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 32 [0x20])) [5 <variable>.endInd+0 S4 A8])
        (reg:SI 260 [ D.35278 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 260 [ D.35278 ])
        (nil)))

(note:HI 660 659 661 55 ("./CppStatUtilities.cc") 594)

(insn:HI 661 660 662 55 ./CppStatUtilities.cc:594 (set (reg:SI 263 [ D.35285 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])
        (nil)))

(insn:HI 662 661 663 55 ./CppStatUtilities.cc:594 (set (reg:DI 264 [ D.35285 ])
        (sign_extend:DI (reg:SI 263 [ D.35285 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 661 (nil))
    (nil))

(insn:HI 663 662 664 55 ./CppStatUtilities.cc:594 (set (reg:DF 265)
        (mem:DF (plus:DI (mult:DI (reg:DI 264 [ D.35285 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 662 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 264 [ D.35285 ])
            (nil))))

(insn:HI 664 663 665 55 ./CppStatUtilities.cc:594 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (reg:DF 265)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 663 (nil))
    (expr_list:REG_DEAD (reg:DF 265)
        (nil)))

(note:HI 665 664 666 55 ("./CppStatUtilities.cc") 595)

(insn:HI 666 665 668 55 ./CppStatUtilities.cc:595 (set (mem/s:SI (reg/f:DI 203 [ ivtmp.477 ]) [5 <variable>.maxInd+0 S4 A8])
        (reg:SI 263 [ D.35285 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 263 [ D.35285 ])
        (nil)))

(insn:HI 668 666 669 55 ./CppStatUtilities.cc:595 (parallel [
            (set (reg:DI 199 [ ivtmp.471 ])
                (plus:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 669 668 670 55 ./CppStatUtilities.cc:595 (parallel [
            (set (reg/f:DI 203 [ ivtmp.477 ])
                (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 670 669 1566 55 ("./CppStatUtilities.cc") 586)
;; End of basic block 55, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203

;; Start of basic block 56, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
(code_label:HI 1566 670 714 56 305 "" [1 uses])

(note:HI 714 1566 685 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(note:HI 685 714 686 56 ("./CppStatUtilities.cc") 498)

(note:HI 686 685 687 56 ("./CppStatUtilities.cc") 588)

(insn:HI 687 686 688 56 ./CppStatUtilities.cc:588 (set (reg:SI 267)
        (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])
        (nil)))

(insn:HI 688 687 689 56 ./CppStatUtilities.cc:588 (set (reg:DI 268)
        (sign_extend:DI (reg:SI 267))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 687 (nil))
    (nil))

(insn:HI 689 688 690 56 ./CppStatUtilities.cc:588 (set (reg:DF 269)
        (mem:DF (plus:DI (mult:DI (reg:DI 268)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 688 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 268)
            (nil))))

(insn:HI 690 689 691 56 ./CppStatUtilities.cc:588 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (reg:DF 269)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 689 (nil))
    (expr_list:REG_DEAD (reg:DF 269)
        (nil)))

(note:HI 691 690 692 56 ("./CppStatUtilities.cc") 498)

(note:HI 692 691 693 56 ("./CppStatUtilities.cc") 589)

(insn:HI 693 692 694 56 ./CppStatUtilities.cc:589 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 16 [0x10])) [5 <variable>.startInd+0 S4 A8])
        (reg:SI 267)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 267)
        (nil)))

(note:HI 694 693 695 56 ("./CppStatUtilities.cc") 591)

(insn:HI 695 694 696 56 ./CppStatUtilities.cc:591 (set (reg:SI 270 [ D.35278 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])
        (nil)))

(insn:HI 696 695 697 56 ./CppStatUtilities.cc:591 (set (reg:DI 271 [ D.35278 ])
        (sign_extend:DI (reg:SI 270 [ D.35278 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 695 (nil))
    (nil))

(insn:HI 697 696 698 56 ./CppStatUtilities.cc:591 (set (reg:DF 272)
        (mem:DF (plus:DI (mult:DI (reg:DI 271 [ D.35278 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 696 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 271 [ D.35278 ])
            (nil))))

(insn:HI 698 697 699 56 ./CppStatUtilities.cc:591 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (reg:DF 272)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 697 (nil))
    (expr_list:REG_DEAD (reg:DF 272)
        (nil)))

(note:HI 699 698 700 56 ("./CppStatUtilities.cc") 592)

(insn:HI 700 699 701 56 ./CppStatUtilities.cc:592 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 32 [0x20])) [5 <variable>.endInd+0 S4 A8])
        (reg:SI 270 [ D.35278 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 270 [ D.35278 ])
        (nil)))

(note:HI 701 700 702 56 ("./CppStatUtilities.cc") 594)

(insn:HI 702 701 703 56 ./CppStatUtilities.cc:594 (set (reg:SI 273 [ D.35285 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])
        (nil)))

(insn:HI 703 702 704 56 ./CppStatUtilities.cc:594 (set (reg:DI 274 [ D.35285 ])
        (sign_extend:DI (reg:SI 273 [ D.35285 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 702 (nil))
    (nil))

(insn:HI 704 703 705 56 ./CppStatUtilities.cc:594 (set (reg:DF 275)
        (mem:DF (plus:DI (mult:DI (reg:DI 274 [ D.35285 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 703 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 274 [ D.35285 ])
            (nil))))

(insn:HI 705 704 706 56 ./CppStatUtilities.cc:594 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (reg:DF 275)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 704 (nil))
    (expr_list:REG_DEAD (reg:DF 275)
        (nil)))

(note:HI 706 705 707 56 ("./CppStatUtilities.cc") 595)

(insn:HI 707 706 708 56 ./CppStatUtilities.cc:595 (set (mem/s:SI (reg/f:DI 203 [ ivtmp.477 ]) [5 <variable>.maxInd+0 S4 A8])
        (reg:SI 273 [ D.35285 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 273 [ D.35285 ])
        (nil)))

(insn:HI 708 707 709 56 ./CppStatUtilities.cc:595 (parallel [
            (set (reg/v:SI 276 [ i.505 ])
                (plus:SI (subreg:SI (reg:DI 199 [ ivtmp.471 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 709 708 710 56 ./CppStatUtilities.cc:595 (parallel [
            (set (reg:DI 199 [ ivtmp.471 ])
                (plus:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 710 709 711 56 ./CppStatUtilities.cc:595 (parallel [
            (set (reg/f:DI 203 [ ivtmp.477 ])
                (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 711 710 712 56 ("./CppStatUtilities.cc") 586)

(insn:HI 712 711 713 56 ./CppStatUtilities.cc:586 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 163)
            (reg/v:SI 276 [ i.505 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 708 (nil))
    (expr_list:REG_DEAD (reg/v:SI 276 [ i.505 ])
        (nil)))

(jump_insn:HI 713 712 394 56 ./CppStatUtilities.cc:586 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 429)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 712 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 56, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203

;; Start of basic block 57, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
(code_label:HI 394 713 395 57 223 "" [2 uses])

(note:HI 395 394 396 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(note:HI 396 395 399 57 ("./CppStatUtilities.cc") 498)

(note:HI 399 396 400 57 ("./CppStatUtilities.cc") 588)

(insn:HI 400 399 401 57 ./CppStatUtilities.cc:588 (set (reg:SI 200)
        (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])
        (nil)))

(insn:HI 401 400 402 57 ./CppStatUtilities.cc:588 (set (reg:DI 201)
        (sign_extend:DI (reg:SI 200))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 400 (nil))
    (nil))

(insn:HI 402 401 403 57 ./CppStatUtilities.cc:588 (set (reg:DF 202)
        (mem:DF (plus:DI (mult:DI (reg:DI 201)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 401 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 201)
            (nil))))

(insn:HI 403 402 404 57 ./CppStatUtilities.cc:588 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (reg:DF 202)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 402 (nil))
    (expr_list:REG_DEAD (reg:DF 202)
        (nil)))

(note:HI 404 403 406 57 ("./CppStatUtilities.cc") 498)

(note:HI 406 404 408 57 ("./CppStatUtilities.cc") 589)

(insn:HI 408 406 409 57 ./CppStatUtilities.cc:589 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 16 [0x10])) [5 <variable>.startInd+0 S4 A8])
        (reg:SI 200)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(note:HI 409 408 410 57 ("./CppStatUtilities.cc") 591)

(insn:HI 410 409 411 57 ./CppStatUtilities.cc:591 (set (reg:SI 204 [ D.35278 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])
        (nil)))

(insn:HI 411 410 412 57 ./CppStatUtilities.cc:591 (set (reg:DI 205 [ D.35278 ])
        (sign_extend:DI (reg:SI 204 [ D.35278 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 410 (nil))
    (nil))

(insn:HI 412 411 413 57 ./CppStatUtilities.cc:591 (set (reg:DF 206)
        (mem:DF (plus:DI (mult:DI (reg:DI 205 [ D.35278 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 411 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 205 [ D.35278 ])
            (nil))))

(insn:HI 413 412 414 57 ./CppStatUtilities.cc:591 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (reg:DF 206)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 412 (nil))
    (expr_list:REG_DEAD (reg:DF 206)
        (nil)))

(note:HI 414 413 415 57 ("./CppStatUtilities.cc") 592)

(insn:HI 415 414 416 57 ./CppStatUtilities.cc:592 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 32 [0x20])) [5 <variable>.endInd+0 S4 A8])
        (reg:SI 204 [ D.35278 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 204 [ D.35278 ])
        (nil)))

(note:HI 416 415 417 57 ("./CppStatUtilities.cc") 594)

(insn:HI 417 416 418 57 ./CppStatUtilities.cc:594 (set (reg:SI 207 [ D.35285 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])
        (nil)))

(insn:HI 418 417 419 57 ./CppStatUtilities.cc:594 (set (reg:DI 208 [ D.35285 ])
        (sign_extend:DI (reg:SI 207 [ D.35285 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 417 (nil))
    (nil))

(insn:HI 419 418 420 57 ./CppStatUtilities.cc:594 (set (reg:DF 209)
        (mem:DF (plus:DI (mult:DI (reg:DI 208 [ D.35285 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 418 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 208 [ D.35285 ])
            (nil))))

(insn:HI 420 419 421 57 ./CppStatUtilities.cc:594 (set (mem/s:DF (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (reg:DF 209)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 419 (nil))
    (expr_list:REG_DEAD (reg:DF 209)
        (nil)))

(note:HI 421 420 422 57 ("./CppStatUtilities.cc") 595)

(insn:HI 422 421 833 57 ./CppStatUtilities.cc:595 (set (mem/s:SI (reg/f:DI 203 [ ivtmp.477 ]) [5 <variable>.maxInd+0 S4 A8])
        (reg:SI 207 [ D.35285 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 207 [ D.35285 ])
        (nil)))

(insn:HI 833 422 834 57 ./CppStatUtilities.cc:595 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 834 833 426 57 ./CppStatUtilities.cc:595 (parallel [
            (set (reg/f:DI 175)
                (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 426 834 726 57 ("./CppStatUtilities.cc") 586)

(note:HI 726 426 727 57 ("./CppStatUtilities.cc") 498)

(note:HI 727 726 728 57 ("./CppStatUtilities.cc") 588)

(insn:HI 728 727 729 57 ./CppStatUtilities.cc:588 (set (reg:SI 212)
        (mem:SI (plus:DI (mult:DI (reg:DI 176)
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 833 (nil))
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 176)
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])
        (nil)))

(insn:HI 729 728 730 57 ./CppStatUtilities.cc:588 (set (reg:DI 213)
        (sign_extend:DI (reg:SI 212))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 728 (nil))
    (nil))

(insn:HI 730 729 731 57 ./CppStatUtilities.cc:588 (set (reg:DF 214)
        (mem:DF (plus:DI (mult:DI (reg:DI 213)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 729 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 175)
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 213)
            (nil))))

(insn:HI 731 730 732 57 ./CppStatUtilities.cc:588 (set (mem/s:DF (plus:DI (reg/f:DI 175)
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (reg:DF 214)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 834 (insn_list:REG_DEP_TRUE 730 (nil)))
    (expr_list:REG_DEAD (reg:DF 214)
        (nil)))

(note:HI 732 731 733 57 ("./CppStatUtilities.cc") 498)

(note:HI 733 732 734 57 ("./CppStatUtilities.cc") 589)

(insn:HI 734 733 735 57 ./CppStatUtilities.cc:589 (set (mem/s:SI (plus:DI (reg/f:DI 175)
                (const_int 16 [0x10])) [5 <variable>.startInd+0 S4 A8])
        (reg:SI 212)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(note:HI 735 734 736 57 ("./CppStatUtilities.cc") 591)

(insn:HI 736 735 737 57 ./CppStatUtilities.cc:591 (set (reg:SI 216 [ D.35278 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 176)
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 176)
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])
        (nil)))

(insn:HI 737 736 738 57 ./CppStatUtilities.cc:591 (set (reg:DI 217 [ D.35278 ])
        (sign_extend:DI (reg:SI 216 [ D.35278 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 736 (nil))
    (nil))

(insn:HI 738 737 739 57 ./CppStatUtilities.cc:591 (set (reg:DF 218)
        (mem:DF (plus:DI (mult:DI (reg:DI 217 [ D.35278 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 737 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 175)
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 217 [ D.35278 ])
            (nil))))

(insn:HI 739 738 740 57 ./CppStatUtilities.cc:591 (set (mem/s:DF (plus:DI (reg/f:DI 175)
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (reg:DF 218)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 738 (nil))
    (expr_list:REG_DEAD (reg:DF 218)
        (nil)))

(note:HI 740 739 741 57 ("./CppStatUtilities.cc") 592)

(insn:HI 741 740 742 57 ./CppStatUtilities.cc:592 (set (mem/s:SI (plus:DI (reg/f:DI 175)
                (const_int 32 [0x20])) [5 <variable>.endInd+0 S4 A8])
        (reg:SI 216 [ D.35278 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 216 [ D.35278 ])
        (nil)))

(note:HI 742 741 743 57 ("./CppStatUtilities.cc") 594)

(insn:HI 743 742 744 57 ./CppStatUtilities.cc:594 (set (reg:SI 219 [ D.35285 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 176)
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 48 [0x30])) [5 <variable>.maxInd+0 S4 A8])
        (expr_list:REG_DEAD (reg:DI 176)
            (nil))))

(insn:HI 744 743 745 57 ./CppStatUtilities.cc:594 (set (reg:DI 220 [ D.35285 ])
        (sign_extend:DI (reg:SI 219 [ D.35285 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 743 (nil))
    (nil))

(insn:HI 745 744 746 57 ./CppStatUtilities.cc:594 (set (reg:DF 221)
        (mem:DF (plus:DI (mult:DI (reg:DI 220 [ D.35285 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 744 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 175)
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 220 [ D.35285 ])
            (nil))))

(insn:HI 746 745 747 57 ./CppStatUtilities.cc:594 (set (mem/s:DF (plus:DI (reg/f:DI 175)
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (reg:DF 221)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 745 (nil))
    (expr_list:REG_DEAD (reg:DF 221)
        (expr_list:REG_DEAD (reg/f:DI 175)
            (nil))))

(note:HI 747 746 748 57 ("./CppStatUtilities.cc") 595)

(insn:HI 748 747 750 57 ./CppStatUtilities.cc:595 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 48 [0x30])) [5 <variable>.maxInd+0 S4 A8])
        (reg:SI 219 [ D.35285 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 219 [ D.35285 ])
        (nil)))

(insn:HI 750 748 751 57 ./CppStatUtilities.cc:595 (parallel [
            (set (reg:DI 223 [ ivtmp.471 ])
                (plus:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 751 750 752 57 ./CppStatUtilities.cc:595 (parallel [
            (set (reg/f:DI 227 [ ivtmp.477 ])
                (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 752 751 762 57 ("./CppStatUtilities.cc") 586)

(note:HI 762 752 763 57 ("./CppStatUtilities.cc") 498)

(note:HI 763 762 764 57 ("./CppStatUtilities.cc") 588)

(insn:HI 764 763 765 57 ./CppStatUtilities.cc:588 (set (reg:SI 224)
        (mem:SI (plus:DI (mult:DI (reg:DI 223 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 750 (nil))
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 223 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])
        (nil)))

(insn:HI 765 764 766 57 ./CppStatUtilities.cc:588 (set (reg:DI 225)
        (sign_extend:DI (reg:SI 224))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 764 (nil))
    (nil))

(insn:HI 766 765 767 57 ./CppStatUtilities.cc:588 (set (reg:DF 226)
        (mem:DF (plus:DI (mult:DI (reg:DI 225)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 765 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 227 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 225)
            (nil))))

(insn:HI 767 766 768 57 ./CppStatUtilities.cc:588 (set (mem/s:DF (plus:DI (reg/f:DI 227 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (reg:DF 226)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 751 (insn_list:REG_DEP_TRUE 766 (nil)))
    (expr_list:REG_DEAD (reg:DF 226)
        (nil)))

(note:HI 768 767 769 57 ("./CppStatUtilities.cc") 498)

(note:HI 769 768 770 57 ("./CppStatUtilities.cc") 589)

(insn:HI 770 769 771 57 ./CppStatUtilities.cc:589 (set (mem/s:SI (plus:DI (reg/f:DI 227 [ ivtmp.477 ])
                (const_int 16 [0x10])) [5 <variable>.startInd+0 S4 A8])
        (reg:SI 224)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 224)
        (nil)))

(note:HI 771 770 772 57 ("./CppStatUtilities.cc") 591)

(insn:HI 772 771 773 57 ./CppStatUtilities.cc:591 (set (reg:SI 228 [ D.35278 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 223 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 223 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])
        (nil)))

(insn:HI 773 772 774 57 ./CppStatUtilities.cc:591 (set (reg:DI 229 [ D.35278 ])
        (sign_extend:DI (reg:SI 228 [ D.35278 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 772 (nil))
    (nil))

(insn:HI 774 773 775 57 ./CppStatUtilities.cc:591 (set (reg:DF 230)
        (mem:DF (plus:DI (mult:DI (reg:DI 229 [ D.35278 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 773 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 227 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 229 [ D.35278 ])
            (nil))))

(insn:HI 775 774 776 57 ./CppStatUtilities.cc:591 (set (mem/s:DF (plus:DI (reg/f:DI 227 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (reg:DF 230)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 774 (nil))
    (expr_list:REG_DEAD (reg:DF 230)
        (nil)))

(note:HI 776 775 777 57 ("./CppStatUtilities.cc") 592)

(insn:HI 777 776 778 57 ./CppStatUtilities.cc:592 (set (mem/s:SI (plus:DI (reg/f:DI 227 [ ivtmp.477 ])
                (const_int 32 [0x20])) [5 <variable>.endInd+0 S4 A8])
        (reg:SI 228 [ D.35278 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 228 [ D.35278 ])
        (nil)))

(note:HI 778 777 779 57 ("./CppStatUtilities.cc") 594)

(insn:HI 779 778 780 57 ./CppStatUtilities.cc:594 (set (reg:SI 231 [ D.35285 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 223 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 96 [0x60])) [5 <variable>.maxInd+0 S4 A8])
        (expr_list:REG_DEAD (reg:DI 223 [ ivtmp.471 ])
            (nil))))

(insn:HI 780 779 781 57 ./CppStatUtilities.cc:594 (set (reg:DI 232 [ D.35285 ])
        (sign_extend:DI (reg:SI 231 [ D.35285 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 779 (nil))
    (nil))

(insn:HI 781 780 782 57 ./CppStatUtilities.cc:594 (set (reg:DF 233)
        (mem:DF (plus:DI (mult:DI (reg:DI 232 [ D.35285 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 780 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 227 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 232 [ D.35285 ])
            (nil))))

(insn:HI 782 781 783 57 ./CppStatUtilities.cc:594 (set (mem/s:DF (plus:DI (reg/f:DI 227 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (reg:DF 233)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 781 (nil))
    (expr_list:REG_DEAD (reg:DF 233)
        (expr_list:REG_DEAD (reg/f:DI 227 [ ivtmp.477 ])
            (nil))))

(note:HI 783 782 784 57 ("./CppStatUtilities.cc") 595)

(insn:HI 784 783 786 57 ./CppStatUtilities.cc:595 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 96 [0x60])) [5 <variable>.maxInd+0 S4 A8])
        (reg:SI 231 [ D.35285 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 231 [ D.35285 ])
        (nil)))

(insn:HI 786 784 787 57 ./CppStatUtilities.cc:595 (parallel [
            (set (reg:DI 235 [ ivtmp.471 ])
                (plus:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 787 786 788 57 ./CppStatUtilities.cc:595 (parallel [
            (set (reg/f:DI 239 [ ivtmp.477 ])
                (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 788 787 798 57 ("./CppStatUtilities.cc") 586)

(note:HI 798 788 799 57 ("./CppStatUtilities.cc") 498)

(note:HI 799 798 800 57 ("./CppStatUtilities.cc") 588)

(insn:HI 800 799 801 57 ./CppStatUtilities.cc:588 (set (reg:SI 236)
        (mem:SI (plus:DI (mult:DI (reg:DI 235 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 786 (nil))
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 235 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 114 [ D.35196 ])) [5 S4 A32])
        (nil)))

(insn:HI 801 800 802 57 ./CppStatUtilities.cc:588 (set (reg:DI 237)
        (sign_extend:DI (reg:SI 236))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 800 (nil))
    (nil))

(insn:HI 802 801 803 57 ./CppStatUtilities.cc:588 (set (reg:DF 238)
        (mem:DF (plus:DI (mult:DI (reg:DI 237)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 801 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 239 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 237)
            (nil))))

(insn:HI 803 802 804 57 ./CppStatUtilities.cc:588 (set (mem/s:DF (plus:DI (reg/f:DI 239 [ ivtmp.477 ])
                (const_int 24 [0x18])) [3 <variable>.startVal+0 S8 A8])
        (reg:DF 238)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 787 (insn_list:REG_DEP_TRUE 802 (nil)))
    (expr_list:REG_DEAD (reg:DF 238)
        (nil)))

(note:HI 804 803 805 57 ("./CppStatUtilities.cc") 498)

(note:HI 805 804 806 57 ("./CppStatUtilities.cc") 589)

(insn:HI 806 805 807 57 ./CppStatUtilities.cc:589 (set (mem/s:SI (plus:DI (reg/f:DI 239 [ ivtmp.477 ])
                (const_int 16 [0x10])) [5 <variable>.startInd+0 S4 A8])
        (reg:SI 236)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 236)
        (nil)))

(note:HI 807 806 808 57 ("./CppStatUtilities.cc") 591)

(insn:HI 808 807 809 57 ./CppStatUtilities.cc:591 (set (reg:SI 240 [ D.35278 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 235 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 235 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])
        (nil)))

(insn:HI 809 808 810 57 ./CppStatUtilities.cc:591 (set (reg:DI 241 [ D.35278 ])
        (sign_extend:DI (reg:SI 240 [ D.35278 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 808 (nil))
    (nil))

(insn:HI 810 809 811 57 ./CppStatUtilities.cc:591 (set (reg:DF 242)
        (mem:DF (plus:DI (mult:DI (reg:DI 241 [ D.35278 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 809 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 239 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 241 [ D.35278 ])
            (nil))))

(insn:HI 811 810 812 57 ./CppStatUtilities.cc:591 (set (mem/s:DF (plus:DI (reg/f:DI 239 [ ivtmp.477 ])
                (const_int 40 [0x28])) [3 <variable>.endVal+0 S8 A8])
        (reg:DF 242)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 810 (nil))
    (expr_list:REG_DEAD (reg:DF 242)
        (nil)))

(note:HI 812 811 813 57 ("./CppStatUtilities.cc") 592)

(insn:HI 813 812 814 57 ./CppStatUtilities.cc:592 (set (mem/s:SI (plus:DI (reg/f:DI 239 [ ivtmp.477 ])
                (const_int 32 [0x20])) [5 <variable>.endInd+0 S4 A8])
        (reg:SI 240 [ D.35278 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 240 [ D.35278 ])
        (nil)))

(note:HI 814 813 815 57 ("./CppStatUtilities.cc") 594)

(insn:HI 815 814 816 57 ./CppStatUtilities.cc:594 (set (reg:SI 243 [ D.35285 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 235 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 235 [ ivtmp.471 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 113 [ D.35200 ])) [5 S4 A32])
        (nil)))

(insn:HI 816 815 817 57 ./CppStatUtilities.cc:594 (set (reg:DI 244 [ D.35285 ])
        (sign_extend:DI (reg:SI 243 [ D.35285 ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 815 (nil))
    (nil))

(insn:HI 817 816 818 57 ./CppStatUtilities.cc:594 (set (reg:DF 245)
        (mem:DF (plus:DI (mult:DI (reg:DI 244 [ D.35285 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 116 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 816 (nil))
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/f:DI 239 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (expr_list:REG_DEAD (reg:DI 244 [ D.35285 ])
            (nil))))

(insn:HI 818 817 819 57 ./CppStatUtilities.cc:594 (set (mem/s:DF (plus:DI (reg/f:DI 239 [ ivtmp.477 ])
                (const_int 8 [0x8])) [3 <variable>.maxVal+0 S8 A8])
        (reg:DF 245)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 817 (nil))
    (expr_list:REG_DEAD (reg:DF 245)
        (expr_list:REG_DEAD (reg/f:DI 239 [ ivtmp.477 ])
            (nil))))

(note:HI 819 818 820 57 ("./CppStatUtilities.cc") 595)

(insn:HI 820 819 821 57 ./CppStatUtilities.cc:595 (set (mem/s:SI (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                (const_int 144 [0x90])) [5 <variable>.maxInd+0 S4 A8])
        (reg:SI 243 [ D.35285 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 243 [ D.35285 ])
        (nil)))

(insn:HI 821 820 822 57 ./CppStatUtilities.cc:595 (parallel [
            (set (reg/v:SI 246 [ i.505 ])
                (plus:SI (subreg:SI (reg:DI 235 [ ivtmp.471 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 235 [ ivtmp.471 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 822 821 823 57 ./CppStatUtilities.cc:595 (parallel [
            (set (reg:DI 199 [ ivtmp.471 ])
                (plus:DI (reg:DI 199 [ ivtmp.471 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 823 822 824 57 ./CppStatUtilities.cc:595 (parallel [
            (set (reg/f:DI 203 [ ivtmp.477 ])
                (plus:DI (reg/f:DI 203 [ ivtmp.477 ])
                    (const_int 192 [0xc0])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 824 823 825 57 ("./CppStatUtilities.cc") 586)

(insn:HI 825 824 826 57 ./CppStatUtilities.cc:586 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 163)
            (reg/v:SI 246 [ i.505 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 821 (nil))
    (expr_list:REG_DEAD (reg/v:SI 246 [ i.505 ])
        (nil)))

(jump_insn:HI 826 825 831 57 ./CppStatUtilities.cc:586 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 429)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 825 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 57, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203

;; Start of basic block 58, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203
(note:HI 831 826 1544 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1544 831 1545 58 (set (pc)
        (label_ref 394)) 548 {jump} (nil)
    (nil))
;; End of basic block 58, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 113 114 116 163 199 203

(barrier:HI 1545 1544 1559)

;; Start of basic block 59, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 79 85 102 103 112 113 114 116 117 118 119 161 162
(code_label:HI 1559 1545 250 59 303 "" [1 uses])

(note:HI 250 1559 253 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn:HI 253 250 254 59 ./CppStatUtilities.cc:547 (parallel [
            (set (reg:SI 134)
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_EQUIV (mem:SI (plus:DI (mult:DI (reg:DI 161 [ count ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 254 253 255 59 ./CppStatUtilities.cc:547 (set (mem:SI (plus:DI (mult:DI (reg:DI 161 [ count ])
                    (const_int 4 [0x4]))
                (reg/f:DI 112 [ D.35203 ])) [5 S4 A32])
        (reg:SI 134)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 253 (nil))
    (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_DEAD (reg:DI 161 [ count ])
            (expr_list:REG_EQUAL (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))

(note:HI 255 254 256 59 ("./CppStatUtilities.cc") 549)

(insn:HI 256 255 840 59 ./CppStatUtilities.cc:549 (set (reg/v:DF 101 [ maxVal ])
        (mem:DF (reg:DI 79 [ temp.526 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DI 79 [ temp.526 ])
        (nil)))

(insn:HI 840 256 841 59 (set (reg:SI 178)
        (not:SI (reg/v:SI 85 [ i.501 ]))) 398 {*one_cmplsi2_1} (nil)
    (nil))

(insn:HI 841 840 842 59 (parallel [
            (set (reg:SI 179)
                (plus:SI (reg:SI 178)
                    (reg/v:SI 117 [ xSize ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 840 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 178)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 842 841 845 59 (parallel [
            (set (reg:SI 179)
                (and:SI (reg:SI 179)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 841 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(jump_insn:HI 845 842 855 59 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (reg:DI 162) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 59, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179

;; Start of basic block 60, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179
(note:HI 855 845 849 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(note:HI 849 855 850 60 ("./CppStatUtilities.cc") 553)

(insn:HI 850 849 851 60 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 851 850 852 60 ./CppStatUtilities.cc:553 (parallel [
            (set (reg:DI 197 [ ivtmp.489 ])
                (plus:DI (reg:DI 162)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 852 851 853 60 ("./CppStatUtilities.cc") 551)

(insn:HI 853 852 854 60 ./CppStatUtilities.cc:551 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 117 [ xSize ])
            (reg/v:SI 85 [ i.501 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 850 (nil))
    (nil))

(jump_insn:HI 854 853 999 60 ./CppStatUtilities.cc:551 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 271)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 853 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
            (nil))))
;; End of basic block 60, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

;; Start of basic block 61, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
(note:HI 999 854 997 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn:HI 997 999 998 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 998 997 979 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 268)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 997 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 61, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

;; Start of basic block 62, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
(note:HI 979 998 977 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn:HI 977 979 978 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 978 977 959 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1568)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 977 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 62, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

;; Start of basic block 63, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
(note:HI 959 978 957 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn:HI 957 959 958 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 958 957 939 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1569)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 957 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 63, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

;; Start of basic block 64, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
(note:HI 939 958 937 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn:HI 937 939 938 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 938 937 919 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1570)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 937 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 64, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

;; Start of basic block 65, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
(note:HI 919 938 917 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn:HI 917 919 918 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 918 917 899 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1571)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 917 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 65, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

;; Start of basic block 66, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
(note:HI 899 918 897 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn:HI 897 899 898 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 898 897 879 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1572)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 897 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 66, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197

;; Start of basic block 67, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 179 197
(note:HI 879 898 877 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn:HI 877 879 878 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(jump_insn:HI 878 877 862 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1573)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 877 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 67, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162 197

;; Start of basic block 68, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162
(note:HI 862 878 861 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 861 862 871 68 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (plus:DI (reg:DI 162)
                                (const_int 8 [0x8])) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 68, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162

;; Start of basic block 69, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 162
(note:HI 871 861 865 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(note:HI 865 871 866 69 ("./CppStatUtilities.cc") 553)

(insn:HI 866 865 867 69 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 867 866 868 69 ./CppStatUtilities.cc:553 (parallel [
            (set (reg:DI 197 [ ivtmp.489 ])
                (plus:DI (reg:DI 162)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 162)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 868 867 1573 69 ("./CppStatUtilities.cc") 551)
;; End of basic block 69, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 70, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(code_label:HI 1573 868 882 70 312 "" [1 uses])

(note:HI 882 1573 881 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 881 882 891 70 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (reg:DI 197 [ ivtmp.489 ]) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 70, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 71, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(note:HI 891 881 885 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(note:HI 885 891 886 71 ("./CppStatUtilities.cc") 553)

(insn:HI 886 885 887 71 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 887 886 888 71 ./CppStatUtilities.cc:553 (parallel [
            (set (reg:DI 197 [ ivtmp.489 ])
                (plus:DI (reg:DI 197 [ ivtmp.489 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 888 887 1572 71 ("./CppStatUtilities.cc") 551)
;; End of basic block 71, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 72, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(code_label:HI 1572 888 902 72 311 "" [1 uses])

(note:HI 902 1572 901 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 901 902 911 72 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (reg:DI 197 [ ivtmp.489 ]) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 72, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 73, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(note:HI 911 901 905 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(note:HI 905 911 906 73 ("./CppStatUtilities.cc") 553)

(insn:HI 906 905 907 73 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 907 906 908 73 ./CppStatUtilities.cc:553 (parallel [
            (set (reg:DI 197 [ ivtmp.489 ])
                (plus:DI (reg:DI 197 [ ivtmp.489 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 908 907 1571 73 ("./CppStatUtilities.cc") 551)
;; End of basic block 73, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 74, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(code_label:HI 1571 908 922 74 310 "" [1 uses])

(note:HI 922 1571 921 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 921 922 931 74 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (reg:DI 197 [ ivtmp.489 ]) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 74, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 75, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(note:HI 931 921 925 75 [bb 75] NOTE_INSN_BASIC_BLOCK)

(note:HI 925 931 926 75 ("./CppStatUtilities.cc") 553)

(insn:HI 926 925 927 75 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 927 926 928 75 ./CppStatUtilities.cc:553 (parallel [
            (set (reg:DI 197 [ ivtmp.489 ])
                (plus:DI (reg:DI 197 [ ivtmp.489 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 928 927 1570 75 ("./CppStatUtilities.cc") 551)
;; End of basic block 75, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 76, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(code_label:HI 1570 928 942 76 309 "" [1 uses])

(note:HI 942 1570 941 76 [bb 76] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 941 942 951 76 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (reg:DI 197 [ ivtmp.489 ]) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 76, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 77, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(note:HI 951 941 945 77 [bb 77] NOTE_INSN_BASIC_BLOCK)

(note:HI 945 951 946 77 ("./CppStatUtilities.cc") 553)

(insn:HI 946 945 947 77 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 947 946 948 77 ./CppStatUtilities.cc:553 (parallel [
            (set (reg:DI 197 [ ivtmp.489 ])
                (plus:DI (reg:DI 197 [ ivtmp.489 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 948 947 1569 77 ("./CppStatUtilities.cc") 551)
;; End of basic block 77, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 78, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(code_label:HI 1569 948 962 78 308 "" [1 uses])

(note:HI 962 1569 961 78 [bb 78] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 961 962 971 78 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (reg:DI 197 [ ivtmp.489 ]) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 78, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 79, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(note:HI 971 961 965 79 [bb 79] NOTE_INSN_BASIC_BLOCK)

(note:HI 965 971 966 79 ("./CppStatUtilities.cc") 553)

(insn:HI 966 965 967 79 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 967 966 968 79 ./CppStatUtilities.cc:553 (parallel [
            (set (reg:DI 197 [ ivtmp.489 ])
                (plus:DI (reg:DI 197 [ ivtmp.489 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 968 967 1568 79 ("./CppStatUtilities.cc") 551)
;; End of basic block 79, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 80, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(code_label:HI 1568 968 982 80 307 "" [1 uses])

(note:HI 982 1568 981 80 [bb 80] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 981 982 991 80 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (reg:DI 197 [ ivtmp.489 ]) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 80, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 81, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(note:HI 991 981 985 81 [bb 81] NOTE_INSN_BASIC_BLOCK)

(note:HI 985 991 986 81 ("./CppStatUtilities.cc") 553)

(insn:HI 986 985 987 81 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 987 986 988 81 ./CppStatUtilities.cc:553 (parallel [
            (set (reg:DI 197 [ ivtmp.489 ])
                (plus:DI (reg:DI 197 [ ivtmp.489 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 988 987 989 81 ("./CppStatUtilities.cc") 551)

(insn:HI 989 988 990 81 ./CppStatUtilities.cc:551 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 117 [ xSize ])
            (reg/v:SI 85 [ i.501 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 986 (nil))
    (nil))

(jump_insn:HI 990 989 995 81 ./CppStatUtilities.cc:551 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 271)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 989 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
            (nil))))
;; End of basic block 81, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 82, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(note:HI 995 990 1546 82 [bb 82] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1546 995 1547 82 (set (pc)
        (label_ref 268)) 548 {jump} (nil)
    (nil))
;; End of basic block 82, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

(barrier:HI 1547 1546 260)

;; Start of basic block 83, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(code_label:HI 260 1547 261 83 201 "" [1 uses])

(note:HI 261 260 262 83 [bb 83] NOTE_INSN_BASIC_BLOCK)

(note:HI 262 261 1105 83 ("./CppStatUtilities.cc") 553)

(insn:HI 1105 262 263 83 ./CppStatUtilities.cc:553 (parallel [
            (set (reg:SI 180)
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 85 [ i.501 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 263 1105 265 83 ./CppStatUtilities.cc:553 (set (reg/v:SI 85 [ i.501 ])
        (reg:SI 180)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1105 (nil))
    (nil))

(note:HI 265 263 1001 83 ("./CppStatUtilities.cc") 551)

(jump_insn:HI 1001 265 1011 83 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (plus:DI (reg:DI 197 [ ivtmp.489 ])
                                (const_int 8 [0x8])) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 83, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

;; Start of basic block 84, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197
(note:HI 1011 1001 1005 84 [bb 84] NOTE_INSN_BASIC_BLOCK)

(note:HI 1005 1011 1006 84 ("./CppStatUtilities.cc") 553)

(insn:HI 1006 1005 1008 84 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg/v:SI 85 [ i.501 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1008 1006 1016 84 ("./CppStatUtilities.cc") 551)

(jump_insn:HI 1016 1008 1026 84 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (plus:DI (reg:DI 197 [ ivtmp.489 ])
                                (const_int 16 [0x10])) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 84, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

;; Start of basic block 85, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
(note:HI 1026 1016 1020 85 [bb 85] NOTE_INSN_BASIC_BLOCK)

(note:HI 1020 1026 1021 85 ("./CppStatUtilities.cc") 553)

(insn:HI 1021 1020 1023 85 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg:SI 180)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1023 1021 1031 85 ("./CppStatUtilities.cc") 551)

(jump_insn:HI 1031 1023 1041 85 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (plus:DI (reg:DI 197 [ ivtmp.489 ])
                                (const_int 24 [0x18])) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 85, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

;; Start of basic block 86, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
(note:HI 1041 1031 1035 86 [bb 86] NOTE_INSN_BASIC_BLOCK)

(note:HI 1035 1041 1036 86 ("./CppStatUtilities.cc") 553)

(insn:HI 1036 1035 1038 86 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg:SI 180)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1038 1036 1046 86 ("./CppStatUtilities.cc") 551)

(jump_insn:HI 1046 1038 1056 86 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (plus:DI (reg:DI 197 [ ivtmp.489 ])
                                (const_int 32 [0x20])) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 86, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

;; Start of basic block 87, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
(note:HI 1056 1046 1050 87 [bb 87] NOTE_INSN_BASIC_BLOCK)

(note:HI 1050 1056 1051 87 ("./CppStatUtilities.cc") 553)

(insn:HI 1051 1050 1053 87 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg:SI 180)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1053 1051 1061 87 ("./CppStatUtilities.cc") 551)

(jump_insn:HI 1061 1053 1071 87 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (plus:DI (reg:DI 197 [ ivtmp.489 ])
                                (const_int 40 [0x28])) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 87, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

;; Start of basic block 88, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
(note:HI 1071 1061 1065 88 [bb 88] NOTE_INSN_BASIC_BLOCK)

(note:HI 1065 1071 1066 88 ("./CppStatUtilities.cc") 553)

(insn:HI 1066 1065 1068 88 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg:SI 180)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1068 1066 1076 88 ("./CppStatUtilities.cc") 551)

(jump_insn:HI 1076 1068 1086 88 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (plus:DI (reg:DI 197 [ ivtmp.489 ])
                                (const_int 48 [0x30])) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 88, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

;; Start of basic block 89, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
(note:HI 1086 1076 1080 89 [bb 89] NOTE_INSN_BASIC_BLOCK)

(note:HI 1080 1086 1081 89 ("./CppStatUtilities.cc") 553)

(insn:HI 1081 1080 1083 89 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg:SI 180)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1083 1081 1091 89 ("./CppStatUtilities.cc") 551)

(jump_insn:HI 1091 1083 1101 89 ./CppStatUtilities.cc:551 (parallel [
            (set (pc)
                (if_then_else (ne (reg/v:DF 102 [ minVal ])
                        (mem:DF (plus:DI (reg:DI 197 [ ivtmp.489 ])
                                (const_int 56 [0x38])) [3 S8 A64]))
                    (label_ref:DI 271)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (nil)
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
                        (nil)))))))
;; End of basic block 89, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 180 197

;; Start of basic block 90, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 112 113 114 116 117 118 119 180 197
(note:HI 1101 1091 1095 90 [bb 90] NOTE_INSN_BASIC_BLOCK)

(note:HI 1095 1101 1096 90 ("./CppStatUtilities.cc") 553)

(insn:HI 1096 1095 1097 90 ./CppStatUtilities.cc:553 (parallel [
            (set (reg/v:SI 85 [ i.501 ])
                (plus:SI (reg:SI 180)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 180)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 1097 1096 1098 90 ./CppStatUtilities.cc:553 (parallel [
            (set (reg:DI 197 [ ivtmp.489 ])
                (plus:DI (reg:DI 197 [ ivtmp.489 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1098 1097 1099 90 ("./CppStatUtilities.cc") 551)

(insn:HI 1099 1098 1100 90 ./CppStatUtilities.cc:551 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 117 [ xSize ])
            (reg/v:SI 85 [ i.501 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1096 (nil))
    (nil))

(jump_insn:HI 1100 1099 1103 90 ./CppStatUtilities.cc:551 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 271)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1099 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
            (nil))))
;; End of basic block 90, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

;; Start of basic block 91, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197
(note:HI 1103 1100 1548 91 [bb 91] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1548 1103 1549 91 (set (pc)
        (label_ref 268)) 548 {jump} (nil)
    (nil))
;; End of basic block 91, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 102 103 112 113 114 116 117 118 119 197

(barrier:HI 1549 1548 1492)

;; Start of basic block 92, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
(code_label:HI 1492 1549 1142 92 294 "" [1 uses])

(note:HI 1142 1492 1138 92 [bb 92] NOTE_INSN_BASIC_BLOCK)

(note:HI 1138 1142 1152 92 ("./CppStatUtilities.cc") 514)

(note:HI 1152 1138 1145 92 ("./CppStatUtilities.cc") 498)

(insn:HI 1145 1152 1146 92 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 86 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 86 [ ivtmp.495 ])
        (nil)))

(insn:HI 1146 1145 1147 92 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 86 [ ivtmp.495 ])
                (plus:DI (reg/v/f:DI 116 [ x ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1147 1146 1148 92 ("./CppStatUtilities.cc") 514)

(insn:HI 1148 1147 1149 92 ./CppStatUtilities.cc:514 (set (reg:DF 284)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1145 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1149 1148 1155 92 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 284)
                        (mem:DF (plus:DI (reg/v/f:DI 116 [ x ])
                                (const_int 8 [0x8])) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1148 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 284)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 92, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 184

;; Start of basic block 93, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 184
(note:HI 1155 1149 1154 93 [bb 93] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1154 1155 1305 93 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 1305 1154 1306 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 184)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1306 1305 1282 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 116)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1305 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 93, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

;; Start of basic block 94, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
(note:HI 1282 1306 1280 94 [bb 94] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1280 1282 1281 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 184)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1281 1280 1257 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1574)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1280 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 94, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

;; Start of basic block 95, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
(note:HI 1257 1281 1255 95 [bb 95] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1255 1257 1256 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 184)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1256 1255 1232 95 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1575)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1255 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 95, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

;; Start of basic block 96, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
(note:HI 1232 1256 1230 96 [bb 96] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1230 1232 1231 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 184)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1231 1230 1207 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1576)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1230 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 96, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

;; Start of basic block 97, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
(note:HI 1207 1231 1205 97 [bb 97] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1205 1207 1206 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 184)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1206 1205 1182 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1577)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1205 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 97, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184

;; Start of basic block 98, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119 184
(note:HI 1182 1206 1180 98 [bb 98] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1180 1182 1181 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 184)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(jump_insn:HI 1181 1180 1163 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1578)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1180 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 98, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

;; Start of basic block 99, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
(note:HI 1163 1181 1159 99 [bb 99] NOTE_INSN_BASIC_BLOCK)

(note:HI 1159 1163 1173 99 ("./CppStatUtilities.cc") 514)

(note:HI 1173 1159 1166 99 ("./CppStatUtilities.cc") 498)

(insn:HI 1166 1173 1167 99 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 86 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 86 [ ivtmp.495 ])
        (nil)))

(insn:HI 1167 1166 1168 99 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 86 [ ivtmp.495 ])
                (plus:DI (reg/v/f:DI 116 [ x ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1168 1167 1169 99 ("./CppStatUtilities.cc") 514)

(insn:HI 1169 1168 1170 99 ./CppStatUtilities.cc:514 (set (reg:DF 286)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1166 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1170 1169 1176 99 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 286)
                        (mem:DF (plus:DI (reg/v/f:DI 116 [ x ])
                                (const_int 16 [0x10])) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1169 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 286)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 99, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119

;; Start of basic block 100, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119
(note:HI 1176 1170 1175 100 [bb 100] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1175 1176 1578 100 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (const_int 3 [0x3])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 100, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

;; Start of basic block 101, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
(code_label:HI 1578 1175 1188 101 317 "" [1 uses])

(note:HI 1188 1578 1184 101 [bb 101] NOTE_INSN_BASIC_BLOCK)

(note:HI 1184 1188 1185 101 ("./CppStatUtilities.cc") 514)

(insn:HI 1185 1184 1198 101 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 287 [ i.503 ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1198 1185 1191 101 ("./CppStatUtilities.cc") 498)

(insn:HI 1191 1198 1192 101 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 86 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 86 [ ivtmp.495 ])
        (nil)))

(insn:HI 1192 1191 1193 101 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 86 [ ivtmp.495 ])
                (plus:DI (reg:DI 93 [ prephitmp.466 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 1191 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1193 1192 1194 101 ("./CppStatUtilities.cc") 514)

(insn:HI 1194 1193 1195 101 ./CppStatUtilities.cc:514 (set (reg:DF 288)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1195 1194 1201 101 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 288)
                        (mem:DF (reg:DI 93 [ prephitmp.466 ]) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1194 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 288)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 101, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 287

;; Start of basic block 102, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 287
(note:HI 1201 1195 1200 102 [bb 102] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1200 1201 1577 102 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 287 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 287 [ i.503 ])
        (nil)))
;; End of basic block 102, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

;; Start of basic block 103, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
(code_label:HI 1577 1200 1213 103 316 "" [1 uses])

(note:HI 1213 1577 1209 103 [bb 103] NOTE_INSN_BASIC_BLOCK)

(note:HI 1209 1213 1210 103 ("./CppStatUtilities.cc") 514)

(insn:HI 1210 1209 1223 103 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 289 [ i.503 ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1223 1210 1216 103 ("./CppStatUtilities.cc") 498)

(insn:HI 1216 1223 1217 103 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 86 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 86 [ ivtmp.495 ])
        (nil)))

(insn:HI 1217 1216 1218 103 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 86 [ ivtmp.495 ])
                (plus:DI (reg:DI 93 [ prephitmp.466 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 1216 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1218 1217 1219 103 ("./CppStatUtilities.cc") 514)

(insn:HI 1219 1218 1220 103 ./CppStatUtilities.cc:514 (set (reg:DF 290)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1220 1219 1226 103 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 290)
                        (mem:DF (reg:DI 93 [ prephitmp.466 ]) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1219 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 290)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 103, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 289

;; Start of basic block 104, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 289
(note:HI 1226 1220 1225 104 [bb 104] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1225 1226 1576 104 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 289 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 289 [ i.503 ])
        (nil)))
;; End of basic block 104, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

;; Start of basic block 105, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
(code_label:HI 1576 1225 1238 105 315 "" [1 uses])

(note:HI 1238 1576 1234 105 [bb 105] NOTE_INSN_BASIC_BLOCK)

(note:HI 1234 1238 1235 105 ("./CppStatUtilities.cc") 514)

(insn:HI 1235 1234 1248 105 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 291 [ i.503 ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1248 1235 1241 105 ("./CppStatUtilities.cc") 498)

(insn:HI 1241 1248 1242 105 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 86 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 86 [ ivtmp.495 ])
        (nil)))

(insn:HI 1242 1241 1243 105 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 86 [ ivtmp.495 ])
                (plus:DI (reg:DI 93 [ prephitmp.466 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 1241 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1243 1242 1244 105 ("./CppStatUtilities.cc") 514)

(insn:HI 1244 1243 1245 105 ./CppStatUtilities.cc:514 (set (reg:DF 292)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1245 1244 1251 105 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 292)
                        (mem:DF (reg:DI 93 [ prephitmp.466 ]) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1244 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 292)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 105, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 291

;; Start of basic block 106, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 291
(note:HI 1251 1245 1250 106 [bb 106] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1250 1251 1575 106 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 291 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 291 [ i.503 ])
        (nil)))
;; End of basic block 106, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

;; Start of basic block 107, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
(code_label:HI 1575 1250 1263 107 314 "" [1 uses])

(note:HI 1263 1575 1259 107 [bb 107] NOTE_INSN_BASIC_BLOCK)

(note:HI 1259 1263 1260 107 ("./CppStatUtilities.cc") 514)

(insn:HI 1260 1259 1273 107 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 293 [ i.503 ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1273 1260 1266 107 ("./CppStatUtilities.cc") 498)

(insn:HI 1266 1273 1267 107 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 86 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 86 [ ivtmp.495 ])
        (nil)))

(insn:HI 1267 1266 1268 107 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 86 [ ivtmp.495 ])
                (plus:DI (reg:DI 93 [ prephitmp.466 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 1266 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1268 1267 1269 107 ("./CppStatUtilities.cc") 514)

(insn:HI 1269 1268 1270 107 ./CppStatUtilities.cc:514 (set (reg:DF 294)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1270 1269 1276 107 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 294)
                        (mem:DF (reg:DI 93 [ prephitmp.466 ]) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1269 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 294)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 107, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 293

;; Start of basic block 108, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 293
(note:HI 1276 1270 1275 108 [bb 108] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1275 1276 1574 108 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 293 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 293 [ i.503 ])
        (nil)))
;; End of basic block 108, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

;; Start of basic block 109, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119
(code_label:HI 1574 1275 1288 109 313 "" [1 uses])

(note:HI 1288 1574 1284 109 [bb 109] NOTE_INSN_BASIC_BLOCK)

(note:HI 1284 1288 1285 109 ("./CppStatUtilities.cc") 514)

(insn:HI 1285 1284 1298 109 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 295 [ i.503 ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1298 1285 1291 109 ("./CppStatUtilities.cc") 498)

(insn:HI 1291 1298 1292 109 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 86 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 86 [ ivtmp.495 ])
        (nil)))

(insn:HI 1292 1291 1293 109 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 86 [ ivtmp.495 ])
                (plus:DI (reg:DI 93 [ prephitmp.466 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 1291 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1293 1292 1294 109 ("./CppStatUtilities.cc") 514)

(insn:HI 1294 1293 1295 109 ./CppStatUtilities.cc:514 (set (reg:DF 296)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1295 1294 1301 109 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 296)
                        (mem:DF (reg:DI 93 [ prephitmp.466 ]) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1294 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 296)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 109, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 295

;; Start of basic block 110, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 295
(note:HI 1301 1295 1300 110 [bb 110] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1300 1301 1550 110 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 295 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 295 [ i.503 ])
        (nil)))

(jump_insn:HI 1550 1300 1551 110 (set (pc)
        (label_ref 116)) 548 {jump} (nil)
    (nil))
;; End of basic block 110, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

(barrier:HI 1551 1550 1555)

;; Start of basic block 111, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 195
(code_label:HI 1555 1551 142 111 302 "" [1 uses])

(note:HI 142 1555 143 111 [bb 111] NOTE_INSN_BASIC_BLOCK)

(insn:HI 143 142 1314 111 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 83 [ i.503 ])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 1314 143 1315 111 ("./CppStatUtilities.cc") 514)

(insn:HI 1315 1314 1328 111 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 194 [ i.503 ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 143 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1328 1315 1321 111 ("./CppStatUtilities.cc") 498)

(insn:HI 1321 1328 1322 111 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 195 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 195 [ ivtmp.495 ])
        (nil)))

(insn:HI 1322 1321 1323 111 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 298 [ ivtmp.495 ])
                (plus:DI (reg/f:DI 186)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1323 1322 1324 111 ("./CppStatUtilities.cc") 514)

(insn:HI 1324 1323 1325 111 ./CppStatUtilities.cc:514 (set (reg:DF 196)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1321 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1325 1324 1331 111 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 196)
                        (mem:DF (reg:DI 93 [ prephitmp.466 ]) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1324 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 196)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 111, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 194 298

;; Start of basic block 112, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 194 298
(note:HI 1331 1325 1330 112 [bb 112] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1330 1331 1334 112 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 194 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 194 [ i.503 ])
        (nil)))

(note:HI 1334 1330 1348 112 ("./CppStatUtilities.cc") 514)

(note:HI 1348 1334 1341 112 ("./CppStatUtilities.cc") 498)

(insn:HI 1341 1348 1342 112 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 298 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 298 [ ivtmp.495 ])
        (nil)))

(insn:HI 1342 1341 1343 112 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 301 [ ivtmp.495 ])
                (plus:DI (reg/f:DI 186)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1343 1342 1344 112 ("./CppStatUtilities.cc") 514)

(insn:HI 1344 1343 1345 112 ./CppStatUtilities.cc:514 (set (reg:DF 299)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1341 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1345 1344 1351 112 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 299)
                        (mem:DF (plus:DI (reg/f:DI 186)
                                (const_int 8 [0x8])) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1344 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 299)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 112, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 301

;; Start of basic block 113, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 301
(note:HI 1351 1345 1454 113 [bb 113] NOTE_INSN_BASIC_BLOCK)

(note:HI 1454 1351 1350 113 NOTE_INSN_DELETED)

(insn:HI 1350 1454 1354 113 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 104 [ i ])
                (plus:SI (reg/v:SI 83 [ i.503 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1354 1350 1355 113 ("./CppStatUtilities.cc") 514)

(insn:HI 1355 1354 1368 113 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 300 [ i.503 ])
                (plus:SI (reg/v:SI 83 [ i.503 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1368 1355 1361 113 ("./CppStatUtilities.cc") 498)

(insn:HI 1361 1368 1362 113 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 301 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 301 [ ivtmp.495 ])
        (nil)))

(insn:HI 1362 1361 1363 113 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 304 [ ivtmp.495 ])
                (plus:DI (reg/f:DI 186)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1363 1362 1364 113 ("./CppStatUtilities.cc") 514)

(insn:HI 1364 1363 1365 113 ./CppStatUtilities.cc:514 (set (reg:DF 302)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1361 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1365 1364 1371 113 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 302)
                        (mem:DF (plus:DI (reg/f:DI 186)
                                (const_int 16 [0x10])) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1364 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 302)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 113, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 300 304

;; Start of basic block 114, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 300 304
(note:HI 1371 1365 1370 114 [bb 114] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1370 1371 1374 114 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 300 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 300 [ i.503 ])
        (nil)))

(note:HI 1374 1370 1375 114 ("./CppStatUtilities.cc") 514)

(insn:HI 1375 1374 1388 114 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 303 [ i.503 ])
                (plus:SI (reg/v:SI 83 [ i.503 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1388 1375 1381 114 ("./CppStatUtilities.cc") 498)

(insn:HI 1381 1388 1382 114 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 304 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 304 [ ivtmp.495 ])
        (nil)))

(insn:HI 1382 1381 1383 114 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 307 [ ivtmp.495 ])
                (plus:DI (reg/f:DI 186)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1383 1382 1384 114 ("./CppStatUtilities.cc") 514)

(insn:HI 1384 1383 1385 114 ./CppStatUtilities.cc:514 (set (reg:DF 305)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1381 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1385 1384 1391 114 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 305)
                        (mem:DF (plus:DI (reg/f:DI 186)
                                (const_int 24 [0x18])) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1384 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 305)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 114, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 303 307

;; Start of basic block 115, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 303 307
(note:HI 1391 1385 1390 115 [bb 115] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1390 1391 1394 115 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 303 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 303 [ i.503 ])
        (nil)))

(note:HI 1394 1390 1395 115 ("./CppStatUtilities.cc") 514)

(insn:HI 1395 1394 1408 115 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 306 [ i.503 ])
                (plus:SI (reg/v:SI 83 [ i.503 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1408 1395 1401 115 ("./CppStatUtilities.cc") 498)

(insn:HI 1401 1408 1402 115 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 307 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 307 [ ivtmp.495 ])
        (nil)))

(insn:HI 1402 1401 1403 115 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 310 [ ivtmp.495 ])
                (plus:DI (reg/f:DI 186)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1403 1402 1404 115 ("./CppStatUtilities.cc") 514)

(insn:HI 1404 1403 1405 115 ./CppStatUtilities.cc:514 (set (reg:DF 308)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1401 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1405 1404 1411 115 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 308)
                        (mem:DF (plus:DI (reg/f:DI 186)
                                (const_int 32 [0x20])) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1404 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 308)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 115, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 306 310

;; Start of basic block 116, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 306 310
(note:HI 1411 1405 1410 116 [bb 116] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1410 1411 1414 116 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 306 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 306 [ i.503 ])
        (nil)))

(note:HI 1414 1410 1415 116 ("./CppStatUtilities.cc") 514)

(insn:HI 1415 1414 1428 116 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 309 [ i.503 ])
                (plus:SI (reg/v:SI 83 [ i.503 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1428 1415 1421 116 ("./CppStatUtilities.cc") 498)

(insn:HI 1421 1428 1422 116 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 310 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 310 [ ivtmp.495 ])
        (nil)))

(insn:HI 1422 1421 1423 116 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 313 [ ivtmp.495 ])
                (plus:DI (reg/f:DI 186)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1423 1422 1424 116 ("./CppStatUtilities.cc") 514)

(insn:HI 1424 1423 1425 116 ./CppStatUtilities.cc:514 (set (reg:DF 311)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1421 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1425 1424 1431 116 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 311)
                        (mem:DF (plus:DI (reg/f:DI 186)
                                (const_int 40 [0x28])) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1424 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 311)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                            (nil))))))))
;; End of basic block 116, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 93 104 112 113 114 116 117 118 119 186 309 313

;; Start of basic block 117, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 114 116 117 118 119 186 309 313
(note:HI 1431 1425 1430 117 [bb 117] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1430 1431 1434 117 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 309 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 309 [ i.503 ])
        (nil)))

(note:HI 1434 1430 1435 117 ("./CppStatUtilities.cc") 514)

(insn:HI 1435 1434 1448 117 ./CppStatUtilities.cc:514 (parallel [
            (set (reg/v:SI 312 [ i.503 ])
                (plus:SI (reg/v:SI 83 [ i.503 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 83 [ i.503 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 1448 1435 1441 117 ("./CppStatUtilities.cc") 498)

(insn:HI 1441 1448 1442 117 ./CppStatUtilities.cc:498 (set (reg:DI 93 [ prephitmp.466 ])
        (reg/f:DI 313 [ ivtmp.495 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 313 [ ivtmp.495 ])
        (nil)))

(insn:HI 1442 1441 1443 117 ./CppStatUtilities.cc:498 (parallel [
            (set (reg/f:DI 86 [ ivtmp.495 ])
                (plus:DI (reg/f:DI 186)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1443 1442 1444 117 ("./CppStatUtilities.cc") 514)

(insn:HI 1444 1443 1445 117 ./CppStatUtilities.cc:514 (set (reg:DF 314)
        (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1441 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 93 [ prephitmp.466 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(jump_insn:HI 1445 1444 1451 117 ./CppStatUtilities.cc:514 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 314)
                        (mem:DF (plus:DI (reg/f:DI 186)
                                (const_int 48 [0x30])) [3 S8 A64]))
                    (label_ref/s:DI 146)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 1444 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 314)
                (expr_list:REG_DEAD (reg/f:DI 186)
                    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                            (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
                                (nil)))))))))
;; End of basic block 117, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 104 112 113 114 116 117 118 119 312

;; Start of basic block 118, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 112 113 114 116 117 118 119 312
(note:HI 1451 1445 1450 118 [bb 118] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1450 1451 1552 118 ./CppStatUtilities.cc:514 (set (reg/v:SI 104 [ i ])
        (reg/v:SI 312 [ i.503 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 312 [ i.503 ])
        (nil)))

(jump_insn:HI 1552 1450 1553 118 (set (pc)
        (label_ref 116)) 548 {jump} (nil)
    (nil))
;; End of basic block 118, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 104 112 113 114 116 117 118 119

(barrier:HI 1553 1552 487)

(note:HI 487 1553 488 NOTE_INSN_FUNCTION_END)

(note:HI 488 487 0 ("./CppStatUtilities.cc") 601)


;; Function void hist(double*, int, double*, int, int, double**, double**, double**) (_Z4histPdiS_iiPS_S0_S0_)



Pass 0

  Register 58 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 63 costs: AREG:24274 DREG:24274 CREG:24274 BREG:24274 SIREG:24274 DIREG:24274 AD_REGS:24274 Q_REGS:24274 NON_Q_REGS:24274 INDEX_REGS:24274 LEGACY_REGS:24274 GENERAL_REGS:24274 FP_TOP_REG:38978 FP_SECOND_REG:38978 FLOAT_REGS:38978 SSE_REGS:380 FP_TOP_SSE_REGS:38978 FP_SECOND_SSE_REGS:38978 FLOAT_SSE_REGS:38978 FLOAT_INT_REGS:38978 INT_SSE_REGS:24274 FLOAT_INT_SSE_REGS:38978 ALL_REGS:38978 MEM:13546
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 68 costs: AREG:24323 DREG:24323 CREG:24323 BREG:24323 SIREG:24323 DIREG:24323 AD_REGS:24323 Q_REGS:24323 NON_Q_REGS:24323 INDEX_REGS:24323 LEGACY_REGS:24323 GENERAL_REGS:24323 FP_TOP_REG:39291 FP_SECOND_REG:39291 FLOAT_REGS:39291 SSE_REGS:0 FP_TOP_SSE_REGS:39291 FP_SECOND_SSE_REGS:39291 FLOAT_SSE_REGS:39291 FLOAT_INT_REGS:39291 INT_SSE_REGS:24323 FLOAT_INT_SSE_REGS:39291 ALL_REGS:39291 MEM:13319
  Register 69 costs: AREG:24323 DREG:24323 CREG:24323 BREG:24323 SIREG:24323 DIREG:24323 AD_REGS:24323 Q_REGS:24323 NON_Q_REGS:24323 INDEX_REGS:24323 LEGACY_REGS:24323 GENERAL_REGS:24323 FP_TOP_REG:39291 FP_SECOND_REG:39291 FLOAT_REGS:39291 SSE_REGS:0 FP_TOP_SSE_REGS:39291 FP_SECOND_SSE_REGS:39291 FLOAT_SSE_REGS:39291 FLOAT_INT_REGS:39291 INT_SSE_REGS:24323 FLOAT_INT_SSE_REGS:39291 ALL_REGS:39291 MEM:13430
  Register 70 costs: AREG:68558 DREG:68558 CREG:68558 BREG:68558 SIREG:68558 DIREG:68558 AD_REGS:68558 Q_REGS:68558 NON_Q_REGS:70445 INDEX_REGS:68558 LEGACY_REGS:70445 GENERAL_REGS:70445 FP_TOP_REG:107614 FP_SECOND_REG:107614 FLOAT_REGS:107614 SSE_REGS:5092 FP_TOP_SSE_REGS:107614 FP_SECOND_SSE_REGS:107614 FLOAT_SSE_REGS:107614 FLOAT_INT_REGS:107614 INT_SSE_REGS:68558 FLOAT_INT_SSE_REGS:107614 ALL_REGS:109945 MEM:40476
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7826 MMX_REGS:7826 FP_TOP_SSE_REGS:7826 FP_SECOND_SSE_REGS:7826 FLOAT_SSE_REGS:7826 FLOAT_INT_REGS:5418 INT_SSE_REGS:7826 FLOAT_INT_SSE_REGS:7826 ALL_REGS:7826 MEM:2408
  Register 75 costs: AREG:36257 DREG:36257 CREG:36257 BREG:36257 SIREG:36257 DIREG:36257 AD_REGS:36257 Q_REGS:36257 NON_Q_REGS:38144 INDEX_REGS:36257 LEGACY_REGS:38144 GENERAL_REGS:38144 FP_TOP_REG:58569 FP_SECOND_REG:58569 FLOAT_REGS:58569 SSE_REGS:0 FP_TOP_SSE_REGS:58569 FP_SECOND_SSE_REGS:58569 FLOAT_SSE_REGS:58569 FLOAT_INT_REGS:58569 INT_SSE_REGS:36257 FLOAT_INT_SSE_REGS:58569 ALL_REGS:60900 MEM:20189
  Register 77 costs: AREG:1443 DREG:1443 CREG:1443 BREG:1443 SIREG:1443 DIREG:1443 AD_REGS:1443 Q_REGS:1443 NON_Q_REGS:3330 INDEX_REGS:1443 LEGACY_REGS:3330 GENERAL_REGS:3330 FP_TOP_REG:2331 FP_SECOND_REG:2331 FLOAT_REGS:2331 SSE_REGS:0 FP_TOP_SSE_REGS:2331 FP_SECOND_SSE_REGS:2331 FLOAT_SSE_REGS:2331 FLOAT_INT_REGS:2331 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:2331 ALL_REGS:4662 MEM:1221
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1200
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1200
  Register 86 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:222 INDEX_REGS:0 LEGACY_REGS:222 GENERAL_REGS:222 SSE_REGS:5772 MMX_REGS:5772 FP_TOP_SSE_REGS:5772 FP_SECOND_SSE_REGS:5772 FLOAT_SSE_REGS:5772 FLOAT_INT_REGS:3996 INT_SSE_REGS:5772 FLOAT_INT_SSE_REGS:5772 ALL_REGS:5772 MEM:1554
  Register 87 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9269 MMX_REGS:9269 FP_TOP_SSE_REGS:9269 FP_SECOND_SSE_REGS:9269 FLOAT_SSE_REGS:9269 FLOAT_INT_REGS:6417 INT_SSE_REGS:9269 FLOAT_INT_SSE_REGS:9269 ALL_REGS:9269 MEM:2540
  Register 88 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13611 MMX_REGS:13611 FP_TOP_SSE_REGS:13611 FP_SECOND_SSE_REGS:13611 FLOAT_SSE_REGS:13611 FLOAT_INT_REGS:9423 INT_SSE_REGS:13611 FLOAT_INT_SSE_REGS:13611 ALL_REGS:13611 MEM:3463
  Register 89 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9269 MMX_REGS:9269 FP_TOP_SSE_REGS:9269 FP_SECOND_SSE_REGS:9269 FLOAT_SSE_REGS:9269 FLOAT_INT_REGS:6417 INT_SSE_REGS:9269 FLOAT_INT_SSE_REGS:9269 ALL_REGS:9269 MEM:2540
  Register 90 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13611 MMX_REGS:13611 FP_TOP_SSE_REGS:13611 FP_SECOND_SSE_REGS:13611 FLOAT_SSE_REGS:13611 FLOAT_INT_REGS:9423 INT_SSE_REGS:13611 FLOAT_INT_SSE_REGS:13611 ALL_REGS:13611 MEM:3463
  Register 91 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17381 MMX_REGS:17381 INT_SSE_REGS:17381 MEM:4544
  Register 92 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1443 MMX_REGS:1443 FP_TOP_SSE_REGS:1443 FP_SECOND_SSE_REGS:1443 FLOAT_SSE_REGS:1443 FLOAT_INT_REGS:999 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:1443 ALL_REGS:1443 MEM:0
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1443 MMX_REGS:1443 FP_TOP_SSE_REGS:1443 FP_SECOND_SSE_REGS:1443 FLOAT_SSE_REGS:1443 FLOAT_INT_REGS:999 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:1443 ALL_REGS:1443 MEM:0
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 97 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:58188 MMX_REGS:58188 FP_TOP_SSE_REGS:58188 FP_SECOND_SSE_REGS:58188 FLOAT_SSE_REGS:58188 FLOAT_INT_REGS:40284 INT_SSE_REGS:58188 FLOAT_INT_SSE_REGS:58188 ALL_REGS:58188 MEM:17904
  Register 98 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:58188 MMX_REGS:58188 FP_TOP_SSE_REGS:58188 FP_SECOND_SSE_REGS:58188 FLOAT_SSE_REGS:58188 FLOAT_INT_REGS:40284 INT_SSE_REGS:58188 FLOAT_INT_SSE_REGS:58188 ALL_REGS:58188 MEM:17904
  Register 100 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:2886 INDEX_REGS:2886 LEGACY_REGS:2886 GENERAL_REGS:2886 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:4662 MEM:1665
  Register 103 costs: AREG:6500 DREG:6500 CREG:6500 BREG:6500 SIREG:6500 DIREG:6500 AD_REGS:6500 Q_REGS:6500 NON_Q_REGS:8200 INDEX_REGS:6500 LEGACY_REGS:8200 GENERAL_REGS:8200 FP_TOP_REG:10500 FP_SECOND_REG:10500 FLOAT_REGS:10500 SSE_REGS:0 FP_TOP_SSE_REGS:10500 FP_SECOND_SSE_REGS:10500 FLOAT_SSE_REGS:10500 FLOAT_INT_REGS:10500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:10500 ALL_REGS:12600 MEM:4400
  Register 107 costs: AREG:4100 DREG:4100 CREG:4100 BREG:4100 SIREG:4100 DIREG:4100 AD_REGS:4100 Q_REGS:4100 NON_Q_REGS:5800 INDEX_REGS:4100 LEGACY_REGS:5800 GENERAL_REGS:5800 FP_TOP_REG:6500 FP_SECOND_REG:6500 FLOAT_REGS:6500 SSE_REGS:200 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:6500 INT_SSE_REGS:4100 FLOAT_INT_SSE_REGS:6500 ALL_REGS:8600 MEM:3000
  Register 109 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 110 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 114 costs: AREG:1500 DREG:1500 CREG:1500 BREG:1500 SIREG:1500 DIREG:1500 AD_REGS:1500 Q_REGS:1500 NON_Q_REGS:3200 INDEX_REGS:1500 LEGACY_REGS:3200 GENERAL_REGS:3200 FP_TOP_REG:2300 FP_SECOND_REG:2300 FLOAT_REGS:2300 SSE_REGS:200 FP_TOP_SSE_REGS:2300 FP_SECOND_SSE_REGS:2300 FLOAT_SSE_REGS:2300 FLOAT_INT_REGS:2300 INT_SSE_REGS:1500 FLOAT_INT_SSE_REGS:2300 ALL_REGS:4400 MEM:1400
  Register 116 costs: AREG:4100 DREG:4100 CREG:4100 BREG:4100 SIREG:4100 DIREG:4100 AD_REGS:4100 Q_REGS:4100 NON_Q_REGS:5800 INDEX_REGS:4100 LEGACY_REGS:5800 GENERAL_REGS:5800 FP_TOP_REG:6500 FP_SECOND_REG:6500 FLOAT_REGS:6500 SSE_REGS:200 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:6500 INT_SSE_REGS:4100 FLOAT_INT_SSE_REGS:6500 ALL_REGS:8600 MEM:3000
  Register 118 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 119 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 123 costs: AREG:1500 DREG:1500 CREG:1500 BREG:1500 SIREG:1500 DIREG:1500 AD_REGS:1500 Q_REGS:1500 NON_Q_REGS:3200 INDEX_REGS:1500 LEGACY_REGS:3200 GENERAL_REGS:3200 FP_TOP_REG:2300 FP_SECOND_REG:2300 FLOAT_REGS:2300 SSE_REGS:200 FP_TOP_SSE_REGS:2300 FP_SECOND_SSE_REGS:2300 FLOAT_SSE_REGS:2300 FLOAT_INT_REGS:2300 INT_SSE_REGS:1500 FLOAT_INT_SSE_REGS:2300 ALL_REGS:4400 MEM:1400
  Register 126 costs: AREG:2600 DREG:2600 CREG:2600 BREG:2600 SIREG:2600 DIREG:2600 AD_REGS:2600 Q_REGS:2600 NON_Q_REGS:6000 INDEX_REGS:2600 LEGACY_REGS:6000 GENERAL_REGS:6000 FP_TOP_REG:4200 FP_SECOND_REG:4200 FLOAT_REGS:4200 SSE_REGS:0 FP_TOP_SSE_REGS:4200 FP_SECOND_SSE_REGS:4200 FLOAT_SSE_REGS:4200 FLOAT_INT_REGS:4200 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:4200 ALL_REGS:8400 MEM:2400
  Register 128 costs: AREG:2600 DREG:2600 CREG:2600 BREG:2600 SIREG:2600 DIREG:2600 AD_REGS:2600 Q_REGS:2600 NON_Q_REGS:6000 INDEX_REGS:2600 LEGACY_REGS:6000 GENERAL_REGS:6000 FP_TOP_REG:4200 FP_SECOND_REG:4200 FLOAT_REGS:4200 SSE_REGS:0 FP_TOP_SSE_REGS:4200 FP_SECOND_SSE_REGS:4200 FLOAT_SSE_REGS:4200 FLOAT_INT_REGS:4200 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:4200 ALL_REGS:8400 MEM:2400
  Register 130 costs: AREG:17670 DREG:17670 CREG:17670 BREG:17670 SIREG:17670 DIREG:17670 AD_REGS:17670 Q_REGS:17670 NON_Q_REGS:19370 INDEX_REGS:17670 LEGACY_REGS:19370 GENERAL_REGS:19370 FP_TOP_REG:27094 FP_SECOND_REG:27094 FLOAT_REGS:27094 SSE_REGS:2356 FP_TOP_SSE_REGS:27094 FP_SECOND_SSE_REGS:27094 FLOAT_SSE_REGS:27094 FLOAT_INT_REGS:27094 INT_SSE_REGS:17670 FLOAT_INT_SSE_REGS:27094 ALL_REGS:29194 MEM:12180
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 146 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6435 MMX_REGS:6435 FP_TOP_SSE_REGS:6435 FP_SECOND_SSE_REGS:6435 FLOAT_SSE_REGS:6435 FLOAT_INT_REGS:4455 INT_SSE_REGS:6435 FLOAT_INT_SSE_REGS:6435 ALL_REGS:6435 MEM:1645
  Register 155 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6435 MMX_REGS:6435 FP_TOP_SSE_REGS:6435 FP_SECOND_SSE_REGS:6435 FLOAT_SSE_REGS:6435 FLOAT_INT_REGS:4455 INT_SSE_REGS:6435 FLOAT_INT_SSE_REGS:6435 ALL_REGS:6435 MEM:1645
  Register 160 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 161 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 163 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:40443 MMX_REGS:40443 FP_TOP_SSE_REGS:40443 FP_SECOND_SSE_REGS:40443 FLOAT_SSE_REGS:40443 FLOAT_INT_REGS:27999 INT_SSE_REGS:40443 FLOAT_INT_SSE_REGS:40443 ALL_REGS:40443 MEM:10230
  Register 164 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 167 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9998
  Register 169 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 173 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 174 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 178 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 179 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 183 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 184 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 188 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 189 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 193 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 194 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 198 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 199 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 203 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17498 MMX_REGS:17498 FP_TOP_SSE_REGS:17498 FP_SECOND_SSE_REGS:17498 FLOAT_SSE_REGS:17498 FLOAT_INT_REGS:12114 INT_SSE_REGS:17498 FLOAT_INT_SSE_REGS:17498 ALL_REGS:17498 MEM:4228
  Register 204 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25246 MMX_REGS:25246 FP_TOP_SSE_REGS:25246 FP_SECOND_SSE_REGS:25246 FLOAT_SSE_REGS:25246 FLOAT_INT_REGS:17478 INT_SSE_REGS:25246 FLOAT_INT_SSE_REGS:25246 ALL_REGS:25246 MEM:6914
  Register 205 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 209 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 210 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 212 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 214 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 217 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 221 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 222 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 224 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 226 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 229 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 233 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 234 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 236 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 238 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 241 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 245 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 246 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 248 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 250 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 251 costs: AREG:17670 DREG:17670 CREG:17670 BREG:17670 SIREG:17670 DIREG:17670 AD_REGS:17670 Q_REGS:17670 NON_Q_REGS:19370 INDEX_REGS:17670 LEGACY_REGS:19370 GENERAL_REGS:19370 FP_TOP_REG:27094 FP_SECOND_REG:27094 FLOAT_REGS:27094 SSE_REGS:2356 FP_TOP_SSE_REGS:27094 FP_SECOND_SSE_REGS:27094 FLOAT_SSE_REGS:27094 FLOAT_INT_REGS:27094 INT_SSE_REGS:17670 FLOAT_INT_SSE_REGS:27094 ALL_REGS:29194 MEM:12180
  Register 252 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17498 MMX_REGS:17498 FP_TOP_SSE_REGS:17498 FP_SECOND_SSE_REGS:17498 FLOAT_SSE_REGS:17498 FLOAT_INT_REGS:12114 INT_SSE_REGS:17498 FLOAT_INT_SSE_REGS:17498 ALL_REGS:17498 MEM:4228
  Register 253 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25246 MMX_REGS:25246 FP_TOP_SSE_REGS:25246 FP_SECOND_SSE_REGS:25246 FLOAT_SSE_REGS:25246 FLOAT_INT_REGS:17478 INT_SSE_REGS:25246 FLOAT_INT_SSE_REGS:25246 ALL_REGS:25246 MEM:6914
  Register 254 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 258 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 259 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 261 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 263 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 266 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 270 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 271 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 273 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 275 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 278 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 282 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 283 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 285 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 287 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 290 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 294 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 295 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 297 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 299 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 300 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 301 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:5128 INDEX_REGS:0 LEGACY_REGS:5128 GENERAL_REGS:5128 SSE_REGS:61659 MMX_REGS:61659 FP_TOP_SSE_REGS:61659 FP_SECOND_SSE_REGS:61659 FLOAT_SSE_REGS:61659 FLOAT_INT_REGS:42687 INT_SSE_REGS:61659 FLOAT_INT_SSE_REGS:61659 ALL_REGS:61659 MEM:17690
  Register 302 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 304 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 308 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 310 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 313 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 314 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 316 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 319 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 320 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 322 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 325 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 326 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 328 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 331 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 332 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 334 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 337 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 338 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 340 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 343 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 344 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 346 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 348 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 350 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 352 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 354 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 356 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 358 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 360 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 362 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 364 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 366 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 368 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 370 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 372 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 374 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 376 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 380 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 381 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 383 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 385 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 386 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 390 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 391 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 393 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 395 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 396 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 400 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 401 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 403 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 405 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 406 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 410 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 411 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 413 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 415 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 416 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 420 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 421 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 423 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 425 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 426 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 430 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 431 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 433 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 435 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 438 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 439 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 442 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 445 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 448 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 451 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 454 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960

  Register 58 pref AREG, else GENERAL_REGS
  Register 63 pref SSE_REGS or none
  Register 67 pref GENERAL_REGS or none
  Register 68 pref SSE_REGS or none
  Register 69 pref SSE_REGS or none
  Register 70 pref SSE_REGS or none
  Register 73 pref GENERAL_REGS or none
  Register 75 pref SSE_REGS or none
  Register 77 pref SSE_REGS or none
  Register 80 pref GENERAL_REGS or none
  Register 82 pref GENERAL_REGS or none
  Register 86 pref DIREG, else GENERAL_REGS
  Register 87 pref DIREG, else GENERAL_REGS
  Register 88 pref SIREG, else GENERAL_REGS
  Register 89 pref DREG, else GENERAL_REGS
  Register 90 pref CREG, else GENERAL_REGS
  Register 91 pref GENERAL_REGS or none
  Register 92 pref GENERAL_REGS or none
  Register 93 pref GENERAL_REGS or none
  Register 94 pref GENERAL_REGS or none
  Register 95 pref DIREG, else GENERAL_REGS
  Register 97 pref AREG, else GENERAL_REGS
  Register 98 pref AREG, else GENERAL_REGS
  Register 100 pref SSE_REGS or none
  Register 103 pref SSE_REGS or none
  Register 107 pref SSE_REGS or none
  Register 109 pref GENERAL_REGS or none
  Register 110 pref INDEX_REGS, else GENERAL_REGS
  Register 114 pref SSE_REGS or none
  Register 116 pref SSE_REGS or none
  Register 118 pref GENERAL_REGS or none
  Register 119 pref INDEX_REGS, else GENERAL_REGS
  Register 123 pref SSE_REGS or none
  Register 126 pref SSE_REGS or none
  Register 128 pref SSE_REGS or none
  Register 130 pref SSE_REGS or none
  Register 145 pref GENERAL_REGS or none
  Register 146 pref INDEX_REGS, else GENERAL_REGS
  Register 150 pref GENERAL_REGS or none
  Register 155 pref GENERAL_REGS or none
  Register 160 pref GENERAL_REGS or none
  Register 161 pref GENERAL_REGS or none
  Register 163 pref GENERAL_REGS or none
  Register 164 pref SSE_REGS or none
  Register 167 pref GENERAL_REGS or none
  Register 169 pref SSE_REGS or none
  Register 173 pref GENERAL_REGS or none
  Register 174 pref SSE_REGS or none
  Register 178 pref GENERAL_REGS or none
  Register 179 pref SSE_REGS or none
  Register 183 pref GENERAL_REGS or none
  Register 184 pref SSE_REGS or none
  Register 188 pref GENERAL_REGS or none
  Register 189 pref SSE_REGS or none
  Register 193 pref GENERAL_REGS or none
  Register 194 pref SSE_REGS or none
  Register 198 pref GENERAL_REGS or none
  Register 199 pref SSE_REGS or none
  Register 203 pref GENERAL_REGS or none
  Register 204 pref GENERAL_REGS or none
  Register 205 pref SSE_REGS or none
  Register 209 pref GENERAL_REGS or none
  Register 210 pref INDEX_REGS, else GENERAL_REGS
  Register 212 pref GENERAL_REGS or none
  Register 214 pref SSE_REGS or none
  Register 217 pref SSE_REGS or none
  Register 221 pref GENERAL_REGS or none
  Register 222 pref INDEX_REGS, else GENERAL_REGS
  Register 224 pref GENERAL_REGS or none
  Register 226 pref SSE_REGS or none
  Register 229 pref SSE_REGS or none
  Register 233 pref GENERAL_REGS or none
  Register 234 pref INDEX_REGS, else GENERAL_REGS
  Register 236 pref GENERAL_REGS or none
  Register 238 pref SSE_REGS or none
  Register 241 pref SSE_REGS or none
  Register 245 pref GENERAL_REGS or none
  Register 246 pref INDEX_REGS, else GENERAL_REGS
  Register 248 pref GENERAL_REGS or none
  Register 250 pref SSE_REGS or none
  Register 251 pref SSE_REGS or none
  Register 252 pref GENERAL_REGS or none
  Register 253 pref GENERAL_REGS or none
  Register 254 pref SSE_REGS or none
  Register 258 pref GENERAL_REGS or none
  Register 259 pref INDEX_REGS, else GENERAL_REGS
  Register 261 pref GENERAL_REGS or none
  Register 263 pref SSE_REGS or none
  Register 266 pref SSE_REGS or none
  Register 270 pref GENERAL_REGS or none
  Register 271 pref INDEX_REGS, else GENERAL_REGS
  Register 273 pref GENERAL_REGS or none
  Register 275 pref SSE_REGS or none
  Register 278 pref SSE_REGS or none
  Register 282 pref GENERAL_REGS or none
  Register 283 pref INDEX_REGS, else GENERAL_REGS
  Register 285 pref GENERAL_REGS or none
  Register 287 pref SSE_REGS or none
  Register 290 pref SSE_REGS or none
  Register 294 pref GENERAL_REGS or none
  Register 295 pref INDEX_REGS, else GENERAL_REGS
  Register 297 pref GENERAL_REGS or none
  Register 299 pref SSE_REGS or none
  Register 300 pref GENERAL_REGS or none
  Register 301 pref INDEX_REGS, else GENERAL_REGS
  Register 302 pref SSE_REGS or none
  Register 304 pref SSE_REGS or none
  Register 308 pref SSE_REGS or none
  Register 310 pref SSE_REGS or none
  Register 313 pref INDEX_REGS, else GENERAL_REGS
  Register 314 pref SSE_REGS or none
  Register 316 pref SSE_REGS or none
  Register 319 pref INDEX_REGS, else GENERAL_REGS
  Register 320 pref SSE_REGS or none
  Register 322 pref SSE_REGS or none
  Register 325 pref INDEX_REGS, else GENERAL_REGS
  Register 326 pref SSE_REGS or none
  Register 328 pref SSE_REGS or none
  Register 331 pref INDEX_REGS, else GENERAL_REGS
  Register 332 pref SSE_REGS or none
  Register 334 pref SSE_REGS or none
  Register 337 pref INDEX_REGS, else GENERAL_REGS
  Register 338 pref SSE_REGS or none
  Register 340 pref SSE_REGS or none
  Register 343 pref INDEX_REGS, else GENERAL_REGS
  Register 344 pref SSE_REGS or none
  Register 346 pref SSE_REGS or none
  Register 348 pref SSE_REGS or none
  Register 350 pref SSE_REGS or none
  Register 352 pref SSE_REGS or none
  Register 354 pref SSE_REGS or none
  Register 356 pref SSE_REGS or none
  Register 358 pref SSE_REGS or none
  Register 360 pref SSE_REGS or none
  Register 362 pref SSE_REGS or none
  Register 364 pref SSE_REGS or none
  Register 366 pref SSE_REGS or none
  Register 368 pref SSE_REGS or none
  Register 370 pref SSE_REGS or none
  Register 372 pref SSE_REGS or none
  Register 374 pref SSE_REGS or none
  Register 376 pref SSE_REGS or none
  Register 380 pref GENERAL_REGS or none
  Register 381 pref INDEX_REGS, else GENERAL_REGS
  Register 383 pref GENERAL_REGS or none
  Register 385 pref SSE_REGS or none
  Register 386 pref SSE_REGS or none
  Register 390 pref GENERAL_REGS or none
  Register 391 pref INDEX_REGS, else GENERAL_REGS
  Register 393 pref GENERAL_REGS or none
  Register 395 pref SSE_REGS or none
  Register 396 pref SSE_REGS or none
  Register 400 pref GENERAL_REGS or none
  Register 401 pref INDEX_REGS, else GENERAL_REGS
  Register 403 pref GENERAL_REGS or none
  Register 405 pref SSE_REGS or none
  Register 406 pref SSE_REGS or none
  Register 410 pref GENERAL_REGS or none
  Register 411 pref INDEX_REGS, else GENERAL_REGS
  Register 413 pref GENERAL_REGS or none
  Register 415 pref SSE_REGS or none
  Register 416 pref SSE_REGS or none
  Register 420 pref GENERAL_REGS or none
  Register 421 pref INDEX_REGS, else GENERAL_REGS
  Register 423 pref GENERAL_REGS or none
  Register 425 pref SSE_REGS or none
  Register 426 pref SSE_REGS or none
  Register 430 pref GENERAL_REGS or none
  Register 431 pref INDEX_REGS, else GENERAL_REGS
  Register 433 pref GENERAL_REGS or none
  Register 435 pref SSE_REGS or none
  Register 438 pref SSE_REGS or none
  Register 439 pref SSE_REGS or none
  Register 442 pref SSE_REGS or none
  Register 445 pref SSE_REGS or none
  Register 448 pref SSE_REGS or none
  Register 451 pref SSE_REGS or none
  Register 454 pref SSE_REGS or none


Pass 1

  Register 58 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 63 costs: AREG:24274 DREG:24274 CREG:24274 BREG:24274 SIREG:24274 DIREG:24274 AD_REGS:24274 Q_REGS:24274 NON_Q_REGS:24274 INDEX_REGS:24274 LEGACY_REGS:24274 GENERAL_REGS:24274 FP_TOP_REG:38978 FP_SECOND_REG:38978 FLOAT_REGS:38978 SSE_REGS:380 FP_TOP_SSE_REGS:38978 FP_SECOND_SSE_REGS:38978 FLOAT_SSE_REGS:38978 FLOAT_INT_REGS:38978 INT_SSE_REGS:24274 FLOAT_INT_SSE_REGS:38978 ALL_REGS:38978 MEM:13546
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 68 costs: AREG:24323 DREG:24323 CREG:24323 BREG:24323 SIREG:24323 DIREG:24323 AD_REGS:24323 Q_REGS:24323 NON_Q_REGS:24323 INDEX_REGS:24323 LEGACY_REGS:24323 GENERAL_REGS:24323 FP_TOP_REG:39291 FP_SECOND_REG:39291 FLOAT_REGS:39291 SSE_REGS:0 FP_TOP_SSE_REGS:39291 FP_SECOND_SSE_REGS:39291 FLOAT_SSE_REGS:39291 FLOAT_INT_REGS:39291 INT_SSE_REGS:24323 FLOAT_INT_SSE_REGS:39291 ALL_REGS:39291 MEM:13319
  Register 69 costs: AREG:24323 DREG:24323 CREG:24323 BREG:24323 SIREG:24323 DIREG:24323 AD_REGS:24323 Q_REGS:24323 NON_Q_REGS:24323 INDEX_REGS:24323 LEGACY_REGS:24323 GENERAL_REGS:24323 FP_TOP_REG:39291 FP_SECOND_REG:39291 FLOAT_REGS:39291 SSE_REGS:0 FP_TOP_SSE_REGS:39291 FP_SECOND_SSE_REGS:39291 FLOAT_SSE_REGS:39291 FLOAT_INT_REGS:39291 INT_SSE_REGS:24323 FLOAT_INT_SSE_REGS:39291 ALL_REGS:39291 MEM:13430
  Register 70 costs: AREG:68558 DREG:68558 CREG:68558 BREG:68558 SIREG:68558 DIREG:68558 AD_REGS:68558 Q_REGS:68558 NON_Q_REGS:70445 INDEX_REGS:68558 LEGACY_REGS:70445 GENERAL_REGS:70445 FP_TOP_REG:107614 FP_SECOND_REG:107614 FLOAT_REGS:107614 SSE_REGS:5092 FP_TOP_SSE_REGS:107614 FP_SECOND_SSE_REGS:107614 FLOAT_SSE_REGS:107614 FLOAT_INT_REGS:107614 INT_SSE_REGS:68558 FLOAT_INT_SSE_REGS:107614 ALL_REGS:109945 MEM:40476
  Register 73 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7826 MMX_REGS:7826 FP_TOP_SSE_REGS:7826 FP_SECOND_SSE_REGS:7826 FLOAT_SSE_REGS:7826 FLOAT_INT_REGS:5418 INT_SSE_REGS:7826 FLOAT_INT_SSE_REGS:7826 ALL_REGS:7826 MEM:2408
  Register 75 costs: AREG:36257 DREG:36257 CREG:36257 BREG:36257 SIREG:36257 DIREG:36257 AD_REGS:36257 Q_REGS:36257 NON_Q_REGS:38144 INDEX_REGS:36257 LEGACY_REGS:38144 GENERAL_REGS:38144 FP_TOP_REG:58569 FP_SECOND_REG:58569 FLOAT_REGS:58569 SSE_REGS:0 FP_TOP_SSE_REGS:58569 FP_SECOND_SSE_REGS:58569 FLOAT_SSE_REGS:58569 FLOAT_INT_REGS:58569 INT_SSE_REGS:36257 FLOAT_INT_SSE_REGS:58569 ALL_REGS:60900 MEM:20189
  Register 77 costs: AREG:1443 DREG:1443 CREG:1443 BREG:1443 SIREG:1443 DIREG:1443 AD_REGS:1443 Q_REGS:1443 NON_Q_REGS:3330 INDEX_REGS:1443 LEGACY_REGS:3330 GENERAL_REGS:3330 FP_TOP_REG:2331 FP_SECOND_REG:2331 FLOAT_REGS:2331 SSE_REGS:0 FP_TOP_SSE_REGS:2331 FP_SECOND_SSE_REGS:2331 FLOAT_SSE_REGS:2331 FLOAT_INT_REGS:2331 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:2331 ALL_REGS:4662 MEM:1221
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1200
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1200
  Register 86 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:222 INDEX_REGS:0 LEGACY_REGS:222 GENERAL_REGS:222 SSE_REGS:5772 MMX_REGS:5772 FP_TOP_SSE_REGS:5772 FP_SECOND_SSE_REGS:5772 FLOAT_SSE_REGS:5772 FLOAT_INT_REGS:3996 INT_SSE_REGS:5772 FLOAT_INT_SSE_REGS:5772 ALL_REGS:5772 MEM:1554
  Register 87 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9269 MMX_REGS:9269 FP_TOP_SSE_REGS:9269 FP_SECOND_SSE_REGS:9269 FLOAT_SSE_REGS:9269 FLOAT_INT_REGS:6417 INT_SSE_REGS:9269 FLOAT_INT_SSE_REGS:9269 ALL_REGS:9269 MEM:2540
  Register 88 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13611 MMX_REGS:13611 FP_TOP_SSE_REGS:13611 FP_SECOND_SSE_REGS:13611 FLOAT_SSE_REGS:13611 FLOAT_INT_REGS:9423 INT_SSE_REGS:13611 FLOAT_INT_SSE_REGS:13611 ALL_REGS:13611 MEM:3463
  Register 89 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9269 MMX_REGS:9269 FP_TOP_SSE_REGS:9269 FP_SECOND_SSE_REGS:9269 FLOAT_SSE_REGS:9269 FLOAT_INT_REGS:6417 INT_SSE_REGS:9269 FLOAT_INT_SSE_REGS:9269 ALL_REGS:9269 MEM:2540
  Register 90 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13611 MMX_REGS:13611 FP_TOP_SSE_REGS:13611 FP_SECOND_SSE_REGS:13611 FLOAT_SSE_REGS:13611 FLOAT_INT_REGS:9423 INT_SSE_REGS:13611 FLOAT_INT_SSE_REGS:13611 ALL_REGS:13611 MEM:3463
  Register 91 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17381 MMX_REGS:17381 INT_SSE_REGS:17381 MEM:4544
  Register 92 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1443 MMX_REGS:1443 FP_TOP_SSE_REGS:1443 FP_SECOND_SSE_REGS:1443 FLOAT_SSE_REGS:1443 FLOAT_INT_REGS:999 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:1443 ALL_REGS:1443 MEM:0
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1443 MMX_REGS:1443 FP_TOP_SSE_REGS:1443 FP_SECOND_SSE_REGS:1443 FLOAT_SSE_REGS:1443 FLOAT_INT_REGS:999 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:1443 ALL_REGS:1443 MEM:0
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 97 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:58188 MMX_REGS:58188 FP_TOP_SSE_REGS:58188 FP_SECOND_SSE_REGS:58188 FLOAT_SSE_REGS:58188 FLOAT_INT_REGS:40284 INT_SSE_REGS:58188 FLOAT_INT_SSE_REGS:58188 ALL_REGS:58188 MEM:17904
  Register 98 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:58188 MMX_REGS:58188 FP_TOP_SSE_REGS:58188 FP_SECOND_SSE_REGS:58188 FLOAT_SSE_REGS:58188 FLOAT_INT_REGS:40284 INT_SSE_REGS:58188 FLOAT_INT_SSE_REGS:58188 ALL_REGS:58188 MEM:17904
  Register 100 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:2886 INDEX_REGS:2886 LEGACY_REGS:2886 GENERAL_REGS:2886 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:4662 MEM:1665
  Register 103 costs: AREG:6500 DREG:6500 CREG:6500 BREG:6500 SIREG:6500 DIREG:6500 AD_REGS:6500 Q_REGS:6500 NON_Q_REGS:8200 INDEX_REGS:6500 LEGACY_REGS:8200 GENERAL_REGS:8200 FP_TOP_REG:10500 FP_SECOND_REG:10500 FLOAT_REGS:10500 SSE_REGS:0 FP_TOP_SSE_REGS:10500 FP_SECOND_SSE_REGS:10500 FLOAT_SSE_REGS:10500 FLOAT_INT_REGS:10500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:10500 ALL_REGS:12600 MEM:4400
  Register 107 costs: AREG:4100 DREG:4100 CREG:4100 BREG:4100 SIREG:4100 DIREG:4100 AD_REGS:4100 Q_REGS:4100 NON_Q_REGS:5800 INDEX_REGS:4100 LEGACY_REGS:5800 GENERAL_REGS:5800 FP_TOP_REG:6500 FP_SECOND_REG:6500 FLOAT_REGS:6500 SSE_REGS:200 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:6500 INT_SSE_REGS:4100 FLOAT_INT_SSE_REGS:6500 ALL_REGS:8600 MEM:3000
  Register 109 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 110 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 114 costs: AREG:1500 DREG:1500 CREG:1500 BREG:1500 SIREG:1500 DIREG:1500 AD_REGS:1500 Q_REGS:1500 NON_Q_REGS:3200 INDEX_REGS:1500 LEGACY_REGS:3200 GENERAL_REGS:3200 FP_TOP_REG:2300 FP_SECOND_REG:2300 FLOAT_REGS:2300 SSE_REGS:200 FP_TOP_SSE_REGS:2300 FP_SECOND_SSE_REGS:2300 FLOAT_SSE_REGS:2300 FLOAT_INT_REGS:2300 INT_SSE_REGS:1500 FLOAT_INT_SSE_REGS:2300 ALL_REGS:4400 MEM:1400
  Register 116 costs: AREG:4100 DREG:4100 CREG:4100 BREG:4100 SIREG:4100 DIREG:4100 AD_REGS:4100 Q_REGS:4100 NON_Q_REGS:5800 INDEX_REGS:4100 LEGACY_REGS:5800 GENERAL_REGS:5800 FP_TOP_REG:6500 FP_SECOND_REG:6500 FLOAT_REGS:6500 SSE_REGS:200 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:6500 INT_SSE_REGS:4100 FLOAT_INT_SSE_REGS:6500 ALL_REGS:8600 MEM:3000
  Register 118 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 119 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 123 costs: AREG:1500 DREG:1500 CREG:1500 BREG:1500 SIREG:1500 DIREG:1500 AD_REGS:1500 Q_REGS:1500 NON_Q_REGS:3200 INDEX_REGS:1500 LEGACY_REGS:3200 GENERAL_REGS:3200 FP_TOP_REG:2300 FP_SECOND_REG:2300 FLOAT_REGS:2300 SSE_REGS:200 FP_TOP_SSE_REGS:2300 FP_SECOND_SSE_REGS:2300 FLOAT_SSE_REGS:2300 FLOAT_INT_REGS:2300 INT_SSE_REGS:1500 FLOAT_INT_SSE_REGS:2300 ALL_REGS:4400 MEM:1400
  Register 126 costs: AREG:2600 DREG:2600 CREG:2600 BREG:2600 SIREG:2600 DIREG:2600 AD_REGS:2600 Q_REGS:2600 NON_Q_REGS:6000 INDEX_REGS:2600 LEGACY_REGS:6000 GENERAL_REGS:6000 FP_TOP_REG:4200 FP_SECOND_REG:4200 FLOAT_REGS:4200 SSE_REGS:0 FP_TOP_SSE_REGS:4200 FP_SECOND_SSE_REGS:4200 FLOAT_SSE_REGS:4200 FLOAT_INT_REGS:4200 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:4200 ALL_REGS:8400 MEM:2400
  Register 128 costs: AREG:2600 DREG:2600 CREG:2600 BREG:2600 SIREG:2600 DIREG:2600 AD_REGS:2600 Q_REGS:2600 NON_Q_REGS:6000 INDEX_REGS:2600 LEGACY_REGS:6000 GENERAL_REGS:6000 FP_TOP_REG:4200 FP_SECOND_REG:4200 FLOAT_REGS:4200 SSE_REGS:0 FP_TOP_SSE_REGS:4200 FP_SECOND_SSE_REGS:4200 FLOAT_SSE_REGS:4200 FLOAT_INT_REGS:4200 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:4200 ALL_REGS:8400 MEM:2400
  Register 130 costs: AREG:17670 DREG:17670 CREG:17670 BREG:17670 SIREG:17670 DIREG:17670 AD_REGS:17670 Q_REGS:17670 NON_Q_REGS:19370 INDEX_REGS:17670 LEGACY_REGS:19370 GENERAL_REGS:19370 FP_TOP_REG:27094 FP_SECOND_REG:27094 FLOAT_REGS:27094 SSE_REGS:2356 FP_TOP_SSE_REGS:27094 FP_SECOND_SSE_REGS:27094 FLOAT_SSE_REGS:27094 FLOAT_INT_REGS:27094 INT_SSE_REGS:17670 FLOAT_INT_SSE_REGS:27094 ALL_REGS:29194 MEM:12180
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 146 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6435 MMX_REGS:6435 FP_TOP_SSE_REGS:6435 FP_SECOND_SSE_REGS:6435 FLOAT_SSE_REGS:6435 FLOAT_INT_REGS:4455 INT_SSE_REGS:6435 FLOAT_INT_SSE_REGS:6435 ALL_REGS:6435 MEM:1645
  Register 155 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6435 MMX_REGS:6435 FP_TOP_SSE_REGS:6435 FP_SECOND_SSE_REGS:6435 FLOAT_SSE_REGS:6435 FLOAT_INT_REGS:4455 INT_SSE_REGS:6435 FLOAT_INT_SSE_REGS:6435 ALL_REGS:6435 MEM:1645
  Register 160 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 161 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 163 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:40443 MMX_REGS:40443 FP_TOP_SSE_REGS:40443 FP_SECOND_SSE_REGS:40443 FLOAT_SSE_REGS:40443 FLOAT_INT_REGS:27999 INT_SSE_REGS:40443 FLOAT_INT_SSE_REGS:40443 ALL_REGS:40443 MEM:10230
  Register 164 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 167 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9998
  Register 169 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 173 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 174 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 178 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 179 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 183 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 184 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 188 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 189 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 193 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 194 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 198 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 199 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 203 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17498 MMX_REGS:17498 FP_TOP_SSE_REGS:17498 FP_SECOND_SSE_REGS:17498 FLOAT_SSE_REGS:17498 FLOAT_INT_REGS:12114 INT_SSE_REGS:17498 FLOAT_INT_SSE_REGS:17498 ALL_REGS:17498 MEM:4228
  Register 204 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25246 MMX_REGS:25246 FP_TOP_SSE_REGS:25246 FP_SECOND_SSE_REGS:25246 FLOAT_SSE_REGS:25246 FLOAT_INT_REGS:17478 INT_SSE_REGS:25246 FLOAT_INT_SSE_REGS:25246 ALL_REGS:25246 MEM:6914
  Register 205 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 209 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 210 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 212 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 214 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 217 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 221 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 222 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 224 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 226 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 229 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 233 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 234 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 236 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 238 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 241 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 245 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 246 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 248 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 250 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 251 costs: AREG:17670 DREG:17670 CREG:17670 BREG:17670 SIREG:17670 DIREG:17670 AD_REGS:17670 Q_REGS:17670 NON_Q_REGS:19370 INDEX_REGS:17670 LEGACY_REGS:19370 GENERAL_REGS:19370 FP_TOP_REG:27094 FP_SECOND_REG:27094 FLOAT_REGS:27094 SSE_REGS:2356 FP_TOP_SSE_REGS:27094 FP_SECOND_SSE_REGS:27094 FLOAT_SSE_REGS:27094 FLOAT_INT_REGS:27094 INT_SSE_REGS:17670 FLOAT_INT_SSE_REGS:27094 ALL_REGS:29194 MEM:12180
  Register 252 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17498 MMX_REGS:17498 FP_TOP_SSE_REGS:17498 FP_SECOND_SSE_REGS:17498 FLOAT_SSE_REGS:17498 FLOAT_INT_REGS:12114 INT_SSE_REGS:17498 FLOAT_INT_SSE_REGS:17498 ALL_REGS:17498 MEM:4228
  Register 253 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25246 MMX_REGS:25246 FP_TOP_SSE_REGS:25246 FP_SECOND_SSE_REGS:25246 FLOAT_SSE_REGS:25246 FLOAT_INT_REGS:17478 INT_SSE_REGS:25246 FLOAT_INT_SSE_REGS:25246 ALL_REGS:25246 MEM:6914
  Register 254 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 258 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 259 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 261 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 263 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 266 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 270 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 271 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 273 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 275 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 278 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 282 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 283 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 285 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 287 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 290 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 294 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 295 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 297 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 299 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 300 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 301 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:5128 INDEX_REGS:0 LEGACY_REGS:5128 GENERAL_REGS:5128 SSE_REGS:61659 MMX_REGS:61659 FP_TOP_SSE_REGS:61659 FP_SECOND_SSE_REGS:61659 FLOAT_SSE_REGS:61659 FLOAT_INT_REGS:42687 INT_SSE_REGS:61659 FLOAT_INT_SSE_REGS:61659 ALL_REGS:61659 MEM:17690
  Register 302 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 304 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 308 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 310 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 313 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 314 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 316 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 319 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 320 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 322 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 325 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 326 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 328 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 331 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 332 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 334 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 337 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 338 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 340 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 343 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:808 INDEX_REGS:0 LEGACY_REGS:808 GENERAL_REGS:808 SSE_REGS:6565 MMX_REGS:6565 FP_TOP_SSE_REGS:6565 FP_SECOND_SSE_REGS:6565 FLOAT_SSE_REGS:6565 FLOAT_INT_REGS:4545 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:6565 ALL_REGS:6565 MEM:2020
  Register 344 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 346 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 348 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 350 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 352 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 354 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 356 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 358 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 360 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 362 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 364 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 366 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 368 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 370 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 372 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 374 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 376 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 380 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 381 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 383 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 385 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 386 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 390 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 391 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 393 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 395 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 396 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 400 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 401 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 403 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 405 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 406 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 410 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 411 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 413 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 415 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 416 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 420 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 421 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 423 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 425 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 426 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 430 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 431 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 433 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 435 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 438 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 439 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 442 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 445 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 448 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 451 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 454 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960

  Register 73 pref AREG, else GENERAL_REGS
457 registers.

Register 58 used 2 times across 2 insns in block 0; set 1 time; pref AREG, else GENERAL_REGS; pointer.

Register 63 used 19 times across 114 insns; set 2 times; dies in 0 places; SSE_REGS or none.

Register 67 used 2 times across 2 insns in block 40; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 68 used 19 times across 149 insns; set 2 times; user var; dies in 0 places; SSE_REGS or none.

Register 69 used 19 times across 151 insns; set 2 times; user var; dies in 0 places; SSE_REGS or none.

Register 70 used 42 times across 349 insns; set 4 times; user var; crosses 21 calls; SSE_REGS or none.

Register 73 used 6 times across 478 insns; set 1 time; user var; crosses 18 calls; pref AREG, else GENERAL_REGS; pointer.

Register 75 used 21 times across 347 insns; set 2 times; user var; dies in 0 places; crosses 22 calls; SSE_REGS or none.

Register 77 used 2 times across 5 insns in block 0; set 1 time; user var; crosses 1 call; SSE_REGS or none.

Register 80 used 3 times across 3 insns in block 22; set 1 time; GENERAL_REGS or none.

Register 82 used 3 times across 3 insns in block 31; set 1 time; GENERAL_REGS or none.

Register 86 used 4 times across 12 insns in block 0; set 1 time; crosses 2 calls; pref DIREG, else GENERAL_REGS.

Register 87 used 7 times across 192 insns; set 1 time; user var; crosses 9 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 88 used 9 times across 357 insns; set 1 time; user var; crosses 23 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 89 used 7 times across 290 insns; set 1 time; user var; crosses 17 calls; pref DREG, else GENERAL_REGS; pointer.

Register 90 used 9 times across 357 insns; set 1 time; user var; crosses 23 calls; 4 bytes; pref CREG, else GENERAL_REGS.

Register 91 used 13 times across 503 insns; set 1 time; user var; dies in 0 places; crosses 23 calls; 4 bytes; GENERAL_REGS or none.

Register 92 used 2 times across 503 insns; set 1 time; user var; crosses 23 calls; GENERAL_REGS or none; pointer.

Register 93 used 2 times across 2 insns in block 4; set 1 time; user var; GENERAL_REGS or none; pointer.

Register 94 used 2 times across 2 insns in block 4; set 1 time; user var; GENERAL_REGS or none; pointer.

Register 95 used 2 times across 2 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 97 used 42 times across 475 insns; set 1 time; crosses 17 calls; pref AREG, else GENERAL_REGS; pointer.

Register 98 used 42 times across 472 insns; set 1 time; crosses 16 calls; pref AREG, else GENERAL_REGS; pointer.

Register 100 used 2 times across 2 insns in block 0; set 1 time; SSE_REGS or none.

Register 103 used 6 times across 12 insns in block 40; set 3 times; SSE_REGS or none.

Register 107 used 4 times across 4 insns in block 31; set 2 times; SSE_REGS or none.

Register 109 used 2 times across 2 insns in block 31; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 110 used 2 times across 2 insns in block 31; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 114 used 2 times across 2 insns in block 31; set 1 time; SSE_REGS or none.

Register 116 used 4 times across 4 insns in block 22; set 2 times; SSE_REGS or none.

Register 118 used 2 times across 2 insns in block 22; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 119 used 2 times across 2 insns in block 22; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 123 used 2 times across 2 insns in block 22; set 1 time; SSE_REGS or none.

Register 126 used 4 times across 4 insns in block 5; set 2 times; SSE_REGS or none.

Register 128 used 4 times across 4 insns in block 5; set 2 times; SSE_REGS or none.

Register 130 used 9 times across 196 insns; set 1 time; dies in 0 places; crosses 8 calls; SSE_REGS or none.

Register 145 used 10 times across 26 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 146 used 5 times across 7 insns in block 20; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 150 used 6 times across 21 insns; set 2 times; crosses 1 call; 4 bytes; GENERAL_REGS or none.

Register 155 used 6 times across 21 insns; set 2 times; crosses 1 call; 4 bytes; GENERAL_REGS or none.

Register 160 used 10 times across 24 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 161 used 2 times across 2 insns in block 55; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 163 used 33 times across 218 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 164 used 6 times across 6 insns in block 55; set 3 times; SSE_REGS or none.

Register 167 used 30 times across 107 insns; set 9 times; dies in 0 places; GENERAL_REGS or none; pointer.

Register 169 used 6 times across 6 insns in block 55; set 3 times; SSE_REGS or none.

Register 173 used 2 times across 2 insns in block 55; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 174 used 6 times across 6 insns in block 55; set 3 times; SSE_REGS or none.

Register 178 used 2 times across 2 insns in block 55; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 179 used 6 times across 6 insns in block 55; set 3 times; SSE_REGS or none.

Register 183 used 2 times across 2 insns in block 55; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 184 used 6 times across 6 insns in block 55; set 3 times; SSE_REGS or none.

Register 188 used 2 times across 2 insns in block 55; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 189 used 6 times across 6 insns in block 55; set 3 times; SSE_REGS or none.

Register 193 used 2 times across 2 insns in block 55; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 194 used 6 times across 6 insns in block 55; set 3 times; SSE_REGS or none.

Register 198 used 2 times across 2 insns in block 55; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 199 used 6 times across 6 insns in block 55; set 3 times; SSE_REGS or none.

Register 203 used 11 times across 160 insns; set 5 times; user var; dies in 0 places; crosses 6 calls; 4 bytes; GENERAL_REGS or none.

Register 204 used 14 times across 78 insns; set 5 times; dies in 0 places; crosses 6 calls; GENERAL_REGS or none; pointer.

Register 205 used 4 times across 4 insns in block 38; set 2 times; SSE_REGS or none.

Register 209 used 2 times across 2 insns in block 38; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 210 used 2 times across 2 insns in block 38; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 212 used 3 times across 3 insns in block 38; set 1 time; GENERAL_REGS or none.

Register 214 used 2 times across 2 insns in block 38; set 1 time; SSE_REGS or none.

Register 217 used 4 times across 4 insns in block 38; set 2 times; SSE_REGS or none.

Register 221 used 2 times across 2 insns in block 38; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 222 used 2 times across 2 insns in block 38; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 224 used 3 times across 3 insns in block 38; set 1 time; GENERAL_REGS or none.

Register 226 used 2 times across 2 insns in block 38; set 1 time; SSE_REGS or none.

Register 229 used 4 times across 4 insns in block 38; set 2 times; SSE_REGS or none.

Register 233 used 2 times across 2 insns in block 38; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 234 used 2 times across 2 insns in block 38; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 236 used 3 times across 3 insns in block 38; set 1 time; GENERAL_REGS or none.

Register 238 used 2 times across 2 insns in block 38; set 1 time; SSE_REGS or none.

Register 241 used 4 times across 4 insns in block 38; set 2 times; SSE_REGS or none.

Register 245 used 2 times across 2 insns in block 38; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 246 used 2 times across 2 insns in block 38; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 248 used 3 times across 3 insns in block 38; set 1 time; GENERAL_REGS or none.

Register 250 used 2 times across 2 insns in block 38; set 1 time; SSE_REGS or none.

Register 251 used 9 times across 196 insns; set 1 time; dies in 0 places; crosses 8 calls; SSE_REGS or none.

Register 252 used 11 times across 160 insns; set 5 times; user var; dies in 0 places; crosses 6 calls; 4 bytes; GENERAL_REGS or none.

Register 253 used 14 times across 78 insns; set 5 times; dies in 0 places; crosses 6 calls; GENERAL_REGS or none; pointer.

Register 254 used 4 times across 4 insns in block 29; set 2 times; SSE_REGS or none.

Register 258 used 2 times across 2 insns in block 29; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 259 used 2 times across 2 insns in block 29; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 261 used 3 times across 3 insns in block 29; set 1 time; GENERAL_REGS or none.

Register 263 used 2 times across 2 insns in block 29; set 1 time; SSE_REGS or none.

Register 266 used 4 times across 4 insns in block 29; set 2 times; SSE_REGS or none.

Register 270 used 2 times across 2 insns in block 29; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 271 used 2 times across 2 insns in block 29; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 273 used 3 times across 3 insns in block 29; set 1 time; GENERAL_REGS or none.

Register 275 used 2 times across 2 insns in block 29; set 1 time; SSE_REGS or none.

Register 278 used 4 times across 4 insns in block 29; set 2 times; SSE_REGS or none.

Register 282 used 2 times across 2 insns in block 29; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 283 used 2 times across 2 insns in block 29; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 285 used 3 times across 3 insns in block 29; set 1 time; GENERAL_REGS or none.

Register 287 used 2 times across 2 insns in block 29; set 1 time; SSE_REGS or none.

Register 290 used 4 times across 4 insns in block 29; set 2 times; SSE_REGS or none.

Register 294 used 2 times across 2 insns in block 29; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 295 used 2 times across 2 insns in block 29; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 297 used 3 times across 3 insns in block 29; set 1 time; GENERAL_REGS or none.

Register 299 used 2 times across 2 insns in block 29; set 1 time; SSE_REGS or none.

Register 300 used 19 times across 274 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 301 used 51 times across 270 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 302 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 304 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 308 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 310 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 313 used 5 times across 7 insns in block 20; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 314 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 316 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 319 used 5 times across 7 insns in block 20; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 320 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 322 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 325 used 5 times across 7 insns in block 20; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 326 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 328 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 331 used 5 times across 7 insns in block 20; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 332 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 334 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 337 used 5 times across 7 insns in block 20; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 338 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 340 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 343 used 5 times across 7 insns in block 20; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 344 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 346 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 348 used 4 times across 4 insns in block 13; set 2 times; SSE_REGS or none.

Register 350 used 4 times across 4 insns in block 13; set 2 times; SSE_REGS or none.

Register 352 used 4 times across 4 insns in block 14; set 2 times; SSE_REGS or none.

Register 354 used 4 times across 4 insns in block 14; set 2 times; SSE_REGS or none.

Register 356 used 4 times across 4 insns in block 15; set 2 times; SSE_REGS or none.

Register 358 used 4 times across 4 insns in block 15; set 2 times; SSE_REGS or none.

Register 360 used 4 times across 4 insns in block 16; set 2 times; SSE_REGS or none.

Register 362 used 4 times across 4 insns in block 16; set 2 times; SSE_REGS or none.

Register 364 used 4 times across 4 insns in block 17; set 2 times; SSE_REGS or none.

Register 366 used 4 times across 4 insns in block 17; set 2 times; SSE_REGS or none.

Register 368 used 4 times across 4 insns in block 18; set 2 times; SSE_REGS or none.

Register 370 used 4 times across 4 insns in block 18; set 2 times; SSE_REGS or none.

Register 372 used 4 times across 4 insns in block 19; set 2 times; SSE_REGS or none.

Register 374 used 4 times across 4 insns in block 19; set 2 times; SSE_REGS or none.

Register 376 used 4 times across 4 insns in block 26; set 2 times; SSE_REGS or none.

Register 380 used 2 times across 2 insns in block 26; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 381 used 2 times across 2 insns in block 26; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 383 used 3 times across 3 insns in block 26; set 1 time; GENERAL_REGS or none.

Register 385 used 2 times across 2 insns in block 26; set 1 time; SSE_REGS or none.

Register 386 used 4 times across 4 insns in block 27; set 2 times; SSE_REGS or none.

Register 390 used 2 times across 2 insns in block 27; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 391 used 2 times across 2 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 393 used 3 times across 3 insns in block 27; set 1 time; GENERAL_REGS or none.

Register 395 used 2 times across 2 insns in block 27; set 1 time; SSE_REGS or none.

Register 396 used 4 times across 4 insns in block 28; set 2 times; SSE_REGS or none.

Register 400 used 2 times across 2 insns in block 28; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 401 used 2 times across 2 insns in block 28; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 403 used 3 times across 3 insns in block 28; set 1 time; GENERAL_REGS or none.

Register 405 used 2 times across 2 insns in block 28; set 1 time; SSE_REGS or none.

Register 406 used 4 times across 4 insns in block 35; set 2 times; SSE_REGS or none.

Register 410 used 2 times across 2 insns in block 35; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 411 used 2 times across 2 insns in block 35; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 413 used 3 times across 3 insns in block 35; set 1 time; GENERAL_REGS or none.

Register 415 used 2 times across 2 insns in block 35; set 1 time; SSE_REGS or none.

Register 416 used 4 times across 4 insns in block 36; set 2 times; SSE_REGS or none.

Register 420 used 2 times across 2 insns in block 36; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 421 used 2 times across 2 insns in block 36; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 423 used 3 times across 3 insns in block 36; set 1 time; GENERAL_REGS or none.

Register 425 used 2 times across 2 insns in block 36; set 1 time; SSE_REGS or none.

Register 426 used 4 times across 4 insns in block 37; set 2 times; SSE_REGS or none.

Register 430 used 2 times across 2 insns in block 37; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 431 used 2 times across 2 insns in block 37; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 433 used 3 times across 3 insns in block 37; set 1 time; GENERAL_REGS or none.

Register 435 used 2 times across 2 insns in block 37; set 1 time; SSE_REGS or none.

Register 438 used 2 times across 2 insns in block 48; set 1 time; SSE_REGS or none.

Register 439 used 6 times across 6 insns in block 49; set 3 times; SSE_REGS or none.

Register 442 used 6 times across 6 insns in block 50; set 3 times; SSE_REGS or none.

Register 445 used 6 times across 6 insns in block 51; set 3 times; SSE_REGS or none.

Register 448 used 6 times across 6 insns in block 52; set 3 times; SSE_REGS or none.

Register 451 used 6 times across 6 insns in block 53; set 3 times; SSE_REGS or none.

Register 454 used 6 times across 6 insns in block 54; set 3 times; SSE_REGS or none.

57 basic blocks, 94 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  1 [10.0%]  (fallthru) 40 [90.0%] 
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  54 [10.0%]  55 [10.0%]  (loop_exit) 40 [10.0%]  0 [10.0%]  (fallthru)
Successors:  2 [10.0%]  (fallthru) 31 [90.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98
Invalid sum of incoming frequencies 402, should be 1111

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  37 [10.0%]  38 [10.0%]  (loop_exit) 31 [10.0%]  1 [10.0%]  (fallthru)
Successors:  3 [10.0%]  (fallthru) 22 [90.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98
Invalid sum of incoming frequencies 504, should be 1111

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  28 [10.0%]  29 [10.0%]  (loop_exit) 22 [10.0%]  2 [10.0%]  (fallthru)
Successors:  4 [10.0%]  (fallthru) 5 [90.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 88 90 91 92 97 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98
Invalid sum of incoming frequencies 504, should be 1111

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  19 [10.0%]  20 [10.0%]  (loop_exit) 5 [10.0%]  3 [10.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 92 97 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  3 [90.0%] 
Successors:  6 [90.0%]  (fallthru,dfs_back) 4 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  5 [90.0%]  (fallthru,dfs_back)
Successors:  7 [87.5%]  (fallthru) 20 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
Invalid sum of incoming frequencies 900, should be 771

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  6 [87.5%]  (fallthru)
Successors:  8 [85.7%]  (fallthru) 19 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  7 [85.7%]  (fallthru)
Successors:  9 [83.3%]  (fallthru) 18 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  8 [83.3%]  (fallthru)
Successors:  10 [80.0%]  (fallthru) 17 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  9 [80.0%]  (fallthru)
Successors:  11 [75.0%]  (fallthru) 16 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  10 [75.0%]  (fallthru)
Successors:  12 [66.7%]  (fallthru) 15 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [66.7%]  (fallthru)
Successors:  13 [50.0%]  (fallthru) 14 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Invalid sum of incoming frequencies 300, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Invalid sum of incoming frequencies 450, should be 900

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 12 [50.0%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Invalid sum of incoming frequencies 1350, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 11 [33.3%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Invalid sum of incoming frequencies 1050, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 10 [25.0%] 
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Invalid sum of incoming frequencies 1050, should be 900

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 9 [20.0%] 
Successors:  18 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Invalid sum of incoming frequencies 1035, should be 900

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 8 [16.7%] 
Successors:  19 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Invalid sum of incoming frequencies 1020, should be 900

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  18 [100.0%]  (fallthru) 7 [14.3%] 
Successors:  20 [90.0%]  (fallthru,dfs_back) 4 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Invalid sum of incoming frequencies 1007, should be 900

Basic block 20 prev 19, next 21, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  19 [90.0%]  (fallthru,dfs_back) 21 [100.0%]  6 [12.5%] 
Successors:  21 [90.0%]  (fallthru,dfs_back) 4 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 21 prev 20, next 22, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  20 [90.0%]  (fallthru,dfs_back)
Successors:  20 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  2 [90.0%] 
Successors:  23 [90.0%]  (fallthru,dfs_back) 3 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  22 [90.0%]  (fallthru,dfs_back)
Successors:  24 [75.0%]  (fallthru) 29 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253
Invalid sum of incoming frequencies 900, should be 600

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  23 [75.0%]  (fallthru)
Successors:  25 [66.7%]  (fallthru) 28 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  24 [66.7%]  (fallthru)
Successors:  26 [50.0%]  (fallthru) 27 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 251 252 253
Invalid sum of incoming frequencies 300, should be 900

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  25 [50.0%]  (fallthru)
Successors:  27 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 251
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
Invalid sum of incoming frequencies 450, should be 900

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  26 [100.0%]  (fallthru) 25 [50.0%] 
Successors:  28 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
Invalid sum of incoming frequencies 1350, should be 900

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  27 [100.0%]  (fallthru) 24 [33.3%] 
Successors:  29 [90.0%]  (fallthru,dfs_back) 3 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
Invalid sum of incoming frequencies 1050, should be 900

Basic block 29 prev 28, next 30, loop_depth 1, count 0, freq 2025, maybe hot.
Predecessors:  28 [90.0%]  (fallthru,dfs_back) 30 [100.0%]  23 [25.0%] 
Successors:  30 [90.0%]  (fallthru,dfs_back) 3 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
Invalid sum of incoming frequencies 2783, should be 2025

Basic block 30 prev 29, next 31, loop_depth 1, count 0, freq 1823, maybe hot.
Predecessors:  29 [90.0%]  (fallthru,dfs_back)
Successors:  29 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  1 [90.0%] 
Successors:  32 [90.0%]  (fallthru,dfs_back) 2 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  31 [90.0%]  (fallthru,dfs_back)
Successors:  33 [75.0%]  (fallthru) 38 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204
Invalid sum of incoming frequencies 900, should be 600

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  32 [75.0%]  (fallthru)
Successors:  34 [66.7%]  (fallthru) 37 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  33 [66.7%]  (fallthru)
Successors:  35 [50.0%]  (fallthru) 36 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 203 204
Invalid sum of incoming frequencies 300, should be 900

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  34 [50.0%]  (fallthru)
Successors:  36 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
Invalid sum of incoming frequencies 450, should be 900

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  35 [100.0%]  (fallthru) 34 [50.0%] 
Successors:  37 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
Invalid sum of incoming frequencies 1350, should be 900

Basic block 37 prev 36, next 38, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  36 [100.0%]  (fallthru) 33 [33.3%] 
Successors:  38 [90.0%]  (fallthru,dfs_back) 2 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
Invalid sum of incoming frequencies 1050, should be 900

Basic block 38 prev 37, next 39, loop_depth 1, count 0, freq 2025, maybe hot.
Predecessors:  37 [90.0%]  (fallthru,dfs_back) 39 [100.0%]  32 [25.0%] 
Successors:  39 [90.0%]  (fallthru,dfs_back) 2 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
Invalid sum of incoming frequencies 2783, should be 2025

Basic block 39 prev 38, next 40, loop_depth 1, count 0, freq 1823, maybe hot.
Predecessors:  38 [90.0%]  (fallthru,dfs_back)
Successors:  38 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204

Basic block 40 prev 39, next 41, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  41 [90.0%]  (fallthru,dfs_back) 1 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

Basic block 41 prev 40, next 42, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  40 [90.0%]  (fallthru,dfs_back)
Successors:  42 [87.5%]  (fallthru) 55 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
Invalid sum of incoming frequencies 900, should be 771

Basic block 42 prev 41, next 43, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  41 [87.5%]  (fallthru)
Successors:  43 [85.7%]  (fallthru) 54 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

Basic block 43 prev 42, next 44, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  42 [85.7%]  (fallthru)
Successors:  44 [83.3%]  (fallthru) 53 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

Basic block 44 prev 43, next 45, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  43 [83.3%]  (fallthru)
Successors:  45 [80.0%]  (fallthru) 52 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

Basic block 45 prev 44, next 46, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  44 [80.0%]  (fallthru)
Successors:  46 [75.0%]  (fallthru) 51 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

Basic block 46 prev 45, next 47, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  45 [75.0%]  (fallthru)
Successors:  47 [66.7%]  (fallthru) 50 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

Basic block 47 prev 46, next 48, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  46 [66.7%]  (fallthru)
Successors:  48 [50.0%]  (fallthru) 49 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Invalid sum of incoming frequencies 300, should be 900

Basic block 48 prev 47, next 49, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  47 [50.0%]  (fallthru)
Successors:  49 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Invalid sum of incoming frequencies 450, should be 900

Basic block 49 prev 48, next 50, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  48 [100.0%]  (fallthru) 47 [50.0%] 
Successors:  50 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Invalid sum of incoming frequencies 1350, should be 900

Basic block 50 prev 49, next 51, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  49 [100.0%]  (fallthru) 46 [33.3%] 
Successors:  51 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Invalid sum of incoming frequencies 1050, should be 900

Basic block 51 prev 50, next 52, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  50 [100.0%]  (fallthru) 45 [25.0%] 
Successors:  52 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Invalid sum of incoming frequencies 1050, should be 900

Basic block 52 prev 51, next 53, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  51 [100.0%]  (fallthru) 44 [20.0%] 
Successors:  53 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Invalid sum of incoming frequencies 1035, should be 900

Basic block 53 prev 52, next 54, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  52 [100.0%]  (fallthru) 43 [16.7%] 
Successors:  54 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Invalid sum of incoming frequencies 1020, should be 900

Basic block 54 prev 53, next 55, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  53 [100.0%]  (fallthru) 42 [14.3%] 
Successors:  55 [90.0%]  (fallthru,dfs_back) 1 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Invalid sum of incoming frequencies 1007, should be 900

Basic block 55 prev 54, next 56, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  54 [90.0%]  (fallthru,dfs_back) 56 [100.0%]  41 [12.5%] 
Successors:  56 [90.0%]  (fallthru,dfs_back) 1 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 56 prev 55, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  55 [90.0%]  (fallthru,dfs_back)
Successors:  55 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

;; Register 58 in 0.
;; Register 67 in 0.
;; Register 80 in 0.
;; Register 82 in 0.
;; Register 86 in 3.
;; Register 93 in 0.
;; Register 94 in 0.
;; Register 95 in 5.
;; Register 100 in 21.
;; Register 103 in 21.
;; Register 107 in 21.
;; Register 109 in 0.
;; Register 110 in 0.
;; Register 114 in 21.
;; Register 116 in 21.
;; Register 118 in 0.
;; Register 119 in 0.
;; Register 123 in 21.
;; Register 126 in 21.
;; Register 128 in 21.
;; Register 146 in 0.
;; Register 161 in 0.
;; Register 164 in 21.
;; Register 169 in 21.
;; Register 173 in 0.
;; Register 174 in 21.
;; Register 178 in 0.
;; Register 179 in 21.
;; Register 183 in 0.
;; Register 184 in 21.
;; Register 188 in 0.
;; Register 189 in 21.
;; Register 193 in 0.
;; Register 194 in 21.
;; Register 198 in 0.
;; Register 199 in 21.
;; Register 205 in 21.
;; Register 209 in 0.
;; Register 210 in 0.
;; Register 212 in 0.
;; Register 214 in 21.
;; Register 217 in 21.
;; Register 221 in 0.
;; Register 222 in 0.
;; Register 224 in 0.
;; Register 226 in 21.
;; Register 229 in 21.
;; Register 233 in 0.
;; Register 234 in 0.
;; Register 236 in 0.
;; Register 238 in 21.
;; Register 241 in 21.
;; Register 245 in 0.
;; Register 246 in 0.
;; Register 248 in 0.
;; Register 250 in 21.
;; Register 254 in 21.
;; Register 258 in 0.
;; Register 259 in 0.
;; Register 261 in 0.
;; Register 263 in 21.
;; Register 266 in 21.
;; Register 270 in 0.
;; Register 271 in 0.
;; Register 273 in 0.
;; Register 275 in 21.
;; Register 278 in 21.
;; Register 282 in 0.
;; Register 283 in 0.
;; Register 285 in 0.
;; Register 287 in 21.
;; Register 290 in 21.
;; Register 294 in 0.
;; Register 295 in 0.
;; Register 297 in 0.
;; Register 299 in 21.
;; Register 302 in 21.
;; Register 304 in 21.
;; Register 308 in 21.
;; Register 310 in 21.
;; Register 313 in 0.
;; Register 314 in 21.
;; Register 316 in 21.
;; Register 319 in 0.
;; Register 320 in 21.
;; Register 322 in 21.
;; Register 325 in 0.
;; Register 326 in 21.
;; Register 328 in 21.
;; Register 331 in 0.
;; Register 332 in 21.
;; Register 334 in 21.
;; Register 337 in 0.
;; Register 338 in 21.
;; Register 340 in 21.
;; Register 343 in 0.
;; Register 344 in 21.
;; Register 346 in 21.
;; Register 348 in 21.
;; Register 350 in 21.
;; Register 352 in 21.
;; Register 354 in 21.
;; Register 356 in 21.
;; Register 358 in 21.
;; Register 360 in 21.
;; Register 362 in 21.
;; Register 364 in 21.
;; Register 366 in 21.
;; Register 368 in 21.
;; Register 370 in 21.
;; Register 372 in 21.
;; Register 374 in 21.
;; Register 376 in 21.
;; Register 380 in 0.
;; Register 381 in 0.
;; Register 383 in 0.
;; Register 385 in 21.
;; Register 386 in 21.
;; Register 390 in 0.
;; Register 391 in 0.
;; Register 393 in 0.
;; Register 395 in 21.
;; Register 396 in 21.
;; Register 400 in 0.
;; Register 401 in 0.
;; Register 403 in 0.
;; Register 405 in 21.
;; Register 406 in 21.
;; Register 410 in 0.
;; Register 411 in 0.
;; Register 413 in 0.
;; Register 415 in 21.
;; Register 416 in 21.
;; Register 420 in 0.
;; Register 421 in 0.
;; Register 423 in 0.
;; Register 425 in 21.
;; Register 426 in 21.
;; Register 430 in 0.
;; Register 431 in 0.
;; Register 433 in 0.
;; Register 435 in 21.
;; Register 438 in 21.
;; Register 439 in 21.
;; Register 442 in 21.
;; Register 445 in 21.
;; Register 448 in 21.
;; Register 451 in 21.
;; Register 454 in 21.
(note:HI 1 0 13 ("./CppStatUtilities.cc") 449)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
(note:HI 13 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 13 4 0 ./CppStatUtilities.cc:449 (set (reg/v/f:DI 87 [ x ])
        (reg:DI 5 di [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:449 (set (reg/v:SI 88 [ xSize ])
        (reg:SI 4 si [ xSize ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ xSize ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:449 (set (reg/v/f:DI 89 [ y ])
        (reg:DI 1 dx [ y ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 1 dx [ y ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:449 (set (reg/v:SI 90 [ ySize ])
        (reg:SI 2 cx [ ySize ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 2 cx [ ySize ])
        (nil)))

(insn:HI 7 6 8 0 ./CppStatUtilities.cc:449 (set (reg/v:SI 91 [ nBins ])
        (reg:SI 37 r8 [ nBins ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 37 r8 [ nBins ])
        (nil)))

(insn:HI 8 7 11 0 ./CppStatUtilities.cc:449 (set (reg/v/f:DI 92 [ _hmid ])
        (reg:DI 38 r9 [ _hmid ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 38 r9 [ _hmid ])
        (nil)))

(note:HI 11 8 15 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 15 11 16 0 ("./CppStatUtilities.cc") 451)

(insn:HI 16 15 17 0 ./CppStatUtilities.cc:451 (set (reg:SI 4 si [ xSize ])
        (reg/v:SI 88 [ xSize ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(insn:HI 17 16 18 0 ./CppStatUtilities.cc:451 (set (reg:DI 5 di [ x ])
        (reg/v/f:DI 87 [ x ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(call_insn:HI 18 17 19 0 ./CppStatUtilities.cc:451 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("min") [flags 0x41] <function_decl 0x2b5eb631ee00 min>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 16 (insn_list:REG_DEP_TRUE 17 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ xSize ])
        (expr_list:REG_DEAD (reg:DI 5 di [ x ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ x ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ xSize ]))
            (nil))))

(insn:HI 19 18 20 0 ./CppStatUtilities.cc:451 (set (reg/v:DF 75 [ tmin ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 20 19 21 0 ("./CppStatUtilities.cc") 452)

(insn:HI 21 20 22 0 ./CppStatUtilities.cc:452 (set (reg:SI 4 si [ xSize ])
        (reg/v:SI 88 [ xSize ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 22 21 23 0 ./CppStatUtilities.cc:452 (set (reg:DI 5 di [ x ])
        (reg/v/f:DI 87 [ x ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 23 22 24 0 ./CppStatUtilities.cc:452 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("max") [flags 0x41] <function_decl 0x2b5eb631ef00 max>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 21 (insn_list:REG_DEP_TRUE 22 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ xSize ])
        (expr_list:REG_DEAD (reg:DI 5 di [ x ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ x ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ xSize ]))
            (nil))))

(insn:HI 24 23 25 0 ./CppStatUtilities.cc:452 (set (reg/v:DF 70 [ dt ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 23 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 25 24 26 0 ("./CppStatUtilities.cc") 454)

(insn:HI 26 25 27 0 ./CppStatUtilities.cc:454 (set (reg:SI 4 si [ ySize ])
        (reg/v:SI 90 [ ySize ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 6 (nil))
    (nil))

(insn:HI 27 26 28 0 ./CppStatUtilities.cc:454 (set (reg:DI 5 di [ y ])
        (reg/v/f:DI 89 [ y ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 5 (nil))
    (nil))

(call_insn:HI 28 27 29 0 ./CppStatUtilities.cc:454 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("min") [flags 0x41] <function_decl 0x2b5eb631ee00 min>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_TRUE 27 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ ySize ])
        (expr_list:REG_DEAD (reg:DI 5 di [ y ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ y ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ ySize ]))
            (nil))))

(insn:HI 29 28 30 0 ./CppStatUtilities.cc:454 (set (reg/v:DF 77 [ ymin ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 28 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 30 29 31 0 ("./CppStatUtilities.cc") 455)

(insn:HI 31 30 32 0 ./CppStatUtilities.cc:455 (set (reg:SI 4 si [ ySize ])
        (reg/v:SI 90 [ ySize ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 32 31 33 0 ./CppStatUtilities.cc:455 (set (reg:DI 5 di [ y ])
        (reg/v/f:DI 89 [ y ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 33 32 34 0 ./CppStatUtilities.cc:455 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("max") [flags 0x41] <function_decl 0x2b5eb631ef00 max>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 31 (insn_list:REG_DEP_TRUE 32 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ ySize ])
        (expr_list:REG_DEAD (reg:DI 5 di [ y ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ y ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ ySize ]))
            (nil))))

(note:HI 34 33 35 0 NOTE_INSN_DELETED)

(note:HI 35 34 251 0 ("./CppStatUtilities.cc") 457)

(insn:HI 251 35 51 0 ./CppStatUtilities.cc:457 (set (reg/v:DF 75 [ tmin ])
        (unspec:DF [
                (reg/v:DF 75 [ tmin ])
                (reg/v:DF 77 [ ymin ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 19 (insn_list:REG_DEP_TRUE 29 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 77 [ ymin ])
        (nil)))

(note:HI 51 251 252 0 ("./CppStatUtilities.cc") 458)

(insn:HI 252 51 67 0 ./CppStatUtilities.cc:458 (set (reg/v:DF 70 [ dt ])
        (unspec:DF [
                (reg/v:DF 70 [ dt ])
                (reg:DF 21 xmm0)
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 24 (nil)))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 67 252 68 0 ("./CppStatUtilities.cc") 460)

(insn:HI 68 67 69 0 ./CppStatUtilities.cc:460 (set (reg:DI 86 [ D.35109 ])
        (sign_extend:DI (reg/v:SI 91 [ nBins ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 7 (nil))
    (nil))

(insn:HI 69 68 70 0 ./CppStatUtilities.cc:460 (parallel [
            (set (reg:DI 95)
                (ashift:DI (reg:DI 86 [ D.35109 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 68 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 70 69 71 0 ./CppStatUtilities.cc:460 (set (reg:DI 5 di)
        (reg:DI 95)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 69 (nil))
    (expr_list:REG_DEAD (reg:DI 95)
        (nil)))

(call_insn:HI 71 70 72 0 ./CppStatUtilities.cc:460 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 70 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 72 71 74 0 ./CppStatUtilities.cc:460 (set (reg/f:DI 58 [ ivtmp.606 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 71 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 96)
            (nil))))

(insn:HI 74 72 75 0 ./CppStatUtilities.cc:460 (set (reg/v/f:DI 73 [ hmid ])
        (reg/f:DI 58 [ ivtmp.606 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 72 (nil))
    (expr_list:REG_DEAD (reg/f:DI 58 [ ivtmp.606 ])
        (nil)))

(note:HI 75 74 76 0 ("./CppStatUtilities.cc") 461)

(insn:HI 76 75 77 0 ./CppStatUtilities.cc:461 (set (reg:DI 4 si)
        (const_int 8 [0x8])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 77 76 78 0 ./CppStatUtilities.cc:461 (set (reg:DI 5 di [ D.35109 ])
        (reg:DI 86 [ D.35109 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 78 77 79 0 ./CppStatUtilities.cc:461 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41] <function_decl 0x2b5eb3cbd200 calloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 76 (insn_list:REG_DEP_TRUE 77 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.35109 ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.35109 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 79 78 82 0 ./CppStatUtilities.cc:461 (set (reg/f:DI 97)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 78 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 97)
            (nil))))

(note:HI 82 79 83 0 ("./CppStatUtilities.cc") 462)

(insn:HI 83 82 84 0 ./CppStatUtilities.cc:462 (set (reg:DI 4 si)
        (const_int 8 [0x8])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 84 83 85 0 ./CppStatUtilities.cc:462 (set (reg:DI 5 di [ D.35109 ])
        (reg:DI 86 [ D.35109 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 86 [ D.35109 ])
        (nil)))

(call_insn:HI 85 84 86 0 ./CppStatUtilities.cc:462 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41] <function_decl 0x2b5eb3cbd200 calloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 83 (insn_list:REG_DEP_TRUE 84 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.35109 ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.35109 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 86 85 89 0 ./CppStatUtilities.cc:462 (set (reg/f:DI 98)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 85 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 98)
            (nil))))

(note:HI 89 86 90 0 ("./CppStatUtilities.cc") 464)

(insn:HI 90 89 91 0 ./CppStatUtilities.cc:464 (set (reg/v:DF 70 [ dt ])
        (minus:DF (reg/v:DF 70 [ dt ])
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 251 (insn_list:REG_DEP_TRUE 252 (nil)))
    (nil))

(insn:HI 91 90 92 0 ./CppStatUtilities.cc:464 (set (reg:DF 100)
        (float:DF (reg/v:SI 91 [ nBins ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 92 91 93 0 ./CppStatUtilities.cc:464 (set (reg/v:DF 70 [ dt ])
        (div:DF (reg/v:DF 70 [ dt ])
            (reg:DF 100))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 90 (insn_list:REG_DEP_TRUE 91 (nil)))
    (expr_list:REG_DEAD (reg:DF 100)
        (nil)))

(note:HI 93 92 94 0 ("./CppStatUtilities.cc") 469)

(insn:HI 94 93 95 0 ./CppStatUtilities.cc:469 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 91 [ nBins ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 95 94 229 0 ./CppStatUtilities.cc:469 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1424)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 94 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98

(note:HI 229 95 230 NOTE_INSN_LOOP_BEG)

(note:HI 230 229 114 NOTE_INSN_LOOP_END)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98
(code_label:HI 114 230 115 1 337 "" [3 uses])

(note:HI 115 114 116 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(note:HI 116 115 117 1 ("./CppStatUtilities.cc") 473)

(insn:HI 117 116 118 1 ./CppStatUtilities.cc:473 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 88 [ xSize ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 118 117 231 1 ./CppStatUtilities.cc:473 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1428)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 117 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98

(note:HI 231 118 232 NOTE_INSN_LOOP_BEG)

(note:HI 232 231 145 NOTE_INSN_LOOP_END)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98
(code_label:HI 145 232 146 2 340 "" [3 uses])

(note:HI 146 145 147 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 147 146 148 2 ("./CppStatUtilities.cc") 477)

(insn:HI 148 147 149 2 ./CppStatUtilities.cc:477 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 90 [ ySize ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 149 148 233 2 ./CppStatUtilities.cc:477 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1432)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 148 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98

(note:HI 233 149 234 NOTE_INSN_LOOP_BEG)

(note:HI 234 233 176 NOTE_INSN_LOOP_END)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 88 90 91 92 97 98
(code_label:HI 176 234 177 3 343 "" [3 uses])

(note:HI 177 176 178 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 178 177 179 3 ("./CppStatUtilities.cc") 482)

(insn:HI 179 178 180 3 ./CppStatUtilities.cc:482 (set (reg/v:DF 69 [ fx ])
        (float:DF (reg/v:SI 88 [ xSize ]))) 175 {*floatsidf2_sse} (nil)
    (expr_list:REG_DEAD (reg/v:SI 88 [ xSize ])
        (nil)))

(insn:HI 180 179 181 3 ./CppStatUtilities.cc:482 (set (reg/v:DF 69 [ fx ])
        (mult:DF (reg/v:DF 69 [ fx ])
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 179 (nil))
    (nil))

(note:HI 181 180 182 3 ("./CppStatUtilities.cc") 483)

(insn:HI 182 181 183 3 ./CppStatUtilities.cc:483 (set (reg/v:DF 68 [ fy ])
        (float:DF (reg/v:SI 90 [ ySize ]))) 175 {*floatsidf2_sse} (nil)
    (expr_list:REG_DEAD (reg/v:SI 90 [ ySize ])
        (nil)))

(insn:HI 183 182 184 3 ./CppStatUtilities.cc:483 (set (reg/v:DF 68 [ fy ])
        (mult:DF (reg/v:DF 68 [ fy ])
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 182 (nil))
    (expr_list:REG_DEAD (reg/v:DF 70 [ dt ])
        (nil)))

(note:HI 184 183 185 3 ("./CppStatUtilities.cc") 485)

(insn:HI 185 184 186 3 ./CppStatUtilities.cc:485 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 91 [ nBins ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 186 185 235 3 ./CppStatUtilities.cc:485 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1436)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 185 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98

(note:HI 235 186 236 NOTE_INSN_LOOP_BEG)

(note:HI 236 235 208 NOTE_INSN_LOOP_END)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 73 92 97 98
(code_label:HI 208 236 209 4 346 "" [3 uses])

(note:HI 209 208 210 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 210 209 211 4 ("./CppStatUtilities.cc") 491)

(insn:HI 211 210 212 4 ./CppStatUtilities.cc:491 (set (mem/f:DI (reg/v/f:DI 92 [ _hmid ]) [22 S8 A64])
        (reg/v/f:DI 73 [ hmid ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 73 [ hmid ])
        (expr_list:REG_DEAD (reg/v/f:DI 92 [ _hmid ])
            (nil))))

(note:HI 212 211 1458 4 ("./CppStatUtilities.cc") 492)

(insn 1458 212 213 4 ./CppStatUtilities.cc:492 (set (reg/v/f:DI 93 [ _hx ])
        (mem/c/i:DI (reg/f:DI 16 argp) [23 _hx+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f/c/i:DI (reg/f:DI 16 argp) [23 _hx+0 S8 A64])
        (nil)))

(insn:HI 213 1458 214 4 ./CppStatUtilities.cc:492 (set (mem/f:DI (reg/v/f:DI 93 [ _hx ]) [22 S8 A64])
        (reg/f:DI 97)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_DEAD (reg/v/f:DI 93 [ _hx ])
            (nil))))

(note:HI 214 213 1457 4 ("./CppStatUtilities.cc") 493)

(insn 1457 214 215 4 ./CppStatUtilities.cc:493 (set (reg/v/f:DI 94 [ _hy ])
        (mem/c/i:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [23 _hy+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f/c/i:DI (plus:DI (reg/f:DI 16 argp)
                (const_int 8 [0x8])) [23 _hy+0 S8 A64])
        (nil)))

(insn:HI 215 1457 1436 4 ./CppStatUtilities.cc:493 (set (mem/f:DI (reg/v/f:DI 94 [ _hy ]) [22 S8 A64])
        (reg/f:DI 98)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 98)
        (expr_list:REG_DEAD (reg/v/f:DI 94 [ _hy ])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98
(code_label:HI 1436 215 188 5 433 "" [1 uses])

(note:HI 188 1436 262 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 262 188 263 5 NOTE_INSN_DELETED)

(insn:HI 263 262 264 5 (parallel [
            (set (reg:SI 145)
                (plus:SI (reg/v:SI 91 [ nBins ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 264 263 267 5 (parallel [
            (set (reg:SI 145)
                (and:SI (reg:SI 145)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 263 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 267 264 268 5 ("./CppStatUtilities.cc") 449)

(note:HI 268 267 269 5 ("./CppStatUtilities.cc") 487)

(insn:HI 269 268 270 5 ./CppStatUtilities.cc:487 (set (reg:DF 126)
        (mem:DF (reg/f:DI 97) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 270 269 271 5 ./CppStatUtilities.cc:487 (set (reg:DF 126)
        (div:DF (reg:DF 126)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 269 (nil))
    (nil))

(insn:HI 271 270 272 5 ./CppStatUtilities.cc:487 (set (mem:DF (reg/f:DI 97) [3 S8 A64])
        (reg:DF 126)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 270 (nil))
    (expr_list:REG_DEAD (reg:DF 126)
        (nil)))

(note:HI 272 271 273 5 ("./CppStatUtilities.cc") 488)

(insn:HI 273 272 274 5 ./CppStatUtilities.cc:488 (set (reg:DF 128)
        (mem:DF (reg/f:DI 98) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 274 273 275 5 ./CppStatUtilities.cc:488 (set (reg:DF 128)
        (div:DF (reg:DF 128)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 273 (nil))
    (nil))

(insn:HI 275 274 276 5 ./CppStatUtilities.cc:488 (set (mem:DF (reg/f:DI 98) [3 S8 A64])
        (reg:DF 128)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 274 (nil))
    (expr_list:REG_DEAD (reg:DF 128)
        (nil)))

(note:HI 276 275 277 5 ("./CppStatUtilities.cc") 485)

(insn:HI 277 276 278 5 ./CppStatUtilities.cc:485 (set (reg/v:SI 300 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 278 277 279 5 ./CppStatUtilities.cc:485 (set (reg:DI 301 [ ivtmp.588 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 279 278 280 5 ./CppStatUtilities.cc:485 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 300 [ i ])
            (reg/v:SI 91 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 277 (nil))
    (nil))

(jump_insn:HI 280 279 469 5 ./CppStatUtilities.cc:485 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 208)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 279 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
(note:HI 469 280 467 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 467 469 468 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 468 467 443 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 191)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 467 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
(note:HI 443 468 441 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 441 443 442 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 442 441 417 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1439)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 441 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
(note:HI 417 442 415 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 415 417 416 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 416 415 391 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1440)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 415 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
(note:HI 391 416 389 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 389 391 390 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 390 389 365 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1441)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 389 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
(note:HI 365 390 363 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 363 365 364 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 364 363 339 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1442)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 363 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
(note:HI 339 364 337 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 337 339 338 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 338 337 313 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1443)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 337 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 145 300 301
(note:HI 313 338 311 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 311 313 312 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(jump_insn:HI 312 311 303 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1444)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 311 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98
(note:HI 303 312 289 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 289 303 290 13 ("./CppStatUtilities.cc") 449)

(note:HI 290 289 291 13 ("./CppStatUtilities.cc") 487)

(insn:HI 291 290 292 13 ./CppStatUtilities.cc:487 (set (reg:DF 348)
        (mem:DF (plus:DI (reg/f:DI 97)
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 292 291 293 13 ./CppStatUtilities.cc:487 (set (reg:DF 348)
        (div:DF (reg:DF 348)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 291 (nil))
    (nil))

(insn:HI 293 292 294 13 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (reg/f:DI 97)
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 348)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 292 (nil))
    (expr_list:REG_DEAD (reg:DF 348)
        (nil)))

(note:HI 294 293 295 13 ("./CppStatUtilities.cc") 488)

(insn:HI 295 294 296 13 ./CppStatUtilities.cc:488 (set (reg:DF 350)
        (mem:DF (plus:DI (reg/f:DI 98)
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 296 295 297 13 ./CppStatUtilities.cc:488 (set (reg:DF 350)
        (div:DF (reg:DF 350)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 295 (nil))
    (nil))

(insn:HI 297 296 298 13 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (reg/f:DI 98)
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 350)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 296 (nil))
    (expr_list:REG_DEAD (reg:DF 350)
        (nil)))

(note:HI 298 297 299 13 ("./CppStatUtilities.cc") 485)

(insn:HI 299 298 300 13 ./CppStatUtilities.cc:485 (set (reg/v:SI 300 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 300 299 1444 13 ./CppStatUtilities.cc:485 (set (reg:DI 301 [ ivtmp.588 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
(code_label:HI 1444 300 329 14 439 "" [1 uses])

(note:HI 329 1444 315 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 315 329 316 14 ("./CppStatUtilities.cc") 449)

(note:HI 316 315 317 14 ("./CppStatUtilities.cc") 487)

(insn:HI 317 316 318 14 ./CppStatUtilities.cc:487 (set (reg:DF 352)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 318 317 319 14 ./CppStatUtilities.cc:487 (set (reg:DF 352)
        (div:DF (reg:DF 352)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 317 (nil))
    (nil))

(insn:HI 319 318 320 14 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 352)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 318 (nil))
    (expr_list:REG_DEAD (reg:DF 352)
        (nil)))

(note:HI 320 319 321 14 ("./CppStatUtilities.cc") 488)

(insn:HI 321 320 322 14 ./CppStatUtilities.cc:488 (set (reg:DF 354)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 322 321 323 14 ./CppStatUtilities.cc:488 (set (reg:DF 354)
        (div:DF (reg:DF 354)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 321 (nil))
    (nil))

(insn:HI 323 322 324 14 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 354)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 322 (nil))
    (expr_list:REG_DEAD (reg:DF 354)
        (nil)))

(note:HI 324 323 325 14 ("./CppStatUtilities.cc") 485)

(insn:HI 325 324 326 14 ./CppStatUtilities.cc:485 (parallel [
            (set (reg/v:SI 300 [ i ])
                (plus:SI (reg/v:SI 300 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 326 325 1443 14 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 301 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
(code_label:HI 1443 326 355 15 438 "" [1 uses])

(note:HI 355 1443 341 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 341 355 342 15 ("./CppStatUtilities.cc") 449)

(note:HI 342 341 343 15 ("./CppStatUtilities.cc") 487)

(insn:HI 343 342 344 15 ./CppStatUtilities.cc:487 (set (reg:DF 356)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 344 343 345 15 ./CppStatUtilities.cc:487 (set (reg:DF 356)
        (div:DF (reg:DF 356)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 343 (nil))
    (nil))

(insn:HI 345 344 346 15 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 356)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 344 (nil))
    (expr_list:REG_DEAD (reg:DF 356)
        (nil)))

(note:HI 346 345 347 15 ("./CppStatUtilities.cc") 488)

(insn:HI 347 346 348 15 ./CppStatUtilities.cc:488 (set (reg:DF 358)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 348 347 349 15 ./CppStatUtilities.cc:488 (set (reg:DF 358)
        (div:DF (reg:DF 358)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 347 (nil))
    (nil))

(insn:HI 349 348 350 15 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 358)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 348 (nil))
    (expr_list:REG_DEAD (reg:DF 358)
        (nil)))

(note:HI 350 349 351 15 ("./CppStatUtilities.cc") 485)

(insn:HI 351 350 352 15 ./CppStatUtilities.cc:485 (parallel [
            (set (reg/v:SI 300 [ i ])
                (plus:SI (reg/v:SI 300 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 352 351 1442 15 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 301 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
(code_label:HI 1442 352 381 16 437 "" [1 uses])

(note:HI 381 1442 367 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 367 381 368 16 ("./CppStatUtilities.cc") 449)

(note:HI 368 367 369 16 ("./CppStatUtilities.cc") 487)

(insn:HI 369 368 370 16 ./CppStatUtilities.cc:487 (set (reg:DF 360)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 370 369 371 16 ./CppStatUtilities.cc:487 (set (reg:DF 360)
        (div:DF (reg:DF 360)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 369 (nil))
    (nil))

(insn:HI 371 370 372 16 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 360)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 370 (nil))
    (expr_list:REG_DEAD (reg:DF 360)
        (nil)))

(note:HI 372 371 373 16 ("./CppStatUtilities.cc") 488)

(insn:HI 373 372 374 16 ./CppStatUtilities.cc:488 (set (reg:DF 362)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 374 373 375 16 ./CppStatUtilities.cc:488 (set (reg:DF 362)
        (div:DF (reg:DF 362)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 373 (nil))
    (nil))

(insn:HI 375 374 376 16 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 362)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 374 (nil))
    (expr_list:REG_DEAD (reg:DF 362)
        (nil)))

(note:HI 376 375 377 16 ("./CppStatUtilities.cc") 485)

(insn:HI 377 376 378 16 ./CppStatUtilities.cc:485 (parallel [
            (set (reg/v:SI 300 [ i ])
                (plus:SI (reg/v:SI 300 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 378 377 1441 16 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 301 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
(code_label:HI 1441 378 407 17 436 "" [1 uses])

(note:HI 407 1441 393 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 393 407 394 17 ("./CppStatUtilities.cc") 449)

(note:HI 394 393 395 17 ("./CppStatUtilities.cc") 487)

(insn:HI 395 394 396 17 ./CppStatUtilities.cc:487 (set (reg:DF 364)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 396 395 397 17 ./CppStatUtilities.cc:487 (set (reg:DF 364)
        (div:DF (reg:DF 364)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 395 (nil))
    (nil))

(insn:HI 397 396 398 17 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 364)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 396 (nil))
    (expr_list:REG_DEAD (reg:DF 364)
        (nil)))

(note:HI 398 397 399 17 ("./CppStatUtilities.cc") 488)

(insn:HI 399 398 400 17 ./CppStatUtilities.cc:488 (set (reg:DF 366)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 400 399 401 17 ./CppStatUtilities.cc:488 (set (reg:DF 366)
        (div:DF (reg:DF 366)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 399 (nil))
    (nil))

(insn:HI 401 400 402 17 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 366)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 400 (nil))
    (expr_list:REG_DEAD (reg:DF 366)
        (nil)))

(note:HI 402 401 403 17 ("./CppStatUtilities.cc") 485)

(insn:HI 403 402 404 17 ./CppStatUtilities.cc:485 (parallel [
            (set (reg/v:SI 300 [ i ])
                (plus:SI (reg/v:SI 300 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 404 403 1440 17 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 301 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
(code_label:HI 1440 404 433 18 435 "" [1 uses])

(note:HI 433 1440 419 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 419 433 420 18 ("./CppStatUtilities.cc") 449)

(note:HI 420 419 421 18 ("./CppStatUtilities.cc") 487)

(insn:HI 421 420 422 18 ./CppStatUtilities.cc:487 (set (reg:DF 368)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 422 421 423 18 ./CppStatUtilities.cc:487 (set (reg:DF 368)
        (div:DF (reg:DF 368)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 421 (nil))
    (nil))

(insn:HI 423 422 424 18 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 368)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 422 (nil))
    (expr_list:REG_DEAD (reg:DF 368)
        (nil)))

(note:HI 424 423 425 18 ("./CppStatUtilities.cc") 488)

(insn:HI 425 424 426 18 ./CppStatUtilities.cc:488 (set (reg:DF 370)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 426 425 427 18 ./CppStatUtilities.cc:488 (set (reg:DF 370)
        (div:DF (reg:DF 370)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 425 (nil))
    (nil))

(insn:HI 427 426 428 18 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 370)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 426 (nil))
    (expr_list:REG_DEAD (reg:DF 370)
        (nil)))

(note:HI 428 427 429 18 ("./CppStatUtilities.cc") 485)

(insn:HI 429 428 430 18 ./CppStatUtilities.cc:485 (parallel [
            (set (reg/v:SI 300 [ i ])
                (plus:SI (reg/v:SI 300 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 430 429 1439 18 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 301 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
(code_label:HI 1439 430 459 19 434 "" [1 uses])

(note:HI 459 1439 445 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 445 459 446 19 ("./CppStatUtilities.cc") 449)

(note:HI 446 445 447 19 ("./CppStatUtilities.cc") 487)

(insn:HI 447 446 448 19 ./CppStatUtilities.cc:487 (set (reg:DF 372)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 448 447 449 19 ./CppStatUtilities.cc:487 (set (reg:DF 372)
        (div:DF (reg:DF 372)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 447 (nil))
    (nil))

(insn:HI 449 448 450 19 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 372)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 448 (nil))
    (expr_list:REG_DEAD (reg:DF 372)
        (nil)))

(note:HI 450 449 451 19 ("./CppStatUtilities.cc") 488)

(insn:HI 451 450 452 19 ./CppStatUtilities.cc:488 (set (reg:DF 374)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 452 451 453 19 ./CppStatUtilities.cc:488 (set (reg:DF 374)
        (div:DF (reg:DF 374)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 451 (nil))
    (nil))

(insn:HI 453 452 454 19 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 374)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 452 (nil))
    (expr_list:REG_DEAD (reg:DF 374)
        (nil)))

(note:HI 454 453 455 19 ("./CppStatUtilities.cc") 485)

(insn:HI 455 454 456 19 ./CppStatUtilities.cc:485 (parallel [
            (set (reg/v:SI 300 [ i ])
                (plus:SI (reg/v:SI 300 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 456 455 457 19 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 301 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 457 456 458 19 ./CppStatUtilities.cc:485 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 300 [ i ])
            (reg/v:SI 91 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 455 (nil))
    (nil))

(jump_insn:HI 458 457 191 19 ./CppStatUtilities.cc:485 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 208)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 457 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
(code_label:HI 191 458 192 20 348 "" [2 uses])

(note:HI 192 191 193 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note:HI 193 192 195 20 ("./CppStatUtilities.cc") 449)

(note:HI 195 193 196 20 ("./CppStatUtilities.cc") 487)

(insn:HI 196 195 197 20 ./CppStatUtilities.cc:487 (set (reg:DF 302)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 197 196 198 20 ./CppStatUtilities.cc:487 (set (reg:DF 302)
        (div:DF (reg:DF 302)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 196 (nil))
    (nil))

(insn:HI 198 197 199 20 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 302)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 197 (nil))
    (expr_list:REG_DEAD (reg:DF 302)
        (nil)))

(note:HI 199 198 200 20 ("./CppStatUtilities.cc") 488)

(insn:HI 200 199 201 20 ./CppStatUtilities.cc:488 (set (reg:DF 304)
        (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 201 200 202 20 ./CppStatUtilities.cc:488 (set (reg:DF 304)
        (div:DF (reg:DF 304)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 200 (nil))
    (nil))

(insn:HI 202 201 203 20 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 304)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 201 (nil))
    (expr_list:REG_DEAD (reg:DF 304)
        (nil)))

(note:HI 203 202 618 20 ("./CppStatUtilities.cc") 485)

(insn:HI 618 203 471 20 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 471 618 472 20 ("./CppStatUtilities.cc") 449)

(note:HI 472 471 473 20 ("./CppStatUtilities.cc") 487)

(insn:HI 473 472 474 20 ./CppStatUtilities.cc:487 (set (reg:DF 308)
        (mem:DF (plus:DI (mult:DI (reg:DI 146)
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 618 (nil))
    (nil))

(insn:HI 474 473 475 20 ./CppStatUtilities.cc:487 (set (reg:DF 308)
        (div:DF (reg:DF 308)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 473 (nil))
    (nil))

(insn:HI 475 474 476 20 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 146)
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 308)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 474 (nil))
    (expr_list:REG_DEAD (reg:DF 308)
        (nil)))

(note:HI 476 475 477 20 ("./CppStatUtilities.cc") 488)

(insn:HI 477 476 478 20 ./CppStatUtilities.cc:488 (set (reg:DF 310)
        (mem:DF (plus:DI (mult:DI (reg:DI 146)
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 478 477 479 20 ./CppStatUtilities.cc:488 (set (reg:DF 310)
        (div:DF (reg:DF 310)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 477 (nil))
    (nil))

(insn:HI 479 478 480 20 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 146)
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 310)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 478 (nil))
    (expr_list:REG_DEAD (reg:DF 310)
        (expr_list:REG_DEAD (reg:DI 146)
            (nil))))

(note:HI 480 479 482 20 ("./CppStatUtilities.cc") 485)

(insn:HI 482 480 492 20 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 313 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 492 482 493 20 ("./CppStatUtilities.cc") 449)

(note:HI 493 492 494 20 ("./CppStatUtilities.cc") 487)

(insn:HI 494 493 495 20 ./CppStatUtilities.cc:487 (set (reg:DF 314)
        (mem:DF (plus:DI (mult:DI (reg:DI 313 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 482 (nil))
    (nil))

(insn:HI 495 494 496 20 ./CppStatUtilities.cc:487 (set (reg:DF 314)
        (div:DF (reg:DF 314)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 494 (nil))
    (nil))

(insn:HI 496 495 497 20 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 313 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 314)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 495 (nil))
    (expr_list:REG_DEAD (reg:DF 314)
        (nil)))

(note:HI 497 496 498 20 ("./CppStatUtilities.cc") 488)

(insn:HI 498 497 499 20 ./CppStatUtilities.cc:488 (set (reg:DF 316)
        (mem:DF (plus:DI (mult:DI (reg:DI 313 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 499 498 500 20 ./CppStatUtilities.cc:488 (set (reg:DF 316)
        (div:DF (reg:DF 316)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 498 (nil))
    (nil))

(insn:HI 500 499 501 20 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 313 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 316)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 499 (nil))
    (expr_list:REG_DEAD (reg:DF 316)
        (expr_list:REG_DEAD (reg:DI 313 [ ivtmp.588 ])
            (nil))))

(note:HI 501 500 503 20 ("./CppStatUtilities.cc") 485)

(insn:HI 503 501 513 20 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 319 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 513 503 514 20 ("./CppStatUtilities.cc") 449)

(note:HI 514 513 515 20 ("./CppStatUtilities.cc") 487)

(insn:HI 515 514 516 20 ./CppStatUtilities.cc:487 (set (reg:DF 320)
        (mem:DF (plus:DI (mult:DI (reg:DI 319 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 503 (nil))
    (nil))

(insn:HI 516 515 517 20 ./CppStatUtilities.cc:487 (set (reg:DF 320)
        (div:DF (reg:DF 320)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 515 (nil))
    (nil))

(insn:HI 517 516 518 20 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 319 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 320)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 516 (nil))
    (expr_list:REG_DEAD (reg:DF 320)
        (nil)))

(note:HI 518 517 519 20 ("./CppStatUtilities.cc") 488)

(insn:HI 519 518 520 20 ./CppStatUtilities.cc:488 (set (reg:DF 322)
        (mem:DF (plus:DI (mult:DI (reg:DI 319 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 520 519 521 20 ./CppStatUtilities.cc:488 (set (reg:DF 322)
        (div:DF (reg:DF 322)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 519 (nil))
    (nil))

(insn:HI 521 520 522 20 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 319 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 322)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 520 (nil))
    (expr_list:REG_DEAD (reg:DF 322)
        (expr_list:REG_DEAD (reg:DI 319 [ ivtmp.588 ])
            (nil))))

(note:HI 522 521 524 20 ("./CppStatUtilities.cc") 485)

(insn:HI 524 522 534 20 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 325 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 534 524 535 20 ("./CppStatUtilities.cc") 449)

(note:HI 535 534 536 20 ("./CppStatUtilities.cc") 487)

(insn:HI 536 535 537 20 ./CppStatUtilities.cc:487 (set (reg:DF 326)
        (mem:DF (plus:DI (mult:DI (reg:DI 325 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 524 (nil))
    (nil))

(insn:HI 537 536 538 20 ./CppStatUtilities.cc:487 (set (reg:DF 326)
        (div:DF (reg:DF 326)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 536 (nil))
    (nil))

(insn:HI 538 537 539 20 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 325 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 326)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 537 (nil))
    (expr_list:REG_DEAD (reg:DF 326)
        (nil)))

(note:HI 539 538 540 20 ("./CppStatUtilities.cc") 488)

(insn:HI 540 539 541 20 ./CppStatUtilities.cc:488 (set (reg:DF 328)
        (mem:DF (plus:DI (mult:DI (reg:DI 325 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 541 540 542 20 ./CppStatUtilities.cc:488 (set (reg:DF 328)
        (div:DF (reg:DF 328)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 540 (nil))
    (nil))

(insn:HI 542 541 543 20 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 325 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 328)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 541 (nil))
    (expr_list:REG_DEAD (reg:DF 328)
        (expr_list:REG_DEAD (reg:DI 325 [ ivtmp.588 ])
            (nil))))

(note:HI 543 542 545 20 ("./CppStatUtilities.cc") 485)

(insn:HI 545 543 555 20 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 331 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 555 545 556 20 ("./CppStatUtilities.cc") 449)

(note:HI 556 555 557 20 ("./CppStatUtilities.cc") 487)

(insn:HI 557 556 558 20 ./CppStatUtilities.cc:487 (set (reg:DF 332)
        (mem:DF (plus:DI (mult:DI (reg:DI 331 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 545 (nil))
    (nil))

(insn:HI 558 557 559 20 ./CppStatUtilities.cc:487 (set (reg:DF 332)
        (div:DF (reg:DF 332)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 557 (nil))
    (nil))

(insn:HI 559 558 560 20 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 331 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 332)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 558 (nil))
    (expr_list:REG_DEAD (reg:DF 332)
        (nil)))

(note:HI 560 559 561 20 ("./CppStatUtilities.cc") 488)

(insn:HI 561 560 562 20 ./CppStatUtilities.cc:488 (set (reg:DF 334)
        (mem:DF (plus:DI (mult:DI (reg:DI 331 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 562 561 563 20 ./CppStatUtilities.cc:488 (set (reg:DF 334)
        (div:DF (reg:DF 334)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 561 (nil))
    (nil))

(insn:HI 563 562 564 20 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 331 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 334)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 562 (nil))
    (expr_list:REG_DEAD (reg:DF 334)
        (expr_list:REG_DEAD (reg:DI 331 [ ivtmp.588 ])
            (nil))))

(note:HI 564 563 566 20 ("./CppStatUtilities.cc") 485)

(insn:HI 566 564 576 20 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 337 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 576 566 577 20 ("./CppStatUtilities.cc") 449)

(note:HI 577 576 578 20 ("./CppStatUtilities.cc") 487)

(insn:HI 578 577 579 20 ./CppStatUtilities.cc:487 (set (reg:DF 338)
        (mem:DF (plus:DI (mult:DI (reg:DI 337 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 566 (nil))
    (nil))

(insn:HI 579 578 580 20 ./CppStatUtilities.cc:487 (set (reg:DF 338)
        (div:DF (reg:DF 338)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 578 (nil))
    (nil))

(insn:HI 580 579 581 20 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 337 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 338)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 579 (nil))
    (expr_list:REG_DEAD (reg:DF 338)
        (nil)))

(note:HI 581 580 582 20 ("./CppStatUtilities.cc") 488)

(insn:HI 582 581 583 20 ./CppStatUtilities.cc:488 (set (reg:DF 340)
        (mem:DF (plus:DI (mult:DI (reg:DI 337 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 583 582 584 20 ./CppStatUtilities.cc:488 (set (reg:DF 340)
        (div:DF (reg:DF 340)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 582 (nil))
    (nil))

(insn:HI 584 583 585 20 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 337 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 340)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 583 (nil))
    (expr_list:REG_DEAD (reg:DF 340)
        (expr_list:REG_DEAD (reg:DI 337 [ ivtmp.588 ])
            (nil))))

(note:HI 585 584 587 20 ("./CppStatUtilities.cc") 485)

(insn:HI 587 585 597 20 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 343 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 597 587 598 20 ("./CppStatUtilities.cc") 449)

(note:HI 598 597 599 20 ("./CppStatUtilities.cc") 487)

(insn:HI 599 598 600 20 ./CppStatUtilities.cc:487 (set (reg:DF 344)
        (mem:DF (plus:DI (mult:DI (reg:DI 343 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 587 (nil))
    (nil))

(insn:HI 600 599 601 20 ./CppStatUtilities.cc:487 (set (reg:DF 344)
        (div:DF (reg:DF 344)
            (reg/v:DF 69 [ fx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 599 (nil))
    (nil))

(insn:HI 601 600 602 20 ./CppStatUtilities.cc:487 (set (mem:DF (plus:DI (mult:DI (reg:DI 343 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [3 S8 A64])
        (reg:DF 344)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 600 (nil))
    (expr_list:REG_DEAD (reg:DF 344)
        (nil)))

(note:HI 602 601 603 20 ("./CppStatUtilities.cc") 488)

(insn:HI 603 602 604 20 ./CppStatUtilities.cc:488 (set (reg:DF 346)
        (mem:DF (plus:DI (mult:DI (reg:DI 343 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 604 603 605 20 ./CppStatUtilities.cc:488 (set (reg:DF 346)
        (div:DF (reg:DF 346)
            (reg/v:DF 68 [ fy ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 603 (nil))
    (nil))

(insn:HI 605 604 606 20 ./CppStatUtilities.cc:488 (set (mem:DF (plus:DI (mult:DI (reg:DI 343 [ ivtmp.588 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98)) [3 S8 A64])
        (reg:DF 346)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 604 (nil))
    (expr_list:REG_DEAD (reg:DF 346)
        (expr_list:REG_DEAD (reg:DI 343 [ ivtmp.588 ])
            (nil))))

(note:HI 606 605 607 20 ("./CppStatUtilities.cc") 485)

(insn:HI 607 606 608 20 ./CppStatUtilities.cc:485 (parallel [
            (set (reg/v:SI 300 [ i ])
                (plus:SI (reg/v:SI 300 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 608 607 609 20 ./CppStatUtilities.cc:485 (parallel [
            (set (reg:DI 301 [ ivtmp.588 ])
                (plus:DI (reg:DI 301 [ ivtmp.588 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 609 608 610 20 ./CppStatUtilities.cc:485 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 300 [ i ])
            (reg/v:SI 91 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 607 (nil))
    (nil))

(jump_insn:HI 610 609 615 20 ./CppStatUtilities.cc:485 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 208)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 609 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301
(note:HI 615 610 1406 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1406 615 1407 21 (set (pc)
        (label_ref 191)) 548 {jump} (nil)
    (nil))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 73 91 92 97 98 300 301

(barrier:HI 1407 1406 1432)

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98
(code_label:HI 1432 1407 151 22 432 "" [1 uses])

(note:HI 151 1432 240 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 240 151 633 22 (set (reg:DF 251)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))

(note:HI 633 240 634 22 NOTE_INSN_DELETED)

(insn:HI 634 633 635 22 (parallel [
            (set (reg:SI 150)
                (plus:SI (reg/v:SI 90 [ ySize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 635 634 638 22 (parallel [
            (set (reg:SI 150)
                (and:SI (reg:SI 150)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 634 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 638 635 639 22 ("./CppStatUtilities.cc") 478)

(insn:HI 639 638 640 22 ./CppStatUtilities.cc:478 (set (reg:DF 116)
        (mem:DF (reg/v/f:DI 89 [ y ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 640 639 641 22 ./CppStatUtilities.cc:478 (set (reg:DF 116)
        (minus:DF (reg:DF 116)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 639 (nil))
    (nil))

(note:HI 641 640 642 22 NOTE_INSN_DELETED)

(insn:HI 642 641 643 22 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 116)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 640 (nil))
    (expr_list:REG_DEAD (reg:DF 116)
        (nil)))

(call_insn/u:HI 643 642 644 22 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 642 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 644 643 645 22 NOTE_INSN_DELETED)

(insn:HI 645 644 646 22 ./CppStatUtilities.cc:478 (set (reg:SI 118)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 643 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 646 645 647 22 ./CppStatUtilities.cc:478 (set (reg:DI 119)
        (sign_extend:DI (reg:SI 118))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 645 (nil))
    (expr_list:REG_DEAD (reg:SI 118)
        (nil)))

(note:HI 647 646 648 22 NOTE_INSN_DELETED)

(insn:HI 648 647 649 22 ./CppStatUtilities.cc:478 (set (reg:DI 80 [ D.35164 ])
        (plus:DI (mult:DI (reg:DI 119)
                (const_int 8 [0x8]))
            (reg/f:DI 98))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 646 (nil))
    (expr_list:REG_DEAD (reg:DI 119)
        (nil)))

(note:HI 649 648 650 22 NOTE_INSN_DELETED)

(insn:HI 650 649 651 22 ./CppStatUtilities.cc:478 (set (reg:DF 123)
        (plus:DF (mem:DF (reg:DI 80 [ D.35164 ]) [3 S8 A64])
            (reg:DF 251))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 648 (insn_list:REG_DEP_TRUE 240 (nil)))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 80 [ D.35164 ]) [3 S8 A64])
        (nil)))

(insn:HI 651 650 652 22 ./CppStatUtilities.cc:478 (set (mem:DF (reg:DI 80 [ D.35164 ]) [3 S8 A64])
        (reg:DF 123)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 650 (nil))
    (expr_list:REG_DEAD (reg:DF 123)
        (expr_list:REG_DEAD (reg:DI 80 [ D.35164 ])
            (nil))))

(note:HI 652 651 653 22 ("./CppStatUtilities.cc") 477)

(insn:HI 653 652 654 22 ./CppStatUtilities.cc:477 (set (reg/v:SI 252 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 654 653 655 22 ./CppStatUtilities.cc:477 (parallel [
            (set (reg/f:DI 253 [ ivtmp.596 ])
                (plus:DI (reg/v/f:DI 89 [ y ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 655 654 656 22 ./CppStatUtilities.cc:477 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 252 [ i ])
            (reg/v:SI 90 [ ySize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 653 (nil))
    (nil))

(jump_insn:HI 656 655 756 22 ./CppStatUtilities.cc:477 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 176)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 655 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253
(note:HI 756 656 754 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:HI 754 756 755 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 755 754 725 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 154)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 754 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253
(note:HI 725 755 723 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:HI 723 725 724 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 724 723 694 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1445)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 723 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 150 251 252 253
(note:HI 694 724 692 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:HI 692 694 693 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(jump_insn:HI 693 692 684 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1446)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 692 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 251 252 253

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 251
(note:HI 684 693 665 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note:HI 665 684 666 26 ("./CppStatUtilities.cc") 478)

(insn:HI 666 665 667 26 ./CppStatUtilities.cc:478 (set (reg:DF 376)
        (mem:DF (plus:DI (reg/v/f:DI 89 [ y ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 667 666 668 26 ./CppStatUtilities.cc:478 (set (reg:DF 376)
        (minus:DF (reg:DF 376)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 666 (nil))
    (nil))

(note:HI 668 667 669 26 NOTE_INSN_DELETED)

(insn:HI 669 668 670 26 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 376)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 667 (nil))
    (expr_list:REG_DEAD (reg:DF 376)
        (nil)))

(call_insn/u:HI 670 669 671 26 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 669 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 671 670 672 26 NOTE_INSN_DELETED)

(insn:HI 672 671 673 26 ./CppStatUtilities.cc:478 (set (reg:SI 380)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 670 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 673 672 674 26 ./CppStatUtilities.cc:478 (set (reg:DI 381)
        (sign_extend:DI (reg:SI 380))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 672 (nil))
    (expr_list:REG_DEAD (reg:SI 380)
        (nil)))

(note:HI 674 673 675 26 NOTE_INSN_DELETED)

(insn:HI 675 674 676 26 ./CppStatUtilities.cc:478 (set (reg:DI 383 [ D.35164 ])
        (plus:DI (mult:DI (reg:DI 381)
                (const_int 8 [0x8]))
            (reg/f:DI 98))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 673 (nil))
    (expr_list:REG_DEAD (reg:DI 381)
        (nil)))

(note:HI 676 675 677 26 NOTE_INSN_DELETED)

(insn:HI 677 676 678 26 ./CppStatUtilities.cc:478 (set (reg:DF 385)
        (plus:DF (mem:DF (reg:DI 383 [ D.35164 ]) [3 S8 A64])
            (reg:DF 251))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 675 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 383 [ D.35164 ]) [3 S8 A64])
        (nil)))

(insn:HI 678 677 679 26 ./CppStatUtilities.cc:478 (set (mem:DF (reg:DI 383 [ D.35164 ]) [3 S8 A64])
        (reg:DF 385)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 677 (nil))
    (expr_list:REG_DEAD (reg:DF 385)
        (expr_list:REG_DEAD (reg:DI 383 [ D.35164 ])
            (nil))))

(note:HI 679 678 680 26 ("./CppStatUtilities.cc") 477)

(insn:HI 680 679 681 26 ./CppStatUtilities.cc:477 (set (reg/v:SI 252 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 681 680 1446 26 ./CppStatUtilities.cc:477 (parallel [
            (set (reg/f:DI 253 [ ivtmp.596 ])
                (plus:DI (reg/v/f:DI 89 [ y ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 89 [ y ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
(code_label:HI 1446 681 715 27 441 "" [1 uses])

(note:HI 715 1446 696 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note:HI 696 715 697 27 ("./CppStatUtilities.cc") 478)

(insn:HI 697 696 698 27 ./CppStatUtilities.cc:478 (set (reg:DF 386)
        (mem:DF (reg/f:DI 253 [ ivtmp.596 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 698 697 699 27 ./CppStatUtilities.cc:478 (set (reg:DF 386)
        (minus:DF (reg:DF 386)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 697 (nil))
    (nil))

(note:HI 699 698 700 27 NOTE_INSN_DELETED)

(insn:HI 700 699 701 27 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 386)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 698 (nil))
    (expr_list:REG_DEAD (reg:DF 386)
        (nil)))

(call_insn/u:HI 701 700 702 27 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 700 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 702 701 703 27 NOTE_INSN_DELETED)

(insn:HI 703 702 704 27 ./CppStatUtilities.cc:478 (set (reg:SI 390)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 701 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 704 703 705 27 ./CppStatUtilities.cc:478 (set (reg:DI 391)
        (sign_extend:DI (reg:SI 390))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 703 (nil))
    (expr_list:REG_DEAD (reg:SI 390)
        (nil)))

(note:HI 705 704 706 27 NOTE_INSN_DELETED)

(insn:HI 706 705 707 27 ./CppStatUtilities.cc:478 (set (reg:DI 393 [ D.35164 ])
        (plus:DI (mult:DI (reg:DI 391)
                (const_int 8 [0x8]))
            (reg/f:DI 98))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 704 (nil))
    (expr_list:REG_DEAD (reg:DI 391)
        (nil)))

(note:HI 707 706 708 27 NOTE_INSN_DELETED)

(insn:HI 708 707 709 27 ./CppStatUtilities.cc:478 (set (reg:DF 395)
        (plus:DF (mem:DF (reg:DI 393 [ D.35164 ]) [3 S8 A64])
            (reg:DF 251))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 706 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 393 [ D.35164 ]) [3 S8 A64])
        (nil)))

(insn:HI 709 708 710 27 ./CppStatUtilities.cc:478 (set (mem:DF (reg:DI 393 [ D.35164 ]) [3 S8 A64])
        (reg:DF 395)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 708 (nil))
    (expr_list:REG_DEAD (reg:DF 395)
        (expr_list:REG_DEAD (reg:DI 393 [ D.35164 ])
            (nil))))

(note:HI 710 709 711 27 ("./CppStatUtilities.cc") 477)

(insn:HI 711 710 712 27 ./CppStatUtilities.cc:477 (parallel [
            (set (reg/v:SI 252 [ i ])
                (plus:SI (reg/v:SI 252 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 712 711 1445 27 ./CppStatUtilities.cc:477 (parallel [
            (set (reg/f:DI 253 [ ivtmp.596 ])
                (plus:DI (reg/f:DI 253 [ ivtmp.596 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
(code_label:HI 1445 712 746 28 440 "" [1 uses])

(note:HI 746 1445 727 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note:HI 727 746 728 28 ("./CppStatUtilities.cc") 478)

(insn:HI 728 727 729 28 ./CppStatUtilities.cc:478 (set (reg:DF 396)
        (mem:DF (reg/f:DI 253 [ ivtmp.596 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 729 728 730 28 ./CppStatUtilities.cc:478 (set (reg:DF 396)
        (minus:DF (reg:DF 396)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 728 (nil))
    (nil))

(note:HI 730 729 731 28 NOTE_INSN_DELETED)

(insn:HI 731 730 732 28 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 396)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 729 (nil))
    (expr_list:REG_DEAD (reg:DF 396)
        (nil)))

(call_insn/u:HI 732 731 733 28 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 731 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 733 732 734 28 NOTE_INSN_DELETED)

(insn:HI 734 733 735 28 ./CppStatUtilities.cc:478 (set (reg:SI 400)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 732 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 735 734 736 28 ./CppStatUtilities.cc:478 (set (reg:DI 401)
        (sign_extend:DI (reg:SI 400))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 734 (nil))
    (expr_list:REG_DEAD (reg:SI 400)
        (nil)))

(note:HI 736 735 737 28 NOTE_INSN_DELETED)

(insn:HI 737 736 738 28 ./CppStatUtilities.cc:478 (set (reg:DI 403 [ D.35164 ])
        (plus:DI (mult:DI (reg:DI 401)
                (const_int 8 [0x8]))
            (reg/f:DI 98))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 735 (nil))
    (expr_list:REG_DEAD (reg:DI 401)
        (nil)))

(note:HI 738 737 739 28 NOTE_INSN_DELETED)

(insn:HI 739 738 740 28 ./CppStatUtilities.cc:478 (set (reg:DF 405)
        (plus:DF (mem:DF (reg:DI 403 [ D.35164 ]) [3 S8 A64])
            (reg:DF 251))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 737 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 403 [ D.35164 ]) [3 S8 A64])
        (nil)))

(insn:HI 740 739 741 28 ./CppStatUtilities.cc:478 (set (mem:DF (reg:DI 403 [ D.35164 ]) [3 S8 A64])
        (reg:DF 405)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 739 (nil))
    (expr_list:REG_DEAD (reg:DF 405)
        (expr_list:REG_DEAD (reg:DI 403 [ D.35164 ])
            (nil))))

(note:HI 741 740 742 28 ("./CppStatUtilities.cc") 477)

(insn:HI 742 741 743 28 ./CppStatUtilities.cc:477 (parallel [
            (set (reg/v:SI 252 [ i ])
                (plus:SI (reg/v:SI 252 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 743 742 744 28 ./CppStatUtilities.cc:477 (parallel [
            (set (reg/f:DI 253 [ ivtmp.596 ])
                (plus:DI (reg/f:DI 253 [ ivtmp.596 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 744 743 745 28 ./CppStatUtilities.cc:477 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 252 [ i ])
            (reg/v:SI 90 [ ySize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 742 (nil))
    (nil))

(jump_insn:HI 745 744 154 28 ./CppStatUtilities.cc:477 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 176)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 744 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
(code_label:HI 154 745 155 29 345 "" [2 uses])

(note:HI 155 154 156 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note:HI 156 155 157 29 ("./CppStatUtilities.cc") 478)

(insn:HI 157 156 158 29 ./CppStatUtilities.cc:478 (set (reg:DF 254)
        (mem:DF (reg/f:DI 253 [ ivtmp.596 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 158 157 159 29 ./CppStatUtilities.cc:478 (set (reg:DF 254)
        (minus:DF (reg:DF 254)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 157 (nil))
    (nil))

(note:HI 159 158 160 29 NOTE_INSN_DELETED)

(insn:HI 160 159 161 29 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 254)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 158 (nil))
    (expr_list:REG_DEAD (reg:DF 254)
        (nil)))

(call_insn/u:HI 161 160 162 29 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 160 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 162 161 163 29 NOTE_INSN_DELETED)

(insn:HI 163 162 164 29 ./CppStatUtilities.cc:478 (set (reg:SI 258)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 161 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 164 163 165 29 ./CppStatUtilities.cc:478 (set (reg:DI 259)
        (sign_extend:DI (reg:SI 258))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 163 (nil))
    (expr_list:REG_DEAD (reg:SI 258)
        (nil)))

(note:HI 165 164 166 29 NOTE_INSN_DELETED)

(insn:HI 166 165 167 29 ./CppStatUtilities.cc:478 (set (reg:DI 261 [ D.35164 ])
        (plus:DI (mult:DI (reg:DI 259)
                (const_int 8 [0x8]))
            (reg/f:DI 98))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 164 (nil))
    (expr_list:REG_DEAD (reg:DI 259)
        (nil)))

(note:HI 167 166 169 29 NOTE_INSN_DELETED)

(insn:HI 169 167 170 29 ./CppStatUtilities.cc:478 (set (reg:DF 263)
        (plus:DF (mem:DF (reg:DI 261 [ D.35164 ]) [3 S8 A64])
            (reg:DF 251))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 166 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 261 [ D.35164 ]) [3 S8 A64])
        (nil)))

(insn:HI 170 169 171 29 ./CppStatUtilities.cc:478 (set (mem:DF (reg:DI 261 [ D.35164 ]) [3 S8 A64])
        (reg:DF 263)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 169 (nil))
    (expr_list:REG_DEAD (reg:DF 263)
        (expr_list:REG_DEAD (reg:DI 261 [ D.35164 ])
            (nil))))

(note:HI 171 170 758 29 ("./CppStatUtilities.cc") 477)

(note:HI 758 171 759 29 ("./CppStatUtilities.cc") 478)

(insn:HI 759 758 760 29 ./CppStatUtilities.cc:478 (set (reg:DF 266)
        (mem:DF (plus:DI (reg/f:DI 253 [ ivtmp.596 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 760 759 761 29 ./CppStatUtilities.cc:478 (set (reg:DF 266)
        (minus:DF (reg:DF 266)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 759 (nil))
    (nil))

(note:HI 761 760 762 29 NOTE_INSN_DELETED)

(insn:HI 762 761 763 29 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 266)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 760 (nil))
    (expr_list:REG_DEAD (reg:DF 266)
        (nil)))

(call_insn/u:HI 763 762 764 29 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 762 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 764 763 765 29 NOTE_INSN_DELETED)

(insn:HI 765 764 766 29 ./CppStatUtilities.cc:478 (set (reg:SI 270)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 763 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 766 765 767 29 ./CppStatUtilities.cc:478 (set (reg:DI 271)
        (sign_extend:DI (reg:SI 270))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 765 (nil))
    (expr_list:REG_DEAD (reg:SI 270)
        (nil)))

(note:HI 767 766 768 29 NOTE_INSN_DELETED)

(insn:HI 768 767 769 29 ./CppStatUtilities.cc:478 (set (reg:DI 273 [ D.35164 ])
        (plus:DI (mult:DI (reg:DI 271)
                (const_int 8 [0x8]))
            (reg/f:DI 98))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 766 (nil))
    (expr_list:REG_DEAD (reg:DI 271)
        (nil)))

(note:HI 769 768 770 29 NOTE_INSN_DELETED)

(insn:HI 770 769 771 29 ./CppStatUtilities.cc:478 (set (reg:DF 275)
        (plus:DF (mem:DF (reg:DI 273 [ D.35164 ]) [3 S8 A64])
            (reg:DF 251))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 768 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 273 [ D.35164 ]) [3 S8 A64])
        (nil)))

(insn:HI 771 770 772 29 ./CppStatUtilities.cc:478 (set (mem:DF (reg:DI 273 [ D.35164 ]) [3 S8 A64])
        (reg:DF 275)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 770 (nil))
    (expr_list:REG_DEAD (reg:DF 275)
        (expr_list:REG_DEAD (reg:DI 273 [ D.35164 ])
            (nil))))

(note:HI 772 771 784 29 ("./CppStatUtilities.cc") 477)

(note:HI 784 772 785 29 ("./CppStatUtilities.cc") 478)

(insn:HI 785 784 786 29 ./CppStatUtilities.cc:478 (set (reg:DF 278)
        (mem:DF (plus:DI (reg/f:DI 253 [ ivtmp.596 ])
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 786 785 787 29 ./CppStatUtilities.cc:478 (set (reg:DF 278)
        (minus:DF (reg:DF 278)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 785 (nil))
    (nil))

(note:HI 787 786 788 29 NOTE_INSN_DELETED)

(insn:HI 788 787 789 29 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 278)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 786 (nil))
    (expr_list:REG_DEAD (reg:DF 278)
        (nil)))

(call_insn/u:HI 789 788 790 29 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 788 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 790 789 791 29 NOTE_INSN_DELETED)

(insn:HI 791 790 792 29 ./CppStatUtilities.cc:478 (set (reg:SI 282)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 789 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 792 791 793 29 ./CppStatUtilities.cc:478 (set (reg:DI 283)
        (sign_extend:DI (reg:SI 282))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 791 (nil))
    (expr_list:REG_DEAD (reg:SI 282)
        (nil)))

(note:HI 793 792 794 29 NOTE_INSN_DELETED)

(insn:HI 794 793 795 29 ./CppStatUtilities.cc:478 (set (reg:DI 285 [ D.35164 ])
        (plus:DI (mult:DI (reg:DI 283)
                (const_int 8 [0x8]))
            (reg/f:DI 98))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 792 (nil))
    (expr_list:REG_DEAD (reg:DI 283)
        (nil)))

(note:HI 795 794 796 29 NOTE_INSN_DELETED)

(insn:HI 796 795 797 29 ./CppStatUtilities.cc:478 (set (reg:DF 287)
        (plus:DF (mem:DF (reg:DI 285 [ D.35164 ]) [3 S8 A64])
            (reg:DF 251))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 794 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 285 [ D.35164 ]) [3 S8 A64])
        (nil)))

(insn:HI 797 796 798 29 ./CppStatUtilities.cc:478 (set (mem:DF (reg:DI 285 [ D.35164 ]) [3 S8 A64])
        (reg:DF 287)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 796 (nil))
    (expr_list:REG_DEAD (reg:DF 287)
        (expr_list:REG_DEAD (reg:DI 285 [ D.35164 ])
            (nil))))

(note:HI 798 797 810 29 ("./CppStatUtilities.cc") 477)

(note:HI 810 798 811 29 ("./CppStatUtilities.cc") 478)

(insn:HI 811 810 812 29 ./CppStatUtilities.cc:478 (set (reg:DF 290)
        (mem:DF (plus:DI (reg/f:DI 253 [ ivtmp.596 ])
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 812 811 813 29 ./CppStatUtilities.cc:478 (set (reg:DF 290)
        (minus:DF (reg:DF 290)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 811 (nil))
    (nil))

(note:HI 813 812 814 29 NOTE_INSN_DELETED)

(insn:HI 814 813 815 29 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 290)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 812 (nil))
    (expr_list:REG_DEAD (reg:DF 290)
        (nil)))

(call_insn/u:HI 815 814 816 29 ./CppStatUtilities.cc:478 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 814 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 816 815 817 29 NOTE_INSN_DELETED)

(insn:HI 817 816 818 29 ./CppStatUtilities.cc:478 (set (reg:SI 294)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 815 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 818 817 819 29 ./CppStatUtilities.cc:478 (set (reg:DI 295)
        (sign_extend:DI (reg:SI 294))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 817 (nil))
    (expr_list:REG_DEAD (reg:SI 294)
        (nil)))

(note:HI 819 818 820 29 NOTE_INSN_DELETED)

(insn:HI 820 819 821 29 ./CppStatUtilities.cc:478 (set (reg:DI 297 [ D.35164 ])
        (plus:DI (mult:DI (reg:DI 295)
                (const_int 8 [0x8]))
            (reg/f:DI 98))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 818 (nil))
    (expr_list:REG_DEAD (reg:DI 295)
        (nil)))

(note:HI 821 820 822 29 NOTE_INSN_DELETED)

(insn:HI 822 821 823 29 ./CppStatUtilities.cc:478 (set (reg:DF 299)
        (plus:DF (mem:DF (reg:DI 297 [ D.35164 ]) [3 S8 A64])
            (reg:DF 251))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 820 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 297 [ D.35164 ]) [3 S8 A64])
        (nil)))

(insn:HI 823 822 824 29 ./CppStatUtilities.cc:478 (set (mem:DF (reg:DI 297 [ D.35164 ]) [3 S8 A64])
        (reg:DF 299)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 822 (nil))
    (expr_list:REG_DEAD (reg:DF 299)
        (expr_list:REG_DEAD (reg:DI 297 [ D.35164 ])
            (nil))))

(note:HI 824 823 825 29 ("./CppStatUtilities.cc") 477)

(insn:HI 825 824 826 29 ./CppStatUtilities.cc:477 (parallel [
            (set (reg/v:SI 252 [ i ])
                (plus:SI (reg/v:SI 252 [ i ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 826 825 827 29 ./CppStatUtilities.cc:477 (parallel [
            (set (reg/f:DI 253 [ ivtmp.596 ])
                (plus:DI (reg/f:DI 253 [ ivtmp.596 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 827 826 828 29 ./CppStatUtilities.cc:477 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 252 [ i ])
            (reg/v:SI 90 [ ySize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 825 (nil))
    (nil))

(jump_insn:HI 828 827 833 29 ./CppStatUtilities.cc:477 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 176)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 827 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253
(note:HI 833 828 1411 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1411 833 1412 30 (set (pc)
        (label_ref 154)) 548 {jump} (nil)
    (nil))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 90 91 92 97 98 251 252 253

(barrier:HI 1412 1411 1428)

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98
(code_label:HI 1428 1412 120 31 431 "" [1 uses])

(note:HI 120 1428 239 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:HI 239 120 843 31 (set (reg:DF 130)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))

(note:HI 843 239 844 31 NOTE_INSN_DELETED)

(insn:HI 844 843 845 31 (parallel [
            (set (reg:SI 155)
                (plus:SI (reg/v:SI 88 [ xSize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 845 844 848 31 (parallel [
            (set (reg:SI 155)
                (and:SI (reg:SI 155)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 844 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 848 845 849 31 ("./CppStatUtilities.cc") 474)

(insn:HI 849 848 850 31 ./CppStatUtilities.cc:474 (set (reg:DF 107)
        (mem:DF (reg/v/f:DI 87 [ x ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 850 849 851 31 ./CppStatUtilities.cc:474 (set (reg:DF 107)
        (minus:DF (reg:DF 107)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 849 (nil))
    (nil))

(note:HI 851 850 852 31 NOTE_INSN_DELETED)

(insn:HI 852 851 853 31 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 107)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 850 (nil))
    (expr_list:REG_DEAD (reg:DF 107)
        (nil)))

(call_insn/u:HI 853 852 854 31 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 852 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 854 853 855 31 NOTE_INSN_DELETED)

(insn:HI 855 854 856 31 ./CppStatUtilities.cc:474 (set (reg:SI 109)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 853 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 856 855 857 31 ./CppStatUtilities.cc:474 (set (reg:DI 110)
        (sign_extend:DI (reg:SI 109))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 855 (nil))
    (expr_list:REG_DEAD (reg:SI 109)
        (nil)))

(note:HI 857 856 858 31 NOTE_INSN_DELETED)

(insn:HI 858 857 859 31 ./CppStatUtilities.cc:474 (set (reg:DI 82 [ D.35145 ])
        (plus:DI (mult:DI (reg:DI 110)
                (const_int 8 [0x8]))
            (reg/f:DI 97))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 856 (nil))
    (expr_list:REG_DEAD (reg:DI 110)
        (nil)))

(note:HI 859 858 860 31 NOTE_INSN_DELETED)

(insn:HI 860 859 861 31 ./CppStatUtilities.cc:474 (set (reg:DF 114)
        (plus:DF (mem:DF (reg:DI 82 [ D.35145 ]) [3 S8 A64])
            (reg:DF 130))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 858 (insn_list:REG_DEP_TRUE 239 (nil)))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 82 [ D.35145 ]) [3 S8 A64])
        (nil)))

(insn:HI 861 860 862 31 ./CppStatUtilities.cc:474 (set (mem:DF (reg:DI 82 [ D.35145 ]) [3 S8 A64])
        (reg:DF 114)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 860 (nil))
    (expr_list:REG_DEAD (reg:DF 114)
        (expr_list:REG_DEAD (reg:DI 82 [ D.35145 ])
            (nil))))

(note:HI 862 861 863 31 ("./CppStatUtilities.cc") 473)

(insn:HI 863 862 864 31 ./CppStatUtilities.cc:473 (set (reg/v:SI 203 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 864 863 865 31 ./CppStatUtilities.cc:473 (parallel [
            (set (reg/f:DI 204 [ ivtmp.601 ])
                (plus:DI (reg/v/f:DI 87 [ x ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 865 864 866 31 ./CppStatUtilities.cc:473 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 203 [ i ])
            (reg/v:SI 88 [ xSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 863 (nil))
    (nil))

(jump_insn:HI 866 865 966 31 ./CppStatUtilities.cc:473 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 145)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 865 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204
(note:HI 966 866 964 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:HI 964 966 965 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 965 964 935 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 123)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 964 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204
(note:HI 935 965 933 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:HI 933 935 934 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 934 933 904 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1447)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 933 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 155 203 204
(note:HI 904 934 902 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:HI 902 904 903 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(jump_insn:HI 903 902 894 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1448)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 902 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130 203 204

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98 130
(note:HI 894 903 875 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note:HI 875 894 876 35 ("./CppStatUtilities.cc") 474)

(insn:HI 876 875 877 35 ./CppStatUtilities.cc:474 (set (reg:DF 406)
        (mem:DF (plus:DI (reg/v/f:DI 87 [ x ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 877 876 878 35 ./CppStatUtilities.cc:474 (set (reg:DF 406)
        (minus:DF (reg:DF 406)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 876 (nil))
    (nil))

(note:HI 878 877 879 35 NOTE_INSN_DELETED)

(insn:HI 879 878 880 35 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 406)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 877 (nil))
    (expr_list:REG_DEAD (reg:DF 406)
        (nil)))

(call_insn/u:HI 880 879 881 35 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 879 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 881 880 882 35 NOTE_INSN_DELETED)

(insn:HI 882 881 883 35 ./CppStatUtilities.cc:474 (set (reg:SI 410)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 880 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 883 882 884 35 ./CppStatUtilities.cc:474 (set (reg:DI 411)
        (sign_extend:DI (reg:SI 410))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 882 (nil))
    (expr_list:REG_DEAD (reg:SI 410)
        (nil)))

(note:HI 884 883 885 35 NOTE_INSN_DELETED)

(insn:HI 885 884 886 35 ./CppStatUtilities.cc:474 (set (reg:DI 413 [ D.35145 ])
        (plus:DI (mult:DI (reg:DI 411)
                (const_int 8 [0x8]))
            (reg/f:DI 97))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 883 (nil))
    (expr_list:REG_DEAD (reg:DI 411)
        (nil)))

(note:HI 886 885 887 35 NOTE_INSN_DELETED)

(insn:HI 887 886 888 35 ./CppStatUtilities.cc:474 (set (reg:DF 415)
        (plus:DF (mem:DF (reg:DI 413 [ D.35145 ]) [3 S8 A64])
            (reg:DF 130))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 885 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 413 [ D.35145 ]) [3 S8 A64])
        (nil)))

(insn:HI 888 887 889 35 ./CppStatUtilities.cc:474 (set (mem:DF (reg:DI 413 [ D.35145 ]) [3 S8 A64])
        (reg:DF 415)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 887 (nil))
    (expr_list:REG_DEAD (reg:DF 415)
        (expr_list:REG_DEAD (reg:DI 413 [ D.35145 ])
            (nil))))

(note:HI 889 888 890 35 ("./CppStatUtilities.cc") 473)

(insn:HI 890 889 891 35 ./CppStatUtilities.cc:473 (set (reg/v:SI 203 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 891 890 1448 35 ./CppStatUtilities.cc:473 (parallel [
            (set (reg/f:DI 204 [ ivtmp.601 ])
                (plus:DI (reg/v/f:DI 87 [ x ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ x ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
(code_label:HI 1448 891 925 36 443 "" [1 uses])

(note:HI 925 1448 906 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note:HI 906 925 907 36 ("./CppStatUtilities.cc") 474)

(insn:HI 907 906 908 36 ./CppStatUtilities.cc:474 (set (reg:DF 416)
        (mem:DF (reg/f:DI 204 [ ivtmp.601 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 908 907 909 36 ./CppStatUtilities.cc:474 (set (reg:DF 416)
        (minus:DF (reg:DF 416)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 907 (nil))
    (nil))

(note:HI 909 908 910 36 NOTE_INSN_DELETED)

(insn:HI 910 909 911 36 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 416)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 908 (nil))
    (expr_list:REG_DEAD (reg:DF 416)
        (nil)))

(call_insn/u:HI 911 910 912 36 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 910 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 912 911 913 36 NOTE_INSN_DELETED)

(insn:HI 913 912 914 36 ./CppStatUtilities.cc:474 (set (reg:SI 420)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 911 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 914 913 915 36 ./CppStatUtilities.cc:474 (set (reg:DI 421)
        (sign_extend:DI (reg:SI 420))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 913 (nil))
    (expr_list:REG_DEAD (reg:SI 420)
        (nil)))

(note:HI 915 914 916 36 NOTE_INSN_DELETED)

(insn:HI 916 915 917 36 ./CppStatUtilities.cc:474 (set (reg:DI 423 [ D.35145 ])
        (plus:DI (mult:DI (reg:DI 421)
                (const_int 8 [0x8]))
            (reg/f:DI 97))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 914 (nil))
    (expr_list:REG_DEAD (reg:DI 421)
        (nil)))

(note:HI 917 916 918 36 NOTE_INSN_DELETED)

(insn:HI 918 917 919 36 ./CppStatUtilities.cc:474 (set (reg:DF 425)
        (plus:DF (mem:DF (reg:DI 423 [ D.35145 ]) [3 S8 A64])
            (reg:DF 130))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 916 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 423 [ D.35145 ]) [3 S8 A64])
        (nil)))

(insn:HI 919 918 920 36 ./CppStatUtilities.cc:474 (set (mem:DF (reg:DI 423 [ D.35145 ]) [3 S8 A64])
        (reg:DF 425)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 918 (nil))
    (expr_list:REG_DEAD (reg:DF 425)
        (expr_list:REG_DEAD (reg:DI 423 [ D.35145 ])
            (nil))))

(note:HI 920 919 921 36 ("./CppStatUtilities.cc") 473)

(insn:HI 921 920 922 36 ./CppStatUtilities.cc:473 (parallel [
            (set (reg/v:SI 203 [ i ])
                (plus:SI (reg/v:SI 203 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 922 921 1447 36 ./CppStatUtilities.cc:473 (parallel [
            (set (reg/f:DI 204 [ ivtmp.601 ])
                (plus:DI (reg/f:DI 204 [ ivtmp.601 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
(code_label:HI 1447 922 956 37 442 "" [1 uses])

(note:HI 956 1447 937 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note:HI 937 956 938 37 ("./CppStatUtilities.cc") 474)

(insn:HI 938 937 939 37 ./CppStatUtilities.cc:474 (set (reg:DF 426)
        (mem:DF (reg/f:DI 204 [ ivtmp.601 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 939 938 940 37 ./CppStatUtilities.cc:474 (set (reg:DF 426)
        (minus:DF (reg:DF 426)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 938 (nil))
    (nil))

(note:HI 940 939 941 37 NOTE_INSN_DELETED)

(insn:HI 941 940 942 37 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 426)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 939 (nil))
    (expr_list:REG_DEAD (reg:DF 426)
        (nil)))

(call_insn/u:HI 942 941 943 37 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 941 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 943 942 944 37 NOTE_INSN_DELETED)

(insn:HI 944 943 945 37 ./CppStatUtilities.cc:474 (set (reg:SI 430)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 942 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 945 944 946 37 ./CppStatUtilities.cc:474 (set (reg:DI 431)
        (sign_extend:DI (reg:SI 430))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 944 (nil))
    (expr_list:REG_DEAD (reg:SI 430)
        (nil)))

(note:HI 946 945 947 37 NOTE_INSN_DELETED)

(insn:HI 947 946 948 37 ./CppStatUtilities.cc:474 (set (reg:DI 433 [ D.35145 ])
        (plus:DI (mult:DI (reg:DI 431)
                (const_int 8 [0x8]))
            (reg/f:DI 97))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 945 (nil))
    (expr_list:REG_DEAD (reg:DI 431)
        (nil)))

(note:HI 948 947 949 37 NOTE_INSN_DELETED)

(insn:HI 949 948 950 37 ./CppStatUtilities.cc:474 (set (reg:DF 435)
        (plus:DF (mem:DF (reg:DI 433 [ D.35145 ]) [3 S8 A64])
            (reg:DF 130))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 947 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 433 [ D.35145 ]) [3 S8 A64])
        (nil)))

(insn:HI 950 949 951 37 ./CppStatUtilities.cc:474 (set (mem:DF (reg:DI 433 [ D.35145 ]) [3 S8 A64])
        (reg:DF 435)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 949 (nil))
    (expr_list:REG_DEAD (reg:DF 435)
        (expr_list:REG_DEAD (reg:DI 433 [ D.35145 ])
            (nil))))

(note:HI 951 950 952 37 ("./CppStatUtilities.cc") 473)

(insn:HI 952 951 953 37 ./CppStatUtilities.cc:473 (parallel [
            (set (reg/v:SI 203 [ i ])
                (plus:SI (reg/v:SI 203 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 953 952 954 37 ./CppStatUtilities.cc:473 (parallel [
            (set (reg/f:DI 204 [ ivtmp.601 ])
                (plus:DI (reg/f:DI 204 [ ivtmp.601 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 954 953 955 37 ./CppStatUtilities.cc:473 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 203 [ i ])
            (reg/v:SI 88 [ xSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 952 (nil))
    (nil))

(jump_insn:HI 955 954 123 37 ./CppStatUtilities.cc:473 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 145)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 954 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
(code_label:HI 123 955 124 38 342 "" [2 uses])

(note:HI 124 123 125 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(note:HI 125 124 126 38 ("./CppStatUtilities.cc") 474)

(insn:HI 126 125 127 38 ./CppStatUtilities.cc:474 (set (reg:DF 205)
        (mem:DF (reg/f:DI 204 [ ivtmp.601 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 127 126 128 38 ./CppStatUtilities.cc:474 (set (reg:DF 205)
        (minus:DF (reg:DF 205)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 126 (nil))
    (nil))

(note:HI 128 127 129 38 NOTE_INSN_DELETED)

(insn:HI 129 128 130 38 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 205)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 127 (nil))
    (expr_list:REG_DEAD (reg:DF 205)
        (nil)))

(call_insn/u:HI 130 129 131 38 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 129 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 131 130 132 38 NOTE_INSN_DELETED)

(insn:HI 132 131 133 38 ./CppStatUtilities.cc:474 (set (reg:SI 209)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 130 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 133 132 134 38 ./CppStatUtilities.cc:474 (set (reg:DI 210)
        (sign_extend:DI (reg:SI 209))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 132 (nil))
    (expr_list:REG_DEAD (reg:SI 209)
        (nil)))

(note:HI 134 133 135 38 NOTE_INSN_DELETED)

(insn:HI 135 134 136 38 ./CppStatUtilities.cc:474 (set (reg:DI 212 [ D.35145 ])
        (plus:DI (mult:DI (reg:DI 210)
                (const_int 8 [0x8]))
            (reg/f:DI 97))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 133 (nil))
    (expr_list:REG_DEAD (reg:DI 210)
        (nil)))

(note:HI 136 135 138 38 NOTE_INSN_DELETED)

(insn:HI 138 136 139 38 ./CppStatUtilities.cc:474 (set (reg:DF 214)
        (plus:DF (mem:DF (reg:DI 212 [ D.35145 ]) [3 S8 A64])
            (reg:DF 130))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 135 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 212 [ D.35145 ]) [3 S8 A64])
        (nil)))

(insn:HI 139 138 140 38 ./CppStatUtilities.cc:474 (set (mem:DF (reg:DI 212 [ D.35145 ]) [3 S8 A64])
        (reg:DF 214)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 138 (nil))
    (expr_list:REG_DEAD (reg:DF 214)
        (expr_list:REG_DEAD (reg:DI 212 [ D.35145 ])
            (nil))))

(note:HI 140 139 968 38 ("./CppStatUtilities.cc") 473)

(note:HI 968 140 969 38 ("./CppStatUtilities.cc") 474)

(insn:HI 969 968 970 38 ./CppStatUtilities.cc:474 (set (reg:DF 217)
        (mem:DF (plus:DI (reg/f:DI 204 [ ivtmp.601 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 970 969 971 38 ./CppStatUtilities.cc:474 (set (reg:DF 217)
        (minus:DF (reg:DF 217)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 969 (nil))
    (nil))

(note:HI 971 970 972 38 NOTE_INSN_DELETED)

(insn:HI 972 971 973 38 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 217)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 970 (nil))
    (expr_list:REG_DEAD (reg:DF 217)
        (nil)))

(call_insn/u:HI 973 972 974 38 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 972 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 974 973 975 38 NOTE_INSN_DELETED)

(insn:HI 975 974 976 38 ./CppStatUtilities.cc:474 (set (reg:SI 221)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 973 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 976 975 977 38 ./CppStatUtilities.cc:474 (set (reg:DI 222)
        (sign_extend:DI (reg:SI 221))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 975 (nil))
    (expr_list:REG_DEAD (reg:SI 221)
        (nil)))

(note:HI 977 976 978 38 NOTE_INSN_DELETED)

(insn:HI 978 977 979 38 ./CppStatUtilities.cc:474 (set (reg:DI 224 [ D.35145 ])
        (plus:DI (mult:DI (reg:DI 222)
                (const_int 8 [0x8]))
            (reg/f:DI 97))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 976 (nil))
    (expr_list:REG_DEAD (reg:DI 222)
        (nil)))

(note:HI 979 978 980 38 NOTE_INSN_DELETED)

(insn:HI 980 979 981 38 ./CppStatUtilities.cc:474 (set (reg:DF 226)
        (plus:DF (mem:DF (reg:DI 224 [ D.35145 ]) [3 S8 A64])
            (reg:DF 130))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 978 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 224 [ D.35145 ]) [3 S8 A64])
        (nil)))

(insn:HI 981 980 982 38 ./CppStatUtilities.cc:474 (set (mem:DF (reg:DI 224 [ D.35145 ]) [3 S8 A64])
        (reg:DF 226)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 980 (nil))
    (expr_list:REG_DEAD (reg:DF 226)
        (expr_list:REG_DEAD (reg:DI 224 [ D.35145 ])
            (nil))))

(note:HI 982 981 994 38 ("./CppStatUtilities.cc") 473)

(note:HI 994 982 995 38 ("./CppStatUtilities.cc") 474)

(insn:HI 995 994 996 38 ./CppStatUtilities.cc:474 (set (reg:DF 229)
        (mem:DF (plus:DI (reg/f:DI 204 [ ivtmp.601 ])
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 996 995 997 38 ./CppStatUtilities.cc:474 (set (reg:DF 229)
        (minus:DF (reg:DF 229)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 995 (nil))
    (nil))

(note:HI 997 996 998 38 NOTE_INSN_DELETED)

(insn:HI 998 997 999 38 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 229)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 996 (nil))
    (expr_list:REG_DEAD (reg:DF 229)
        (nil)))

(call_insn/u:HI 999 998 1000 38 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 998 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 1000 999 1001 38 NOTE_INSN_DELETED)

(insn:HI 1001 1000 1002 38 ./CppStatUtilities.cc:474 (set (reg:SI 233)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 999 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 1002 1001 1003 38 ./CppStatUtilities.cc:474 (set (reg:DI 234)
        (sign_extend:DI (reg:SI 233))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1001 (nil))
    (expr_list:REG_DEAD (reg:SI 233)
        (nil)))

(note:HI 1003 1002 1004 38 NOTE_INSN_DELETED)

(insn:HI 1004 1003 1005 38 ./CppStatUtilities.cc:474 (set (reg:DI 236 [ D.35145 ])
        (plus:DI (mult:DI (reg:DI 234)
                (const_int 8 [0x8]))
            (reg/f:DI 97))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 1002 (nil))
    (expr_list:REG_DEAD (reg:DI 234)
        (nil)))

(note:HI 1005 1004 1006 38 NOTE_INSN_DELETED)

(insn:HI 1006 1005 1007 38 ./CppStatUtilities.cc:474 (set (reg:DF 238)
        (plus:DF (mem:DF (reg:DI 236 [ D.35145 ]) [3 S8 A64])
            (reg:DF 130))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1004 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 236 [ D.35145 ]) [3 S8 A64])
        (nil)))

(insn:HI 1007 1006 1008 38 ./CppStatUtilities.cc:474 (set (mem:DF (reg:DI 236 [ D.35145 ]) [3 S8 A64])
        (reg:DF 238)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1006 (nil))
    (expr_list:REG_DEAD (reg:DF 238)
        (expr_list:REG_DEAD (reg:DI 236 [ D.35145 ])
            (nil))))

(note:HI 1008 1007 1020 38 ("./CppStatUtilities.cc") 473)

(note:HI 1020 1008 1021 38 ("./CppStatUtilities.cc") 474)

(insn:HI 1021 1020 1022 38 ./CppStatUtilities.cc:474 (set (reg:DF 241)
        (mem:DF (plus:DI (reg/f:DI 204 [ ivtmp.601 ])
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1022 1021 1023 38 ./CppStatUtilities.cc:474 (set (reg:DF 241)
        (minus:DF (reg:DF 241)
            (reg/v:DF 75 [ tmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1021 (nil))
    (nil))

(note:HI 1023 1022 1024 38 NOTE_INSN_DELETED)

(insn:HI 1024 1023 1025 38 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 241)
            (reg/v:DF 70 [ dt ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1022 (nil))
    (expr_list:REG_DEAD (reg:DF 241)
        (nil)))

(call_insn/u:HI 1025 1024 1026 38 ./CppStatUtilities.cc:474 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 1024 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 1026 1025 1027 38 NOTE_INSN_DELETED)

(insn:HI 1027 1026 1028 38 ./CppStatUtilities.cc:474 (set (reg:SI 245)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 1025 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 1028 1027 1029 38 ./CppStatUtilities.cc:474 (set (reg:DI 246)
        (sign_extend:DI (reg:SI 245))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1027 (nil))
    (expr_list:REG_DEAD (reg:SI 245)
        (nil)))

(note:HI 1029 1028 1030 38 NOTE_INSN_DELETED)

(insn:HI 1030 1029 1031 38 ./CppStatUtilities.cc:474 (set (reg:DI 248 [ D.35145 ])
        (plus:DI (mult:DI (reg:DI 246)
                (const_int 8 [0x8]))
            (reg/f:DI 97))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 1028 (nil))
    (expr_list:REG_DEAD (reg:DI 246)
        (nil)))

(note:HI 1031 1030 1032 38 NOTE_INSN_DELETED)

(insn:HI 1032 1031 1033 38 ./CppStatUtilities.cc:474 (set (reg:DF 250)
        (plus:DF (mem:DF (reg:DI 248 [ D.35145 ]) [3 S8 A64])
            (reg:DF 130))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1030 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 248 [ D.35145 ]) [3 S8 A64])
        (nil)))

(insn:HI 1033 1032 1034 38 ./CppStatUtilities.cc:474 (set (mem:DF (reg:DI 248 [ D.35145 ]) [3 S8 A64])
        (reg:DF 250)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1032 (nil))
    (expr_list:REG_DEAD (reg:DF 250)
        (expr_list:REG_DEAD (reg:DI 248 [ D.35145 ])
            (nil))))

(note:HI 1034 1033 1035 38 ("./CppStatUtilities.cc") 473)

(insn:HI 1035 1034 1036 38 ./CppStatUtilities.cc:473 (parallel [
            (set (reg/v:SI 203 [ i ])
                (plus:SI (reg/v:SI 203 [ i ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1036 1035 1037 38 ./CppStatUtilities.cc:473 (parallel [
            (set (reg/f:DI 204 [ ivtmp.601 ])
                (plus:DI (reg/f:DI 204 [ ivtmp.601 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1037 1036 1038 38 ./CppStatUtilities.cc:473 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 203 [ i ])
            (reg/v:SI 88 [ xSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1035 (nil))
    (nil))

(jump_insn:HI 1038 1037 1043 38 ./CppStatUtilities.cc:473 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 145)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1037 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204
(note:HI 1043 1038 1416 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1416 1043 1417 39 (set (pc)
        (label_ref 123)) 548 {jump} (nil)
    (nil))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 88 89 90 91 92 97 98 130 203 204

(barrier:HI 1417 1416 1424)

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 73 75 87 88 89 90 91 92 97 98
(code_label:HI 1424 1417 97 40 430 "" [1 uses])

(note:HI 97 1424 98 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(note:HI 98 97 99 40 NOTE_INSN_DELETED)

(insn:HI 99 98 100 40 ./CppStatUtilities.cc:469 (set (reg:DF 63 [ pretmp.572 ])
        (mult:DF (reg/v:DF 70 [ dt ])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 100 99 1053 40 ./CppStatUtilities.cc:469 (set (reg:DF 63 [ pretmp.572 ])
        (plus:DF (reg/v:DF 75 [ tmin ])
            (reg:DF 63 [ pretmp.572 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 99 (nil))
    (nil))

(note:HI 1053 100 1054 40 NOTE_INSN_DELETED)

(insn:HI 1054 1053 1055 40 (parallel [
            (set (reg:SI 160)
                (plus:SI (reg/v:SI 91 [ nBins ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1055 1054 1058 40 (parallel [
            (set (reg:SI 160)
                (and:SI (reg:SI 160)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 1054 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1058 1055 1456 40 ("./CppStatUtilities.cc") 470)

(insn 1456 1058 1059 40 ./CppStatUtilities.cc:470 (set (reg/v:SI 67 [ i ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:HI 1059 1456 1060 40 ./CppStatUtilities.cc:470 (set (reg:DF 103)
        (float:DF (reg/v:SI 67 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 101 (nil))
    (expr_list:REG_DEAD (reg/v:SI 67 [ i ])
        (nil)))

(insn:HI 1060 1059 1061 40 ./CppStatUtilities.cc:470 (set (reg:DF 103)
        (mult:DF (reg/v:DF 70 [ dt ])
            (reg:DF 103))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1059 (nil))
    (nil))

(insn:HI 1061 1060 1062 40 ./CppStatUtilities.cc:470 (set (reg:DF 103)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 103))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 100 (insn_list:REG_DEP_TRUE 1060 (nil)))
    (nil))

(insn:HI 1062 1061 1063 40 ./CppStatUtilities.cc:470 (set (mem:DF (reg/v/f:DI 73 [ hmid ]) [3 S8 A64])
        (reg:DF 103)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1061 (nil))
    (expr_list:REG_DEAD (reg:DF 103)
        (nil)))

(note:HI 1063 1062 1064 40 ("./CppStatUtilities.cc") 469)

(insn:HI 1064 1063 1065 40 ./CppStatUtilities.cc:469 (set (reg/v:SI 163 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 1065 1064 1066 40 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/f:DI 167 [ ivtmp.606 ])
                (plus:DI (reg/v/f:DI 73 [ hmid ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1066 1065 1067 40 ./CppStatUtilities.cc:469 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 163 [ i ])
            (reg/v:SI 91 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1064 (nil))
    (nil))

(jump_insn:HI 1067 1066 1228 40 ./CppStatUtilities.cc:469 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 114)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1066 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
(note:HI 1228 1067 1226 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1226 1228 1227 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 1227 1226 1206 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 102)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1226 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
(note:HI 1206 1227 1204 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1204 1206 1205 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1205 1204 1184 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1449)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1204 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
(note:HI 1184 1205 1182 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1182 1184 1183 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1183 1182 1162 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1450)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1182 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
(note:HI 1162 1183 1160 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1160 1162 1161 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1161 1160 1140 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1451)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1160 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
(note:HI 1140 1161 1138 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1138 1140 1139 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1139 1138 1118 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1452)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1138 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
(note:HI 1118 1139 1116 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1116 1118 1117 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1117 1116 1096 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1453)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1116 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 160 163 167
(note:HI 1096 1117 1094 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1094 1096 1095 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn:HI 1095 1094 1086 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1454)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1094 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98
(note:HI 1086 1095 1076 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(note:HI 1076 1086 1079 48 ("./CppStatUtilities.cc") 470)

(insn:HI 1079 1076 1080 48 ./CppStatUtilities.cc:470 (set (reg:DF 438)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 73 [ hmid ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(insn:HI 1080 1079 1081 48 ./CppStatUtilities.cc:470 (set (mem:DF (plus:DI (reg/v/f:DI 73 [ hmid ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 438)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1079 (nil))
    (expr_list:REG_DEAD (reg:DF 438)
        (nil)))

(note:HI 1081 1080 1082 48 ("./CppStatUtilities.cc") 469)

(insn:HI 1082 1081 1083 48 ./CppStatUtilities.cc:469 (set (reg/v:SI 163 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 1083 1082 1454 48 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/f:DI 167 [ ivtmp.606 ])
                (plus:DI (reg/v/f:DI 73 [ hmid ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
(code_label:HI 1454 1083 1108 49 449 "" [1 uses])

(note:HI 1108 1454 1098 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note:HI 1098 1108 1099 49 ("./CppStatUtilities.cc") 470)

(insn:HI 1099 1098 1100 49 ./CppStatUtilities.cc:470 (set (reg:DF 439)
        (float:DF (reg/v:SI 163 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 1100 1099 1101 49 ./CppStatUtilities.cc:470 (set (reg:DF 439)
        (mult:DF (reg:DF 439)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1099 (nil))
    (nil))

(insn:HI 1101 1100 1102 49 ./CppStatUtilities.cc:470 (set (reg:DF 439)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 439))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1100 (nil))
    (nil))

(insn:HI 1102 1101 1103 49 ./CppStatUtilities.cc:470 (set (mem:DF (reg/f:DI 167 [ ivtmp.606 ]) [3 S8 A64])
        (reg:DF 439)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1101 (nil))
    (expr_list:REG_DEAD (reg:DF 439)
        (nil)))

(note:HI 1103 1102 1104 49 ("./CppStatUtilities.cc") 469)

(insn:HI 1104 1103 1105 49 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 163 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1105 1104 1453 49 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/f:DI 167 [ ivtmp.606 ])
                (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 49, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
(code_label:HI 1453 1105 1130 50 448 "" [1 uses])

(note:HI 1130 1453 1120 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(note:HI 1120 1130 1121 50 ("./CppStatUtilities.cc") 470)

(insn:HI 1121 1120 1122 50 ./CppStatUtilities.cc:470 (set (reg:DF 442)
        (float:DF (reg/v:SI 163 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 1122 1121 1123 50 ./CppStatUtilities.cc:470 (set (reg:DF 442)
        (mult:DF (reg:DF 442)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1121 (nil))
    (nil))

(insn:HI 1123 1122 1124 50 ./CppStatUtilities.cc:470 (set (reg:DF 442)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 442))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1122 (nil))
    (nil))

(insn:HI 1124 1123 1125 50 ./CppStatUtilities.cc:470 (set (mem:DF (reg/f:DI 167 [ ivtmp.606 ]) [3 S8 A64])
        (reg:DF 442)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1123 (nil))
    (expr_list:REG_DEAD (reg:DF 442)
        (nil)))

(note:HI 1125 1124 1126 50 ("./CppStatUtilities.cc") 469)

(insn:HI 1126 1125 1127 50 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 163 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1127 1126 1452 50 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/f:DI 167 [ ivtmp.606 ])
                (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 50, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
(code_label:HI 1452 1127 1152 51 447 "" [1 uses])

(note:HI 1152 1452 1142 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(note:HI 1142 1152 1143 51 ("./CppStatUtilities.cc") 470)

(insn:HI 1143 1142 1144 51 ./CppStatUtilities.cc:470 (set (reg:DF 445)
        (float:DF (reg/v:SI 163 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 1144 1143 1145 51 ./CppStatUtilities.cc:470 (set (reg:DF 445)
        (mult:DF (reg:DF 445)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1143 (nil))
    (nil))

(insn:HI 1145 1144 1146 51 ./CppStatUtilities.cc:470 (set (reg:DF 445)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 445))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1144 (nil))
    (nil))

(insn:HI 1146 1145 1147 51 ./CppStatUtilities.cc:470 (set (mem:DF (reg/f:DI 167 [ ivtmp.606 ]) [3 S8 A64])
        (reg:DF 445)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1145 (nil))
    (expr_list:REG_DEAD (reg:DF 445)
        (nil)))

(note:HI 1147 1146 1148 51 ("./CppStatUtilities.cc") 469)

(insn:HI 1148 1147 1149 51 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 163 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1149 1148 1451 51 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/f:DI 167 [ ivtmp.606 ])
                (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 51, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
(code_label:HI 1451 1149 1174 52 446 "" [1 uses])

(note:HI 1174 1451 1164 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(note:HI 1164 1174 1165 52 ("./CppStatUtilities.cc") 470)

(insn:HI 1165 1164 1166 52 ./CppStatUtilities.cc:470 (set (reg:DF 448)
        (float:DF (reg/v:SI 163 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 1166 1165 1167 52 ./CppStatUtilities.cc:470 (set (reg:DF 448)
        (mult:DF (reg:DF 448)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1165 (nil))
    (nil))

(insn:HI 1167 1166 1168 52 ./CppStatUtilities.cc:470 (set (reg:DF 448)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 448))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1166 (nil))
    (nil))

(insn:HI 1168 1167 1169 52 ./CppStatUtilities.cc:470 (set (mem:DF (reg/f:DI 167 [ ivtmp.606 ]) [3 S8 A64])
        (reg:DF 448)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1167 (nil))
    (expr_list:REG_DEAD (reg:DF 448)
        (nil)))

(note:HI 1169 1168 1170 52 ("./CppStatUtilities.cc") 469)

(insn:HI 1170 1169 1171 52 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 163 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1171 1170 1450 52 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/f:DI 167 [ ivtmp.606 ])
                (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 52, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

;; Start of basic block 53, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
(code_label:HI 1450 1171 1196 53 445 "" [1 uses])

(note:HI 1196 1450 1186 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(note:HI 1186 1196 1187 53 ("./CppStatUtilities.cc") 470)

(insn:HI 1187 1186 1188 53 ./CppStatUtilities.cc:470 (set (reg:DF 451)
        (float:DF (reg/v:SI 163 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 1188 1187 1189 53 ./CppStatUtilities.cc:470 (set (reg:DF 451)
        (mult:DF (reg:DF 451)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1187 (nil))
    (nil))

(insn:HI 1189 1188 1190 53 ./CppStatUtilities.cc:470 (set (reg:DF 451)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 451))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1188 (nil))
    (nil))

(insn:HI 1190 1189 1191 53 ./CppStatUtilities.cc:470 (set (mem:DF (reg/f:DI 167 [ ivtmp.606 ]) [3 S8 A64])
        (reg:DF 451)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1189 (nil))
    (expr_list:REG_DEAD (reg:DF 451)
        (nil)))

(note:HI 1191 1190 1192 53 ("./CppStatUtilities.cc") 469)

(insn:HI 1192 1191 1193 53 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 163 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1193 1192 1449 53 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/f:DI 167 [ ivtmp.606 ])
                (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 53, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

;; Start of basic block 54, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
(code_label:HI 1449 1193 1218 54 444 "" [1 uses])

(note:HI 1218 1449 1208 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(note:HI 1208 1218 1209 54 ("./CppStatUtilities.cc") 470)

(insn:HI 1209 1208 1210 54 ./CppStatUtilities.cc:470 (set (reg:DF 454)
        (float:DF (reg/v:SI 163 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 1210 1209 1211 54 ./CppStatUtilities.cc:470 (set (reg:DF 454)
        (mult:DF (reg:DF 454)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1209 (nil))
    (nil))

(insn:HI 1211 1210 1212 54 ./CppStatUtilities.cc:470 (set (reg:DF 454)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 454))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1210 (nil))
    (nil))

(insn:HI 1212 1211 1213 54 ./CppStatUtilities.cc:470 (set (mem:DF (reg/f:DI 167 [ ivtmp.606 ]) [3 S8 A64])
        (reg:DF 454)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1211 (nil))
    (expr_list:REG_DEAD (reg:DF 454)
        (nil)))

(note:HI 1213 1212 1214 54 ("./CppStatUtilities.cc") 469)

(insn:HI 1214 1213 1215 54 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 163 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1215 1214 1216 54 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/f:DI 167 [ ivtmp.606 ])
                (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1216 1215 1217 54 ./CppStatUtilities.cc:469 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 163 [ i ])
            (reg/v:SI 91 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1214 (nil))
    (nil))

(jump_insn:HI 1217 1216 102 54 ./CppStatUtilities.cc:469 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 114)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1216 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 54, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

;; Start of basic block 55, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
(code_label:HI 102 1217 103 55 339 "" [2 uses])

(note:HI 103 102 104 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(note:HI 104 103 105 55 ("./CppStatUtilities.cc") 470)

(insn:HI 105 104 106 55 ./CppStatUtilities.cc:470 (set (reg:DF 164)
        (float:DF (reg/v:SI 163 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 106 105 107 55 ./CppStatUtilities.cc:470 (set (reg:DF 164)
        (mult:DF (reg:DF 164)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 105 (nil))
    (nil))

(insn:HI 107 106 108 55 ./CppStatUtilities.cc:470 (set (reg:DF 164)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 164))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 106 (nil))
    (nil))

(insn:HI 108 107 109 55 ./CppStatUtilities.cc:470 (set (mem:DF (reg/f:DI 167 [ ivtmp.606 ]) [3 S8 A64])
        (reg:DF 164)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 107 (nil))
    (expr_list:REG_DEAD (reg:DF 164)
        (nil)))

(note:HI 109 108 1348 55 ("./CppStatUtilities.cc") 469)

(insn:HI 1348 109 1230 55 ./CppStatUtilities.cc:469 (parallel [
            (set (reg:SI 161)
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1230 1348 1231 55 ("./CppStatUtilities.cc") 470)

(insn:HI 1231 1230 1232 55 ./CppStatUtilities.cc:470 (set (reg:DF 169)
        (float:DF (reg:SI 161))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 1348 (nil))
    (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn:HI 1232 1231 1233 55 ./CppStatUtilities.cc:470 (set (reg:DF 169)
        (mult:DF (reg:DF 169)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1231 (nil))
    (nil))

(insn:HI 1233 1232 1234 55 ./CppStatUtilities.cc:470 (set (reg:DF 169)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 169))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1232 (nil))
    (nil))

(insn:HI 1234 1233 1235 55 ./CppStatUtilities.cc:470 (set (mem:DF (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 169)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1233 (nil))
    (expr_list:REG_DEAD (reg:DF 169)
        (nil)))

(note:HI 1235 1234 1236 55 ("./CppStatUtilities.cc") 469)

(insn:HI 1236 1235 1247 55 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 173 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1247 1236 1248 55 ("./CppStatUtilities.cc") 470)

(insn:HI 1248 1247 1249 55 ./CppStatUtilities.cc:470 (set (reg:DF 174)
        (float:DF (reg/v:SI 173 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 1236 (nil))
    (expr_list:REG_DEAD (reg/v:SI 173 [ i ])
        (nil)))

(insn:HI 1249 1248 1250 55 ./CppStatUtilities.cc:470 (set (reg:DF 174)
        (mult:DF (reg:DF 174)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1248 (nil))
    (nil))

(insn:HI 1250 1249 1251 55 ./CppStatUtilities.cc:470 (set (reg:DF 174)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 174))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1249 (nil))
    (nil))

(insn:HI 1251 1250 1252 55 ./CppStatUtilities.cc:470 (set (mem:DF (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                (const_int 16 [0x10])) [3 S8 A64])
        (reg:DF 174)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1250 (nil))
    (expr_list:REG_DEAD (reg:DF 174)
        (nil)))

(note:HI 1252 1251 1253 55 ("./CppStatUtilities.cc") 469)

(insn:HI 1253 1252 1264 55 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 178 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1264 1253 1265 55 ("./CppStatUtilities.cc") 470)

(insn:HI 1265 1264 1266 55 ./CppStatUtilities.cc:470 (set (reg:DF 179)
        (float:DF (reg/v:SI 178 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 1253 (nil))
    (expr_list:REG_DEAD (reg/v:SI 178 [ i ])
        (nil)))

(insn:HI 1266 1265 1267 55 ./CppStatUtilities.cc:470 (set (reg:DF 179)
        (mult:DF (reg:DF 179)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1265 (nil))
    (nil))

(insn:HI 1267 1266 1268 55 ./CppStatUtilities.cc:470 (set (reg:DF 179)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 179))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1266 (nil))
    (nil))

(insn:HI 1268 1267 1269 55 ./CppStatUtilities.cc:470 (set (mem:DF (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                (const_int 24 [0x18])) [3 S8 A64])
        (reg:DF 179)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1267 (nil))
    (expr_list:REG_DEAD (reg:DF 179)
        (nil)))

(note:HI 1269 1268 1270 55 ("./CppStatUtilities.cc") 469)

(insn:HI 1270 1269 1281 55 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 183 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1281 1270 1282 55 ("./CppStatUtilities.cc") 470)

(insn:HI 1282 1281 1283 55 ./CppStatUtilities.cc:470 (set (reg:DF 184)
        (float:DF (reg/v:SI 183 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 1270 (nil))
    (expr_list:REG_DEAD (reg/v:SI 183 [ i ])
        (nil)))

(insn:HI 1283 1282 1284 55 ./CppStatUtilities.cc:470 (set (reg:DF 184)
        (mult:DF (reg:DF 184)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1282 (nil))
    (nil))

(insn:HI 1284 1283 1285 55 ./CppStatUtilities.cc:470 (set (reg:DF 184)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 184))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1283 (nil))
    (nil))

(insn:HI 1285 1284 1286 55 ./CppStatUtilities.cc:470 (set (mem:DF (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                (const_int 32 [0x20])) [3 S8 A64])
        (reg:DF 184)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1284 (nil))
    (expr_list:REG_DEAD (reg:DF 184)
        (nil)))

(note:HI 1286 1285 1287 55 ("./CppStatUtilities.cc") 469)

(insn:HI 1287 1286 1298 55 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 188 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1298 1287 1299 55 ("./CppStatUtilities.cc") 470)

(insn:HI 1299 1298 1300 55 ./CppStatUtilities.cc:470 (set (reg:DF 189)
        (float:DF (reg/v:SI 188 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 1287 (nil))
    (expr_list:REG_DEAD (reg/v:SI 188 [ i ])
        (nil)))

(insn:HI 1300 1299 1301 55 ./CppStatUtilities.cc:470 (set (reg:DF 189)
        (mult:DF (reg:DF 189)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1299 (nil))
    (nil))

(insn:HI 1301 1300 1302 55 ./CppStatUtilities.cc:470 (set (reg:DF 189)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 189))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1300 (nil))
    (nil))

(insn:HI 1302 1301 1303 55 ./CppStatUtilities.cc:470 (set (mem:DF (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                (const_int 40 [0x28])) [3 S8 A64])
        (reg:DF 189)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1301 (nil))
    (expr_list:REG_DEAD (reg:DF 189)
        (nil)))

(note:HI 1303 1302 1304 55 ("./CppStatUtilities.cc") 469)

(insn:HI 1304 1303 1315 55 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 193 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1315 1304 1316 55 ("./CppStatUtilities.cc") 470)

(insn:HI 1316 1315 1317 55 ./CppStatUtilities.cc:470 (set (reg:DF 194)
        (float:DF (reg/v:SI 193 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 1304 (nil))
    (expr_list:REG_DEAD (reg/v:SI 193 [ i ])
        (nil)))

(insn:HI 1317 1316 1318 55 ./CppStatUtilities.cc:470 (set (reg:DF 194)
        (mult:DF (reg:DF 194)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1316 (nil))
    (nil))

(insn:HI 1318 1317 1319 55 ./CppStatUtilities.cc:470 (set (reg:DF 194)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 194))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1317 (nil))
    (nil))

(insn:HI 1319 1318 1320 55 ./CppStatUtilities.cc:470 (set (mem:DF (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                (const_int 48 [0x30])) [3 S8 A64])
        (reg:DF 194)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1318 (nil))
    (expr_list:REG_DEAD (reg:DF 194)
        (nil)))

(note:HI 1320 1319 1321 55 ("./CppStatUtilities.cc") 469)

(insn:HI 1321 1320 1332 55 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 198 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1332 1321 1333 55 ("./CppStatUtilities.cc") 470)

(insn:HI 1333 1332 1334 55 ./CppStatUtilities.cc:470 (set (reg:DF 199)
        (float:DF (reg/v:SI 198 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 1321 (nil))
    (expr_list:REG_DEAD (reg/v:SI 198 [ i ])
        (nil)))

(insn:HI 1334 1333 1335 55 ./CppStatUtilities.cc:470 (set (reg:DF 199)
        (mult:DF (reg:DF 199)
            (reg/v:DF 70 [ dt ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1333 (nil))
    (nil))

(insn:HI 1335 1334 1336 55 ./CppStatUtilities.cc:470 (set (reg:DF 199)
        (plus:DF (reg:DF 63 [ pretmp.572 ])
            (reg:DF 199))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1334 (nil))
    (nil))

(insn:HI 1336 1335 1337 55 ./CppStatUtilities.cc:470 (set (mem:DF (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                (const_int 56 [0x38])) [3 S8 A64])
        (reg:DF 199)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1335 (nil))
    (expr_list:REG_DEAD (reg:DF 199)
        (nil)))

(note:HI 1337 1336 1338 55 ("./CppStatUtilities.cc") 469)

(insn:HI 1338 1337 1339 55 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/v:SI 163 [ i ])
                (plus:SI (reg/v:SI 163 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1339 1338 1340 55 ./CppStatUtilities.cc:469 (parallel [
            (set (reg/f:DI 167 [ ivtmp.606 ])
                (plus:DI (reg/f:DI 167 [ ivtmp.606 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1340 1339 1341 55 ./CppStatUtilities.cc:469 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 163 [ i ])
            (reg/v:SI 91 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1338 (nil))
    (nil))

(jump_insn:HI 1341 1340 1346 55 ./CppStatUtilities.cc:469 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 114)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1340 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 55, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

;; Start of basic block 56, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167
(note:HI 1346 1341 1421 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1421 1346 1422 56 (set (pc)
        (label_ref 102)) 548 {jump} (nil)
    (nil))
;; End of basic block 56, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 70 73 75 87 88 89 90 91 92 97 98 163 167

(barrier:HI 1422 1421 216)

(note:HI 216 1422 217 NOTE_INSN_FUNCTION_END)

(note:HI 217 216 0 ("./CppStatUtilities.cc") 494)


;; Function void hist(double*, int, int, double**, double**) (_Z4histPdiiPS_S0_)



Pass 0

  Register 58 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8853 MMX_REGS:8853 FP_TOP_SSE_REGS:8853 FP_SECOND_SSE_REGS:8853 FLOAT_SSE_REGS:8853 FLOAT_INT_REGS:6129 INT_SSE_REGS:8853 FLOAT_INT_SSE_REGS:8853 ALL_REGS:8853 MEM:2634
  Register 62 costs: AREG:24274 DREG:24274 CREG:24274 BREG:24274 SIREG:24274 DIREG:24274 AD_REGS:24274 Q_REGS:24274 NON_Q_REGS:24274 INDEX_REGS:24274 LEGACY_REGS:24274 GENERAL_REGS:24274 FP_TOP_REG:38978 FP_SECOND_REG:38978 FLOAT_REGS:38978 SSE_REGS:380 FP_TOP_SSE_REGS:38978 FP_SECOND_SSE_REGS:38978 FLOAT_SSE_REGS:38978 FLOAT_INT_REGS:38978 INT_SSE_REGS:24274 FLOAT_INT_SSE_REGS:38978 ALL_REGS:38978 MEM:13546
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 66 costs: AREG:24323 DREG:24323 CREG:24323 BREG:24323 SIREG:24323 DIREG:24323 AD_REGS:24323 Q_REGS:24323 NON_Q_REGS:24323 INDEX_REGS:24323 LEGACY_REGS:24323 GENERAL_REGS:24323 FP_TOP_REG:39291 FP_SECOND_REG:39291 FLOAT_REGS:39291 SSE_REGS:0 FP_TOP_SSE_REGS:39291 FP_SECOND_SSE_REGS:39291 FLOAT_SSE_REGS:39291 FLOAT_INT_REGS:39291 INT_SSE_REGS:24323 FLOAT_INT_SSE_REGS:39291 ALL_REGS:39291 MEM:13319
  Register 67 costs: AREG:46559 DREG:46559 CREG:46559 BREG:46559 SIREG:46559 DIREG:46559 AD_REGS:46559 Q_REGS:46559 NON_Q_REGS:48446 INDEX_REGS:46559 LEGACY_REGS:48446 GENERAL_REGS:48446 FP_TOP_REG:73527 FP_SECOND_REG:73527 FLOAT_REGS:73527 SSE_REGS:2736 FP_TOP_SSE_REGS:73527 FP_SECOND_SSE_REGS:73527 FLOAT_SSE_REGS:73527 FLOAT_INT_REGS:73527 INT_SSE_REGS:46559 FLOAT_INT_SSE_REGS:73527 ALL_REGS:75858 MEM:27321
  Register 68 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19643 MMX_REGS:19643 FP_TOP_SSE_REGS:19643 FP_SECOND_SSE_REGS:19643 FLOAT_SSE_REGS:19643 FLOAT_INT_REGS:13599 INT_SSE_REGS:19643 FLOAT_INT_SSE_REGS:19643 ALL_REGS:19643 MEM:5933
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7826 MMX_REGS:7826 FP_TOP_SSE_REGS:7826 FP_SECOND_SSE_REGS:7826 FLOAT_SSE_REGS:7826 FLOAT_INT_REGS:5418 INT_SSE_REGS:7826 FLOAT_INT_SSE_REGS:7826 ALL_REGS:7826 MEM:2408
  Register 71 costs: AREG:18057 DREG:18057 CREG:18057 BREG:18057 SIREG:18057 DIREG:18057 AD_REGS:18057 Q_REGS:18057 NON_Q_REGS:19944 INDEX_REGS:18057 LEGACY_REGS:19944 GENERAL_REGS:19944 FP_TOP_REG:29169 FP_SECOND_REG:29169 FLOAT_REGS:29169 SSE_REGS:0 FP_TOP_SSE_REGS:29169 FP_SECOND_SSE_REGS:29169 FLOAT_SSE_REGS:29169 FLOAT_INT_REGS:29169 INT_SSE_REGS:18057 FLOAT_INT_SSE_REGS:29169 ALL_REGS:31500 MEM:10167
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1200
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:222 INDEX_REGS:0 LEGACY_REGS:222 GENERAL_REGS:222 SSE_REGS:4329 MMX_REGS:4329 FP_TOP_SSE_REGS:4329 FP_SECOND_SSE_REGS:4329 FLOAT_SSE_REGS:4329 FLOAT_INT_REGS:2997 INT_SSE_REGS:4329 FLOAT_INT_SSE_REGS:4329 ALL_REGS:4329 MEM:1221
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9269 MMX_REGS:9269 FP_TOP_SSE_REGS:9269 FP_SECOND_SSE_REGS:9269 FLOAT_SSE_REGS:9269 FLOAT_INT_REGS:6417 INT_SSE_REGS:9269 FLOAT_INT_SSE_REGS:9269 ALL_REGS:9269 MEM:2540
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13611 MMX_REGS:13611 FP_TOP_SSE_REGS:13611 FP_SECOND_SSE_REGS:13611 FLOAT_SSE_REGS:13611 FLOAT_INT_REGS:9423 INT_SSE_REGS:13611 FLOAT_INT_SSE_REGS:13611 ALL_REGS:13611 MEM:3463
  Register 77 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17381 MMX_REGS:17381 INT_SSE_REGS:17381 MEM:4544
  Register 78 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 84 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:2886 INDEX_REGS:2886 LEGACY_REGS:2886 GENERAL_REGS:2886 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:4662 MEM:1665
  Register 87 costs: AREG:6500 DREG:6500 CREG:6500 BREG:6500 SIREG:6500 DIREG:6500 AD_REGS:6500 Q_REGS:6500 NON_Q_REGS:8200 INDEX_REGS:6500 LEGACY_REGS:8200 GENERAL_REGS:8200 FP_TOP_REG:10500 FP_SECOND_REG:10500 FLOAT_REGS:10500 SSE_REGS:0 FP_TOP_SSE_REGS:10500 FP_SECOND_SSE_REGS:10500 FLOAT_SSE_REGS:10500 FLOAT_INT_REGS:10500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:10500 ALL_REGS:12600 MEM:4400
  Register 91 costs: AREG:4100 DREG:4100 CREG:4100 BREG:4100 SIREG:4100 DIREG:4100 AD_REGS:4100 Q_REGS:4100 NON_Q_REGS:5800 INDEX_REGS:4100 LEGACY_REGS:5800 GENERAL_REGS:5800 FP_TOP_REG:6500 FP_SECOND_REG:6500 FLOAT_REGS:6500 SSE_REGS:200 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:6500 INT_SSE_REGS:4100 FLOAT_INT_SSE_REGS:6500 ALL_REGS:8600 MEM:3000
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 98 costs: AREG:1500 DREG:1500 CREG:1500 BREG:1500 SIREG:1500 DIREG:1500 AD_REGS:1500 Q_REGS:1500 NON_Q_REGS:3200 INDEX_REGS:1500 LEGACY_REGS:3200 GENERAL_REGS:3200 FP_TOP_REG:2300 FP_SECOND_REG:2300 FLOAT_REGS:2300 SSE_REGS:200 FP_TOP_SSE_REGS:2300 FP_SECOND_SSE_REGS:2300 FLOAT_SSE_REGS:2300 FLOAT_INT_REGS:2300 INT_SSE_REGS:1500 FLOAT_INT_SSE_REGS:2300 ALL_REGS:4400 MEM:1400
  Register 100 costs: AREG:2600 DREG:2600 CREG:2600 BREG:2600 SIREG:2600 DIREG:2600 AD_REGS:2600 Q_REGS:2600 NON_Q_REGS:6000 INDEX_REGS:2600 LEGACY_REGS:6000 GENERAL_REGS:6000 FP_TOP_REG:4200 FP_SECOND_REG:4200 FLOAT_REGS:4200 SSE_REGS:0 FP_TOP_SSE_REGS:4200 FP_SECOND_SSE_REGS:4200 FLOAT_SSE_REGS:4200 FLOAT_INT_REGS:4200 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:4200 ALL_REGS:8400 MEM:2400
  Register 102 costs: AREG:17670 DREG:17670 CREG:17670 BREG:17670 SIREG:17670 DIREG:17670 AD_REGS:17670 Q_REGS:17670 NON_Q_REGS:19370 INDEX_REGS:17670 LEGACY_REGS:19370 GENERAL_REGS:19370 FP_TOP_REG:27094 FP_SECOND_REG:27094 FLOAT_REGS:27094 SSE_REGS:2356 FP_TOP_SSE_REGS:27094 FP_SECOND_SSE_REGS:27094 FLOAT_SSE_REGS:27094 FLOAT_INT_REGS:27094 INT_SSE_REGS:17670 FLOAT_INT_SSE_REGS:27094 ALL_REGS:29194 MEM:12180
  Register 112 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6435 MMX_REGS:6435 FP_TOP_SSE_REGS:6435 FP_SECOND_SSE_REGS:6435 FLOAT_SSE_REGS:6435 FLOAT_INT_REGS:4455 INT_SSE_REGS:6435 FLOAT_INT_SSE_REGS:6435 ALL_REGS:6435 MEM:1645
  Register 122 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 124 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 125 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:40443 MMX_REGS:40443 FP_TOP_SSE_REGS:40443 FP_SECOND_SSE_REGS:40443 FLOAT_SSE_REGS:40443 FLOAT_INT_REGS:27999 INT_SSE_REGS:40443 FLOAT_INT_SSE_REGS:40443 ALL_REGS:40443 MEM:10230
  Register 126 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 129 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9998
  Register 131 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 136 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 140 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 141 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 146 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 151 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 155 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 156 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 160 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 161 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 165 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17498 MMX_REGS:17498 FP_TOP_SSE_REGS:17498 FP_SECOND_SSE_REGS:17498 FLOAT_SSE_REGS:17498 FLOAT_INT_REGS:12114 INT_SSE_REGS:17498 FLOAT_INT_SSE_REGS:17498 ALL_REGS:17498 MEM:4228
  Register 166 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25246 MMX_REGS:25246 FP_TOP_SSE_REGS:25246 FP_SECOND_SSE_REGS:25246 FLOAT_SSE_REGS:25246 FLOAT_INT_REGS:17478 INT_SSE_REGS:25246 FLOAT_INT_SSE_REGS:25246 ALL_REGS:25246 MEM:6914
  Register 167 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 171 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 172 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 174 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 176 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 179 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 183 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 184 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 186 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 188 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 191 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 195 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 196 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 198 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 200 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 203 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 207 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 208 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 210 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 212 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 213 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 214 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:54184 MMX_REGS:54184 FP_TOP_SSE_REGS:54184 FP_SECOND_SSE_REGS:54184 FLOAT_SSE_REGS:54184 FLOAT_INT_REGS:37512 INT_SSE_REGS:54184 FLOAT_INT_SSE_REGS:54184 ALL_REGS:54184 MEM:15300
  Register 215 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 219 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 223 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 227 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 231 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 235 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 239 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 243 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 245 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 247 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 249 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 251 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 253 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 255 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 257 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 259 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 263 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 264 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 266 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 268 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 269 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 273 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 274 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 276 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 278 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 279 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 283 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 284 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 286 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 288 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 291 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 292 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 295 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 298 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 301 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 304 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 307 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960

  Register 58 pref AREG, else GENERAL_REGS
  Register 61 pref GENERAL_REGS or none
  Register 62 pref SSE_REGS or none
  Register 65 pref GENERAL_REGS or none
  Register 66 pref SSE_REGS or none
  Register 67 pref SSE_REGS or none
  Register 68 pref AREG, else GENERAL_REGS
  Register 69 pref GENERAL_REGS or none
  Register 71 pref SSE_REGS or none
  Register 72 pref GENERAL_REGS or none
  Register 74 pref DIREG, else GENERAL_REGS
  Register 75 pref DIREG, else GENERAL_REGS
  Register 76 pref SIREG, else GENERAL_REGS
  Register 77 pref DREG, else GENERAL_REGS
  Register 78 pref CREG, else GENERAL_REGS
  Register 79 pref GENERAL_REGS or none
  Register 80 pref DIREG, else GENERAL_REGS
  Register 84 pref SSE_REGS or none
  Register 87 pref SSE_REGS or none
  Register 91 pref SSE_REGS or none
  Register 93 pref GENERAL_REGS or none
  Register 94 pref INDEX_REGS, else GENERAL_REGS
  Register 98 pref SSE_REGS or none
  Register 100 pref SSE_REGS or none
  Register 102 pref SSE_REGS or none
  Register 112 pref GENERAL_REGS or none
  Register 117 pref GENERAL_REGS or none
  Register 122 pref GENERAL_REGS or none
  Register 124 pref GENERAL_REGS or none
  Register 125 pref GENERAL_REGS or none
  Register 126 pref SSE_REGS or none
  Register 129 pref GENERAL_REGS or none
  Register 131 pref SSE_REGS or none
  Register 135 pref GENERAL_REGS or none
  Register 136 pref SSE_REGS or none
  Register 140 pref GENERAL_REGS or none
  Register 141 pref SSE_REGS or none
  Register 145 pref GENERAL_REGS or none
  Register 146 pref SSE_REGS or none
  Register 150 pref GENERAL_REGS or none
  Register 151 pref SSE_REGS or none
  Register 155 pref GENERAL_REGS or none
  Register 156 pref SSE_REGS or none
  Register 160 pref GENERAL_REGS or none
  Register 161 pref SSE_REGS or none
  Register 165 pref GENERAL_REGS or none
  Register 166 pref GENERAL_REGS or none
  Register 167 pref SSE_REGS or none
  Register 171 pref GENERAL_REGS or none
  Register 172 pref INDEX_REGS, else GENERAL_REGS
  Register 174 pref GENERAL_REGS or none
  Register 176 pref SSE_REGS or none
  Register 179 pref SSE_REGS or none
  Register 183 pref GENERAL_REGS or none
  Register 184 pref INDEX_REGS, else GENERAL_REGS
  Register 186 pref GENERAL_REGS or none
  Register 188 pref SSE_REGS or none
  Register 191 pref SSE_REGS or none
  Register 195 pref GENERAL_REGS or none
  Register 196 pref INDEX_REGS, else GENERAL_REGS
  Register 198 pref GENERAL_REGS or none
  Register 200 pref SSE_REGS or none
  Register 203 pref SSE_REGS or none
  Register 207 pref GENERAL_REGS or none
  Register 208 pref INDEX_REGS, else GENERAL_REGS
  Register 210 pref GENERAL_REGS or none
  Register 212 pref SSE_REGS or none
  Register 213 pref GENERAL_REGS or none
  Register 214 pref GENERAL_REGS or none
  Register 215 pref SSE_REGS or none
  Register 219 pref SSE_REGS or none
  Register 223 pref SSE_REGS or none
  Register 227 pref SSE_REGS or none
  Register 231 pref SSE_REGS or none
  Register 235 pref SSE_REGS or none
  Register 239 pref SSE_REGS or none
  Register 243 pref SSE_REGS or none
  Register 245 pref SSE_REGS or none
  Register 247 pref SSE_REGS or none
  Register 249 pref SSE_REGS or none
  Register 251 pref SSE_REGS or none
  Register 253 pref SSE_REGS or none
  Register 255 pref SSE_REGS or none
  Register 257 pref SSE_REGS or none
  Register 259 pref SSE_REGS or none
  Register 263 pref GENERAL_REGS or none
  Register 264 pref INDEX_REGS, else GENERAL_REGS
  Register 266 pref GENERAL_REGS or none
  Register 268 pref SSE_REGS or none
  Register 269 pref SSE_REGS or none
  Register 273 pref GENERAL_REGS or none
  Register 274 pref INDEX_REGS, else GENERAL_REGS
  Register 276 pref GENERAL_REGS or none
  Register 278 pref SSE_REGS or none
  Register 279 pref SSE_REGS or none
  Register 283 pref GENERAL_REGS or none
  Register 284 pref INDEX_REGS, else GENERAL_REGS
  Register 286 pref GENERAL_REGS or none
  Register 288 pref SSE_REGS or none
  Register 291 pref SSE_REGS or none
  Register 292 pref SSE_REGS or none
  Register 295 pref SSE_REGS or none
  Register 298 pref SSE_REGS or none
  Register 301 pref SSE_REGS or none
  Register 304 pref SSE_REGS or none
  Register 307 pref SSE_REGS or none


Pass 1

  Register 58 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8853 MMX_REGS:8853 FP_TOP_SSE_REGS:8853 FP_SECOND_SSE_REGS:8853 FLOAT_SSE_REGS:8853 FLOAT_INT_REGS:6129 INT_SSE_REGS:8853 FLOAT_INT_SSE_REGS:8853 ALL_REGS:8853 MEM:2634
  Register 62 costs: AREG:24274 DREG:24274 CREG:24274 BREG:24274 SIREG:24274 DIREG:24274 AD_REGS:24274 Q_REGS:24274 NON_Q_REGS:24274 INDEX_REGS:24274 LEGACY_REGS:24274 GENERAL_REGS:24274 FP_TOP_REG:38978 FP_SECOND_REG:38978 FLOAT_REGS:38978 SSE_REGS:380 FP_TOP_SSE_REGS:38978 FP_SECOND_SSE_REGS:38978 FLOAT_SSE_REGS:38978 FLOAT_INT_REGS:38978 INT_SSE_REGS:24274 FLOAT_INT_SSE_REGS:38978 ALL_REGS:38978 MEM:13546
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 66 costs: AREG:24323 DREG:24323 CREG:24323 BREG:24323 SIREG:24323 DIREG:24323 AD_REGS:24323 Q_REGS:24323 NON_Q_REGS:24323 INDEX_REGS:24323 LEGACY_REGS:24323 GENERAL_REGS:24323 FP_TOP_REG:39291 FP_SECOND_REG:39291 FLOAT_REGS:39291 SSE_REGS:0 FP_TOP_SSE_REGS:39291 FP_SECOND_SSE_REGS:39291 FLOAT_SSE_REGS:39291 FLOAT_INT_REGS:39291 INT_SSE_REGS:24323 FLOAT_INT_SSE_REGS:39291 ALL_REGS:39291 MEM:13319
  Register 67 costs: AREG:46559 DREG:46559 CREG:46559 BREG:46559 SIREG:46559 DIREG:46559 AD_REGS:46559 Q_REGS:46559 NON_Q_REGS:48446 INDEX_REGS:46559 LEGACY_REGS:48446 GENERAL_REGS:48446 FP_TOP_REG:73527 FP_SECOND_REG:73527 FLOAT_REGS:73527 SSE_REGS:2736 FP_TOP_SSE_REGS:73527 FP_SECOND_SSE_REGS:73527 FLOAT_SSE_REGS:73527 FLOAT_INT_REGS:73527 INT_SSE_REGS:46559 FLOAT_INT_SSE_REGS:73527 ALL_REGS:75858 MEM:27321
  Register 68 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19643 MMX_REGS:19643 FP_TOP_SSE_REGS:19643 FP_SECOND_SSE_REGS:19643 FLOAT_SSE_REGS:19643 FLOAT_INT_REGS:13599 INT_SSE_REGS:19643 FLOAT_INT_SSE_REGS:19643 ALL_REGS:19643 MEM:5933
  Register 69 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7826 MMX_REGS:7826 FP_TOP_SSE_REGS:7826 FP_SECOND_SSE_REGS:7826 FLOAT_SSE_REGS:7826 FLOAT_INT_REGS:5418 INT_SSE_REGS:7826 FLOAT_INT_SSE_REGS:7826 ALL_REGS:7826 MEM:2408
  Register 71 costs: AREG:18057 DREG:18057 CREG:18057 BREG:18057 SIREG:18057 DIREG:18057 AD_REGS:18057 Q_REGS:18057 NON_Q_REGS:19944 INDEX_REGS:18057 LEGACY_REGS:19944 GENERAL_REGS:19944 FP_TOP_REG:29169 FP_SECOND_REG:29169 FLOAT_REGS:29169 SSE_REGS:0 FP_TOP_SSE_REGS:29169 FP_SECOND_SSE_REGS:29169 FLOAT_SSE_REGS:29169 FLOAT_INT_REGS:29169 INT_SSE_REGS:18057 FLOAT_INT_SSE_REGS:29169 ALL_REGS:31500 MEM:10167
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1200
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:222 INDEX_REGS:0 LEGACY_REGS:222 GENERAL_REGS:222 SSE_REGS:4329 MMX_REGS:4329 FP_TOP_SSE_REGS:4329 FP_SECOND_SSE_REGS:4329 FLOAT_SSE_REGS:4329 FLOAT_INT_REGS:2997 INT_SSE_REGS:4329 FLOAT_INT_SSE_REGS:4329 ALL_REGS:4329 MEM:1221
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9269 MMX_REGS:9269 FP_TOP_SSE_REGS:9269 FP_SECOND_SSE_REGS:9269 FLOAT_SSE_REGS:9269 FLOAT_INT_REGS:6417 INT_SSE_REGS:9269 FLOAT_INT_SSE_REGS:9269 ALL_REGS:9269 MEM:2540
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13611 MMX_REGS:13611 FP_TOP_SSE_REGS:13611 FP_SECOND_SSE_REGS:13611 FLOAT_SSE_REGS:13611 FLOAT_INT_REGS:9423 INT_SSE_REGS:13611 FLOAT_INT_SSE_REGS:13611 ALL_REGS:13611 MEM:3463
  Register 77 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17381 MMX_REGS:17381 INT_SSE_REGS:17381 MEM:4544
  Register 78 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 84 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:2886 INDEX_REGS:2886 LEGACY_REGS:2886 GENERAL_REGS:2886 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:4662 MEM:1665
  Register 87 costs: AREG:6500 DREG:6500 CREG:6500 BREG:6500 SIREG:6500 DIREG:6500 AD_REGS:6500 Q_REGS:6500 NON_Q_REGS:8200 INDEX_REGS:6500 LEGACY_REGS:8200 GENERAL_REGS:8200 FP_TOP_REG:10500 FP_SECOND_REG:10500 FLOAT_REGS:10500 SSE_REGS:0 FP_TOP_SSE_REGS:10500 FP_SECOND_SSE_REGS:10500 FLOAT_SSE_REGS:10500 FLOAT_INT_REGS:10500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:10500 ALL_REGS:12600 MEM:4400
  Register 91 costs: AREG:4100 DREG:4100 CREG:4100 BREG:4100 SIREG:4100 DIREG:4100 AD_REGS:4100 Q_REGS:4100 NON_Q_REGS:5800 INDEX_REGS:4100 LEGACY_REGS:5800 GENERAL_REGS:5800 FP_TOP_REG:6500 FP_SECOND_REG:6500 FLOAT_REGS:6500 SSE_REGS:200 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:6500 INT_SSE_REGS:4100 FLOAT_INT_SSE_REGS:6500 ALL_REGS:8600 MEM:3000
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 98 costs: AREG:1500 DREG:1500 CREG:1500 BREG:1500 SIREG:1500 DIREG:1500 AD_REGS:1500 Q_REGS:1500 NON_Q_REGS:3200 INDEX_REGS:1500 LEGACY_REGS:3200 GENERAL_REGS:3200 FP_TOP_REG:2300 FP_SECOND_REG:2300 FLOAT_REGS:2300 SSE_REGS:200 FP_TOP_SSE_REGS:2300 FP_SECOND_SSE_REGS:2300 FLOAT_SSE_REGS:2300 FLOAT_INT_REGS:2300 INT_SSE_REGS:1500 FLOAT_INT_SSE_REGS:2300 ALL_REGS:4400 MEM:1400
  Register 100 costs: AREG:2600 DREG:2600 CREG:2600 BREG:2600 SIREG:2600 DIREG:2600 AD_REGS:2600 Q_REGS:2600 NON_Q_REGS:6000 INDEX_REGS:2600 LEGACY_REGS:6000 GENERAL_REGS:6000 FP_TOP_REG:4200 FP_SECOND_REG:4200 FLOAT_REGS:4200 SSE_REGS:0 FP_TOP_SSE_REGS:4200 FP_SECOND_SSE_REGS:4200 FLOAT_SSE_REGS:4200 FLOAT_INT_REGS:4200 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:4200 ALL_REGS:8400 MEM:2400
  Register 102 costs: AREG:17670 DREG:17670 CREG:17670 BREG:17670 SIREG:17670 DIREG:17670 AD_REGS:17670 Q_REGS:17670 NON_Q_REGS:19370 INDEX_REGS:17670 LEGACY_REGS:19370 GENERAL_REGS:19370 FP_TOP_REG:27094 FP_SECOND_REG:27094 FLOAT_REGS:27094 SSE_REGS:2356 FP_TOP_SSE_REGS:27094 FP_SECOND_SSE_REGS:27094 FLOAT_SSE_REGS:27094 FLOAT_INT_REGS:27094 INT_SSE_REGS:17670 FLOAT_INT_SSE_REGS:27094 ALL_REGS:29194 MEM:12180
  Register 112 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6435 MMX_REGS:6435 FP_TOP_SSE_REGS:6435 FP_SECOND_SSE_REGS:6435 FLOAT_SSE_REGS:6435 FLOAT_INT_REGS:4455 INT_SSE_REGS:6435 FLOAT_INT_SSE_REGS:6435 ALL_REGS:6435 MEM:1645
  Register 122 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 124 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 125 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:40443 MMX_REGS:40443 FP_TOP_SSE_REGS:40443 FP_SECOND_SSE_REGS:40443 FLOAT_SSE_REGS:40443 FLOAT_INT_REGS:27999 INT_SSE_REGS:40443 FLOAT_INT_SSE_REGS:40443 ALL_REGS:40443 MEM:10230
  Register 126 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 129 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9998
  Register 131 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 136 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 140 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 141 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 146 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 151 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 155 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 156 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 160 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 161 costs: AREG:6565 DREG:6565 CREG:6565 BREG:6565 SIREG:6565 DIREG:6565 AD_REGS:6565 Q_REGS:6565 NON_Q_REGS:8282 INDEX_REGS:6565 LEGACY_REGS:8282 GENERAL_REGS:8282 FP_TOP_REG:10605 FP_SECOND_REG:10605 FLOAT_REGS:10605 SSE_REGS:0 FP_TOP_SSE_REGS:10605 FP_SECOND_SSE_REGS:10605 FLOAT_SSE_REGS:10605 FLOAT_INT_REGS:10605 INT_SSE_REGS:6565 FLOAT_INT_SSE_REGS:10605 ALL_REGS:12726 MEM:4444
  Register 165 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17498 MMX_REGS:17498 FP_TOP_SSE_REGS:17498 FP_SECOND_SSE_REGS:17498 FLOAT_SSE_REGS:17498 FLOAT_INT_REGS:12114 INT_SSE_REGS:17498 FLOAT_INT_SSE_REGS:17498 ALL_REGS:17498 MEM:4228
  Register 166 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25246 MMX_REGS:25246 FP_TOP_SSE_REGS:25246 FP_SECOND_SSE_REGS:25246 FLOAT_SSE_REGS:25246 FLOAT_INT_REGS:17478 INT_SSE_REGS:25246 FLOAT_INT_SSE_REGS:25246 ALL_REGS:25246 MEM:6914
  Register 167 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 171 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 172 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 174 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 176 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 179 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 183 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 184 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 186 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 188 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 191 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 195 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 196 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 198 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 200 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 203 costs: AREG:8282 DREG:8282 CREG:8282 BREG:8282 SIREG:8282 DIREG:8282 AD_REGS:8282 Q_REGS:8282 NON_Q_REGS:11716 INDEX_REGS:8282 LEGACY_REGS:11716 GENERAL_REGS:11716 FP_TOP_REG:13130 FP_SECOND_REG:13130 FLOAT_REGS:13130 SSE_REGS:404 FP_TOP_SSE_REGS:13130 FP_SECOND_SSE_REGS:13130 FLOAT_SSE_REGS:13130 FLOAT_INT_REGS:13130 INT_SSE_REGS:8282 FLOAT_INT_SSE_REGS:13130 ALL_REGS:17372 MEM:6060
  Register 207 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 INT_SSE_REGS:5252 MEM:1414
  Register 208 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1616
  Register 210 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7878 MMX_REGS:7878 FP_TOP_SSE_REGS:7878 FP_SECOND_SSE_REGS:7878 FLOAT_SSE_REGS:7878 FLOAT_INT_REGS:5454 INT_SSE_REGS:7878 FLOAT_INT_SSE_REGS:7878 ALL_REGS:7878 MEM:2424
  Register 212 costs: AREG:3030 DREG:3030 CREG:3030 BREG:3030 SIREG:3030 DIREG:3030 AD_REGS:3030 Q_REGS:3030 NON_Q_REGS:6464 INDEX_REGS:3030 LEGACY_REGS:6464 GENERAL_REGS:6464 FP_TOP_REG:4646 FP_SECOND_REG:4646 FLOAT_REGS:4646 SSE_REGS:404 FP_TOP_SSE_REGS:4646 FP_SECOND_SSE_REGS:4646 FLOAT_SSE_REGS:4646 FLOAT_INT_REGS:4646 INT_SSE_REGS:3030 FLOAT_INT_SSE_REGS:4646 ALL_REGS:8888 MEM:2828
  Register 213 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 214 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:54184 MMX_REGS:54184 FP_TOP_SSE_REGS:54184 FP_SECOND_SSE_REGS:54184 FLOAT_SSE_REGS:54184 FLOAT_INT_REGS:37512 INT_SSE_REGS:54184 FLOAT_INT_SSE_REGS:54184 ALL_REGS:54184 MEM:15300
  Register 215 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 219 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 223 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 227 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 231 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 235 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 239 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 243 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 245 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 247 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 249 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 251 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 253 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 255 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 257 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 259 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 263 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 264 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 266 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 268 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 269 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 273 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 274 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 276 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 278 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 279 costs: AREG:3690 DREG:3690 CREG:3690 BREG:3690 SIREG:3690 DIREG:3690 AD_REGS:3690 Q_REGS:3690 NON_Q_REGS:5220 INDEX_REGS:3690 LEGACY_REGS:5220 GENERAL_REGS:5220 FP_TOP_REG:5850 FP_SECOND_REG:5850 FLOAT_REGS:5850 SSE_REGS:180 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:5850 INT_SSE_REGS:3690 FLOAT_INT_SSE_REGS:5850 ALL_REGS:7740 MEM:2700
  Register 283 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 INT_SSE_REGS:2340 MEM:630
  Register 284 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:180 INDEX_REGS:0 LEGACY_REGS:180 GENERAL_REGS:180 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:720
  Register 286 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3510 MMX_REGS:3510 FP_TOP_SSE_REGS:3510 FP_SECOND_SSE_REGS:3510 FLOAT_SSE_REGS:3510 FLOAT_INT_REGS:2430 INT_SSE_REGS:3510 FLOAT_INT_SSE_REGS:3510 ALL_REGS:3510 MEM:1080
  Register 288 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 291 costs: AREG:1350 DREG:1350 CREG:1350 BREG:1350 SIREG:1350 DIREG:1350 AD_REGS:1350 Q_REGS:1350 NON_Q_REGS:2880 INDEX_REGS:1350 LEGACY_REGS:2880 GENERAL_REGS:2880 FP_TOP_REG:2070 FP_SECOND_REG:2070 FLOAT_REGS:2070 SSE_REGS:180 FP_TOP_SSE_REGS:2070 FP_SECOND_SSE_REGS:2070 FLOAT_SSE_REGS:2070 FLOAT_INT_REGS:2070 INT_SSE_REGS:1350 FLOAT_INT_SSE_REGS:2070 ALL_REGS:3960 MEM:1260
  Register 292 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 295 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 298 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 301 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 304 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 307 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960

  Register 69 pref AREG, else GENERAL_REGS
312 registers.

Register 58 used 2 times across 2 insns in block 0; set 1 time; pref AREG, else GENERAL_REGS; pointer.

Register 61 used 7 times across 251 insns; set 1 time; crosses 8 calls; GENERAL_REGS or none; pointer.

Register 62 used 19 times across 114 insns; set 2 times; dies in 0 places; SSE_REGS or none.

Register 65 used 2 times across 2 insns in block 30; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 66 used 19 times across 94 insns; set 2 times; user var; dies in 0 places; SSE_REGS or none.

Register 67 used 31 times across 234 insns; set 3 times; user var; crosses 10 calls; SSE_REGS or none.

Register 68 used 11 times across 315 insns; set 1 time; user var; crosses 8 calls; pref AREG, else GENERAL_REGS; pointer.

Register 69 used 6 times across 318 insns; set 1 time; user var; crosses 9 calls; pref AREG, else GENERAL_REGS; pointer.

Register 71 used 11 times across 234 insns; set 1 time; user var; dies in 0 places; crosses 11 calls; SSE_REGS or none.

Register 72 used 3 times across 3 insns in block 21; set 1 time; GENERAL_REGS or none.

Register 74 used 3 times across 8 insns in block 0; set 1 time; crosses 1 call; pref DIREG, else GENERAL_REGS.

Register 75 used 7 times across 177 insns; set 1 time; user var; crosses 6 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 76 used 9 times across 242 insns; set 1 time; user var; crosses 12 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 77 used 13 times across 333 insns; set 1 time; user var; dies in 0 places; crosses 12 calls; 4 bytes; pref DREG, else GENERAL_REGS.

Register 78 used 2 times across 333 insns; set 1 time; user var; crosses 12 calls; pref CREG, else GENERAL_REGS; pointer.

Register 79 used 2 times across 333 insns; set 1 time; user var; crosses 12 calls; GENERAL_REGS or none; pointer.

Register 80 used 2 times across 2 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 84 used 2 times across 2 insns in block 0; set 1 time; SSE_REGS or none.

Register 87 used 6 times across 12 insns in block 30; set 3 times; SSE_REGS or none.

Register 91 used 4 times across 4 insns in block 21; set 2 times; SSE_REGS or none.

Register 93 used 2 times across 2 insns in block 21; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 94 used 2 times across 2 insns in block 21; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 98 used 2 times across 2 insns in block 21; set 1 time; SSE_REGS or none.

Register 100 used 4 times across 4 insns in block 4; set 2 times; SSE_REGS or none.

Register 102 used 9 times across 196 insns; set 1 time; dies in 0 places; crosses 8 calls; SSE_REGS or none.

Register 112 used 10 times across 23 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 117 used 6 times across 21 insns; set 2 times; crosses 1 call; 4 bytes; GENERAL_REGS or none.

Register 122 used 10 times across 24 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 124 used 2 times across 2 insns in block 45; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 125 used 33 times across 218 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 126 used 6 times across 6 insns in block 45; set 3 times; SSE_REGS or none.

Register 129 used 30 times across 107 insns; set 9 times; dies in 0 places; GENERAL_REGS or none; pointer.

Register 131 used 6 times across 6 insns in block 45; set 3 times; SSE_REGS or none.

Register 135 used 2 times across 2 insns in block 45; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 136 used 6 times across 6 insns in block 45; set 3 times; SSE_REGS or none.

Register 140 used 2 times across 2 insns in block 45; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 141 used 6 times across 6 insns in block 45; set 3 times; SSE_REGS or none.

Register 145 used 2 times across 2 insns in block 45; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 146 used 6 times across 6 insns in block 45; set 3 times; SSE_REGS or none.

Register 150 used 2 times across 2 insns in block 45; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 151 used 6 times across 6 insns in block 45; set 3 times; SSE_REGS or none.

Register 155 used 2 times across 2 insns in block 45; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 156 used 6 times across 6 insns in block 45; set 3 times; SSE_REGS or none.

Register 160 used 2 times across 2 insns in block 45; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 161 used 6 times across 6 insns in block 45; set 3 times; SSE_REGS or none.

Register 165 used 11 times across 160 insns; set 5 times; user var; dies in 0 places; crosses 6 calls; 4 bytes; GENERAL_REGS or none.

Register 166 used 14 times across 78 insns; set 5 times; dies in 0 places; crosses 6 calls; GENERAL_REGS or none; pointer.

Register 167 used 4 times across 4 insns in block 28; set 2 times; SSE_REGS or none.

Register 171 used 2 times across 2 insns in block 28; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 172 used 2 times across 2 insns in block 28; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 174 used 3 times across 3 insns in block 28; set 1 time; GENERAL_REGS or none.

Register 176 used 2 times across 2 insns in block 28; set 1 time; SSE_REGS or none.

Register 179 used 4 times across 4 insns in block 28; set 2 times; SSE_REGS or none.

Register 183 used 2 times across 2 insns in block 28; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 184 used 2 times across 2 insns in block 28; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 186 used 3 times across 3 insns in block 28; set 1 time; GENERAL_REGS or none.

Register 188 used 2 times across 2 insns in block 28; set 1 time; SSE_REGS or none.

Register 191 used 4 times across 4 insns in block 28; set 2 times; SSE_REGS or none.

Register 195 used 2 times across 2 insns in block 28; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 196 used 2 times across 2 insns in block 28; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 198 used 3 times across 3 insns in block 28; set 1 time; GENERAL_REGS or none.

Register 200 used 2 times across 2 insns in block 28; set 1 time; SSE_REGS or none.

Register 203 used 4 times across 4 insns in block 28; set 2 times; SSE_REGS or none.

Register 207 used 2 times across 2 insns in block 28; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 208 used 2 times across 2 insns in block 28; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 210 used 3 times across 3 insns in block 28; set 1 time; GENERAL_REGS or none.

Register 212 used 2 times across 2 insns in block 28; set 1 time; SSE_REGS or none.

Register 213 used 19 times across 176 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 214 used 44 times across 86 insns; set 9 times; dies in 0 places; GENERAL_REGS or none; pointer.

Register 215 used 4 times across 4 insns in block 19; set 2 times; SSE_REGS or none.

Register 219 used 4 times across 4 insns in block 19; set 2 times; SSE_REGS or none.

Register 223 used 4 times across 4 insns in block 19; set 2 times; SSE_REGS or none.

Register 227 used 4 times across 4 insns in block 19; set 2 times; SSE_REGS or none.

Register 231 used 4 times across 4 insns in block 19; set 2 times; SSE_REGS or none.

Register 235 used 4 times across 4 insns in block 19; set 2 times; SSE_REGS or none.

Register 239 used 4 times across 4 insns in block 19; set 2 times; SSE_REGS or none.

Register 243 used 4 times across 4 insns in block 19; set 2 times; SSE_REGS or none.

Register 245 used 4 times across 4 insns in block 12; set 2 times; SSE_REGS or none.

Register 247 used 4 times across 4 insns in block 13; set 2 times; SSE_REGS or none.

Register 249 used 4 times across 4 insns in block 14; set 2 times; SSE_REGS or none.

Register 251 used 4 times across 4 insns in block 15; set 2 times; SSE_REGS or none.

Register 253 used 4 times across 4 insns in block 16; set 2 times; SSE_REGS or none.

Register 255 used 4 times across 4 insns in block 17; set 2 times; SSE_REGS or none.

Register 257 used 4 times across 4 insns in block 18; set 2 times; SSE_REGS or none.

Register 259 used 4 times across 4 insns in block 25; set 2 times; SSE_REGS or none.

Register 263 used 2 times across 2 insns in block 25; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 264 used 2 times across 2 insns in block 25; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 266 used 3 times across 3 insns in block 25; set 1 time; GENERAL_REGS or none.

Register 268 used 2 times across 2 insns in block 25; set 1 time; SSE_REGS or none.

Register 269 used 4 times across 4 insns in block 26; set 2 times; SSE_REGS or none.

Register 273 used 2 times across 2 insns in block 26; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 274 used 2 times across 2 insns in block 26; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 276 used 3 times across 3 insns in block 26; set 1 time; GENERAL_REGS or none.

Register 278 used 2 times across 2 insns in block 26; set 1 time; SSE_REGS or none.

Register 279 used 4 times across 4 insns in block 27; set 2 times; SSE_REGS or none.

Register 283 used 2 times across 2 insns in block 27; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 284 used 2 times across 2 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 286 used 3 times across 3 insns in block 27; set 1 time; GENERAL_REGS or none.

Register 288 used 2 times across 2 insns in block 27; set 1 time; SSE_REGS or none.

Register 291 used 2 times across 2 insns in block 38; set 1 time; SSE_REGS or none.

Register 292 used 6 times across 6 insns in block 39; set 3 times; SSE_REGS or none.

Register 295 used 6 times across 6 insns in block 40; set 3 times; SSE_REGS or none.

Register 298 used 6 times across 6 insns in block 41; set 3 times; SSE_REGS or none.

Register 301 used 6 times across 6 insns in block 42; set 3 times; SSE_REGS or none.

Register 304 used 6 times across 6 insns in block 43; set 3 times; SSE_REGS or none.

Register 307 used 6 times across 6 insns in block 44; set 3 times; SSE_REGS or none.

47 basic blocks, 77 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  1 [10.0%]  (fallthru) 30 [90.0%] 
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  44 [10.0%]  45 [10.0%]  (loop_exit) 30 [10.0%]  0 [10.0%]  (fallthru)
Successors:  2 [10.0%]  (fallthru) 21 [90.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79
Invalid sum of incoming frequencies 402, should be 1111

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  27 [10.0%]  28 [10.0%]  (loop_exit) 21 [10.0%]  1 [10.0%]  (fallthru)
Successors:  3 [10.0%]  (fallthru) 4 [90.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 76 77 78 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79
Invalid sum of incoming frequencies 504, should be 1111

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  18 [10.0%]  19 [10.0%]  (loop_exit) 4 [10.0%]  2 [10.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 78 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  2 [90.0%] 
Successors:  5 [90.0%]  (fallthru,dfs_back) 3 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  4 [90.0%]  (fallthru,dfs_back)
Successors:  6 [87.5%]  (fallthru) 19 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
Invalid sum of incoming frequencies 900, should be 771

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  5 [87.5%]  (fallthru)
Successors:  7 [85.7%]  (fallthru) 18 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  6 [85.7%]  (fallthru)
Successors:  8 [83.3%]  (fallthru) 17 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  7 [83.3%]  (fallthru)
Successors:  9 [80.0%]  (fallthru) 16 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  8 [80.0%]  (fallthru)
Successors:  10 [75.0%]  (fallthru) 15 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  9 [75.0%]  (fallthru)
Successors:  11 [66.7%]  (fallthru) 14 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  10 [66.7%]  (fallthru)
Successors:  12 [50.0%]  (fallthru) 13 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 213 214
Invalid sum of incoming frequencies 300, should be 900

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Invalid sum of incoming frequencies 450, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 11 [50.0%] 
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Invalid sum of incoming frequencies 1350, should be 900

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 10 [33.3%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Invalid sum of incoming frequencies 1050, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 9 [25.0%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Invalid sum of incoming frequencies 1050, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 8 [20.0%] 
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Invalid sum of incoming frequencies 1035, should be 900

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 7 [16.7%] 
Successors:  18 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Invalid sum of incoming frequencies 1020, should be 900

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 6 [14.3%] 
Successors:  19 [90.0%]  (fallthru,dfs_back) 3 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Invalid sum of incoming frequencies 1007, should be 900

Basic block 19 prev 18, next 20, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  18 [90.0%]  (fallthru,dfs_back) 20 [100.0%]  5 [12.5%] 
Successors:  20 [90.0%]  (fallthru,dfs_back) 3 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 20 prev 19, next 21, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  19 [90.0%]  (fallthru,dfs_back)
Successors:  19 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  1 [90.0%] 
Successors:  22 [90.0%]  (fallthru,dfs_back) 2 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  21 [90.0%]  (fallthru,dfs_back)
Successors:  23 [75.0%]  (fallthru) 28 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166
Invalid sum of incoming frequencies 900, should be 600

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  22 [75.0%]  (fallthru)
Successors:  24 [66.7%]  (fallthru) 27 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  23 [66.7%]  (fallthru)
Successors:  25 [50.0%]  (fallthru) 26 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 165 166
Invalid sum of incoming frequencies 300, should be 900

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  24 [50.0%]  (fallthru)
Successors:  26 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
Invalid sum of incoming frequencies 450, should be 900

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  25 [100.0%]  (fallthru) 24 [50.0%] 
Successors:  27 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
Invalid sum of incoming frequencies 1350, should be 900

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  26 [100.0%]  (fallthru) 23 [33.3%] 
Successors:  28 [90.0%]  (fallthru,dfs_back) 2 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
Invalid sum of incoming frequencies 1050, should be 900

Basic block 28 prev 27, next 29, loop_depth 1, count 0, freq 2025, maybe hot.
Predecessors:  27 [90.0%]  (fallthru,dfs_back) 29 [100.0%]  22 [25.0%] 
Successors:  29 [90.0%]  (fallthru,dfs_back) 2 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
Invalid sum of incoming frequencies 2783, should be 2025

Basic block 29 prev 28, next 30, loop_depth 1, count 0, freq 1823, maybe hot.
Predecessors:  28 [90.0%]  (fallthru,dfs_back)
Successors:  28 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166

Basic block 30 prev 29, next 31, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  31 [90.0%]  (fallthru,dfs_back) 1 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  30 [90.0%]  (fallthru,dfs_back)
Successors:  32 [87.5%]  (fallthru) 45 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
Invalid sum of incoming frequencies 900, should be 771

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  31 [87.5%]  (fallthru)
Successors:  33 [85.7%]  (fallthru) 44 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  32 [85.7%]  (fallthru)
Successors:  34 [83.3%]  (fallthru) 43 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  33 [83.3%]  (fallthru)
Successors:  35 [80.0%]  (fallthru) 42 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  34 [80.0%]  (fallthru)
Successors:  36 [75.0%]  (fallthru) 41 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  35 [75.0%]  (fallthru)
Successors:  37 [66.7%]  (fallthru) 40 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

Basic block 37 prev 36, next 38, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  36 [66.7%]  (fallthru)
Successors:  38 [50.0%]  (fallthru) 39 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Invalid sum of incoming frequencies 300, should be 900

Basic block 38 prev 37, next 39, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  37 [50.0%]  (fallthru)
Successors:  39 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Invalid sum of incoming frequencies 450, should be 900

Basic block 39 prev 38, next 40, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  38 [100.0%]  (fallthru) 37 [50.0%] 
Successors:  40 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Invalid sum of incoming frequencies 1350, should be 900

Basic block 40 prev 39, next 41, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  39 [100.0%]  (fallthru) 36 [33.3%] 
Successors:  41 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Invalid sum of incoming frequencies 1050, should be 900

Basic block 41 prev 40, next 42, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  40 [100.0%]  (fallthru) 35 [25.0%] 
Successors:  42 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Invalid sum of incoming frequencies 1050, should be 900

Basic block 42 prev 41, next 43, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  41 [100.0%]  (fallthru) 34 [20.0%] 
Successors:  43 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Invalid sum of incoming frequencies 1035, should be 900

Basic block 43 prev 42, next 44, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  42 [100.0%]  (fallthru) 33 [16.7%] 
Successors:  44 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Invalid sum of incoming frequencies 1020, should be 900

Basic block 44 prev 43, next 45, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  43 [100.0%]  (fallthru) 32 [14.3%] 
Successors:  45 [90.0%]  (fallthru,dfs_back) 1 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Invalid sum of incoming frequencies 1007, should be 900

Basic block 45 prev 44, next 46, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  44 [90.0%]  (fallthru,dfs_back) 46 [100.0%]  31 [12.5%] 
Successors:  46 [90.0%]  (fallthru,dfs_back) 1 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 46 prev 45, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  45 [90.0%]  (fallthru,dfs_back)
Successors:  45 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

;; Register 58 in 0.
;; Register 65 in 0.
;; Register 72 in 0.
;; Register 74 in 3.
;; Register 80 in 5.
;; Register 84 in 21.
;; Register 87 in 21.
;; Register 91 in 21.
;; Register 93 in 0.
;; Register 94 in 0.
;; Register 98 in 21.
;; Register 100 in 21.
;; Register 124 in 0.
;; Register 126 in 21.
;; Register 131 in 21.
;; Register 135 in 0.
;; Register 136 in 21.
;; Register 140 in 0.
;; Register 141 in 21.
;; Register 145 in 0.
;; Register 146 in 21.
;; Register 150 in 0.
;; Register 151 in 21.
;; Register 155 in 0.
;; Register 156 in 21.
;; Register 160 in 0.
;; Register 161 in 21.
;; Register 167 in 21.
;; Register 171 in 0.
;; Register 172 in 0.
;; Register 174 in 0.
;; Register 176 in 21.
;; Register 179 in 21.
;; Register 183 in 0.
;; Register 184 in 0.
;; Register 186 in 0.
;; Register 188 in 21.
;; Register 191 in 21.
;; Register 195 in 0.
;; Register 196 in 0.
;; Register 198 in 0.
;; Register 200 in 21.
;; Register 203 in 21.
;; Register 207 in 0.
;; Register 208 in 0.
;; Register 210 in 0.
;; Register 212 in 21.
;; Register 215 in 21.
;; Register 219 in 21.
;; Register 223 in 21.
;; Register 227 in 21.
;; Register 231 in 21.
;; Register 235 in 21.
;; Register 239 in 21.
;; Register 243 in 21.
;; Register 245 in 21.
;; Register 247 in 21.
;; Register 249 in 21.
;; Register 251 in 21.
;; Register 253 in 21.
;; Register 255 in 21.
;; Register 257 in 21.
;; Register 259 in 21.
;; Register 263 in 0.
;; Register 264 in 0.
;; Register 266 in 0.
;; Register 268 in 21.
;; Register 269 in 21.
;; Register 273 in 0.
;; Register 274 in 0.
;; Register 276 in 0.
;; Register 278 in 21.
;; Register 279 in 21.
;; Register 283 in 0.
;; Register 284 in 0.
;; Register 286 in 0.
;; Register 288 in 21.
;; Register 291 in 21.
;; Register 292 in 21.
;; Register 295 in 21.
;; Register 298 in 21.
;; Register 301 in 21.
;; Register 304 in 21.
;; Register 307 in 21.
(note:HI 1 0 10 ("./CppStatUtilities.cc") 412)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
(note:HI 10 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 10 4 0 ./CppStatUtilities.cc:412 (set (reg/v/f:DI 75 [ x ])
        (reg:DI 5 di [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:412 (set (reg/v:SI 76 [ xSize ])
        (reg:SI 4 si [ xSize ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ xSize ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:412 (set (reg/v:SI 77 [ nBins ])
        (reg:SI 1 dx [ nBins ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 1 dx [ nBins ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:412 (set (reg/v/f:DI 78 [ _hx ])
        (reg:DI 2 cx [ _hx ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 2 cx [ _hx ])
        (nil)))

(insn:HI 7 6 8 0 ./CppStatUtilities.cc:412 (set (reg/v/f:DI 79 [ _hy ])
        (reg:DI 37 r8 [ _hy ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 37 r8 [ _hy ])
        (nil)))

(note:HI 8 7 12 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 12 8 13 0 ("./CppStatUtilities.cc") 414)

(insn:HI 13 12 14 0 ./CppStatUtilities.cc:414 (set (reg:SI 4 si [ xSize ])
        (reg/v:SI 76 [ xSize ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(insn:HI 14 13 15 0 ./CppStatUtilities.cc:414 (set (reg:DI 5 di [ x ])
        (reg/v/f:DI 75 [ x ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(call_insn:HI 15 14 16 0 ./CppStatUtilities.cc:414 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("min") [flags 0x41] <function_decl 0x2b5eb631ee00 min>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 13 (insn_list:REG_DEP_TRUE 14 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ xSize ])
        (expr_list:REG_DEAD (reg:DI 5 di [ x ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ x ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ xSize ]))
            (nil))))

(insn:HI 16 15 17 0 ./CppStatUtilities.cc:414 (set (reg/v:DF 71 [ xmin ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 17 16 18 0 ("./CppStatUtilities.cc") 415)

(insn:HI 18 17 19 0 ./CppStatUtilities.cc:415 (set (reg:SI 4 si [ xSize ])
        (reg/v:SI 76 [ xSize ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 19 18 20 0 ./CppStatUtilities.cc:415 (set (reg:DI 5 di [ x ])
        (reg/v/f:DI 75 [ x ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 20 19 21 0 ./CppStatUtilities.cc:415 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("max") [flags 0x41] <function_decl 0x2b5eb631ef00 max>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 18 (insn_list:REG_DEP_TRUE 19 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ xSize ])
        (expr_list:REG_DEAD (reg:DI 5 di [ x ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ x ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ xSize ]))
            (nil))))

(insn:HI 21 20 22 0 ./CppStatUtilities.cc:415 (set (reg/v:DF 67 [ dx ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 22 21 23 0 ("./CppStatUtilities.cc") 417)

(insn:HI 23 22 24 0 ./CppStatUtilities.cc:417 (set (reg:DI 74 [ D.35027 ])
        (sign_extend:DI (reg/v:SI 77 [ nBins ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 5 (nil))
    (nil))

(insn:HI 24 23 25 0 ./CppStatUtilities.cc:417 (parallel [
            (set (reg:DI 80)
                (ashift:DI (reg:DI 74 [ D.35027 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 23 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 25 24 26 0 ./CppStatUtilities.cc:417 (set (reg:DI 5 di)
        (reg:DI 80)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 24 (nil))
    (expr_list:REG_DEAD (reg:DI 80)
        (nil)))

(call_insn:HI 26 25 27 0 ./CppStatUtilities.cc:417 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 25 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 27 26 29 0 ./CppStatUtilities.cc:417 (set (reg/f:DI 58 [ ivtmp.664 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 26 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 81)
            (nil))))

(insn:HI 29 27 30 0 ./CppStatUtilities.cc:417 (set (reg/v/f:DI 69 [ hx ])
        (reg/f:DI 58 [ ivtmp.664 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg/f:DI 58 [ ivtmp.664 ])
        (nil)))

(note:HI 30 29 31 0 ("./CppStatUtilities.cc") 418)

(insn:HI 31 30 32 0 ./CppStatUtilities.cc:418 (set (reg:DI 4 si)
        (const_int 8 [0x8])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 32 31 33 0 ./CppStatUtilities.cc:418 (set (reg:DI 5 di [ D.35027 ])
        (reg:DI 74 [ D.35027 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 74 [ D.35027 ])
        (nil)))

(call_insn:HI 33 32 34 0 ./CppStatUtilities.cc:418 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41] <function_decl 0x2b5eb3cbd200 calloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 31 (insn_list:REG_DEP_TRUE 32 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.35027 ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.35027 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 34 33 36 0 ./CppStatUtilities.cc:418 (set (reg/v/f:DI 68 [ hy ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 82)
            (nil))))

(insn:HI 36 34 37 0 ./CppStatUtilities.cc:418 (set (reg/f:DI 61 [ ivtmp.654 ])
        (reg/v/f:DI 68 [ hy ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 34 (nil))
    (nil))

(note:HI 37 36 38 0 ("./CppStatUtilities.cc") 420)

(insn:HI 38 37 39 0 ./CppStatUtilities.cc:420 (set (reg/v:DF 67 [ dx ])
        (minus:DF (reg/v:DF 67 [ dx ])
            (reg/v:DF 71 [ xmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 16 (insn_list:REG_DEP_TRUE 21 (nil)))
    (nil))

(insn:HI 39 38 40 0 ./CppStatUtilities.cc:420 (set (reg:DF 84)
        (float:DF (reg/v:SI 77 [ nBins ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 40 39 41 0 ./CppStatUtilities.cc:420 (set (reg/v:DF 67 [ dx ])
        (div:DF (reg/v:DF 67 [ dx ])
            (reg:DF 84))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 38 (insn_list:REG_DEP_TRUE 39 (nil)))
    (expr_list:REG_DEAD (reg:DF 84)
        (nil)))

(note:HI 41 40 42 0 ("./CppStatUtilities.cc") 425)

(insn:HI 42 41 43 0 ./CppStatUtilities.cc:425 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 77 [ nBins ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 43 42 132 0 ./CppStatUtilities.cc:425 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1034)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 42 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79

(note:HI 132 43 133 NOTE_INSN_LOOP_BEG)

(note:HI 133 132 62 NOTE_INSN_LOOP_END)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79
(code_label:HI 62 133 63 1 451 "" [3 uses])

(note:HI 63 62 64 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(note:HI 64 63 65 1 ("./CppStatUtilities.cc") 429)

(insn:HI 65 64 66 1 ./CppStatUtilities.cc:429 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 76 [ xSize ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 66 65 134 1 ./CppStatUtilities.cc:429 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1038)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 65 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79

(note:HI 134 66 135 NOTE_INSN_LOOP_BEG)

(note:HI 135 134 93 NOTE_INSN_LOOP_END)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 76 77 78 79
(code_label:HI 93 135 94 2 454 "" [3 uses])

(note:HI 94 93 95 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 95 94 96 2 ("./CppStatUtilities.cc") 433)

(insn:HI 96 95 97 2 ./CppStatUtilities.cc:433 (set (reg/v:DF 66 [ f ])
        (float:DF (reg/v:SI 76 [ xSize ]))) 175 {*floatsidf2_sse} (nil)
    (expr_list:REG_DEAD (reg/v:SI 76 [ xSize ])
        (nil)))

(insn:HI 97 96 98 2 ./CppStatUtilities.cc:433 (set (reg/v:DF 66 [ f ])
        (mult:DF (reg/v:DF 66 [ f ])
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 96 (nil))
    (expr_list:REG_DEAD (reg/v:DF 67 [ dx ])
        (nil)))

(note:HI 98 97 99 2 ("./CppStatUtilities.cc") 434)

(insn:HI 99 98 100 2 ./CppStatUtilities.cc:434 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 77 [ nBins ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 100 99 136 2 ./CppStatUtilities.cc:434 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1042)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 99 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79

(note:HI 136 100 137 NOTE_INSN_LOOP_BEG)

(note:HI 137 136 117 NOTE_INSN_LOOP_END)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 78 79
(code_label:HI 117 137 118 3 457 "" [3 uses])

(note:HI 118 117 119 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 119 118 120 3 ("./CppStatUtilities.cc") 437)

(insn:HI 120 119 121 3 ./CppStatUtilities.cc:437 (set (mem/f:DI (reg/v/f:DI 78 [ _hx ]) [22 S8 A64])
        (reg/v/f:DI 69 [ hx ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 69 [ hx ])
        (expr_list:REG_DEAD (reg/v/f:DI 78 [ _hx ])
            (nil))))

(note:HI 121 120 122 3 ("./CppStatUtilities.cc") 438)

(insn:HI 122 121 1042 3 ./CppStatUtilities.cc:438 (set (mem/f:DI (reg/v/f:DI 79 [ _hy ]) [22 S8 A64])
        (reg/v/f:DI 68 [ hy ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 68 [ hy ])
        (expr_list:REG_DEAD (reg/v/f:DI 79 [ _hy ])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79
(code_label:HI 1042 122 102 4 530 "" [1 uses])

(note:HI 102 1042 156 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 156 102 157 4 NOTE_INSN_DELETED)

(insn:HI 157 156 158 4 (parallel [
            (set (reg:SI 112)
                (plus:SI (reg/v:SI 77 [ nBins ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 158 157 161 4 (parallel [
            (set (reg:SI 112)
                (and:SI (reg:SI 112)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 157 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 161 158 162 4 ("./CppStatUtilities.cc") 412)

(note:HI 162 161 163 4 ("./CppStatUtilities.cc") 435)

(insn:HI 163 162 164 4 ./CppStatUtilities.cc:435 (set (reg:DF 100)
        (mem:DF (reg/f:DI 61 [ ivtmp.654 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 164 163 165 4 ./CppStatUtilities.cc:435 (set (reg:DF 100)
        (div:DF (reg:DF 100)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 163 (nil))
    (nil))

(insn:HI 165 164 166 4 ./CppStatUtilities.cc:435 (set (mem:DF (reg/f:DI 61 [ ivtmp.654 ]) [3 S8 A64])
        (reg:DF 100)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 164 (nil))
    (expr_list:REG_DEAD (reg:DF 100)
        (nil)))

(note:HI 166 165 167 4 ("./CppStatUtilities.cc") 434)

(insn:HI 167 166 168 4 ./CppStatUtilities.cc:434 (set (reg/v:SI 213 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 168 167 169 4 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/f:DI 214 [ ivtmp.654 ])
                (plus:DI (reg/f:DI 61 [ ivtmp.654 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 169 168 170 4 ./CppStatUtilities.cc:434 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 213 [ i ])
            (reg/v:SI 77 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 167 (nil))
    (nil))

(jump_insn:HI 170 169 331 4 ./CppStatUtilities.cc:434 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 117)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 169 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
(note:HI 331 170 329 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 329 331 330 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 330 329 309 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 104)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 329 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
(note:HI 309 330 307 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 307 309 308 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 308 307 287 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1045)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 307 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
(note:HI 287 308 285 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 285 287 286 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 286 285 265 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1046)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 285 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
(note:HI 265 286 263 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 263 265 264 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 264 263 243 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1047)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 263 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
(note:HI 243 264 241 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 241 243 242 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 242 241 221 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1048)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 241 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
(note:HI 221 242 219 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 219 221 220 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 220 219 199 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1049)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 219 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 112 213 214
(note:HI 199 220 197 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 197 199 198 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 112)
        (nil)))

(jump_insn:HI 198 197 189 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1050)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 197 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79 213 214

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 66 68 69 77 78 79
(note:HI 189 198 179 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 179 189 180 12 ("./CppStatUtilities.cc") 412)

(note:HI 180 179 181 12 ("./CppStatUtilities.cc") 435)

(insn:HI 181 180 182 12 ./CppStatUtilities.cc:435 (set (reg:DF 245)
        (mem:DF (plus:DI (reg/f:DI 61 [ ivtmp.654 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 182 181 183 12 ./CppStatUtilities.cc:435 (set (reg:DF 245)
        (div:DF (reg:DF 245)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 181 (nil))
    (nil))

(insn:HI 183 182 184 12 ./CppStatUtilities.cc:435 (set (mem:DF (plus:DI (reg/f:DI 61 [ ivtmp.654 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 245)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 182 (nil))
    (expr_list:REG_DEAD (reg:DF 245)
        (nil)))

(note:HI 184 183 185 12 ("./CppStatUtilities.cc") 434)

(insn:HI 185 184 186 12 ./CppStatUtilities.cc:434 (set (reg/v:SI 213 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 186 185 1050 12 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/f:DI 214 [ ivtmp.654 ])
                (plus:DI (reg/f:DI 61 [ ivtmp.654 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 61 [ ivtmp.654 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
(code_label:HI 1050 186 211 13 536 "" [1 uses])

(note:HI 211 1050 201 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 201 211 202 13 ("./CppStatUtilities.cc") 412)

(note:HI 202 201 203 13 ("./CppStatUtilities.cc") 435)

(insn:HI 203 202 204 13 ./CppStatUtilities.cc:435 (set (reg:DF 247)
        (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 204 203 205 13 ./CppStatUtilities.cc:435 (set (reg:DF 247)
        (div:DF (reg:DF 247)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 203 (nil))
    (nil))

(insn:HI 205 204 206 13 ./CppStatUtilities.cc:435 (set (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])
        (reg:DF 247)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 204 (nil))
    (expr_list:REG_DEAD (reg:DF 247)
        (nil)))

(note:HI 206 205 207 13 ("./CppStatUtilities.cc") 434)

(insn:HI 207 206 208 13 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/v:SI 213 [ i ])
                (plus:SI (reg/v:SI 213 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 208 207 1049 13 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/f:DI 214 [ ivtmp.654 ])
                (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
(code_label:HI 1049 208 233 14 535 "" [1 uses])

(note:HI 233 1049 223 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 223 233 224 14 ("./CppStatUtilities.cc") 412)

(note:HI 224 223 225 14 ("./CppStatUtilities.cc") 435)

(insn:HI 225 224 226 14 ./CppStatUtilities.cc:435 (set (reg:DF 249)
        (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 226 225 227 14 ./CppStatUtilities.cc:435 (set (reg:DF 249)
        (div:DF (reg:DF 249)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 225 (nil))
    (nil))

(insn:HI 227 226 228 14 ./CppStatUtilities.cc:435 (set (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])
        (reg:DF 249)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 226 (nil))
    (expr_list:REG_DEAD (reg:DF 249)
        (nil)))

(note:HI 228 227 229 14 ("./CppStatUtilities.cc") 434)

(insn:HI 229 228 230 14 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/v:SI 213 [ i ])
                (plus:SI (reg/v:SI 213 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 230 229 1048 14 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/f:DI 214 [ ivtmp.654 ])
                (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
(code_label:HI 1048 230 255 15 534 "" [1 uses])

(note:HI 255 1048 245 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 245 255 246 15 ("./CppStatUtilities.cc") 412)

(note:HI 246 245 247 15 ("./CppStatUtilities.cc") 435)

(insn:HI 247 246 248 15 ./CppStatUtilities.cc:435 (set (reg:DF 251)
        (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 248 247 249 15 ./CppStatUtilities.cc:435 (set (reg:DF 251)
        (div:DF (reg:DF 251)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 247 (nil))
    (nil))

(insn:HI 249 248 250 15 ./CppStatUtilities.cc:435 (set (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])
        (reg:DF 251)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 248 (nil))
    (expr_list:REG_DEAD (reg:DF 251)
        (nil)))

(note:HI 250 249 251 15 ("./CppStatUtilities.cc") 434)

(insn:HI 251 250 252 15 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/v:SI 213 [ i ])
                (plus:SI (reg/v:SI 213 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 252 251 1047 15 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/f:DI 214 [ ivtmp.654 ])
                (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
(code_label:HI 1047 252 277 16 533 "" [1 uses])

(note:HI 277 1047 267 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 267 277 268 16 ("./CppStatUtilities.cc") 412)

(note:HI 268 267 269 16 ("./CppStatUtilities.cc") 435)

(insn:HI 269 268 270 16 ./CppStatUtilities.cc:435 (set (reg:DF 253)
        (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 270 269 271 16 ./CppStatUtilities.cc:435 (set (reg:DF 253)
        (div:DF (reg:DF 253)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 269 (nil))
    (nil))

(insn:HI 271 270 272 16 ./CppStatUtilities.cc:435 (set (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])
        (reg:DF 253)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 270 (nil))
    (expr_list:REG_DEAD (reg:DF 253)
        (nil)))

(note:HI 272 271 273 16 ("./CppStatUtilities.cc") 434)

(insn:HI 273 272 274 16 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/v:SI 213 [ i ])
                (plus:SI (reg/v:SI 213 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 274 273 1046 16 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/f:DI 214 [ ivtmp.654 ])
                (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
(code_label:HI 1046 274 299 17 532 "" [1 uses])

(note:HI 299 1046 289 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 289 299 290 17 ("./CppStatUtilities.cc") 412)

(note:HI 290 289 291 17 ("./CppStatUtilities.cc") 435)

(insn:HI 291 290 292 17 ./CppStatUtilities.cc:435 (set (reg:DF 255)
        (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 292 291 293 17 ./CppStatUtilities.cc:435 (set (reg:DF 255)
        (div:DF (reg:DF 255)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 291 (nil))
    (nil))

(insn:HI 293 292 294 17 ./CppStatUtilities.cc:435 (set (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])
        (reg:DF 255)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 292 (nil))
    (expr_list:REG_DEAD (reg:DF 255)
        (nil)))

(note:HI 294 293 295 17 ("./CppStatUtilities.cc") 434)

(insn:HI 295 294 296 17 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/v:SI 213 [ i ])
                (plus:SI (reg/v:SI 213 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 296 295 1045 17 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/f:DI 214 [ ivtmp.654 ])
                (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
(code_label:HI 1045 296 321 18 531 "" [1 uses])

(note:HI 321 1045 311 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 311 321 312 18 ("./CppStatUtilities.cc") 412)

(note:HI 312 311 313 18 ("./CppStatUtilities.cc") 435)

(insn:HI 313 312 314 18 ./CppStatUtilities.cc:435 (set (reg:DF 257)
        (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 314 313 315 18 ./CppStatUtilities.cc:435 (set (reg:DF 257)
        (div:DF (reg:DF 257)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 313 (nil))
    (nil))

(insn:HI 315 314 316 18 ./CppStatUtilities.cc:435 (set (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])
        (reg:DF 257)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 314 (nil))
    (expr_list:REG_DEAD (reg:DF 257)
        (nil)))

(note:HI 316 315 317 18 ("./CppStatUtilities.cc") 434)

(insn:HI 317 316 318 18 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/v:SI 213 [ i ])
                (plus:SI (reg/v:SI 213 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 318 317 319 18 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/f:DI 214 [ ivtmp.654 ])
                (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 319 318 320 18 ./CppStatUtilities.cc:434 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 213 [ i ])
            (reg/v:SI 77 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 317 (nil))
    (nil))

(jump_insn:HI 320 319 104 18 ./CppStatUtilities.cc:434 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 117)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 319 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
(code_label:HI 104 320 105 19 459 "" [2 uses])

(note:HI 105 104 106 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 106 105 108 19 ("./CppStatUtilities.cc") 412)

(note:HI 108 106 109 19 ("./CppStatUtilities.cc") 435)

(insn:HI 109 108 110 19 ./CppStatUtilities.cc:435 (set (reg:DF 215)
        (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 110 109 111 19 ./CppStatUtilities.cc:435 (set (reg:DF 215)
        (div:DF (reg:DF 215)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 109 (nil))
    (nil))

(insn:HI 111 110 112 19 ./CppStatUtilities.cc:435 (set (mem:DF (reg/f:DI 214 [ ivtmp.654 ]) [3 S8 A64])
        (reg:DF 215)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 110 (nil))
    (expr_list:REG_DEAD (reg:DF 215)
        (nil)))

(note:HI 112 111 333 19 ("./CppStatUtilities.cc") 434)

(note:HI 333 112 334 19 ("./CppStatUtilities.cc") 412)

(note:HI 334 333 335 19 ("./CppStatUtilities.cc") 435)

(insn:HI 335 334 336 19 ./CppStatUtilities.cc:435 (set (reg:DF 219)
        (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 336 335 337 19 ./CppStatUtilities.cc:435 (set (reg:DF 219)
        (div:DF (reg:DF 219)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 335 (nil))
    (nil))

(insn:HI 337 336 338 19 ./CppStatUtilities.cc:435 (set (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 219)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 336 (nil))
    (expr_list:REG_DEAD (reg:DF 219)
        (nil)))

(note:HI 338 337 350 19 ("./CppStatUtilities.cc") 434)

(note:HI 350 338 351 19 ("./CppStatUtilities.cc") 412)

(note:HI 351 350 352 19 ("./CppStatUtilities.cc") 435)

(insn:HI 352 351 353 19 ./CppStatUtilities.cc:435 (set (reg:DF 223)
        (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 353 352 354 19 ./CppStatUtilities.cc:435 (set (reg:DF 223)
        (div:DF (reg:DF 223)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 352 (nil))
    (nil))

(insn:HI 354 353 355 19 ./CppStatUtilities.cc:435 (set (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 16 [0x10])) [3 S8 A64])
        (reg:DF 223)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 353 (nil))
    (expr_list:REG_DEAD (reg:DF 223)
        (nil)))

(note:HI 355 354 367 19 ("./CppStatUtilities.cc") 434)

(note:HI 367 355 368 19 ("./CppStatUtilities.cc") 412)

(note:HI 368 367 369 19 ("./CppStatUtilities.cc") 435)

(insn:HI 369 368 370 19 ./CppStatUtilities.cc:435 (set (reg:DF 227)
        (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 370 369 371 19 ./CppStatUtilities.cc:435 (set (reg:DF 227)
        (div:DF (reg:DF 227)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 369 (nil))
    (nil))

(insn:HI 371 370 372 19 ./CppStatUtilities.cc:435 (set (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 24 [0x18])) [3 S8 A64])
        (reg:DF 227)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 370 (nil))
    (expr_list:REG_DEAD (reg:DF 227)
        (nil)))

(note:HI 372 371 384 19 ("./CppStatUtilities.cc") 434)

(note:HI 384 372 385 19 ("./CppStatUtilities.cc") 412)

(note:HI 385 384 386 19 ("./CppStatUtilities.cc") 435)

(insn:HI 386 385 387 19 ./CppStatUtilities.cc:435 (set (reg:DF 231)
        (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 32 [0x20])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 387 386 388 19 ./CppStatUtilities.cc:435 (set (reg:DF 231)
        (div:DF (reg:DF 231)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 386 (nil))
    (nil))

(insn:HI 388 387 389 19 ./CppStatUtilities.cc:435 (set (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 32 [0x20])) [3 S8 A64])
        (reg:DF 231)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 387 (nil))
    (expr_list:REG_DEAD (reg:DF 231)
        (nil)))

(note:HI 389 388 401 19 ("./CppStatUtilities.cc") 434)

(note:HI 401 389 402 19 ("./CppStatUtilities.cc") 412)

(note:HI 402 401 403 19 ("./CppStatUtilities.cc") 435)

(insn:HI 403 402 404 19 ./CppStatUtilities.cc:435 (set (reg:DF 235)
        (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 40 [0x28])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 404 403 405 19 ./CppStatUtilities.cc:435 (set (reg:DF 235)
        (div:DF (reg:DF 235)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 403 (nil))
    (nil))

(insn:HI 405 404 406 19 ./CppStatUtilities.cc:435 (set (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 40 [0x28])) [3 S8 A64])
        (reg:DF 235)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 404 (nil))
    (expr_list:REG_DEAD (reg:DF 235)
        (nil)))

(note:HI 406 405 418 19 ("./CppStatUtilities.cc") 434)

(note:HI 418 406 419 19 ("./CppStatUtilities.cc") 412)

(note:HI 419 418 420 19 ("./CppStatUtilities.cc") 435)

(insn:HI 420 419 421 19 ./CppStatUtilities.cc:435 (set (reg:DF 239)
        (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 48 [0x30])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 421 420 422 19 ./CppStatUtilities.cc:435 (set (reg:DF 239)
        (div:DF (reg:DF 239)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 420 (nil))
    (nil))

(insn:HI 422 421 423 19 ./CppStatUtilities.cc:435 (set (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 48 [0x30])) [3 S8 A64])
        (reg:DF 239)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 421 (nil))
    (expr_list:REG_DEAD (reg:DF 239)
        (nil)))

(note:HI 423 422 435 19 ("./CppStatUtilities.cc") 434)

(note:HI 435 423 436 19 ("./CppStatUtilities.cc") 412)

(note:HI 436 435 437 19 ("./CppStatUtilities.cc") 435)

(insn:HI 437 436 438 19 ./CppStatUtilities.cc:435 (set (reg:DF 243)
        (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 56 [0x38])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 438 437 439 19 ./CppStatUtilities.cc:435 (set (reg:DF 243)
        (div:DF (reg:DF 243)
            (reg/v:DF 66 [ f ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 437 (nil))
    (nil))

(insn:HI 439 438 440 19 ./CppStatUtilities.cc:435 (set (mem:DF (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                (const_int 56 [0x38])) [3 S8 A64])
        (reg:DF 243)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 438 (nil))
    (expr_list:REG_DEAD (reg:DF 243)
        (nil)))

(note:HI 440 439 441 19 ("./CppStatUtilities.cc") 434)

(insn:HI 441 440 442 19 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/v:SI 213 [ i ])
                (plus:SI (reg/v:SI 213 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 442 441 443 19 ./CppStatUtilities.cc:434 (parallel [
            (set (reg/f:DI 214 [ ivtmp.654 ])
                (plus:DI (reg/f:DI 214 [ ivtmp.654 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 443 442 444 19 ./CppStatUtilities.cc:434 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 213 [ i ])
            (reg/v:SI 77 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 441 (nil))
    (nil))

(jump_insn:HI 444 443 449 19 ./CppStatUtilities.cc:434 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 117)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 443 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214
(note:HI 449 444 1021 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1021 449 1022 20 (set (pc)
        (label_ref 104)) 548 {jump} (nil)
    (nil))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 68 69 77 78 79 213 214

(barrier:HI 1022 1021 1038)

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79
(code_label:HI 1038 1022 68 21 529 "" [1 uses])

(note:HI 68 1038 139 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:HI 139 68 467 21 (set (reg:DF 102)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))

(note:HI 467 139 468 21 NOTE_INSN_DELETED)

(insn:HI 468 467 469 21 (parallel [
            (set (reg:SI 117)
                (plus:SI (reg/v:SI 76 [ xSize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 469 468 472 21 (parallel [
            (set (reg:SI 117)
                (and:SI (reg:SI 117)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 468 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 472 469 473 21 ("./CppStatUtilities.cc") 430)

(insn:HI 473 472 474 21 ./CppStatUtilities.cc:430 (set (reg:DF 91)
        (mem:DF (reg/v/f:DI 75 [ x ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 474 473 475 21 ./CppStatUtilities.cc:430 (set (reg:DF 91)
        (minus:DF (reg:DF 91)
            (reg/v:DF 71 [ xmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 473 (nil))
    (nil))

(note:HI 475 474 476 21 NOTE_INSN_DELETED)

(insn:HI 476 475 477 21 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 91)
            (reg/v:DF 67 [ dx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 474 (nil))
    (expr_list:REG_DEAD (reg:DF 91)
        (nil)))

(call_insn/u:HI 477 476 478 21 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 476 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 478 477 479 21 NOTE_INSN_DELETED)

(insn:HI 479 478 480 21 ./CppStatUtilities.cc:430 (set (reg:SI 93)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 477 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 480 479 481 21 ./CppStatUtilities.cc:430 (set (reg:DI 94)
        (sign_extend:DI (reg:SI 93))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 479 (nil))
    (expr_list:REG_DEAD (reg:SI 93)
        (nil)))

(note:HI 481 480 482 21 NOTE_INSN_DELETED)

(insn:HI 482 481 483 21 ./CppStatUtilities.cc:430 (set (reg:DI 72 [ D.35062 ])
        (plus:DI (mult:DI (reg:DI 94)
                (const_int 8 [0x8]))
            (reg/v/f:DI 68 [ hy ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 480 (nil))
    (expr_list:REG_DEAD (reg:DI 94)
        (nil)))

(note:HI 483 482 484 21 NOTE_INSN_DELETED)

(insn:HI 484 483 485 21 ./CppStatUtilities.cc:430 (set (reg:DF 98)
        (plus:DF (mem:DF (reg:DI 72 [ D.35062 ]) [3 S8 A64])
            (reg:DF 102))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 482 (insn_list:REG_DEP_TRUE 139 (nil)))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 72 [ D.35062 ]) [3 S8 A64])
        (nil)))

(insn:HI 485 484 486 21 ./CppStatUtilities.cc:430 (set (mem:DF (reg:DI 72 [ D.35062 ]) [3 S8 A64])
        (reg:DF 98)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 484 (nil))
    (expr_list:REG_DEAD (reg:DF 98)
        (expr_list:REG_DEAD (reg:DI 72 [ D.35062 ])
            (nil))))

(note:HI 486 485 487 21 ("./CppStatUtilities.cc") 429)

(insn:HI 487 486 488 21 ./CppStatUtilities.cc:429 (set (reg/v:SI 165 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 488 487 489 21 ./CppStatUtilities.cc:429 (parallel [
            (set (reg/f:DI 166 [ ivtmp.659 ])
                (plus:DI (reg/v/f:DI 75 [ x ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 489 488 490 21 ./CppStatUtilities.cc:429 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 165 [ i ])
            (reg/v:SI 76 [ xSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 487 (nil))
    (nil))

(jump_insn:HI 490 489 590 21 ./CppStatUtilities.cc:429 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 93)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 489 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166
(note:HI 590 490 588 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 588 590 589 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 589 588 559 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 588 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166
(note:HI 559 589 557 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:HI 557 559 558 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 558 557 528 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1051)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 557 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 117 165 166
(note:HI 528 558 526 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:HI 526 528 527 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 117)
        (nil)))

(jump_insn:HI 527 526 518 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1052)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 526 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102 165 166

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79 102
(note:HI 518 527 499 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note:HI 499 518 500 25 ("./CppStatUtilities.cc") 430)

(insn:HI 500 499 501 25 ./CppStatUtilities.cc:430 (set (reg:DF 259)
        (mem:DF (plus:DI (reg/v/f:DI 75 [ x ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 501 500 502 25 ./CppStatUtilities.cc:430 (set (reg:DF 259)
        (minus:DF (reg:DF 259)
            (reg/v:DF 71 [ xmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 500 (nil))
    (nil))

(note:HI 502 501 503 25 NOTE_INSN_DELETED)

(insn:HI 503 502 504 25 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 259)
            (reg/v:DF 67 [ dx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 501 (nil))
    (expr_list:REG_DEAD (reg:DF 259)
        (nil)))

(call_insn/u:HI 504 503 505 25 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 503 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 505 504 506 25 NOTE_INSN_DELETED)

(insn:HI 506 505 507 25 ./CppStatUtilities.cc:430 (set (reg:SI 263)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 504 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 507 506 508 25 ./CppStatUtilities.cc:430 (set (reg:DI 264)
        (sign_extend:DI (reg:SI 263))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 506 (nil))
    (expr_list:REG_DEAD (reg:SI 263)
        (nil)))

(note:HI 508 507 509 25 NOTE_INSN_DELETED)

(insn:HI 509 508 510 25 ./CppStatUtilities.cc:430 (set (reg:DI 266 [ D.35062 ])
        (plus:DI (mult:DI (reg:DI 264)
                (const_int 8 [0x8]))
            (reg/v/f:DI 68 [ hy ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 507 (nil))
    (expr_list:REG_DEAD (reg:DI 264)
        (nil)))

(note:HI 510 509 511 25 NOTE_INSN_DELETED)

(insn:HI 511 510 512 25 ./CppStatUtilities.cc:430 (set (reg:DF 268)
        (plus:DF (mem:DF (reg:DI 266 [ D.35062 ]) [3 S8 A64])
            (reg:DF 102))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 509 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 266 [ D.35062 ]) [3 S8 A64])
        (nil)))

(insn:HI 512 511 513 25 ./CppStatUtilities.cc:430 (set (mem:DF (reg:DI 266 [ D.35062 ]) [3 S8 A64])
        (reg:DF 268)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 511 (nil))
    (expr_list:REG_DEAD (reg:DF 268)
        (expr_list:REG_DEAD (reg:DI 266 [ D.35062 ])
            (nil))))

(note:HI 513 512 514 25 ("./CppStatUtilities.cc") 429)

(insn:HI 514 513 515 25 ./CppStatUtilities.cc:429 (set (reg/v:SI 165 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 515 514 1052 25 ./CppStatUtilities.cc:429 (parallel [
            (set (reg/f:DI 166 [ ivtmp.659 ])
                (plus:DI (reg/v/f:DI 75 [ x ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 75 [ x ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
(code_label:HI 1052 515 549 26 538 "" [1 uses])

(note:HI 549 1052 530 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note:HI 530 549 531 26 ("./CppStatUtilities.cc") 430)

(insn:HI 531 530 532 26 ./CppStatUtilities.cc:430 (set (reg:DF 269)
        (mem:DF (reg/f:DI 166 [ ivtmp.659 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 532 531 533 26 ./CppStatUtilities.cc:430 (set (reg:DF 269)
        (minus:DF (reg:DF 269)
            (reg/v:DF 71 [ xmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 531 (nil))
    (nil))

(note:HI 533 532 534 26 NOTE_INSN_DELETED)

(insn:HI 534 533 535 26 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 269)
            (reg/v:DF 67 [ dx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 532 (nil))
    (expr_list:REG_DEAD (reg:DF 269)
        (nil)))

(call_insn/u:HI 535 534 536 26 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 534 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 536 535 537 26 NOTE_INSN_DELETED)

(insn:HI 537 536 538 26 ./CppStatUtilities.cc:430 (set (reg:SI 273)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 535 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 538 537 539 26 ./CppStatUtilities.cc:430 (set (reg:DI 274)
        (sign_extend:DI (reg:SI 273))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 537 (nil))
    (expr_list:REG_DEAD (reg:SI 273)
        (nil)))

(note:HI 539 538 540 26 NOTE_INSN_DELETED)

(insn:HI 540 539 541 26 ./CppStatUtilities.cc:430 (set (reg:DI 276 [ D.35062 ])
        (plus:DI (mult:DI (reg:DI 274)
                (const_int 8 [0x8]))
            (reg/v/f:DI 68 [ hy ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 538 (nil))
    (expr_list:REG_DEAD (reg:DI 274)
        (nil)))

(note:HI 541 540 542 26 NOTE_INSN_DELETED)

(insn:HI 542 541 543 26 ./CppStatUtilities.cc:430 (set (reg:DF 278)
        (plus:DF (mem:DF (reg:DI 276 [ D.35062 ]) [3 S8 A64])
            (reg:DF 102))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 540 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 276 [ D.35062 ]) [3 S8 A64])
        (nil)))

(insn:HI 543 542 544 26 ./CppStatUtilities.cc:430 (set (mem:DF (reg:DI 276 [ D.35062 ]) [3 S8 A64])
        (reg:DF 278)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 542 (nil))
    (expr_list:REG_DEAD (reg:DF 278)
        (expr_list:REG_DEAD (reg:DI 276 [ D.35062 ])
            (nil))))

(note:HI 544 543 545 26 ("./CppStatUtilities.cc") 429)

(insn:HI 545 544 546 26 ./CppStatUtilities.cc:429 (parallel [
            (set (reg/v:SI 165 [ i ])
                (plus:SI (reg/v:SI 165 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 546 545 1051 26 ./CppStatUtilities.cc:429 (parallel [
            (set (reg/f:DI 166 [ ivtmp.659 ])
                (plus:DI (reg/f:DI 166 [ ivtmp.659 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
(code_label:HI 1051 546 580 27 537 "" [1 uses])

(note:HI 580 1051 561 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note:HI 561 580 562 27 ("./CppStatUtilities.cc") 430)

(insn:HI 562 561 563 27 ./CppStatUtilities.cc:430 (set (reg:DF 279)
        (mem:DF (reg/f:DI 166 [ ivtmp.659 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 563 562 564 27 ./CppStatUtilities.cc:430 (set (reg:DF 279)
        (minus:DF (reg:DF 279)
            (reg/v:DF 71 [ xmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 562 (nil))
    (nil))

(note:HI 564 563 565 27 NOTE_INSN_DELETED)

(insn:HI 565 564 566 27 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 279)
            (reg/v:DF 67 [ dx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 563 (nil))
    (expr_list:REG_DEAD (reg:DF 279)
        (nil)))

(call_insn/u:HI 566 565 567 27 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 565 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 567 566 568 27 NOTE_INSN_DELETED)

(insn:HI 568 567 569 27 ./CppStatUtilities.cc:430 (set (reg:SI 283)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 566 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 569 568 570 27 ./CppStatUtilities.cc:430 (set (reg:DI 284)
        (sign_extend:DI (reg:SI 283))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 568 (nil))
    (expr_list:REG_DEAD (reg:SI 283)
        (nil)))

(note:HI 570 569 571 27 NOTE_INSN_DELETED)

(insn:HI 571 570 572 27 ./CppStatUtilities.cc:430 (set (reg:DI 286 [ D.35062 ])
        (plus:DI (mult:DI (reg:DI 284)
                (const_int 8 [0x8]))
            (reg/v/f:DI 68 [ hy ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 569 (nil))
    (expr_list:REG_DEAD (reg:DI 284)
        (nil)))

(note:HI 572 571 573 27 NOTE_INSN_DELETED)

(insn:HI 573 572 574 27 ./CppStatUtilities.cc:430 (set (reg:DF 288)
        (plus:DF (mem:DF (reg:DI 286 [ D.35062 ]) [3 S8 A64])
            (reg:DF 102))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 571 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 286 [ D.35062 ]) [3 S8 A64])
        (nil)))

(insn:HI 574 573 575 27 ./CppStatUtilities.cc:430 (set (mem:DF (reg:DI 286 [ D.35062 ]) [3 S8 A64])
        (reg:DF 288)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 573 (nil))
    (expr_list:REG_DEAD (reg:DF 288)
        (expr_list:REG_DEAD (reg:DI 286 [ D.35062 ])
            (nil))))

(note:HI 575 574 576 27 ("./CppStatUtilities.cc") 429)

(insn:HI 576 575 577 27 ./CppStatUtilities.cc:429 (parallel [
            (set (reg/v:SI 165 [ i ])
                (plus:SI (reg/v:SI 165 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 577 576 578 27 ./CppStatUtilities.cc:429 (parallel [
            (set (reg/f:DI 166 [ ivtmp.659 ])
                (plus:DI (reg/f:DI 166 [ ivtmp.659 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 578 577 579 27 ./CppStatUtilities.cc:429 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 165 [ i ])
            (reg/v:SI 76 [ xSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 576 (nil))
    (nil))

(jump_insn:HI 579 578 71 27 ./CppStatUtilities.cc:429 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 93)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 578 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
(code_label:HI 71 579 72 28 456 "" [2 uses])

(note:HI 72 71 73 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note:HI 73 72 74 28 ("./CppStatUtilities.cc") 430)

(insn:HI 74 73 75 28 ./CppStatUtilities.cc:430 (set (reg:DF 167)
        (mem:DF (reg/f:DI 166 [ ivtmp.659 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 75 74 76 28 ./CppStatUtilities.cc:430 (set (reg:DF 167)
        (minus:DF (reg:DF 167)
            (reg/v:DF 71 [ xmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 74 (nil))
    (nil))

(note:HI 76 75 77 28 NOTE_INSN_DELETED)

(insn:HI 77 76 78 28 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 167)
            (reg/v:DF 67 [ dx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 75 (nil))
    (expr_list:REG_DEAD (reg:DF 167)
        (nil)))

(call_insn/u:HI 78 77 79 28 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 77 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 79 78 80 28 NOTE_INSN_DELETED)

(insn:HI 80 79 81 28 ./CppStatUtilities.cc:430 (set (reg:SI 171)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 78 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 81 80 82 28 ./CppStatUtilities.cc:430 (set (reg:DI 172)
        (sign_extend:DI (reg:SI 171))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 80 (nil))
    (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(note:HI 82 81 83 28 NOTE_INSN_DELETED)

(insn:HI 83 82 84 28 ./CppStatUtilities.cc:430 (set (reg:DI 174 [ D.35062 ])
        (plus:DI (mult:DI (reg:DI 172)
                (const_int 8 [0x8]))
            (reg/v/f:DI 68 [ hy ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 81 (nil))
    (expr_list:REG_DEAD (reg:DI 172)
        (nil)))

(note:HI 84 83 86 28 NOTE_INSN_DELETED)

(insn:HI 86 84 87 28 ./CppStatUtilities.cc:430 (set (reg:DF 176)
        (plus:DF (mem:DF (reg:DI 174 [ D.35062 ]) [3 S8 A64])
            (reg:DF 102))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 83 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 174 [ D.35062 ]) [3 S8 A64])
        (nil)))

(insn:HI 87 86 88 28 ./CppStatUtilities.cc:430 (set (mem:DF (reg:DI 174 [ D.35062 ]) [3 S8 A64])
        (reg:DF 176)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 86 (nil))
    (expr_list:REG_DEAD (reg:DF 176)
        (expr_list:REG_DEAD (reg:DI 174 [ D.35062 ])
            (nil))))

(note:HI 88 87 592 28 ("./CppStatUtilities.cc") 429)

(note:HI 592 88 593 28 ("./CppStatUtilities.cc") 430)

(insn:HI 593 592 594 28 ./CppStatUtilities.cc:430 (set (reg:DF 179)
        (mem:DF (plus:DI (reg/f:DI 166 [ ivtmp.659 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 594 593 595 28 ./CppStatUtilities.cc:430 (set (reg:DF 179)
        (minus:DF (reg:DF 179)
            (reg/v:DF 71 [ xmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 593 (nil))
    (nil))

(note:HI 595 594 596 28 NOTE_INSN_DELETED)

(insn:HI 596 595 597 28 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 179)
            (reg/v:DF 67 [ dx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 594 (nil))
    (expr_list:REG_DEAD (reg:DF 179)
        (nil)))

(call_insn/u:HI 597 596 598 28 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 596 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 598 597 599 28 NOTE_INSN_DELETED)

(insn:HI 599 598 600 28 ./CppStatUtilities.cc:430 (set (reg:SI 183)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 597 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 600 599 601 28 ./CppStatUtilities.cc:430 (set (reg:DI 184)
        (sign_extend:DI (reg:SI 183))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 599 (nil))
    (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(note:HI 601 600 602 28 NOTE_INSN_DELETED)

(insn:HI 602 601 603 28 ./CppStatUtilities.cc:430 (set (reg:DI 186 [ D.35062 ])
        (plus:DI (mult:DI (reg:DI 184)
                (const_int 8 [0x8]))
            (reg/v/f:DI 68 [ hy ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 600 (nil))
    (expr_list:REG_DEAD (reg:DI 184)
        (nil)))

(note:HI 603 602 604 28 NOTE_INSN_DELETED)

(insn:HI 604 603 605 28 ./CppStatUtilities.cc:430 (set (reg:DF 188)
        (plus:DF (mem:DF (reg:DI 186 [ D.35062 ]) [3 S8 A64])
            (reg:DF 102))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 602 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 186 [ D.35062 ]) [3 S8 A64])
        (nil)))

(insn:HI 605 604 606 28 ./CppStatUtilities.cc:430 (set (mem:DF (reg:DI 186 [ D.35062 ]) [3 S8 A64])
        (reg:DF 188)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 604 (nil))
    (expr_list:REG_DEAD (reg:DF 188)
        (expr_list:REG_DEAD (reg:DI 186 [ D.35062 ])
            (nil))))

(note:HI 606 605 618 28 ("./CppStatUtilities.cc") 429)

(note:HI 618 606 619 28 ("./CppStatUtilities.cc") 430)

(insn:HI 619 618 620 28 ./CppStatUtilities.cc:430 (set (reg:DF 191)
        (mem:DF (plus:DI (reg/f:DI 166 [ ivtmp.659 ])
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 620 619 621 28 ./CppStatUtilities.cc:430 (set (reg:DF 191)
        (minus:DF (reg:DF 191)
            (reg/v:DF 71 [ xmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 619 (nil))
    (nil))

(note:HI 621 620 622 28 NOTE_INSN_DELETED)

(insn:HI 622 621 623 28 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 191)
            (reg/v:DF 67 [ dx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 620 (nil))
    (expr_list:REG_DEAD (reg:DF 191)
        (nil)))

(call_insn/u:HI 623 622 624 28 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 622 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 624 623 625 28 NOTE_INSN_DELETED)

(insn:HI 625 624 626 28 ./CppStatUtilities.cc:430 (set (reg:SI 195)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 623 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 626 625 627 28 ./CppStatUtilities.cc:430 (set (reg:DI 196)
        (sign_extend:DI (reg:SI 195))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 625 (nil))
    (expr_list:REG_DEAD (reg:SI 195)
        (nil)))

(note:HI 627 626 628 28 NOTE_INSN_DELETED)

(insn:HI 628 627 629 28 ./CppStatUtilities.cc:430 (set (reg:DI 198 [ D.35062 ])
        (plus:DI (mult:DI (reg:DI 196)
                (const_int 8 [0x8]))
            (reg/v/f:DI 68 [ hy ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 626 (nil))
    (expr_list:REG_DEAD (reg:DI 196)
        (nil)))

(note:HI 629 628 630 28 NOTE_INSN_DELETED)

(insn:HI 630 629 631 28 ./CppStatUtilities.cc:430 (set (reg:DF 200)
        (plus:DF (mem:DF (reg:DI 198 [ D.35062 ]) [3 S8 A64])
            (reg:DF 102))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 628 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 198 [ D.35062 ]) [3 S8 A64])
        (nil)))

(insn:HI 631 630 632 28 ./CppStatUtilities.cc:430 (set (mem:DF (reg:DI 198 [ D.35062 ]) [3 S8 A64])
        (reg:DF 200)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 630 (nil))
    (expr_list:REG_DEAD (reg:DF 200)
        (expr_list:REG_DEAD (reg:DI 198 [ D.35062 ])
            (nil))))

(note:HI 632 631 644 28 ("./CppStatUtilities.cc") 429)

(note:HI 644 632 645 28 ("./CppStatUtilities.cc") 430)

(insn:HI 645 644 646 28 ./CppStatUtilities.cc:430 (set (reg:DF 203)
        (mem:DF (plus:DI (reg/f:DI 166 [ ivtmp.659 ])
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 646 645 647 28 ./CppStatUtilities.cc:430 (set (reg:DF 203)
        (minus:DF (reg:DF 203)
            (reg/v:DF 71 [ xmin ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 645 (nil))
    (nil))

(note:HI 647 646 648 28 NOTE_INSN_DELETED)

(insn:HI 648 647 649 28 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (div:DF (reg:DF 203)
            (reg/v:DF 67 [ dx ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 646 (nil))
    (expr_list:REG_DEAD (reg:DF 203)
        (nil)))

(call_insn/u:HI 649 648 650 28 ./CppStatUtilities.cc:430 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 648 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(note:HI 650 649 651 28 NOTE_INSN_DELETED)

(insn:HI 651 650 652 28 ./CppStatUtilities.cc:430 (set (reg:SI 207)
        (fix:SI (reg:DF 21 xmm0))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 649 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 652 651 653 28 ./CppStatUtilities.cc:430 (set (reg:DI 208)
        (sign_extend:DI (reg:SI 207))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 651 (nil))
    (expr_list:REG_DEAD (reg:SI 207)
        (nil)))

(note:HI 653 652 654 28 NOTE_INSN_DELETED)

(insn:HI 654 653 655 28 ./CppStatUtilities.cc:430 (set (reg:DI 210 [ D.35062 ])
        (plus:DI (mult:DI (reg:DI 208)
                (const_int 8 [0x8]))
            (reg/v/f:DI 68 [ hy ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 652 (nil))
    (expr_list:REG_DEAD (reg:DI 208)
        (nil)))

(note:HI 655 654 656 28 NOTE_INSN_DELETED)

(insn:HI 656 655 657 28 ./CppStatUtilities.cc:430 (set (reg:DF 212)
        (plus:DF (mem:DF (reg:DI 210 [ D.35062 ]) [3 S8 A64])
            (reg:DF 102))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 654 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 210 [ D.35062 ]) [3 S8 A64])
        (nil)))

(insn:HI 657 656 658 28 ./CppStatUtilities.cc:430 (set (mem:DF (reg:DI 210 [ D.35062 ]) [3 S8 A64])
        (reg:DF 212)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 656 (nil))
    (expr_list:REG_DEAD (reg:DF 212)
        (expr_list:REG_DEAD (reg:DI 210 [ D.35062 ])
            (nil))))

(note:HI 658 657 659 28 ("./CppStatUtilities.cc") 429)

(insn:HI 659 658 660 28 ./CppStatUtilities.cc:429 (parallel [
            (set (reg/v:SI 165 [ i ])
                (plus:SI (reg/v:SI 165 [ i ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 660 659 661 28 ./CppStatUtilities.cc:429 (parallel [
            (set (reg/f:DI 166 [ ivtmp.659 ])
                (plus:DI (reg/f:DI 166 [ ivtmp.659 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 661 660 662 28 ./CppStatUtilities.cc:429 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 165 [ i ])
            (reg/v:SI 76 [ xSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 659 (nil))
    (nil))

(jump_insn:HI 662 661 667 28 ./CppStatUtilities.cc:429 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 93)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 661 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166
(note:HI 667 662 1026 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1026 667 1027 29 (set (pc)
        (label_ref 71)) 548 {jump} (nil)
    (nil))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 76 77 78 79 102 165 166

(barrier:HI 1027 1026 1034)

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 67 68 69 71 75 76 77 78 79
(code_label:HI 1034 1027 45 30 528 "" [1 uses])

(note:HI 45 1034 46 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note:HI 46 45 47 30 NOTE_INSN_DELETED)

(insn:HI 47 46 48 30 ./CppStatUtilities.cc:425 (set (reg:DF 62 [ pretmp.640 ])
        (mult:DF (reg/v:DF 67 [ dx ])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 48 47 677 30 ./CppStatUtilities.cc:425 (set (reg:DF 62 [ pretmp.640 ])
        (plus:DF (reg/v:DF 71 [ xmin ])
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 47 (nil))
    (nil))

(note:HI 677 48 678 30 NOTE_INSN_DELETED)

(insn:HI 678 677 679 30 (parallel [
            (set (reg:SI 122)
                (plus:SI (reg/v:SI 77 [ nBins ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 679 678 682 30 (parallel [
            (set (reg:SI 122)
                (and:SI (reg:SI 122)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 678 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 682 679 1060 30 ("./CppStatUtilities.cc") 426)

(insn 1060 682 683 30 ./CppStatUtilities.cc:426 (set (reg/v:SI 65 [ i ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:HI 683 1060 684 30 ./CppStatUtilities.cc:426 (set (reg:DF 87)
        (float:DF (reg/v:SI 65 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 49 (nil))
    (expr_list:REG_DEAD (reg/v:SI 65 [ i ])
        (nil)))

(insn:HI 684 683 685 30 ./CppStatUtilities.cc:426 (set (reg:DF 87)
        (mult:DF (reg/v:DF 67 [ dx ])
            (reg:DF 87))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 683 (nil))
    (nil))

(insn:HI 685 684 686 30 ./CppStatUtilities.cc:426 (set (reg:DF 87)
        (plus:DF (reg:DF 87)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 48 (insn_list:REG_DEP_TRUE 684 (nil)))
    (nil))

(insn:HI 686 685 687 30 ./CppStatUtilities.cc:426 (set (mem:DF (reg/v/f:DI 69 [ hx ]) [3 S8 A64])
        (reg:DF 87)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 685 (nil))
    (expr_list:REG_DEAD (reg:DF 87)
        (nil)))

(note:HI 687 686 688 30 ("./CppStatUtilities.cc") 425)

(insn:HI 688 687 689 30 ./CppStatUtilities.cc:425 (set (reg/v:SI 125 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 689 688 690 30 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/f:DI 129 [ ivtmp.664 ])
                (plus:DI (reg/v/f:DI 69 [ hx ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 690 689 691 30 ./CppStatUtilities.cc:425 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 125 [ i ])
            (reg/v:SI 77 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 688 (nil))
    (nil))

(jump_insn:HI 691 690 852 30 ./CppStatUtilities.cc:425 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 62)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 690 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
(note:HI 852 691 850 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:HI 850 852 851 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 851 850 830 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 50)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 850 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
(note:HI 830 851 828 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:HI 828 830 829 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 829 828 808 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1053)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 828 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
(note:HI 808 829 806 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:HI 806 808 807 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 807 806 786 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1054)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 806 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
(note:HI 786 807 784 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:HI 784 786 785 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 785 784 764 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1055)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 784 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
(note:HI 764 785 762 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn:HI 762 764 763 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 763 762 742 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1056)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 762 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
(note:HI 742 763 740 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn:HI 740 742 741 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 741 740 720 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1057)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 740 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 122 125 129
(note:HI 720 741 718 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn:HI 718 720 719 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 122)
        (nil)))

(jump_insn:HI 719 718 710 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1058)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 718 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79
(note:HI 710 719 700 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(note:HI 700 710 703 38 ("./CppStatUtilities.cc") 426)

(insn:HI 703 700 704 38 ./CppStatUtilities.cc:426 (set (reg:DF 291)
        (plus:DF (reg/v:DF 67 [ dx ])
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 69 [ hx ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(insn:HI 704 703 705 38 ./CppStatUtilities.cc:426 (set (mem:DF (plus:DI (reg/v/f:DI 69 [ hx ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 291)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 703 (nil))
    (expr_list:REG_DEAD (reg:DF 291)
        (nil)))

(note:HI 705 704 706 38 ("./CppStatUtilities.cc") 425)

(insn:HI 706 705 707 38 ./CppStatUtilities.cc:425 (set (reg/v:SI 125 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 707 706 1058 38 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/f:DI 129 [ ivtmp.664 ])
                (plus:DI (reg/v/f:DI 69 [ hx ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
(code_label:HI 1058 707 732 39 544 "" [1 uses])

(note:HI 732 1058 722 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note:HI 722 732 723 39 ("./CppStatUtilities.cc") 426)

(insn:HI 723 722 724 39 ./CppStatUtilities.cc:426 (set (reg:DF 292)
        (float:DF (reg/v:SI 125 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 724 723 725 39 ./CppStatUtilities.cc:426 (set (reg:DF 292)
        (mult:DF (reg:DF 292)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 723 (nil))
    (nil))

(insn:HI 725 724 726 39 ./CppStatUtilities.cc:426 (set (reg:DF 292)
        (plus:DF (reg:DF 292)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 724 (nil))
    (nil))

(insn:HI 726 725 727 39 ./CppStatUtilities.cc:426 (set (mem:DF (reg/f:DI 129 [ ivtmp.664 ]) [3 S8 A64])
        (reg:DF 292)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 725 (nil))
    (expr_list:REG_DEAD (reg:DF 292)
        (nil)))

(note:HI 727 726 728 39 ("./CppStatUtilities.cc") 425)

(insn:HI 728 727 729 39 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 125 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 729 728 1057 39 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/f:DI 129 [ ivtmp.664 ])
                (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
(code_label:HI 1057 729 754 40 543 "" [1 uses])

(note:HI 754 1057 744 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(note:HI 744 754 745 40 ("./CppStatUtilities.cc") 426)

(insn:HI 745 744 746 40 ./CppStatUtilities.cc:426 (set (reg:DF 295)
        (float:DF (reg/v:SI 125 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 746 745 747 40 ./CppStatUtilities.cc:426 (set (reg:DF 295)
        (mult:DF (reg:DF 295)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 745 (nil))
    (nil))

(insn:HI 747 746 748 40 ./CppStatUtilities.cc:426 (set (reg:DF 295)
        (plus:DF (reg:DF 295)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 746 (nil))
    (nil))

(insn:HI 748 747 749 40 ./CppStatUtilities.cc:426 (set (mem:DF (reg/f:DI 129 [ ivtmp.664 ]) [3 S8 A64])
        (reg:DF 295)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 747 (nil))
    (expr_list:REG_DEAD (reg:DF 295)
        (nil)))

(note:HI 749 748 750 40 ("./CppStatUtilities.cc") 425)

(insn:HI 750 749 751 40 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 125 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 751 750 1056 40 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/f:DI 129 [ ivtmp.664 ])
                (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
(code_label:HI 1056 751 776 41 542 "" [1 uses])

(note:HI 776 1056 766 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note:HI 766 776 767 41 ("./CppStatUtilities.cc") 426)

(insn:HI 767 766 768 41 ./CppStatUtilities.cc:426 (set (reg:DF 298)
        (float:DF (reg/v:SI 125 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 768 767 769 41 ./CppStatUtilities.cc:426 (set (reg:DF 298)
        (mult:DF (reg:DF 298)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 767 (nil))
    (nil))

(insn:HI 769 768 770 41 ./CppStatUtilities.cc:426 (set (reg:DF 298)
        (plus:DF (reg:DF 298)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 768 (nil))
    (nil))

(insn:HI 770 769 771 41 ./CppStatUtilities.cc:426 (set (mem:DF (reg/f:DI 129 [ ivtmp.664 ]) [3 S8 A64])
        (reg:DF 298)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 769 (nil))
    (expr_list:REG_DEAD (reg:DF 298)
        (nil)))

(note:HI 771 770 772 41 ("./CppStatUtilities.cc") 425)

(insn:HI 772 771 773 41 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 125 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 773 772 1055 41 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/f:DI 129 [ ivtmp.664 ])
                (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
(code_label:HI 1055 773 798 42 541 "" [1 uses])

(note:HI 798 1055 788 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note:HI 788 798 789 42 ("./CppStatUtilities.cc") 426)

(insn:HI 789 788 790 42 ./CppStatUtilities.cc:426 (set (reg:DF 301)
        (float:DF (reg/v:SI 125 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 790 789 791 42 ./CppStatUtilities.cc:426 (set (reg:DF 301)
        (mult:DF (reg:DF 301)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 789 (nil))
    (nil))

(insn:HI 791 790 792 42 ./CppStatUtilities.cc:426 (set (reg:DF 301)
        (plus:DF (reg:DF 301)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 790 (nil))
    (nil))

(insn:HI 792 791 793 42 ./CppStatUtilities.cc:426 (set (mem:DF (reg/f:DI 129 [ ivtmp.664 ]) [3 S8 A64])
        (reg:DF 301)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 791 (nil))
    (expr_list:REG_DEAD (reg:DF 301)
        (nil)))

(note:HI 793 792 794 42 ("./CppStatUtilities.cc") 425)

(insn:HI 794 793 795 42 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 125 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 795 794 1054 42 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/f:DI 129 [ ivtmp.664 ])
                (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
(code_label:HI 1054 795 820 43 540 "" [1 uses])

(note:HI 820 1054 810 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(note:HI 810 820 811 43 ("./CppStatUtilities.cc") 426)

(insn:HI 811 810 812 43 ./CppStatUtilities.cc:426 (set (reg:DF 304)
        (float:DF (reg/v:SI 125 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 812 811 813 43 ./CppStatUtilities.cc:426 (set (reg:DF 304)
        (mult:DF (reg:DF 304)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 811 (nil))
    (nil))

(insn:HI 813 812 814 43 ./CppStatUtilities.cc:426 (set (reg:DF 304)
        (plus:DF (reg:DF 304)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 812 (nil))
    (nil))

(insn:HI 814 813 815 43 ./CppStatUtilities.cc:426 (set (mem:DF (reg/f:DI 129 [ ivtmp.664 ]) [3 S8 A64])
        (reg:DF 304)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 813 (nil))
    (expr_list:REG_DEAD (reg:DF 304)
        (nil)))

(note:HI 815 814 816 43 ("./CppStatUtilities.cc") 425)

(insn:HI 816 815 817 43 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 125 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 817 816 1053 43 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/f:DI 129 [ ivtmp.664 ])
                (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
(code_label:HI 1053 817 842 44 539 "" [1 uses])

(note:HI 842 1053 832 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(note:HI 832 842 833 44 ("./CppStatUtilities.cc") 426)

(insn:HI 833 832 834 44 ./CppStatUtilities.cc:426 (set (reg:DF 307)
        (float:DF (reg/v:SI 125 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 834 833 835 44 ./CppStatUtilities.cc:426 (set (reg:DF 307)
        (mult:DF (reg:DF 307)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 833 (nil))
    (nil))

(insn:HI 835 834 836 44 ./CppStatUtilities.cc:426 (set (reg:DF 307)
        (plus:DF (reg:DF 307)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 834 (nil))
    (nil))

(insn:HI 836 835 837 44 ./CppStatUtilities.cc:426 (set (mem:DF (reg/f:DI 129 [ ivtmp.664 ]) [3 S8 A64])
        (reg:DF 307)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 835 (nil))
    (expr_list:REG_DEAD (reg:DF 307)
        (nil)))

(note:HI 837 836 838 44 ("./CppStatUtilities.cc") 425)

(insn:HI 838 837 839 44 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 125 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 839 838 840 44 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/f:DI 129 [ ivtmp.664 ])
                (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 840 839 841 44 ./CppStatUtilities.cc:425 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 125 [ i ])
            (reg/v:SI 77 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 838 (nil))
    (nil))

(jump_insn:HI 841 840 50 44 ./CppStatUtilities.cc:425 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 62)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 840 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
(code_label:HI 50 841 51 45 453 "" [2 uses])

(note:HI 51 50 52 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(note:HI 52 51 53 45 ("./CppStatUtilities.cc") 426)

(insn:HI 53 52 54 45 ./CppStatUtilities.cc:426 (set (reg:DF 126)
        (float:DF (reg/v:SI 125 [ i ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 54 53 55 45 ./CppStatUtilities.cc:426 (set (reg:DF 126)
        (mult:DF (reg:DF 126)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 53 (nil))
    (nil))

(insn:HI 55 54 56 45 ./CppStatUtilities.cc:426 (set (reg:DF 126)
        (plus:DF (reg:DF 126)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 54 (nil))
    (nil))

(insn:HI 56 55 57 45 ./CppStatUtilities.cc:426 (set (mem:DF (reg/f:DI 129 [ ivtmp.664 ]) [3 S8 A64])
        (reg:DF 126)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 55 (nil))
    (expr_list:REG_DEAD (reg:DF 126)
        (nil)))

(note:HI 57 56 972 45 ("./CppStatUtilities.cc") 425)

(insn:HI 972 57 854 45 ./CppStatUtilities.cc:425 (parallel [
            (set (reg:SI 124)
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 854 972 855 45 ("./CppStatUtilities.cc") 426)

(insn:HI 855 854 856 45 ./CppStatUtilities.cc:426 (set (reg:DF 131)
        (float:DF (reg:SI 124))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 972 (nil))
    (expr_list:REG_DEAD (reg:SI 124)
        (nil)))

(insn:HI 856 855 857 45 ./CppStatUtilities.cc:426 (set (reg:DF 131)
        (mult:DF (reg:DF 131)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 855 (nil))
    (nil))

(insn:HI 857 856 858 45 ./CppStatUtilities.cc:426 (set (reg:DF 131)
        (plus:DF (reg:DF 131)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 856 (nil))
    (nil))

(insn:HI 858 857 859 45 ./CppStatUtilities.cc:426 (set (mem:DF (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 131)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 857 (nil))
    (expr_list:REG_DEAD (reg:DF 131)
        (nil)))

(note:HI 859 858 860 45 ("./CppStatUtilities.cc") 425)

(insn:HI 860 859 871 45 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 135 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 871 860 872 45 ("./CppStatUtilities.cc") 426)

(insn:HI 872 871 873 45 ./CppStatUtilities.cc:426 (set (reg:DF 136)
        (float:DF (reg/v:SI 135 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 860 (nil))
    (expr_list:REG_DEAD (reg/v:SI 135 [ i ])
        (nil)))

(insn:HI 873 872 874 45 ./CppStatUtilities.cc:426 (set (reg:DF 136)
        (mult:DF (reg:DF 136)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 872 (nil))
    (nil))

(insn:HI 874 873 875 45 ./CppStatUtilities.cc:426 (set (reg:DF 136)
        (plus:DF (reg:DF 136)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 873 (nil))
    (nil))

(insn:HI 875 874 876 45 ./CppStatUtilities.cc:426 (set (mem:DF (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                (const_int 16 [0x10])) [3 S8 A64])
        (reg:DF 136)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 874 (nil))
    (expr_list:REG_DEAD (reg:DF 136)
        (nil)))

(note:HI 876 875 877 45 ("./CppStatUtilities.cc") 425)

(insn:HI 877 876 888 45 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 140 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 888 877 889 45 ("./CppStatUtilities.cc") 426)

(insn:HI 889 888 890 45 ./CppStatUtilities.cc:426 (set (reg:DF 141)
        (float:DF (reg/v:SI 140 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 877 (nil))
    (expr_list:REG_DEAD (reg/v:SI 140 [ i ])
        (nil)))

(insn:HI 890 889 891 45 ./CppStatUtilities.cc:426 (set (reg:DF 141)
        (mult:DF (reg:DF 141)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 889 (nil))
    (nil))

(insn:HI 891 890 892 45 ./CppStatUtilities.cc:426 (set (reg:DF 141)
        (plus:DF (reg:DF 141)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 890 (nil))
    (nil))

(insn:HI 892 891 893 45 ./CppStatUtilities.cc:426 (set (mem:DF (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                (const_int 24 [0x18])) [3 S8 A64])
        (reg:DF 141)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 891 (nil))
    (expr_list:REG_DEAD (reg:DF 141)
        (nil)))

(note:HI 893 892 894 45 ("./CppStatUtilities.cc") 425)

(insn:HI 894 893 905 45 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 145 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 905 894 906 45 ("./CppStatUtilities.cc") 426)

(insn:HI 906 905 907 45 ./CppStatUtilities.cc:426 (set (reg:DF 146)
        (float:DF (reg/v:SI 145 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 894 (nil))
    (expr_list:REG_DEAD (reg/v:SI 145 [ i ])
        (nil)))

(insn:HI 907 906 908 45 ./CppStatUtilities.cc:426 (set (reg:DF 146)
        (mult:DF (reg:DF 146)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 906 (nil))
    (nil))

(insn:HI 908 907 909 45 ./CppStatUtilities.cc:426 (set (reg:DF 146)
        (plus:DF (reg:DF 146)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 907 (nil))
    (nil))

(insn:HI 909 908 910 45 ./CppStatUtilities.cc:426 (set (mem:DF (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                (const_int 32 [0x20])) [3 S8 A64])
        (reg:DF 146)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 908 (nil))
    (expr_list:REG_DEAD (reg:DF 146)
        (nil)))

(note:HI 910 909 911 45 ("./CppStatUtilities.cc") 425)

(insn:HI 911 910 922 45 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 150 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 922 911 923 45 ("./CppStatUtilities.cc") 426)

(insn:HI 923 922 924 45 ./CppStatUtilities.cc:426 (set (reg:DF 151)
        (float:DF (reg/v:SI 150 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 911 (nil))
    (expr_list:REG_DEAD (reg/v:SI 150 [ i ])
        (nil)))

(insn:HI 924 923 925 45 ./CppStatUtilities.cc:426 (set (reg:DF 151)
        (mult:DF (reg:DF 151)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 923 (nil))
    (nil))

(insn:HI 925 924 926 45 ./CppStatUtilities.cc:426 (set (reg:DF 151)
        (plus:DF (reg:DF 151)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 924 (nil))
    (nil))

(insn:HI 926 925 927 45 ./CppStatUtilities.cc:426 (set (mem:DF (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                (const_int 40 [0x28])) [3 S8 A64])
        (reg:DF 151)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 925 (nil))
    (expr_list:REG_DEAD (reg:DF 151)
        (nil)))

(note:HI 927 926 928 45 ("./CppStatUtilities.cc") 425)

(insn:HI 928 927 939 45 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 155 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 939 928 940 45 ("./CppStatUtilities.cc") 426)

(insn:HI 940 939 941 45 ./CppStatUtilities.cc:426 (set (reg:DF 156)
        (float:DF (reg/v:SI 155 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 928 (nil))
    (expr_list:REG_DEAD (reg/v:SI 155 [ i ])
        (nil)))

(insn:HI 941 940 942 45 ./CppStatUtilities.cc:426 (set (reg:DF 156)
        (mult:DF (reg:DF 156)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 940 (nil))
    (nil))

(insn:HI 942 941 943 45 ./CppStatUtilities.cc:426 (set (reg:DF 156)
        (plus:DF (reg:DF 156)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 941 (nil))
    (nil))

(insn:HI 943 942 944 45 ./CppStatUtilities.cc:426 (set (mem:DF (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                (const_int 48 [0x30])) [3 S8 A64])
        (reg:DF 156)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 942 (nil))
    (expr_list:REG_DEAD (reg:DF 156)
        (nil)))

(note:HI 944 943 945 45 ("./CppStatUtilities.cc") 425)

(insn:HI 945 944 956 45 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 160 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 956 945 957 45 ("./CppStatUtilities.cc") 426)

(insn:HI 957 956 958 45 ./CppStatUtilities.cc:426 (set (reg:DF 161)
        (float:DF (reg/v:SI 160 [ i ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 945 (nil))
    (expr_list:REG_DEAD (reg/v:SI 160 [ i ])
        (nil)))

(insn:HI 958 957 959 45 ./CppStatUtilities.cc:426 (set (reg:DF 161)
        (mult:DF (reg:DF 161)
            (reg/v:DF 67 [ dx ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 957 (nil))
    (nil))

(insn:HI 959 958 960 45 ./CppStatUtilities.cc:426 (set (reg:DF 161)
        (plus:DF (reg:DF 161)
            (reg:DF 62 [ pretmp.640 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 958 (nil))
    (nil))

(insn:HI 960 959 961 45 ./CppStatUtilities.cc:426 (set (mem:DF (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                (const_int 56 [0x38])) [3 S8 A64])
        (reg:DF 161)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 959 (nil))
    (expr_list:REG_DEAD (reg:DF 161)
        (nil)))

(note:HI 961 960 962 45 ("./CppStatUtilities.cc") 425)

(insn:HI 962 961 963 45 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/v:SI 125 [ i ])
                (plus:SI (reg/v:SI 125 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 963 962 964 45 ./CppStatUtilities.cc:425 (parallel [
            (set (reg/f:DI 129 [ ivtmp.664 ])
                (plus:DI (reg/f:DI 129 [ ivtmp.664 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 964 963 965 45 ./CppStatUtilities.cc:425 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 125 [ i ])
            (reg/v:SI 77 [ nBins ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 962 (nil))
    (nil))

(jump_insn:HI 965 964 970 45 ./CppStatUtilities.cc:425 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 62)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 964 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129
(note:HI 970 965 1031 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1031 970 1032 46 (set (pc)
        (label_ref 50)) 548 {jump} (nil)
    (nil))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 67 68 69 71 75 76 77 78 79 125 129

(barrier:HI 1032 1031 123)

(note:HI 123 1032 124 NOTE_INSN_FUNCTION_END)

(note:HI 124 123 0 ("./CppStatUtilities.cc") 439)


;; Function void summaryStats_t::print() const (_ZNK14summaryStats_t5printEv)



Pass 0

  Register 58 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 60 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 61 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 62 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 63 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 64 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 65 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 66 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 67 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 68 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 69 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 70 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 71 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 72 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:104000 MMX_REGS:104000 FP_TOP_SSE_REGS:104000 FP_SECOND_SSE_REGS:104000 FLOAT_SSE_REGS:104000 FLOAT_INT_REGS:72000 INT_SSE_REGS:104000 FLOAT_INT_SSE_REGS:104000 ALL_REGS:104000 MEM:32000

  Register 58 pref DIREG, else GENERAL_REGS
  Register 60 pref DIREG, else GENERAL_REGS
  Register 61 pref DIREG, else GENERAL_REGS
  Register 62 pref DIREG, else GENERAL_REGS
  Register 63 pref DIREG, else GENERAL_REGS
  Register 64 pref DIREG, else GENERAL_REGS
  Register 65 pref DIREG, else GENERAL_REGS
  Register 66 pref DIREG, else GENERAL_REGS
  Register 67 pref DIREG, else GENERAL_REGS
  Register 68 pref DIREG, else GENERAL_REGS
  Register 69 pref DIREG, else GENERAL_REGS
  Register 70 pref DIREG, else GENERAL_REGS
  Register 71 pref DIREG, else GENERAL_REGS
  Register 72 pref DIREG, else GENERAL_REGS
  Register 73 pref FLOAT_INT_SSE_REGS or none
  Register 74 pref FLOAT_INT_SSE_REGS or none
  Register 75 pref FLOAT_INT_SSE_REGS or none
  Register 76 pref FLOAT_INT_SSE_REGS or none
  Register 77 pref FLOAT_INT_SSE_REGS or none
  Register 78 pref FLOAT_INT_SSE_REGS or none
  Register 79 pref FLOAT_INT_SSE_REGS or none
  Register 80 pref DIREG, else GENERAL_REGS


Pass 1

  Register 58 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 60 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 61 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 62 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 63 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 64 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 65 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 66 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 67 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 68 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 69 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 70 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 71 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 72 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:34000 INDEX_REGS:0 LEGACY_REGS:34000 GENERAL_REGS:34000 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:42000 MEM:7000
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:104000 MMX_REGS:104000 FP_TOP_SSE_REGS:104000 FP_SECOND_SSE_REGS:104000 FLOAT_SSE_REGS:104000 FLOAT_INT_REGS:72000 INT_SSE_REGS:104000 FLOAT_INT_SSE_REGS:104000 ALL_REGS:104000 MEM:32000

81 registers.

Register 58 used 2 times across 2 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 60 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 61 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 62 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 63 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 64 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 65 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 66 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 67 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 68 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 69 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 70 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 71 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 72 used 2 times across 3 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 73 used 2 times across 6 insns in block 0; set 1 time; crosses 1 call; FLOAT_INT_SSE_REGS or none.

Register 74 used 2 times across 15 insns in block 0; set 1 time; crosses 3 calls; FLOAT_INT_SSE_REGS or none.

Register 75 used 2 times across 24 insns in block 0; set 1 time; crosses 5 calls; FLOAT_INT_SSE_REGS or none.

Register 76 used 2 times across 33 insns in block 0; set 1 time; crosses 7 calls; FLOAT_INT_SSE_REGS or none.

Register 77 used 2 times across 42 insns in block 0; set 1 time; crosses 9 calls; FLOAT_INT_SSE_REGS or none.

Register 78 used 2 times across 51 insns in block 0; set 1 time; crosses 11 calls; FLOAT_INT_SSE_REGS or none.

Register 79 used 2 times across 60 insns in block 0; set 1 time; crosses 13 calls; FLOAT_INT_SSE_REGS or none.

Register 80 used 8 times across 8 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS; pointer.

1 basic blocks, 2 edges.

Basic block 0 prev -1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)
Registers live at start: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 58 in 5.
;; Register 60 in 5.
;; Register 61 in 5.
;; Register 62 in 5.
;; Register 63 in 5.
;; Register 64 in 5.
;; Register 65 in 5.
;; Register 66 in 5.
;; Register 67 in 5.
;; Register 68 in 5.
;; Register 69 in 5.
;; Register 70 in 5.
;; Register 71 in 5.
;; Register 72 in 5.
;; Register 73 in 3.
;; Register 74 in 41.
;; Register 75 in 42.
;; Register 76 in 43.
;; Register 77 in 44.
;; Register 80 in 5.
(note:HI 1 0 6 ("./CppStatUtilities.cc") 54)

;; Start of basic block 0, registers live: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 6 4 0 ./CppStatUtilities.cc:54 (set (reg/f:DI 80 [ this ])
        (reg:DI 5 di [ this ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))

(note:HI 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 8 4 9 0 ("./CppStatUtilities.cc") 59)

(insn:HI 9 8 10 0 ./CppStatUtilities.cc:59 (set (reg:DF 79 [ D.34446 ])
        (mem/s:DF (plus:DI (reg/f:DI 80 [ this ])
                (const_int 32 [0x20])) [3 <variable>.mad+0 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn:HI 10 9 11 0 ./CppStatUtilities.cc:59 (set (reg:DF 78 [ D.34447 ])
        (mem/s:DF (plus:DI (reg/f:DI 80 [ this ])
                (const_int 8 [0x8])) [3 <variable>.max+0 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 11 10 12 0 ./CppStatUtilities.cc:59 (set (reg:DF 77 [ D.34448 ])
        (mem/s:DF (plus:DI (reg/f:DI 80 [ this ])
                (const_int 48 [0x30])) [3 <variable>.q3+0 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 12 11 13 0 ./CppStatUtilities.cc:59 (set (reg:DF 76 [ D.34449 ])
        (mem/s:DF (plus:DI (reg/f:DI 80 [ this ])
                (const_int 24 [0x18])) [3 <variable>.mean+0 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 13 12 14 0 ./CppStatUtilities.cc:59 (set (reg:DF 75 [ D.34450 ])
        (mem/s:DF (plus:DI (reg/f:DI 80 [ this ])
                (const_int 16 [0x10])) [3 <variable>.med+0 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 14 13 15 0 ./CppStatUtilities.cc:59 (set (reg:DF 74 [ D.34451 ])
        (mem/s:DF (plus:DI (reg/f:DI 80 [ this ])
                (const_int 40 [0x28])) [3 <variable>.q1+0 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 15 14 16 0 ./CppStatUtilities.cc:59 (set (reg:DF 73 [ D.34452 ])
        (mem/s:DF (reg/f:DI 80 [ this ]) [3 <variable>.min+0 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/f:DI 80 [ this ])
        (nil)))

(insn:HI 16 15 17 0 ./CppStatUtilities.cc:59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2] <string_cst 0x2b5eb6a34840>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 17 16 18 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cerr") [flags 0x40] <var_decl 0x2b5eb61c5840 cerr>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 18 17 19 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 16 (insn_list:REG_DEP_TRUE 17 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 19 18 20 0 ./CppStatUtilities.cc:59 (set (reg:DI 72 [ D.34453 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 20 19 21 0 ./CppStatUtilities.cc:59 (set (reg:DF 21 xmm0 [ D.34452 ])
        (reg:DF 73 [ D.34452 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_DEAD (reg:DF 73 [ D.34452 ])
        (nil)))

(insn:HI 21 20 22 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34453 ])
        (reg:DI 72 [ D.34453 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 19 (nil))
    (expr_list:REG_DEAD (reg:DI 72 [ D.34453 ])
        (nil)))

(call_insn:HI 22 21 23 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41] <function_decl 0x2b5eb6055f00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 20 (insn_list:REG_DEP_TRUE 21 (nil)))
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ D.34452 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34453 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34453 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ D.34452 ]))
            (nil))))

(insn:HI 23 22 24 0 ./CppStatUtilities.cc:59 (set (reg:DI 71 [ D.34454 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 22 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 24 23 25 0 ./CppStatUtilities.cc:59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2] <string_cst 0x2b5eb6a34930>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 25 24 26 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34454 ])
        (reg:DI 71 [ D.34454 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 23 (nil))
    (expr_list:REG_DEAD (reg:DI 71 [ D.34454 ])
        (nil)))

(call_insn:HI 26 25 27 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 24 (insn_list:REG_DEP_TRUE 25 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34454 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34454 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 27 26 28 0 ./CppStatUtilities.cc:59 (set (reg:DI 70 [ D.34455 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 26 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 28 27 29 0 ./CppStatUtilities.cc:59 (set (reg:DF 21 xmm0 [ D.34451 ])
        (reg:DF 74 [ D.34451 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:DF 74 [ D.34451 ])
        (nil)))

(insn:HI 29 28 30 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34455 ])
        (reg:DI 70 [ D.34455 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:DI 70 [ D.34455 ])
        (nil)))

(call_insn:HI 30 29 31 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41] <function_decl 0x2b5eb6055f00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 28 (insn_list:REG_DEP_TRUE 29 (nil)))
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ D.34451 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34455 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34455 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ D.34451 ]))
            (nil))))

(insn:HI 31 30 32 0 ./CppStatUtilities.cc:59 (set (reg:DI 69 [ D.34456 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 30 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 32 31 33 0 ./CppStatUtilities.cc:59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2] <string_cst 0x2b5eb6a34960>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 33 32 34 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34456 ])
        (reg:DI 69 [ D.34456 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_DEAD (reg:DI 69 [ D.34456 ])
        (nil)))

(call_insn:HI 34 33 35 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 32 (insn_list:REG_DEP_TRUE 33 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34456 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34456 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 35 34 36 0 ./CppStatUtilities.cc:59 (set (reg:DI 68 [ D.34457 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 34 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 36 35 37 0 ./CppStatUtilities.cc:59 (set (reg:DF 21 xmm0 [ D.34450 ])
        (reg:DF 75 [ D.34450 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_DEAD (reg:DF 75 [ D.34450 ])
        (nil)))

(insn:HI 37 36 38 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34457 ])
        (reg:DI 68 [ D.34457 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 35 (nil))
    (expr_list:REG_DEAD (reg:DI 68 [ D.34457 ])
        (nil)))

(call_insn:HI 38 37 39 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41] <function_decl 0x2b5eb6055f00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 36 (insn_list:REG_DEP_TRUE 37 (nil)))
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ D.34450 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34457 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34457 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ D.34450 ]))
            (nil))))

(insn:HI 39 38 40 0 ./CppStatUtilities.cc:59 (set (reg:DI 67 [ D.34458 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 38 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 40 39 41 0 ./CppStatUtilities.cc:59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2] <string_cst 0x2b5eb6a34a20>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 41 40 42 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34458 ])
        (reg:DI 67 [ D.34458 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 39 (nil))
    (expr_list:REG_DEAD (reg:DI 67 [ D.34458 ])
        (nil)))

(call_insn:HI 42 41 43 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 40 (insn_list:REG_DEP_TRUE 41 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34458 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34458 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 43 42 44 0 ./CppStatUtilities.cc:59 (set (reg:DI 66 [ D.34459 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 42 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 44 43 45 0 ./CppStatUtilities.cc:59 (set (reg:DF 21 xmm0 [ D.34449 ])
        (reg:DF 76 [ D.34449 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:DF 76 [ D.34449 ])
        (nil)))

(insn:HI 45 44 46 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34459 ])
        (reg:DI 66 [ D.34459 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 43 (nil))
    (expr_list:REG_DEAD (reg:DI 66 [ D.34459 ])
        (nil)))

(call_insn:HI 46 45 47 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41] <function_decl 0x2b5eb6055f00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 44 (insn_list:REG_DEP_TRUE 45 (nil)))
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ D.34449 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34459 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34459 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ D.34449 ]))
            (nil))))

(insn:HI 47 46 48 0 ./CppStatUtilities.cc:59 (set (reg:DI 65 [ D.34460 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 48 47 49 0 ./CppStatUtilities.cc:59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2] <string_cst 0x2b5eb6a34ae0>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 49 48 50 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34460 ])
        (reg:DI 65 [ D.34460 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 47 (nil))
    (expr_list:REG_DEAD (reg:DI 65 [ D.34460 ])
        (nil)))

(call_insn:HI 50 49 51 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 48 (insn_list:REG_DEP_TRUE 49 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34460 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34460 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 51 50 52 0 ./CppStatUtilities.cc:59 (set (reg:DI 64 [ D.34461 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 50 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 52 51 53 0 ./CppStatUtilities.cc:59 (set (reg:DF 21 xmm0 [ D.34448 ])
        (reg:DF 77 [ D.34448 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 11 (nil))
    (expr_list:REG_DEAD (reg:DF 77 [ D.34448 ])
        (nil)))

(insn:HI 53 52 54 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34461 ])
        (reg:DI 64 [ D.34461 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 51 (nil))
    (expr_list:REG_DEAD (reg:DI 64 [ D.34461 ])
        (nil)))

(call_insn:HI 54 53 55 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41] <function_decl 0x2b5eb6055f00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 52 (insn_list:REG_DEP_TRUE 53 (nil)))
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ D.34448 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34461 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34461 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ D.34448 ]))
            (nil))))

(insn:HI 55 54 56 0 ./CppStatUtilities.cc:59 (set (reg:DI 63 [ D.34462 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 54 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 56 55 57 0 ./CppStatUtilities.cc:59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2] <string_cst 0x2b5eb6a34b10>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 57 56 58 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34462 ])
        (reg:DI 63 [ D.34462 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 55 (nil))
    (expr_list:REG_DEAD (reg:DI 63 [ D.34462 ])
        (nil)))

(call_insn:HI 58 57 59 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 56 (insn_list:REG_DEP_TRUE 57 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34462 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34462 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 59 58 60 0 ./CppStatUtilities.cc:59 (set (reg:DI 62 [ D.34463 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 58 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 60 59 61 0 ./CppStatUtilities.cc:59 (set (reg:DF 21 xmm0 [ D.34447 ])
        (reg:DF 78 [ D.34447 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:DF 78 [ D.34447 ])
        (nil)))

(insn:HI 61 60 62 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34463 ])
        (reg:DI 62 [ D.34463 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 59 (nil))
    (expr_list:REG_DEAD (reg:DI 62 [ D.34463 ])
        (nil)))

(call_insn:HI 62 61 63 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41] <function_decl 0x2b5eb6055f00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 60 (insn_list:REG_DEP_TRUE 61 (nil)))
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ D.34447 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34463 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34463 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ D.34447 ]))
            (nil))))

(insn:HI 63 62 64 0 ./CppStatUtilities.cc:59 (set (reg:DI 61 [ D.34464 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 62 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 64 63 65 0 ./CppStatUtilities.cc:59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2] <string_cst 0x2b5eb6a34b40>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 65 64 66 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34464 ])
        (reg:DI 61 [ D.34464 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 63 (nil))
    (expr_list:REG_DEAD (reg:DI 61 [ D.34464 ])
        (nil)))

(call_insn:HI 66 65 67 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 64 (insn_list:REG_DEP_TRUE 65 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34464 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34464 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 67 66 68 0 ./CppStatUtilities.cc:59 (set (reg:DI 60 [ D.34465 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 66 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 68 67 69 0 ./CppStatUtilities.cc:59 (set (reg:DF 21 xmm0 [ D.34446 ])
        (reg:DF 79 [ D.34446 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 9 (nil))
    (expr_list:REG_DEAD (reg:DF 79 [ D.34446 ])
        (nil)))

(insn:HI 69 68 70 0 ./CppStatUtilities.cc:59 (set (reg:DI 5 di [ D.34465 ])
        (reg:DI 60 [ D.34465 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 67 (nil))
    (expr_list:REG_DEAD (reg:DI 60 [ D.34465 ])
        (nil)))

(call_insn:HI 70 69 71 0 ./CppStatUtilities.cc:59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41] <function_decl 0x2b5eb6055f00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 68 (insn_list:REG_DEP_TRUE 69 (nil)))
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ D.34446 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34465 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34465 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ D.34446 ]))
            (nil))))

(insn:HI 71 70 72 0 ./CppStatUtilities.cc:59 (set (reg:DI 58 [ this ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 70 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(note:HI 72 71 73 0 ("/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc") 72)

(insn:HI 73 72 74 0 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc:72 (set (reg:DI 5 di [ this ])
        (reg:DI 58 [ this ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 71 (nil))
    (expr_list:REG_DEAD (reg:DI 58 [ this ])
        (nil)))

(call_insn/j:HI 74 73 75 0 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc:72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41] <function_decl 0x2b5eb6063d00 endl>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 73 (nil))
    (expr_list:REG_UNUSED (reg:DI 0 ax)
        (expr_list:REG_DEAD (reg:DI 5 di [ this ])
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ this ]))
        (nil)))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 75 74 77)

(note:HI 77 75 78 NOTE_INSN_FUNCTION_END)

(note:HI 78 77 0 ("./CppStatUtilities.cc") 60)


;; Function double* percentiles(const double*, int, const double*, int, int) (_Z11percentilesPKdiS0_ii)



Pass 0

  Register 59 costs: AREG:2015 DREG:2015 CREG:2015 BREG:2015 SIREG:2015 DIREG:2015 AD_REGS:2015 Q_REGS:2015 NON_Q_REGS:3341 INDEX_REGS:2015 LEGACY_REGS:3341 GENERAL_REGS:3341 FP_TOP_REG:3255 FP_SECOND_REG:3255 FLOAT_REGS:3255 SSE_REGS:0 FP_TOP_SSE_REGS:3255 FP_SECOND_SSE_REGS:3255 FLOAT_SSE_REGS:3255 FLOAT_INT_REGS:3255 INT_SSE_REGS:2015 FLOAT_INT_SSE_REGS:3255 ALL_REGS:4893 MEM:1552
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1496 INDEX_REGS:0 LEGACY_REGS:1496 GENERAL_REGS:1496 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1848 MEM:308
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17446 MMX_REGS:17446 FP_TOP_SSE_REGS:17446 FP_SECOND_SSE_REGS:17446 FLOAT_SSE_REGS:17446 FLOAT_INT_REGS:12078 INT_SSE_REGS:17446 FLOAT_INT_SSE_REGS:17446 ALL_REGS:17446 MEM:5368
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25740 MMX_REGS:25740 FP_TOP_SSE_REGS:25740 FP_SECOND_SSE_REGS:25740 FLOAT_SSE_REGS:25740 FLOAT_INT_REGS:17820 INT_SSE_REGS:25740 FLOAT_INT_SSE_REGS:25740 ALL_REGS:25740 MEM:6573
  Register 63 costs: AREG:-36 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4264 MMX_REGS:4264 FP_TOP_SSE_REGS:4264 FP_SECOND_SSE_REGS:4264 FLOAT_SSE_REGS:4264 FLOAT_INT_REGS:2952 INT_SSE_REGS:4264 FLOAT_INT_SSE_REGS:4264 ALL_REGS:4264 MEM:1257
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:806 MMX_REGS:806 FP_TOP_SSE_REGS:806 FP_SECOND_SSE_REGS:806 FLOAT_SSE_REGS:806 FLOAT_INT_REGS:558 INT_SSE_REGS:806 FLOAT_INT_SSE_REGS:806 ALL_REGS:806 MEM:217
  Register 66 costs: AREG:5968 DREG:5968 CREG:5968 BREG:5968 SIREG:5968 DIREG:5968 AD_REGS:5968 Q_REGS:5968 NON_Q_REGS:5968 INDEX_REGS:5968 LEGACY_REGS:5968 GENERAL_REGS:5968 FP_TOP_REG:9184 FP_SECOND_REG:9184 FLOAT_REGS:9184 SSE_REGS:742 FP_TOP_SSE_REGS:9184 FP_SECOND_SSE_REGS:9184 FLOAT_SSE_REGS:9184 FLOAT_INT_REGS:9184 INT_SSE_REGS:5968 FLOAT_INT_SSE_REGS:9184 ALL_REGS:9184 MEM:3958
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5629 MMX_REGS:5629 FP_TOP_SSE_REGS:5629 FP_SECOND_SSE_REGS:5629 FLOAT_SSE_REGS:5629 FLOAT_INT_REGS:3897 INT_SSE_REGS:5629 FLOAT_INT_SSE_REGS:5629 ALL_REGS:5629 MEM:1299
  Register 68 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 70 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 72 costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:18 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  Register 74 costs: AREG:3105 DREG:3105 CREG:3105 BREG:3105 SIREG:3105 DIREG:3105 AD_REGS:3105 Q_REGS:3105 NON_Q_REGS:3105 INDEX_REGS:3105 LEGACY_REGS:3105 GENERAL_REGS:3105 FP_TOP_REG:4905 FP_SECOND_REG:4905 FLOAT_REGS:4905 SSE_REGS:180 FP_TOP_SSE_REGS:4905 FP_SECOND_SSE_REGS:4905 FLOAT_SSE_REGS:4905 FLOAT_INT_REGS:4905 INT_SSE_REGS:3105 FLOAT_INT_SSE_REGS:4905 ALL_REGS:4905 MEM:1890
  Register 75 costs: AREG:1939 DREG:1939 CREG:1939 BREG:1939 SIREG:1939 DIREG:1939 AD_REGS:1939 Q_REGS:1939 NON_Q_REGS:2466 INDEX_REGS:1939 LEGACY_REGS:2466 GENERAL_REGS:2466 FP_TOP_REG:3067 FP_SECOND_REG:3067 FLOAT_REGS:3067 SSE_REGS:106 FP_TOP_SSE_REGS:3067 FP_SECOND_SSE_REGS:3067 FLOAT_SSE_REGS:3067 FLOAT_INT_REGS:3067 INT_SSE_REGS:1939 FLOAT_INT_SSE_REGS:3067 ALL_REGS:3718 MEM:1283
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:806 MMX_REGS:806 FP_TOP_SSE_REGS:806 FP_SECOND_SSE_REGS:806 FLOAT_SSE_REGS:806 FLOAT_INT_REGS:558 INT_SSE_REGS:806 FLOAT_INT_SSE_REGS:806 ALL_REGS:806 MEM:217
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-44 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24076 MMX_REGS:24076 FP_TOP_SSE_REGS:24076 FP_SECOND_SSE_REGS:24076 FLOAT_SSE_REGS:24076 FLOAT_INT_REGS:16668 INT_SSE_REGS:24076 FLOAT_INT_SSE_REGS:24076 ALL_REGS:24076 MEM:6437
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-35 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9542 MMX_REGS:9542 FP_TOP_SSE_REGS:9542 FP_SECOND_SSE_REGS:9542 FLOAT_SSE_REGS:9542 FLOAT_INT_REGS:6606 INT_SSE_REGS:9542 FLOAT_INT_SSE_REGS:9542 ALL_REGS:9542 MEM:2866
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3614 MMX_REGS:3614 INT_SSE_REGS:3614 MEM:954
  Register 83 costs: AREG:733 DREG:733 CREG:733 BREG:733 SIREG:733 DIREG:733 AD_REGS:733 Q_REGS:733 NON_Q_REGS:1260 INDEX_REGS:733 LEGACY_REGS:1260 GENERAL_REGS:1260 FP_TOP_REG:1157 FP_SECOND_REG:1157 FLOAT_REGS:1157 SSE_REGS:44 FP_TOP_SSE_REGS:1157 FP_SECOND_SSE_REGS:1157 FLOAT_SSE_REGS:1157 FLOAT_INT_REGS:1157 INT_SSE_REGS:733 FLOAT_INT_SSE_REGS:1157 ALL_REGS:1808 MEM:539
  Register 85 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 86 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:210 INDEX_REGS:0 LEGACY_REGS:210 GENERAL_REGS:210 SSE_REGS:2301 MMX_REGS:2301 FP_TOP_SSE_REGS:2301 FP_SECOND_SSE_REGS:2301 FLOAT_SSE_REGS:2301 FLOAT_INT_REGS:1593 INT_SSE_REGS:2301 FLOAT_INT_SSE_REGS:2301 ALL_REGS:2301 MEM:672
  Register 87 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-35 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:72 INDEX_REGS:0 LEGACY_REGS:72 GENERAL_REGS:72 SSE_REGS:1391 MMX_REGS:1391 FP_TOP_SSE_REGS:1391 FP_SECOND_SSE_REGS:1391 FLOAT_SSE_REGS:1391 FLOAT_INT_REGS:963 INT_SSE_REGS:1391 FLOAT_INT_SSE_REGS:1391 ALL_REGS:1391 MEM:393
  Register 88 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 89 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 90 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 91 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 92 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 93 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 94 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 95 costs: AREG:2743 DREG:2743 CREG:2743 BREG:2743 SIREG:2743 DIREG:2743 AD_REGS:2743 Q_REGS:2743 NON_Q_REGS:4545 INDEX_REGS:2743 LEGACY_REGS:4545 GENERAL_REGS:4545 FP_TOP_REG:4431 FP_SECOND_REG:4431 FLOAT_REGS:4431 SSE_REGS:0 FP_TOP_SSE_REGS:4431 FP_SECOND_SSE_REGS:4431 FLOAT_SSE_REGS:4431 FLOAT_INT_REGS:4431 INT_SSE_REGS:2743 FLOAT_INT_SSE_REGS:4431 ALL_REGS:6657 MEM:2006
  Register 96 costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:18 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  Register 97 costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:18 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  Register 98 costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:18 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  Register 99 costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:18 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  Register 101 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-81 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7332 MMX_REGS:7332 FP_TOP_SSE_REGS:7332 FP_SECOND_SSE_REGS:7332 FLOAT_SSE_REGS:7332 FLOAT_INT_REGS:5076 INT_SSE_REGS:7332 FLOAT_INT_SSE_REGS:7332 ALL_REGS:7332 MEM:2256
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-81 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6253 MMX_REGS:6253 FP_TOP_SSE_REGS:6253 FP_SECOND_SSE_REGS:6253 FLOAT_SSE_REGS:6253 FLOAT_INT_REGS:4329 INT_SSE_REGS:6253 FLOAT_INT_SSE_REGS:6253 ALL_REGS:6253 MEM:1524
  Register 103 costs: AREG:0 DREG:-81 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11583 MMX_REGS:11583 FP_TOP_SSE_REGS:11583 FP_SECOND_SSE_REGS:11583 FLOAT_SSE_REGS:11583 FLOAT_INT_REGS:8019 INT_SSE_REGS:11583 FLOAT_INT_SSE_REGS:11583 ALL_REGS:11583 MEM:3561
  Register 104 costs: AREG:0 DREG:0 CREG:-81 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7397 MMX_REGS:7397 INT_SSE_REGS:7397 MEM:2008
  Register 105 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3263 MMX_REGS:3263 FP_TOP_SSE_REGS:3263 FP_SECOND_SSE_REGS:3263 FLOAT_SSE_REGS:3263 FLOAT_INT_REGS:2259 INT_SSE_REGS:3263 FLOAT_INT_SSE_REGS:3263 ALL_REGS:3263 MEM:915
  Register 106 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2106 MMX_REGS:2106 FP_TOP_SSE_REGS:2106 FP_SECOND_SSE_REGS:2106 FLOAT_SSE_REGS:2106 FLOAT_INT_REGS:1458 INT_SSE_REGS:2106 FLOAT_INT_SSE_REGS:2106 ALL_REGS:2106 MEM:567
  Register 111 costs: AREG:1404 DREG:1404 CREG:1404 BREG:1404 SIREG:1404 DIREG:1404 AD_REGS:1404 Q_REGS:1404 NON_Q_REGS:1404 INDEX_REGS:1404 LEGACY_REGS:1404 GENERAL_REGS:1404 FP_TOP_REG:2268 FP_SECOND_REG:2268 FLOAT_REGS:2268 SSE_REGS:0 FP_TOP_SSE_REGS:2268 FP_SECOND_SSE_REGS:2268 FLOAT_SSE_REGS:2268 FLOAT_INT_REGS:2268 INT_SSE_REGS:1404 FLOAT_INT_SSE_REGS:2268 ALL_REGS:2268 MEM:828
  Register 114 costs: AREG:468 DREG:468 CREG:468 BREG:468 SIREG:468 DIREG:468 AD_REGS:468 Q_REGS:468 NON_Q_REGS:468 INDEX_REGS:468 LEGACY_REGS:468 GENERAL_REGS:468 FP_TOP_REG:756 FP_SECOND_REG:756 FLOAT_REGS:756 SSE_REGS:0 FP_TOP_SSE_REGS:756 FP_SECOND_SSE_REGS:756 FLOAT_SSE_REGS:756 FLOAT_INT_REGS:756 INT_SSE_REGS:468 FLOAT_INT_SSE_REGS:756 ALL_REGS:756 MEM:270
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 119 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 120 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 121 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 122 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 123 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:910 MMX_REGS:910 FP_TOP_SSE_REGS:910 FP_SECOND_SSE_REGS:910 FLOAT_SSE_REGS:910 FLOAT_INT_REGS:630 INT_SSE_REGS:910 FLOAT_INT_SSE_REGS:910 ALL_REGS:910 MEM:245
  Register 124 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-35 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:910 MMX_REGS:910 FP_TOP_SSE_REGS:910 FP_SECOND_SSE_REGS:910 FLOAT_SSE_REGS:910 FLOAT_INT_REGS:630 INT_SSE_REGS:910 FLOAT_INT_SSE_REGS:910 ALL_REGS:910 MEM:210
  Register 125 costs: AREG:-70 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6136 MMX_REGS:6136 FP_TOP_SSE_REGS:6136 FP_SECOND_SSE_REGS:6136 FLOAT_SSE_REGS:6136 FLOAT_INT_REGS:4248 INT_SSE_REGS:6136 FLOAT_INT_SSE_REGS:6136 ALL_REGS:6136 MEM:1853
  Register 126 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:806 MMX_REGS:806 FP_TOP_SSE_REGS:806 FP_SECOND_SSE_REGS:806 FLOAT_SSE_REGS:806 FLOAT_INT_REGS:558 INT_SSE_REGS:806 FLOAT_INT_SSE_REGS:806 ALL_REGS:806 MEM:217
  Register 127 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:612 INDEX_REGS:0 LEGACY_REGS:612 GENERAL_REGS:612 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:756 MEM:144
  Register 128 costs: AREG:3015 DREG:3015 CREG:3015 BREG:3015 SIREG:3015 DIREG:3015 AD_REGS:3015 Q_REGS:3015 NON_Q_REGS:3780 INDEX_REGS:3015 LEGACY_REGS:3780 GENERAL_REGS:3780 FP_TOP_REG:4815 FP_SECOND_REG:4815 FLOAT_REGS:4815 SSE_REGS:90 FP_TOP_SSE_REGS:4815 FP_SECOND_SSE_REGS:4815 FLOAT_SSE_REGS:4815 FLOAT_INT_REGS:4815 INT_SSE_REGS:3015 FLOAT_INT_SSE_REGS:4815 ALL_REGS:5760 MEM:2025
  Register 129 costs: AREG:7336 DREG:7336 CREG:7336 BREG:7336 SIREG:7336 DIREG:7336 AD_REGS:7336 Q_REGS:7336 NON_Q_REGS:7863 INDEX_REGS:7336 LEGACY_REGS:7863 GENERAL_REGS:7863 FP_TOP_REG:11528 FP_SECOND_REG:11528 FLOAT_REGS:11528 SSE_REGS:524 FP_TOP_SSE_REGS:11528 FP_SECOND_SSE_REGS:11528 FLOAT_SSE_REGS:11528 FLOAT_INT_REGS:11528 INT_SSE_REGS:7336 FLOAT_INT_SSE_REGS:11528 ALL_REGS:12179 MEM:4578
  Register 130 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 131 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 136 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 140 costs: AREG:15509 DREG:15509 CREG:15509 BREG:15509 SIREG:15509 DIREG:15509 AD_REGS:15509 Q_REGS:15509 NON_Q_REGS:16835 INDEX_REGS:15509 LEGACY_REGS:16835 GENERAL_REGS:16835 FP_TOP_REG:25053 FP_SECOND_REG:25053 FLOAT_REGS:25053 SSE_REGS:0 FP_TOP_SSE_REGS:25053 FP_SECOND_SSE_REGS:25053 FLOAT_SSE_REGS:25053 FLOAT_INT_REGS:25053 INT_SSE_REGS:15509 FLOAT_INT_SSE_REGS:25053 ALL_REGS:26691 MEM:9856
  Register 141 costs: AREG:15899 DREG:15899 CREG:15899 BREG:15899 SIREG:15899 DIREG:15899 AD_REGS:15899 Q_REGS:15899 NON_Q_REGS:17208 INDEX_REGS:15899 LEGACY_REGS:17208 GENERAL_REGS:17208 FP_TOP_REG:25683 FP_SECOND_REG:25683 FLOAT_REGS:25683 SSE_REGS:0 FP_TOP_SSE_REGS:25683 FP_SECOND_SSE_REGS:25683 FLOAT_SSE_REGS:25683 FLOAT_INT_REGS:25683 INT_SSE_REGS:15899 FLOAT_INT_SSE_REGS:25683 ALL_REGS:27300 MEM:8869
  Register 153 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2002 MMX_REGS:2002 FP_TOP_SSE_REGS:2002 FP_SECOND_SSE_REGS:2002 FLOAT_SSE_REGS:2002 FLOAT_INT_REGS:1386 INT_SSE_REGS:2002 FLOAT_INT_SSE_REGS:2002 ALL_REGS:2002 MEM:512
  Register 154 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:254 INDEX_REGS:0 LEGACY_REGS:254 GENERAL_REGS:254 SSE_REGS:4979 MMX_REGS:4979 FP_TOP_SSE_REGS:4979 FP_SECOND_SSE_REGS:4979 FLOAT_SSE_REGS:4979 FLOAT_INT_REGS:3447 INT_SSE_REGS:4979 FLOAT_INT_SSE_REGS:4979 ALL_REGS:4979 MEM:1404
  Register 155 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1664 MMX_REGS:1664 FP_TOP_SSE_REGS:1664 FP_SECOND_SSE_REGS:1664 FLOAT_SSE_REGS:1664 FLOAT_INT_REGS:1152 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:1664 ALL_REGS:1664 MEM:384
  Register 158 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2262 MMX_REGS:2262 FP_TOP_SSE_REGS:2262 FP_SECOND_SSE_REGS:2262 FLOAT_SSE_REGS:2262 FLOAT_INT_REGS:1566 INT_SSE_REGS:2262 FLOAT_INT_SSE_REGS:2262 ALL_REGS:2262 MEM:561
  Register 163 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:910 MMX_REGS:910 FP_TOP_SSE_REGS:910 FP_SECOND_SSE_REGS:910 FLOAT_SSE_REGS:910 FLOAT_INT_REGS:630 INT_SSE_REGS:910 FLOAT_INT_SSE_REGS:910 ALL_REGS:910 MEM:226
  Register 165 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 166 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1924 MMX_REGS:1924 INT_SSE_REGS:1924 MEM:518
  Register 168 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5031 MMX_REGS:5031 FP_TOP_SSE_REGS:5031 FP_SECOND_SSE_REGS:5031 FLOAT_SSE_REGS:5031 FLOAT_INT_REGS:3483 INT_SSE_REGS:5031 FLOAT_INT_SSE_REGS:5031 ALL_REGS:5031 MEM:1161
  Register 169 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11024 MMX_REGS:11024 FP_TOP_SSE_REGS:11024 FP_SECOND_SSE_REGS:11024 FLOAT_SSE_REGS:11024 FLOAT_INT_REGS:7632 INT_SSE_REGS:11024 FLOAT_INT_SSE_REGS:11024 ALL_REGS:11024 MEM:3093
  Register 170 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17381 MMX_REGS:17381 FP_TOP_SSE_REGS:17381 FP_SECOND_SSE_REGS:17381 FLOAT_SSE_REGS:17381 FLOAT_INT_REGS:12033 INT_SSE_REGS:17381 FLOAT_INT_SSE_REGS:17381 ALL_REGS:17381 MEM:5063
  Register 171 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2041 MMX_REGS:2041 FP_TOP_SSE_REGS:2041 FP_SECOND_SSE_REGS:2041 FLOAT_SSE_REGS:2041 FLOAT_INT_REGS:1413 INT_SSE_REGS:2041 FLOAT_INT_SSE_REGS:2041 ALL_REGS:2041 MEM:488
  Register 172 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:228 INDEX_REGS:0 LEGACY_REGS:228 GENERAL_REGS:228 SSE_REGS:4004 MMX_REGS:4004 FP_TOP_SSE_REGS:4004 FP_SECOND_SSE_REGS:4004 FLOAT_SSE_REGS:4004 FLOAT_INT_REGS:2772 INT_SSE_REGS:4004 FLOAT_INT_SSE_REGS:4004 ALL_REGS:4004 MEM:1118
  Register 173 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 176 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 178 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 179 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 181 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 182 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 184 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 185 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 187 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 188 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 190 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 191 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 193 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 194 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 195 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5109 MMX_REGS:5109 FP_TOP_SSE_REGS:5109 FP_SECOND_SSE_REGS:5109 FLOAT_SSE_REGS:5109 FLOAT_INT_REGS:3537 INT_SSE_REGS:5109 FLOAT_INT_SSE_REGS:5109 ALL_REGS:5109 MEM:1221
  Register 196 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 197 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 198 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 199 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 200 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8216 MMX_REGS:8216 FP_TOP_SSE_REGS:8216 FP_SECOND_SSE_REGS:8216 FLOAT_SSE_REGS:8216 FLOAT_INT_REGS:5688 INT_SSE_REGS:8216 FLOAT_INT_SSE_REGS:8216 ALL_REGS:8216 MEM:2222
  Register 202 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 203 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 204 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 205 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 208 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 209 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 210 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 211 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 214 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 215 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 216 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 217 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 220 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 221 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 222 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 223 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 226 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 227 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 228 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 229 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 232 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 233 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 234 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 235 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 238 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 239 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 240 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 241 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 243 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:590 INDEX_REGS:0 LEGACY_REGS:590 GENERAL_REGS:590 SSE_REGS:8086 MMX_REGS:8086 FP_TOP_SSE_REGS:8086 FP_SECOND_SSE_REGS:8086 FLOAT_SSE_REGS:8086 FLOAT_INT_REGS:5598 INT_SSE_REGS:8086 FLOAT_INT_SSE_REGS:8086 ALL_REGS:8086 MEM:2161
  Register 244 costs: AREG:3975 DREG:3975 CREG:3975 BREG:3975 SIREG:3975 DIREG:3975 AD_REGS:3975 Q_REGS:3975 NON_Q_REGS:5063 INDEX_REGS:3975 LEGACY_REGS:5063 GENERAL_REGS:5063 FP_TOP_REG:6287 FP_SECOND_REG:6287 FLOAT_REGS:6287 SSE_REGS:218 FP_TOP_SSE_REGS:6287 FP_SECOND_SSE_REGS:6287 FLOAT_SSE_REGS:6287 FLOAT_INT_REGS:6287 INT_SSE_REGS:3975 FLOAT_INT_SSE_REGS:6287 ALL_REGS:7631 MEM:2632
  Register 245 costs: AREG:1507 DREG:1507 CREG:1507 BREG:1507 SIREG:1507 DIREG:1507 AD_REGS:1507 Q_REGS:1507 NON_Q_REGS:2595 INDEX_REGS:1507 LEGACY_REGS:2595 GENERAL_REGS:2595 FP_TOP_REG:2379 FP_SECOND_REG:2379 FLOAT_REGS:2379 SSE_REGS:90 FP_TOP_SSE_REGS:2379 FP_SECOND_SSE_REGS:2379 FLOAT_SSE_REGS:2379 FLOAT_INT_REGS:2379 INT_SSE_REGS:1507 FLOAT_INT_SSE_REGS:2379 ALL_REGS:3723 MEM:1109
  Register 246 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1664 MMX_REGS:1664 FP_TOP_SSE_REGS:1664 FP_SECOND_SSE_REGS:1664 FLOAT_SSE_REGS:1664 FLOAT_INT_REGS:1152 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:1664 ALL_REGS:1664 MEM:448
  Register 247 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5850 MMX_REGS:5850 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:4050 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:5850 ALL_REGS:5850 MEM:1350
  Register 250 costs: AREG:3975 DREG:3975 CREG:3975 BREG:3975 SIREG:3975 DIREG:3975 AD_REGS:3975 Q_REGS:3975 NON_Q_REGS:5063 INDEX_REGS:3975 LEGACY_REGS:5063 GENERAL_REGS:5063 FP_TOP_REG:6287 FP_SECOND_REG:6287 FLOAT_REGS:6287 SSE_REGS:218 FP_TOP_SSE_REGS:6287 FP_SECOND_SSE_REGS:6287 FLOAT_SSE_REGS:6287 FLOAT_INT_REGS:6287 INT_SSE_REGS:3975 FLOAT_INT_SSE_REGS:6287 ALL_REGS:7631 MEM:2632
  Register 251 costs: AREG:1507 DREG:1507 CREG:1507 BREG:1507 SIREG:1507 DIREG:1507 AD_REGS:1507 Q_REGS:1507 NON_Q_REGS:2595 INDEX_REGS:1507 LEGACY_REGS:2595 GENERAL_REGS:2595 FP_TOP_REG:2379 FP_SECOND_REG:2379 FLOAT_REGS:2379 SSE_REGS:90 FP_TOP_SSE_REGS:2379 FP_SECOND_SSE_REGS:2379 FLOAT_SSE_REGS:2379 FLOAT_INT_REGS:2379 INT_SSE_REGS:1507 FLOAT_INT_SSE_REGS:2379 ALL_REGS:3723 MEM:1109
  Register 252 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1664 MMX_REGS:1664 FP_TOP_SSE_REGS:1664 FP_SECOND_SSE_REGS:1664 FLOAT_SSE_REGS:1664 FLOAT_INT_REGS:1152 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:1664 ALL_REGS:1664 MEM:448
  Register 253 costs: AREG:1518 DREG:1518 CREG:1518 BREG:1518 SIREG:1518 DIREG:1518 AD_REGS:1518 Q_REGS:1518 NON_Q_REGS:1518 INDEX_REGS:1518 LEGACY_REGS:1518 GENERAL_REGS:1518 FP_TOP_REG:2398 FP_SECOND_REG:2398 FLOAT_REGS:2398 SSE_REGS:88 FP_TOP_SSE_REGS:2398 FP_SECOND_SSE_REGS:2398 FLOAT_SSE_REGS:2398 FLOAT_INT_REGS:2398 INT_SSE_REGS:1518 FLOAT_INT_SSE_REGS:2398 ALL_REGS:2398 MEM:924
  Register 254 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 255 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 256 costs: AREG:1474 DREG:1474 CREG:1474 BREG:1474 SIREG:1474 DIREG:1474 AD_REGS:1474 Q_REGS:1474 NON_Q_REGS:1848 INDEX_REGS:1474 LEGACY_REGS:1848 GENERAL_REGS:1848 FP_TOP_REG:2354 FP_SECOND_REG:2354 FLOAT_REGS:2354 SSE_REGS:44 FP_TOP_SSE_REGS:2354 FP_SECOND_SSE_REGS:2354 FLOAT_SSE_REGS:2354 FLOAT_INT_REGS:2354 INT_SSE_REGS:1474 FLOAT_INT_SSE_REGS:2354 ALL_REGS:2816 MEM:990
  Register 258 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 259 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 263 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 264 costs: AREG:1760 DREG:1760 CREG:1760 BREG:1760 SIREG:1760 DIREG:1760 AD_REGS:1760 Q_REGS:1760 NON_Q_REGS:2236 INDEX_REGS:1760 LEGACY_REGS:2236 GENERAL_REGS:2236 FP_TOP_REG:2784 FP_SECOND_REG:2784 FLOAT_REGS:2784 SSE_REGS:96 FP_TOP_SSE_REGS:2784 FP_SECOND_SSE_REGS:2784 FLOAT_SSE_REGS:2784 FLOAT_INT_REGS:2784 INT_SSE_REGS:1760 FLOAT_INT_SSE_REGS:2784 ALL_REGS:3372 MEM:1164
  Register 265 costs: AREG:664 DREG:664 CREG:664 BREG:664 SIREG:664 DIREG:664 AD_REGS:664 Q_REGS:664 NON_Q_REGS:1140 INDEX_REGS:664 LEGACY_REGS:1140 GENERAL_REGS:1140 FP_TOP_REG:1048 FP_SECOND_REG:1048 FLOAT_REGS:1048 SSE_REGS:40 FP_TOP_SSE_REGS:1048 FP_SECOND_SSE_REGS:1048 FLOAT_SSE_REGS:1048 FLOAT_INT_REGS:1048 INT_SSE_REGS:664 FLOAT_INT_SSE_REGS:1048 ALL_REGS:1636 MEM:488
  Register 266 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:196
  Register 267 costs: AREG:1380 DREG:1380 CREG:1380 BREG:1380 SIREG:1380 DIREG:1380 AD_REGS:1380 Q_REGS:1380 NON_Q_REGS:1380 INDEX_REGS:1380 LEGACY_REGS:1380 GENERAL_REGS:1380 FP_TOP_REG:2180 FP_SECOND_REG:2180 FLOAT_REGS:2180 SSE_REGS:80 FP_TOP_SSE_REGS:2180 FP_SECOND_SSE_REGS:2180 FLOAT_SSE_REGS:2180 FLOAT_INT_REGS:2180 INT_SSE_REGS:1380 FLOAT_INT_SSE_REGS:2180 ALL_REGS:2180 MEM:840
  Register 268 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 269 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 270 costs: AREG:1340 DREG:1340 CREG:1340 BREG:1340 SIREG:1340 DIREG:1340 AD_REGS:1340 Q_REGS:1340 NON_Q_REGS:1680 INDEX_REGS:1340 LEGACY_REGS:1680 GENERAL_REGS:1680 FP_TOP_REG:2140 FP_SECOND_REG:2140 FLOAT_REGS:2140 SSE_REGS:40 FP_TOP_SSE_REGS:2140 FP_SECOND_SSE_REGS:2140 FLOAT_SSE_REGS:2140 FLOAT_INT_REGS:2140 INT_SSE_REGS:1340 FLOAT_INT_SSE_REGS:2140 ALL_REGS:2560 MEM:900
  Register 272 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 273 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 277 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 278 costs: AREG:1760 DREG:1760 CREG:1760 BREG:1760 SIREG:1760 DIREG:1760 AD_REGS:1760 Q_REGS:1760 NON_Q_REGS:2236 INDEX_REGS:1760 LEGACY_REGS:2236 GENERAL_REGS:2236 FP_TOP_REG:2784 FP_SECOND_REG:2784 FLOAT_REGS:2784 SSE_REGS:96 FP_TOP_SSE_REGS:2784 FP_SECOND_SSE_REGS:2784 FLOAT_SSE_REGS:2784 FLOAT_INT_REGS:2784 INT_SSE_REGS:1760 FLOAT_INT_SSE_REGS:2784 ALL_REGS:3372 MEM:1164
  Register 279 costs: AREG:664 DREG:664 CREG:664 BREG:664 SIREG:664 DIREG:664 AD_REGS:664 Q_REGS:664 NON_Q_REGS:1140 INDEX_REGS:664 LEGACY_REGS:1140 GENERAL_REGS:1140 FP_TOP_REG:1048 FP_SECOND_REG:1048 FLOAT_REGS:1048 SSE_REGS:40 FP_TOP_SSE_REGS:1048 FP_SECOND_SSE_REGS:1048 FLOAT_SSE_REGS:1048 FLOAT_INT_REGS:1048 INT_SSE_REGS:664 FLOAT_INT_SSE_REGS:1048 ALL_REGS:1636 MEM:488
  Register 280 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:196
  Register 281 costs: AREG:1380 DREG:1380 CREG:1380 BREG:1380 SIREG:1380 DIREG:1380 AD_REGS:1380 Q_REGS:1380 NON_Q_REGS:1380 INDEX_REGS:1380 LEGACY_REGS:1380 GENERAL_REGS:1380 FP_TOP_REG:2180 FP_SECOND_REG:2180 FLOAT_REGS:2180 SSE_REGS:80 FP_TOP_SSE_REGS:2180 FP_SECOND_SSE_REGS:2180 FLOAT_SSE_REGS:2180 FLOAT_INT_REGS:2180 INT_SSE_REGS:1380 FLOAT_INT_SSE_REGS:2180 ALL_REGS:2180 MEM:840
  Register 282 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 283 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 284 costs: AREG:1340 DREG:1340 CREG:1340 BREG:1340 SIREG:1340 DIREG:1340 AD_REGS:1340 Q_REGS:1340 NON_Q_REGS:1680 INDEX_REGS:1340 LEGACY_REGS:1680 GENERAL_REGS:1680 FP_TOP_REG:2140 FP_SECOND_REG:2140 FLOAT_REGS:2140 SSE_REGS:40 FP_TOP_SSE_REGS:2140 FP_SECOND_SSE_REGS:2140 FLOAT_SSE_REGS:2140 FLOAT_INT_REGS:2140 INT_SSE_REGS:1340 FLOAT_INT_SSE_REGS:2140 ALL_REGS:2560 MEM:900
  Register 286 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 287 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 291 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 292 costs: AREG:1760 DREG:1760 CREG:1760 BREG:1760 SIREG:1760 DIREG:1760 AD_REGS:1760 Q_REGS:1760 NON_Q_REGS:2236 INDEX_REGS:1760 LEGACY_REGS:2236 GENERAL_REGS:2236 FP_TOP_REG:2784 FP_SECOND_REG:2784 FLOAT_REGS:2784 SSE_REGS:96 FP_TOP_SSE_REGS:2784 FP_SECOND_SSE_REGS:2784 FLOAT_SSE_REGS:2784 FLOAT_INT_REGS:2784 INT_SSE_REGS:1760 FLOAT_INT_SSE_REGS:2784 ALL_REGS:3372 MEM:1164
  Register 293 costs: AREG:664 DREG:664 CREG:664 BREG:664 SIREG:664 DIREG:664 AD_REGS:664 Q_REGS:664 NON_Q_REGS:1140 INDEX_REGS:664 LEGACY_REGS:1140 GENERAL_REGS:1140 FP_TOP_REG:1048 FP_SECOND_REG:1048 FLOAT_REGS:1048 SSE_REGS:40 FP_TOP_SSE_REGS:1048 FP_SECOND_SSE_REGS:1048 FLOAT_SSE_REGS:1048 FLOAT_INT_REGS:1048 INT_SSE_REGS:664 FLOAT_INT_SSE_REGS:1048 ALL_REGS:1636 MEM:488
  Register 294 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:196
  Register 295 costs: AREG:1380 DREG:1380 CREG:1380 BREG:1380 SIREG:1380 DIREG:1380 AD_REGS:1380 Q_REGS:1380 NON_Q_REGS:1380 INDEX_REGS:1380 LEGACY_REGS:1380 GENERAL_REGS:1380 FP_TOP_REG:2180 FP_SECOND_REG:2180 FLOAT_REGS:2180 SSE_REGS:80 FP_TOP_SSE_REGS:2180 FP_SECOND_SSE_REGS:2180 FLOAT_SSE_REGS:2180 FLOAT_INT_REGS:2180 INT_SSE_REGS:1380 FLOAT_INT_SSE_REGS:2180 ALL_REGS:2180 MEM:840
  Register 296 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 297 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 298 costs: AREG:1340 DREG:1340 CREG:1340 BREG:1340 SIREG:1340 DIREG:1340 AD_REGS:1340 Q_REGS:1340 NON_Q_REGS:1680 INDEX_REGS:1340 LEGACY_REGS:1680 GENERAL_REGS:1680 FP_TOP_REG:2140 FP_SECOND_REG:2140 FLOAT_REGS:2140 SSE_REGS:40 FP_TOP_SSE_REGS:2140 FP_SECOND_SSE_REGS:2140 FLOAT_SSE_REGS:2140 FLOAT_INT_REGS:2140 INT_SSE_REGS:1340 FLOAT_INT_SSE_REGS:2140 ALL_REGS:2560 MEM:900
  Register 300 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 301 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 305 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 306 costs: AREG:3105 DREG:3105 CREG:3105 BREG:3105 SIREG:3105 DIREG:3105 AD_REGS:3105 Q_REGS:3105 NON_Q_REGS:3105 INDEX_REGS:3105 LEGACY_REGS:3105 GENERAL_REGS:3105 FP_TOP_REG:4905 FP_SECOND_REG:4905 FLOAT_REGS:4905 SSE_REGS:180 FP_TOP_SSE_REGS:4905 FP_SECOND_SSE_REGS:4905 FLOAT_SSE_REGS:4905 FLOAT_INT_REGS:4905 INT_SSE_REGS:3105 FLOAT_INT_SSE_REGS:4905 ALL_REGS:4905 MEM:1890
  Register 307 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 308 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 309 costs: AREG:3015 DREG:3015 CREG:3015 BREG:3015 SIREG:3015 DIREG:3015 AD_REGS:3015 Q_REGS:3015 NON_Q_REGS:3780 INDEX_REGS:3015 LEGACY_REGS:3780 GENERAL_REGS:3780 FP_TOP_REG:4815 FP_SECOND_REG:4815 FLOAT_REGS:4815 SSE_REGS:90 FP_TOP_SSE_REGS:4815 FP_SECOND_SSE_REGS:4815 FLOAT_SSE_REGS:4815 FLOAT_INT_REGS:4815 INT_SSE_REGS:3015 FLOAT_INT_SSE_REGS:4815 ALL_REGS:5760 MEM:2025
  Register 311 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 312 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 316 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:612 INDEX_REGS:0 LEGACY_REGS:612 GENERAL_REGS:612 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:756 MEM:144
  Register 318 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:254 INDEX_REGS:0 LEGACY_REGS:254 GENERAL_REGS:254 SSE_REGS:2483 MMX_REGS:2483 FP_TOP_SSE_REGS:2483 FP_SECOND_SSE_REGS:2483 FLOAT_SSE_REGS:2483 FLOAT_INT_REGS:1719 INT_SSE_REGS:2483 FLOAT_INT_SSE_REGS:2483 ALL_REGS:2483 MEM:764
  Register 319 costs: AREG:3975 DREG:3975 CREG:3975 BREG:3975 SIREG:3975 DIREG:3975 AD_REGS:3975 Q_REGS:3975 NON_Q_REGS:5063 INDEX_REGS:3975 LEGACY_REGS:5063 GENERAL_REGS:5063 FP_TOP_REG:6287 FP_SECOND_REG:6287 FLOAT_REGS:6287 SSE_REGS:218 FP_TOP_SSE_REGS:6287 FP_SECOND_SSE_REGS:6287 FLOAT_SSE_REGS:6287 FLOAT_INT_REGS:6287 INT_SSE_REGS:3975 FLOAT_INT_SSE_REGS:6287 ALL_REGS:7631 MEM:2632
  Register 320 costs: AREG:1507 DREG:1507 CREG:1507 BREG:1507 SIREG:1507 DIREG:1507 AD_REGS:1507 Q_REGS:1507 NON_Q_REGS:2595 INDEX_REGS:1507 LEGACY_REGS:2595 GENERAL_REGS:2595 FP_TOP_REG:2379 FP_SECOND_REG:2379 FLOAT_REGS:2379 SSE_REGS:90 FP_TOP_SSE_REGS:2379 FP_SECOND_SSE_REGS:2379 FLOAT_SSE_REGS:2379 FLOAT_INT_REGS:2379 INT_SSE_REGS:1507 FLOAT_INT_SSE_REGS:2379 ALL_REGS:3723 MEM:1109
  Register 321 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1664 MMX_REGS:1664 FP_TOP_SSE_REGS:1664 FP_SECOND_SSE_REGS:1664 FLOAT_SSE_REGS:1664 FLOAT_INT_REGS:1152 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:1664 ALL_REGS:1664 MEM:448
  Register 322 costs: AREG:3105 DREG:3105 CREG:3105 BREG:3105 SIREG:3105 DIREG:3105 AD_REGS:3105 Q_REGS:3105 NON_Q_REGS:3105 INDEX_REGS:3105 LEGACY_REGS:3105 GENERAL_REGS:3105 FP_TOP_REG:4905 FP_SECOND_REG:4905 FLOAT_REGS:4905 SSE_REGS:180 FP_TOP_SSE_REGS:4905 FP_SECOND_SSE_REGS:4905 FLOAT_SSE_REGS:4905 FLOAT_INT_REGS:4905 INT_SSE_REGS:3105 FLOAT_INT_SSE_REGS:4905 ALL_REGS:4905 MEM:1890
  Register 323 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 324 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 325 costs: AREG:3015 DREG:3015 CREG:3015 BREG:3015 SIREG:3015 DIREG:3015 AD_REGS:3015 Q_REGS:3015 NON_Q_REGS:3780 INDEX_REGS:3015 LEGACY_REGS:3780 GENERAL_REGS:3780 FP_TOP_REG:4815 FP_SECOND_REG:4815 FLOAT_REGS:4815 SSE_REGS:90 FP_TOP_SSE_REGS:4815 FP_SECOND_SSE_REGS:4815 FLOAT_SSE_REGS:4815 FLOAT_INT_REGS:4815 INT_SSE_REGS:3015 FLOAT_INT_SSE_REGS:4815 ALL_REGS:5760 MEM:2025
  Register 327 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 328 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 332 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:612 INDEX_REGS:0 LEGACY_REGS:612 GENERAL_REGS:612 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:756 MEM:144
  Register 334 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:254 INDEX_REGS:0 LEGACY_REGS:254 GENERAL_REGS:254 SSE_REGS:2483 MMX_REGS:2483 FP_TOP_SSE_REGS:2483 FP_SECOND_SSE_REGS:2483 FLOAT_SSE_REGS:2483 FLOAT_INT_REGS:1719 INT_SSE_REGS:2483 FLOAT_INT_SSE_REGS:2483 ALL_REGS:2483 MEM:764
  Register 335 costs: AREG:3975 DREG:3975 CREG:3975 BREG:3975 SIREG:3975 DIREG:3975 AD_REGS:3975 Q_REGS:3975 NON_Q_REGS:5063 INDEX_REGS:3975 LEGACY_REGS:5063 GENERAL_REGS:5063 FP_TOP_REG:6287 FP_SECOND_REG:6287 FLOAT_REGS:6287 SSE_REGS:218 FP_TOP_SSE_REGS:6287 FP_SECOND_SSE_REGS:6287 FLOAT_SSE_REGS:6287 FLOAT_INT_REGS:6287 INT_SSE_REGS:3975 FLOAT_INT_SSE_REGS:6287 ALL_REGS:7631 MEM:2632
  Register 336 costs: AREG:1507 DREG:1507 CREG:1507 BREG:1507 SIREG:1507 DIREG:1507 AD_REGS:1507 Q_REGS:1507 NON_Q_REGS:2595 INDEX_REGS:1507 LEGACY_REGS:2595 GENERAL_REGS:2595 FP_TOP_REG:2379 FP_SECOND_REG:2379 FLOAT_REGS:2379 SSE_REGS:90 FP_TOP_SSE_REGS:2379 FP_SECOND_SSE_REGS:2379 FLOAT_SSE_REGS:2379 FLOAT_INT_REGS:2379 INT_SSE_REGS:1507 FLOAT_INT_SSE_REGS:2379 ALL_REGS:3723 MEM:1109
  Register 337 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1664 MMX_REGS:1664 FP_TOP_SSE_REGS:1664 FP_SECOND_SSE_REGS:1664 FLOAT_SSE_REGS:1664 FLOAT_INT_REGS:1152 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:1664 ALL_REGS:1664 MEM:448
  Register 338 costs: AREG:3105 DREG:3105 CREG:3105 BREG:3105 SIREG:3105 DIREG:3105 AD_REGS:3105 Q_REGS:3105 NON_Q_REGS:3105 INDEX_REGS:3105 LEGACY_REGS:3105 GENERAL_REGS:3105 FP_TOP_REG:4905 FP_SECOND_REG:4905 FLOAT_REGS:4905 SSE_REGS:180 FP_TOP_SSE_REGS:4905 FP_SECOND_SSE_REGS:4905 FLOAT_SSE_REGS:4905 FLOAT_INT_REGS:4905 INT_SSE_REGS:3105 FLOAT_INT_SSE_REGS:4905 ALL_REGS:4905 MEM:1890
  Register 339 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 340 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 341 costs: AREG:3015 DREG:3015 CREG:3015 BREG:3015 SIREG:3015 DIREG:3015 AD_REGS:3015 Q_REGS:3015 NON_Q_REGS:3780 INDEX_REGS:3015 LEGACY_REGS:3780 GENERAL_REGS:3780 FP_TOP_REG:4815 FP_SECOND_REG:4815 FLOAT_REGS:4815 SSE_REGS:90 FP_TOP_SSE_REGS:4815 FP_SECOND_SSE_REGS:4815 FLOAT_SSE_REGS:4815 FLOAT_INT_REGS:4815 INT_SSE_REGS:3015 FLOAT_INT_SSE_REGS:4815 ALL_REGS:5760 MEM:2025
  Register 343 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 344 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 348 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:612 INDEX_REGS:0 LEGACY_REGS:612 GENERAL_REGS:612 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:756 MEM:144
  Register 349 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 350 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 351 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 352 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 353 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 354 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 355 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 356 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 357 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 358 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 359 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 360 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 361 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 362 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 363 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 364 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 365 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 366 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 367 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 368 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 369 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 370 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 371 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 372 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 373 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 374 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 375 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 376 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 377 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 378 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 379 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 380 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 381 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 382 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 383 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 384 costs: AREG:1885 DREG:1885 CREG:1885 BREG:1885 SIREG:1885 DIREG:1885 AD_REGS:1885 Q_REGS:1885 NON_Q_REGS:3143 INDEX_REGS:1885 LEGACY_REGS:3143 GENERAL_REGS:3143 FP_TOP_REG:3045 FP_SECOND_REG:3045 FLOAT_REGS:3045 SSE_REGS:0 FP_TOP_SSE_REGS:3045 FP_SECOND_SSE_REGS:3045 FLOAT_SSE_REGS:3045 FLOAT_INT_REGS:3045 INT_SSE_REGS:1885 FLOAT_INT_SSE_REGS:3045 ALL_REGS:4599 MEM:1382
  Register 385 costs: AREG:1807 DREG:1807 CREG:1807 BREG:1807 SIREG:1807 DIREG:1807 AD_REGS:1807 Q_REGS:1807 NON_Q_REGS:3014 INDEX_REGS:1807 LEGACY_REGS:3014 GENERAL_REGS:3014 FP_TOP_REG:2919 FP_SECOND_REG:2919 FLOAT_REGS:2919 SSE_REGS:0 FP_TOP_SSE_REGS:2919 FP_SECOND_SSE_REGS:2919 FLOAT_SSE_REGS:2919 FLOAT_INT_REGS:2919 INT_SSE_REGS:1807 FLOAT_INT_SSE_REGS:2919 ALL_REGS:4410 MEM:1325
  Register 386 costs: AREG:1729 DREG:1729 CREG:1729 BREG:1729 SIREG:1729 DIREG:1729 AD_REGS:1729 Q_REGS:1729 NON_Q_REGS:2885 INDEX_REGS:1729 LEGACY_REGS:2885 GENERAL_REGS:2885 FP_TOP_REG:2793 FP_SECOND_REG:2793 FLOAT_REGS:2793 SSE_REGS:0 FP_TOP_SSE_REGS:2793 FP_SECOND_SSE_REGS:2793 FLOAT_SSE_REGS:2793 FLOAT_INT_REGS:2793 INT_SSE_REGS:1729 FLOAT_INT_SSE_REGS:2793 ALL_REGS:4221 MEM:1268
  Register 387 costs: AREG:1664 DREG:1664 CREG:1664 BREG:1664 SIREG:1664 DIREG:1664 AD_REGS:1664 Q_REGS:1664 NON_Q_REGS:2769 INDEX_REGS:1664 LEGACY_REGS:2769 GENERAL_REGS:2769 FP_TOP_REG:2688 FP_SECOND_REG:2688 FLOAT_REGS:2688 SSE_REGS:0 FP_TOP_SSE_REGS:2688 FP_SECOND_SSE_REGS:2688 FLOAT_SSE_REGS:2688 FLOAT_INT_REGS:2688 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:2688 ALL_REGS:4053 MEM:1219
  Register 388 costs: AREG:1599 DREG:1599 CREG:1599 BREG:1599 SIREG:1599 DIREG:1599 AD_REGS:1599 Q_REGS:1599 NON_Q_REGS:2670 INDEX_REGS:1599 LEGACY_REGS:2670 GENERAL_REGS:2670 FP_TOP_REG:2583 FP_SECOND_REG:2583 FLOAT_REGS:2583 SSE_REGS:0 FP_TOP_SSE_REGS:2583 FP_SECOND_SSE_REGS:2583 FLOAT_SSE_REGS:2583 FLOAT_INT_REGS:2583 INT_SSE_REGS:1599 FLOAT_INT_SSE_REGS:2583 ALL_REGS:3906 MEM:1173
  Register 389 costs: AREG:1534 DREG:1534 CREG:1534 BREG:1534 SIREG:1534 DIREG:1534 AD_REGS:1534 Q_REGS:1534 NON_Q_REGS:2554 INDEX_REGS:1534 LEGACY_REGS:2554 GENERAL_REGS:2554 FP_TOP_REG:2478 FP_SECOND_REG:2478 FLOAT_REGS:2478 SSE_REGS:0 FP_TOP_SSE_REGS:2478 FP_SECOND_SSE_REGS:2478 FLOAT_SSE_REGS:2478 FLOAT_INT_REGS:2478 INT_SSE_REGS:1534 FLOAT_INT_SSE_REGS:2478 ALL_REGS:3738 MEM:1124
  Register 390 costs: AREG:1469 DREG:1469 CREG:1469 BREG:1469 SIREG:1469 DIREG:1469 AD_REGS:1469 Q_REGS:1469 NON_Q_REGS:2455 INDEX_REGS:1469 LEGACY_REGS:2455 GENERAL_REGS:2455 FP_TOP_REG:2373 FP_SECOND_REG:2373 FLOAT_REGS:2373 SSE_REGS:0 FP_TOP_SSE_REGS:2373 FP_SECOND_SSE_REGS:2373 FLOAT_SSE_REGS:2373 FLOAT_INT_REGS:2373 INT_SSE_REGS:1469 FLOAT_INT_SSE_REGS:2373 ALL_REGS:3591 MEM:1078
  Register 391 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2691 MMX_REGS:2691 FP_TOP_SSE_REGS:2691 FP_SECOND_SSE_REGS:2691 FLOAT_SSE_REGS:2691 FLOAT_INT_REGS:1863 INT_SSE_REGS:2691 FLOAT_INT_SSE_REGS:2691 ALL_REGS:2691 MEM:726
  Register 392 costs: AREG:2587 DREG:2587 CREG:2587 BREG:2587 SIREG:2587 DIREG:2587 AD_REGS:2587 Q_REGS:2587 NON_Q_REGS:4321 INDEX_REGS:2587 LEGACY_REGS:4321 GENERAL_REGS:4321 FP_TOP_REG:4179 FP_SECOND_REG:4179 FLOAT_REGS:4179 SSE_REGS:0 FP_TOP_SSE_REGS:4179 FP_SECOND_SSE_REGS:4179 FLOAT_SSE_REGS:4179 FLOAT_INT_REGS:4179 INT_SSE_REGS:2587 FLOAT_INT_SSE_REGS:4179 ALL_REGS:6321 MEM:1898
  Register 393 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2522 MMX_REGS:2522 FP_TOP_SSE_REGS:2522 FP_SECOND_SSE_REGS:2522 FLOAT_SSE_REGS:2522 FLOAT_INT_REGS:1746 INT_SSE_REGS:2522 FLOAT_INT_SSE_REGS:2522 ALL_REGS:2522 MEM:679
  Register 394 costs: AREG:2470 DREG:2470 CREG:2470 BREG:2470 SIREG:2470 DIREG:2470 AD_REGS:2470 Q_REGS:2470 NON_Q_REGS:4119 INDEX_REGS:2470 LEGACY_REGS:4119 GENERAL_REGS:4119 FP_TOP_REG:3990 FP_SECOND_REG:3990 FLOAT_REGS:3990 SSE_REGS:0 FP_TOP_SSE_REGS:3990 FP_SECOND_SSE_REGS:3990 FLOAT_SSE_REGS:3990 FLOAT_INT_REGS:3990 INT_SSE_REGS:2470 FLOAT_INT_SSE_REGS:3990 ALL_REGS:6027 MEM:1811
  Register 395 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2418 MMX_REGS:2418 FP_TOP_SSE_REGS:2418 FP_SECOND_SSE_REGS:2418 FLOAT_SSE_REGS:2418 FLOAT_INT_REGS:1674 INT_SSE_REGS:2418 FLOAT_INT_SSE_REGS:2418 ALL_REGS:2418 MEM:651
  Register 396 costs: AREG:2366 DREG:2366 CREG:2366 BREG:2366 SIREG:2366 DIREG:2366 AD_REGS:2366 Q_REGS:2366 NON_Q_REGS:3947 INDEX_REGS:2366 LEGACY_REGS:3947 GENERAL_REGS:3947 FP_TOP_REG:3822 FP_SECOND_REG:3822 FLOAT_REGS:3822 SSE_REGS:0 FP_TOP_SSE_REGS:3822 FP_SECOND_SSE_REGS:3822 FLOAT_SSE_REGS:3822 FLOAT_INT_REGS:3822 INT_SSE_REGS:2366 FLOAT_INT_SSE_REGS:3822 ALL_REGS:5775 MEM:1735
  Register 397 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2314 MMX_REGS:2314 FP_TOP_SSE_REGS:2314 FP_SECOND_SSE_REGS:2314 FLOAT_SSE_REGS:2314 FLOAT_INT_REGS:1602 INT_SSE_REGS:2314 FLOAT_INT_SSE_REGS:2314 ALL_REGS:2314 MEM:623
  Register 398 costs: AREG:2275 DREG:2275 CREG:2275 BREG:2275 SIREG:2275 DIREG:2275 AD_REGS:2275 Q_REGS:2275 NON_Q_REGS:3788 INDEX_REGS:2275 LEGACY_REGS:3788 GENERAL_REGS:3788 FP_TOP_REG:3675 FP_SECOND_REG:3675 FLOAT_REGS:3675 SSE_REGS:0 FP_TOP_SSE_REGS:3675 FP_SECOND_SSE_REGS:3675 FLOAT_SSE_REGS:3675 FLOAT_INT_REGS:3675 INT_SSE_REGS:2275 FLOAT_INT_SSE_REGS:3675 ALL_REGS:5544 MEM:1667
  Register 399 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:602
  Register 400 costs: AREG:2184 DREG:2184 CREG:2184 BREG:2184 SIREG:2184 DIREG:2184 AD_REGS:2184 Q_REGS:2184 NON_Q_REGS:3646 INDEX_REGS:2184 LEGACY_REGS:3646 GENERAL_REGS:3646 FP_TOP_REG:3528 FP_SECOND_REG:3528 FLOAT_REGS:3528 SSE_REGS:0 FP_TOP_SSE_REGS:3528 FP_SECOND_SSE_REGS:3528 FLOAT_SSE_REGS:3528 FLOAT_INT_REGS:3528 INT_SSE_REGS:2184 FLOAT_INT_SSE_REGS:3528 ALL_REGS:5334 MEM:1602
  Register 401 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2132 MMX_REGS:2132 FP_TOP_SSE_REGS:2132 FP_SECOND_SSE_REGS:2132 FLOAT_SSE_REGS:2132 FLOAT_INT_REGS:1476 INT_SSE_REGS:2132 FLOAT_INT_SSE_REGS:2132 ALL_REGS:2132 MEM:574
  Register 402 costs: AREG:2093 DREG:2093 CREG:2093 BREG:2093 SIREG:2093 DIREG:2093 AD_REGS:2093 Q_REGS:2093 NON_Q_REGS:3487 INDEX_REGS:2093 LEGACY_REGS:3487 GENERAL_REGS:3487 FP_TOP_REG:3381 FP_SECOND_REG:3381 FLOAT_REGS:3381 SSE_REGS:0 FP_TOP_SSE_REGS:3381 FP_SECOND_SSE_REGS:3381 FLOAT_SSE_REGS:3381 FLOAT_INT_REGS:3381 INT_SSE_REGS:2093 FLOAT_INT_SSE_REGS:3381 ALL_REGS:5103 MEM:1534
  Register 403 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2054 MMX_REGS:2054 FP_TOP_SSE_REGS:2054 FP_SECOND_SSE_REGS:2054 FLOAT_SSE_REGS:2054 FLOAT_INT_REGS:1422 INT_SSE_REGS:2054 FLOAT_INT_SSE_REGS:2054 ALL_REGS:2054 MEM:553
  Register 404 costs: AREG:2002 DREG:2002 CREG:2002 BREG:2002 SIREG:2002 DIREG:2002 AD_REGS:2002 Q_REGS:2002 NON_Q_REGS:3345 INDEX_REGS:2002 LEGACY_REGS:3345 GENERAL_REGS:3345 FP_TOP_REG:3234 FP_SECOND_REG:3234 FLOAT_REGS:3234 SSE_REGS:0 FP_TOP_SSE_REGS:3234 FP_SECOND_SSE_REGS:3234 FLOAT_SSE_REGS:3234 FLOAT_INT_REGS:3234 INT_SSE_REGS:2002 FLOAT_INT_SSE_REGS:3234 ALL_REGS:4893 MEM:1469
  Register 405 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 406 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 407 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 408 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 409 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 410 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 411 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 412 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 413 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 414 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 415 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 416 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 417 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 418 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 419 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80

  Register 59 pref SSE_REGS or none
  Register 60 pref FLOAT_INT_SSE_REGS or none
  Register 61 pref GENERAL_REGS or none
  Register 62 pref GENERAL_REGS or none
  Register 63 pref AREG, else GENERAL_REGS
  Register 65 pref GENERAL_REGS or none
  Register 66 pref SSE_REGS or none
  Register 67 pref GENERAL_REGS or none
  Register 68 pref DIREG, else GENERAL_REGS
  Register 70 pref DIREG, else GENERAL_REGS
  Register 72 pref DIREG, else GENERAL_REGS
  Register 74 pref SSE_REGS or none
  Register 75 pref SSE_REGS or none
  Register 76 pref GENERAL_REGS or none
  Register 79 pref SIREG, else GENERAL_REGS
  Register 81 pref DIREG, else GENERAL_REGS
  Register 82 pref GENERAL_REGS or none
  Register 83 pref SSE_REGS or none
  Register 85 pref DREG, else GENERAL_REGS
  Register 86 pref INDEX_REGS, else GENERAL_REGS
  Register 87 pref SIREG, else GENERAL_REGS
  Register 88 pref DIREG, else GENERAL_REGS
  Register 89 pref DIREG, else GENERAL_REGS
  Register 90 pref DIREG, else GENERAL_REGS
  Register 91 pref DIREG, else GENERAL_REGS
  Register 92 pref DIREG, else GENERAL_REGS
  Register 93 pref DIREG, else GENERAL_REGS
  Register 94 pref DIREG, else GENERAL_REGS
  Register 95 pref SSE_REGS or none
  Register 96 pref DIREG, else GENERAL_REGS
  Register 97 pref DIREG, else GENERAL_REGS
  Register 98 pref DIREG, else GENERAL_REGS
  Register 99 pref DIREG, else GENERAL_REGS
  Register 101 pref DIREG, else GENERAL_REGS
  Register 102 pref SIREG, else GENERAL_REGS
  Register 103 pref DREG, else GENERAL_REGS
  Register 104 pref CREG, else GENERAL_REGS
  Register 105 pref GENERAL_REGS or none
  Register 106 pref GENERAL_REGS or none
  Register 111 pref SSE_REGS or none
  Register 114 pref SSE_REGS or none
  Register 117 pref FLOAT_INT_SSE_REGS or none
  Register 119 pref DREG, else GENERAL_REGS
  Register 120 pref AREG, else GENERAL_REGS
  Register 121 pref INDEX_REGS, else GENERAL_REGS
  Register 122 pref FLOAT_INT_SSE_REGS or none
  Register 123 pref GENERAL_REGS or none
  Register 124 pref DIREG, else GENERAL_REGS
  Register 125 pref AREG, else GENERAL_REGS
  Register 126 pref GENERAL_REGS or none
  Register 127 pref FLOAT_INT_SSE_REGS or none
  Register 128 pref SSE_REGS or none
  Register 129 pref SSE_REGS or none
  Register 130 pref GENERAL_REGS or none
  Register 131 pref INDEX_REGS, else GENERAL_REGS
  Register 135 pref GENERAL_REGS or none
  Register 136 pref INDEX_REGS, else GENERAL_REGS
  Register 140 pref SSE_REGS or none
  Register 141 pref SSE_REGS or none
  Register 153 pref GENERAL_REGS or none
  Register 154 pref INDEX_REGS, else GENERAL_REGS
  Register 155 pref GENERAL_REGS or none
  Register 158 pref GENERAL_REGS or none
  Register 163 pref GENERAL_REGS or none
  Register 165 pref INDEX_REGS, else GENERAL_REGS
  Register 166 pref GENERAL_REGS or none
  Register 168 pref GENERAL_REGS or none
  Register 169 pref GENERAL_REGS or none
  Register 170 pref GENERAL_REGS or none
  Register 171 pref GENERAL_REGS or none
  Register 172 pref INDEX_REGS, else GENERAL_REGS
  Register 173 pref FLOAT_INT_SSE_REGS or none
  Register 176 pref FLOAT_INT_SSE_REGS or none
  Register 178 pref INDEX_REGS, else GENERAL_REGS
  Register 179 pref FLOAT_INT_SSE_REGS or none
  Register 181 pref INDEX_REGS, else GENERAL_REGS
  Register 182 pref FLOAT_INT_SSE_REGS or none
  Register 184 pref INDEX_REGS, else GENERAL_REGS
  Register 185 pref FLOAT_INT_SSE_REGS or none
  Register 187 pref INDEX_REGS, else GENERAL_REGS
  Register 188 pref FLOAT_INT_SSE_REGS or none
  Register 190 pref INDEX_REGS, else GENERAL_REGS
  Register 191 pref FLOAT_INT_SSE_REGS or none
  Register 193 pref INDEX_REGS, else GENERAL_REGS
  Register 194 pref FLOAT_INT_SSE_REGS or none
  Register 195 pref GENERAL_REGS or none
  Register 196 pref DREG, else GENERAL_REGS
  Register 197 pref DREG, else GENERAL_REGS
  Register 198 pref INDEX_REGS, else GENERAL_REGS
  Register 199 pref FLOAT_INT_SSE_REGS or none
  Register 200 pref GENERAL_REGS or none
  Register 202 pref DREG, else GENERAL_REGS
  Register 203 pref DREG, else GENERAL_REGS
  Register 204 pref INDEX_REGS, else GENERAL_REGS
  Register 205 pref FLOAT_INT_SSE_REGS or none
  Register 208 pref DREG, else GENERAL_REGS
  Register 209 pref DREG, else GENERAL_REGS
  Register 210 pref INDEX_REGS, else GENERAL_REGS
  Register 211 pref FLOAT_INT_SSE_REGS or none
  Register 214 pref DREG, else GENERAL_REGS
  Register 215 pref DREG, else GENERAL_REGS
  Register 216 pref INDEX_REGS, else GENERAL_REGS
  Register 217 pref FLOAT_INT_SSE_REGS or none
  Register 220 pref DREG, else GENERAL_REGS
  Register 221 pref DREG, else GENERAL_REGS
  Register 222 pref INDEX_REGS, else GENERAL_REGS
  Register 223 pref FLOAT_INT_SSE_REGS or none
  Register 226 pref DREG, else GENERAL_REGS
  Register 227 pref DREG, else GENERAL_REGS
  Register 228 pref INDEX_REGS, else GENERAL_REGS
  Register 229 pref FLOAT_INT_SSE_REGS or none
  Register 232 pref DREG, else GENERAL_REGS
  Register 233 pref DREG, else GENERAL_REGS
  Register 234 pref INDEX_REGS, else GENERAL_REGS
  Register 235 pref FLOAT_INT_SSE_REGS or none
  Register 238 pref DREG, else GENERAL_REGS
  Register 239 pref DREG, else GENERAL_REGS
  Register 240 pref INDEX_REGS, else GENERAL_REGS
  Register 241 pref FLOAT_INT_SSE_REGS or none
  Register 243 pref INDEX_REGS, else GENERAL_REGS
  Register 244 pref SSE_REGS or none
  Register 245 pref SSE_REGS or none
  Register 246 pref GENERAL_REGS or none
  Register 247 pref GENERAL_REGS or none
  Register 250 pref SSE_REGS or none
  Register 251 pref SSE_REGS or none
  Register 252 pref GENERAL_REGS or none
  Register 253 pref SSE_REGS or none
  Register 254 pref GENERAL_REGS or none
  Register 255 pref INDEX_REGS, else GENERAL_REGS
  Register 256 pref SSE_REGS or none
  Register 258 pref GENERAL_REGS or none
  Register 259 pref INDEX_REGS, else GENERAL_REGS
  Register 263 pref FLOAT_INT_SSE_REGS or none
  Register 264 pref SSE_REGS or none
  Register 265 pref SSE_REGS or none
  Register 266 pref GENERAL_REGS or none
  Register 267 pref SSE_REGS or none
  Register 268 pref GENERAL_REGS or none
  Register 269 pref INDEX_REGS, else GENERAL_REGS
  Register 270 pref SSE_REGS or none
  Register 272 pref GENERAL_REGS or none
  Register 273 pref INDEX_REGS, else GENERAL_REGS
  Register 277 pref FLOAT_INT_SSE_REGS or none
  Register 278 pref SSE_REGS or none
  Register 279 pref SSE_REGS or none
  Register 280 pref GENERAL_REGS or none
  Register 281 pref SSE_REGS or none
  Register 282 pref GENERAL_REGS or none
  Register 283 pref INDEX_REGS, else GENERAL_REGS
  Register 284 pref SSE_REGS or none
  Register 286 pref GENERAL_REGS or none
  Register 287 pref INDEX_REGS, else GENERAL_REGS
  Register 291 pref FLOAT_INT_SSE_REGS or none
  Register 292 pref SSE_REGS or none
  Register 293 pref SSE_REGS or none
  Register 294 pref GENERAL_REGS or none
  Register 295 pref SSE_REGS or none
  Register 296 pref GENERAL_REGS or none
  Register 297 pref INDEX_REGS, else GENERAL_REGS
  Register 298 pref SSE_REGS or none
  Register 300 pref GENERAL_REGS or none
  Register 301 pref INDEX_REGS, else GENERAL_REGS
  Register 305 pref FLOAT_INT_SSE_REGS or none
  Register 306 pref SSE_REGS or none
  Register 307 pref GENERAL_REGS or none
  Register 308 pref INDEX_REGS, else GENERAL_REGS
  Register 309 pref SSE_REGS or none
  Register 311 pref GENERAL_REGS or none
  Register 312 pref INDEX_REGS, else GENERAL_REGS
  Register 316 pref FLOAT_INT_SSE_REGS or none
  Register 318 pref INDEX_REGS, else GENERAL_REGS
  Register 319 pref SSE_REGS or none
  Register 320 pref SSE_REGS or none
  Register 321 pref GENERAL_REGS or none
  Register 322 pref SSE_REGS or none
  Register 323 pref GENERAL_REGS or none
  Register 324 pref INDEX_REGS, else GENERAL_REGS
  Register 325 pref SSE_REGS or none
  Register 327 pref GENERAL_REGS or none
  Register 328 pref INDEX_REGS, else GENERAL_REGS
  Register 332 pref FLOAT_INT_SSE_REGS or none
  Register 334 pref INDEX_REGS, else GENERAL_REGS
  Register 335 pref SSE_REGS or none
  Register 336 pref SSE_REGS or none
  Register 337 pref GENERAL_REGS or none
  Register 338 pref SSE_REGS or none
  Register 339 pref GENERAL_REGS or none
  Register 340 pref INDEX_REGS, else GENERAL_REGS
  Register 341 pref SSE_REGS or none
  Register 343 pref GENERAL_REGS or none
  Register 344 pref INDEX_REGS, else GENERAL_REGS
  Register 348 pref FLOAT_INT_SSE_REGS or none
  Register 349 pref DREG, else GENERAL_REGS
  Register 350 pref DREG, else GENERAL_REGS
  Register 351 pref INDEX_REGS, else GENERAL_REGS
  Register 352 pref FLOAT_INT_SSE_REGS or none
  Register 353 pref DREG, else GENERAL_REGS
  Register 354 pref DREG, else GENERAL_REGS
  Register 355 pref INDEX_REGS, else GENERAL_REGS
  Register 356 pref FLOAT_INT_SSE_REGS or none
  Register 357 pref DREG, else GENERAL_REGS
  Register 358 pref DREG, else GENERAL_REGS
  Register 359 pref INDEX_REGS, else GENERAL_REGS
  Register 360 pref FLOAT_INT_SSE_REGS or none
  Register 361 pref DREG, else GENERAL_REGS
  Register 362 pref DREG, else GENERAL_REGS
  Register 363 pref INDEX_REGS, else GENERAL_REGS
  Register 364 pref FLOAT_INT_SSE_REGS or none
  Register 365 pref DREG, else GENERAL_REGS
  Register 366 pref DREG, else GENERAL_REGS
  Register 367 pref INDEX_REGS, else GENERAL_REGS
  Register 368 pref FLOAT_INT_SSE_REGS or none
  Register 369 pref DREG, else GENERAL_REGS
  Register 370 pref DREG, else GENERAL_REGS
  Register 371 pref INDEX_REGS, else GENERAL_REGS
  Register 372 pref FLOAT_INT_SSE_REGS or none
  Register 373 pref DREG, else GENERAL_REGS
  Register 374 pref DREG, else GENERAL_REGS
  Register 375 pref INDEX_REGS, else GENERAL_REGS
  Register 376 pref FLOAT_INT_SSE_REGS or none
  Register 377 pref FLOAT_INT_SSE_REGS or none
  Register 378 pref FLOAT_INT_SSE_REGS or none
  Register 379 pref FLOAT_INT_SSE_REGS or none
  Register 380 pref FLOAT_INT_SSE_REGS or none
  Register 381 pref FLOAT_INT_SSE_REGS or none
  Register 382 pref FLOAT_INT_SSE_REGS or none
  Register 383 pref FLOAT_INT_SSE_REGS or none
  Register 384 pref SSE_REGS or none
  Register 385 pref SSE_REGS or none
  Register 386 pref SSE_REGS or none
  Register 387 pref SSE_REGS or none
  Register 388 pref SSE_REGS or none
  Register 389 pref SSE_REGS or none
  Register 390 pref SSE_REGS or none
  Register 391 pref GENERAL_REGS or none
  Register 392 pref SSE_REGS or none
  Register 393 pref GENERAL_REGS or none
  Register 394 pref SSE_REGS or none
  Register 395 pref GENERAL_REGS or none
  Register 396 pref SSE_REGS or none
  Register 397 pref GENERAL_REGS or none
  Register 398 pref SSE_REGS or none
  Register 399 pref GENERAL_REGS or none
  Register 400 pref SSE_REGS or none
  Register 401 pref GENERAL_REGS or none
  Register 402 pref SSE_REGS or none
  Register 403 pref GENERAL_REGS or none
  Register 404 pref SSE_REGS or none
  Register 405 pref AREG, else GENERAL_REGS
  Register 406 pref AREG, else GENERAL_REGS
  Register 407 pref AREG, else GENERAL_REGS
  Register 408 pref AREG, else GENERAL_REGS
  Register 409 pref AREG, else GENERAL_REGS
  Register 410 pref AREG, else GENERAL_REGS
  Register 411 pref AREG, else GENERAL_REGS
  Register 412 pref AREG, else GENERAL_REGS
  Register 413 pref AREG, else GENERAL_REGS
  Register 414 pref AREG, else GENERAL_REGS
  Register 415 pref AREG, else GENERAL_REGS
  Register 416 pref AREG, else GENERAL_REGS
  Register 417 pref AREG, else GENERAL_REGS
  Register 418 pref AREG, else GENERAL_REGS
  Register 419 pref AREG, else GENERAL_REGS


Pass 1

  Register 59 costs: AREG:2015 DREG:2015 CREG:2015 BREG:2015 SIREG:2015 DIREG:2015 AD_REGS:2015 Q_REGS:2015 NON_Q_REGS:3341 INDEX_REGS:2015 LEGACY_REGS:3341 GENERAL_REGS:3341 FP_TOP_REG:3255 FP_SECOND_REG:3255 FLOAT_REGS:3255 SSE_REGS:0 FP_TOP_SSE_REGS:3255 FP_SECOND_SSE_REGS:3255 FLOAT_SSE_REGS:3255 FLOAT_INT_REGS:3255 INT_SSE_REGS:2015 FLOAT_INT_SSE_REGS:3255 ALL_REGS:4893 MEM:1552
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1496 INDEX_REGS:0 LEGACY_REGS:1496 GENERAL_REGS:1496 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1848 MEM:308
  Register 61 costs: AREG:0 DREG:-3 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17446 MMX_REGS:17446 FP_TOP_SSE_REGS:17446 FP_SECOND_SSE_REGS:17446 FLOAT_SSE_REGS:17446 FLOAT_INT_REGS:12078 INT_SSE_REGS:17446 FLOAT_INT_SSE_REGS:17446 ALL_REGS:17446 MEM:5368
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25740 MMX_REGS:25740 FP_TOP_SSE_REGS:25740 FP_SECOND_SSE_REGS:25740 FLOAT_SSE_REGS:25740 FLOAT_INT_REGS:17820 INT_SSE_REGS:25740 FLOAT_INT_SSE_REGS:25740 ALL_REGS:25740 MEM:6573
  Register 63 costs: AREG:-36 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4264 MMX_REGS:4264 FP_TOP_SSE_REGS:4264 FP_SECOND_SSE_REGS:4264 FLOAT_SSE_REGS:4264 FLOAT_INT_REGS:2952 INT_SSE_REGS:4264 FLOAT_INT_SSE_REGS:4264 ALL_REGS:4264 MEM:1257
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:806 MMX_REGS:806 FP_TOP_SSE_REGS:806 FP_SECOND_SSE_REGS:806 FLOAT_SSE_REGS:806 FLOAT_INT_REGS:558 INT_SSE_REGS:806 FLOAT_INT_SSE_REGS:806 ALL_REGS:806 MEM:217
  Register 66 costs: AREG:5968 DREG:5968 CREG:5968 BREG:5968 SIREG:5968 DIREG:5968 AD_REGS:5968 Q_REGS:5968 NON_Q_REGS:5968 INDEX_REGS:5968 LEGACY_REGS:5968 GENERAL_REGS:5968 FP_TOP_REG:9184 FP_SECOND_REG:9184 FLOAT_REGS:9184 SSE_REGS:742 FP_TOP_SSE_REGS:9184 FP_SECOND_SSE_REGS:9184 FLOAT_SSE_REGS:9184 FLOAT_INT_REGS:9184 INT_SSE_REGS:5968 FLOAT_INT_SSE_REGS:9184 ALL_REGS:9184 MEM:3958
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5629 MMX_REGS:5629 FP_TOP_SSE_REGS:5629 FP_SECOND_SSE_REGS:5629 FLOAT_SSE_REGS:5629 FLOAT_INT_REGS:3897 INT_SSE_REGS:5629 FLOAT_INT_SSE_REGS:5629 ALL_REGS:5629 MEM:1299
  Register 68 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 70 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 72 costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:18 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  Register 74 costs: AREG:3105 DREG:3105 CREG:3105 BREG:3105 SIREG:3105 DIREG:3105 AD_REGS:3105 Q_REGS:3105 NON_Q_REGS:3105 INDEX_REGS:3105 LEGACY_REGS:3105 GENERAL_REGS:3105 FP_TOP_REG:4905 FP_SECOND_REG:4905 FLOAT_REGS:4905 SSE_REGS:180 FP_TOP_SSE_REGS:4905 FP_SECOND_SSE_REGS:4905 FLOAT_SSE_REGS:4905 FLOAT_INT_REGS:4905 INT_SSE_REGS:3105 FLOAT_INT_SSE_REGS:4905 ALL_REGS:4905 MEM:1890
  Register 75 costs: AREG:1939 DREG:1939 CREG:1939 BREG:1939 SIREG:1939 DIREG:1939 AD_REGS:1939 Q_REGS:1939 NON_Q_REGS:2466 INDEX_REGS:1939 LEGACY_REGS:2466 GENERAL_REGS:2466 FP_TOP_REG:3067 FP_SECOND_REG:3067 FLOAT_REGS:3067 SSE_REGS:106 FP_TOP_SSE_REGS:3067 FP_SECOND_SSE_REGS:3067 FLOAT_SSE_REGS:3067 FLOAT_INT_REGS:3067 INT_SSE_REGS:1939 FLOAT_INT_SSE_REGS:3067 ALL_REGS:3718 MEM:1283
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:806 MMX_REGS:806 FP_TOP_SSE_REGS:806 FP_SECOND_SSE_REGS:806 FLOAT_SSE_REGS:806 FLOAT_INT_REGS:558 INT_SSE_REGS:806 FLOAT_INT_SSE_REGS:806 ALL_REGS:806 MEM:217
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-44 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24076 MMX_REGS:24076 FP_TOP_SSE_REGS:24076 FP_SECOND_SSE_REGS:24076 FLOAT_SSE_REGS:24076 FLOAT_INT_REGS:16668 INT_SSE_REGS:24076 FLOAT_INT_SSE_REGS:24076 ALL_REGS:24076 MEM:6437
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-35 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9542 MMX_REGS:9542 FP_TOP_SSE_REGS:9542 FP_SECOND_SSE_REGS:9542 FLOAT_SSE_REGS:9542 FLOAT_INT_REGS:6606 INT_SSE_REGS:9542 FLOAT_INT_SSE_REGS:9542 ALL_REGS:9542 MEM:2866
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3614 MMX_REGS:3614 INT_SSE_REGS:3614 MEM:954
  Register 83 costs: AREG:733 DREG:733 CREG:733 BREG:733 SIREG:733 DIREG:733 AD_REGS:733 Q_REGS:733 NON_Q_REGS:1260 INDEX_REGS:733 LEGACY_REGS:1260 GENERAL_REGS:1260 FP_TOP_REG:1157 FP_SECOND_REG:1157 FLOAT_REGS:1157 SSE_REGS:44 FP_TOP_SSE_REGS:1157 FP_SECOND_SSE_REGS:1157 FLOAT_SSE_REGS:1157 FLOAT_INT_REGS:1157 INT_SSE_REGS:733 FLOAT_INT_SSE_REGS:1157 ALL_REGS:1808 MEM:539
  Register 85 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 86 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:210 INDEX_REGS:0 LEGACY_REGS:210 GENERAL_REGS:210 SSE_REGS:2301 MMX_REGS:2301 FP_TOP_SSE_REGS:2301 FP_SECOND_SSE_REGS:2301 FLOAT_SSE_REGS:2301 FLOAT_INT_REGS:1593 INT_SSE_REGS:2301 FLOAT_INT_SSE_REGS:2301 ALL_REGS:2301 MEM:672
  Register 87 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-35 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:72 INDEX_REGS:0 LEGACY_REGS:72 GENERAL_REGS:72 SSE_REGS:1391 MMX_REGS:1391 FP_TOP_SSE_REGS:1391 FP_SECOND_SSE_REGS:1391 FLOAT_SSE_REGS:1391 FLOAT_INT_REGS:963 INT_SSE_REGS:1391 FLOAT_INT_SSE_REGS:1391 ALL_REGS:1391 MEM:393
  Register 88 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 89 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 90 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 91 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 92 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 93 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 94 costs: AREG:-44 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-44 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1144 MMX_REGS:1144 FP_TOP_SSE_REGS:1144 FP_SECOND_SSE_REGS:1144 FLOAT_SSE_REGS:1144 FLOAT_INT_REGS:792 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1144 ALL_REGS:1144 MEM:308
  Register 95 costs: AREG:2743 DREG:2743 CREG:2743 BREG:2743 SIREG:2743 DIREG:2743 AD_REGS:2743 Q_REGS:2743 NON_Q_REGS:4545 INDEX_REGS:2743 LEGACY_REGS:4545 GENERAL_REGS:4545 FP_TOP_REG:4431 FP_SECOND_REG:4431 FLOAT_REGS:4431 SSE_REGS:0 FP_TOP_SSE_REGS:4431 FP_SECOND_SSE_REGS:4431 FLOAT_SSE_REGS:4431 FLOAT_INT_REGS:4431 INT_SSE_REGS:2743 FLOAT_INT_SSE_REGS:4431 ALL_REGS:6657 MEM:2006
  Register 96 costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:18 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  Register 97 costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:18 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  Register 98 costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:18 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  Register 99 costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:18 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  Register 101 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-81 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7332 MMX_REGS:7332 FP_TOP_SSE_REGS:7332 FP_SECOND_SSE_REGS:7332 FLOAT_SSE_REGS:7332 FLOAT_INT_REGS:5076 INT_SSE_REGS:7332 FLOAT_INT_SSE_REGS:7332 ALL_REGS:7332 MEM:2256
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-81 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6253 MMX_REGS:6253 FP_TOP_SSE_REGS:6253 FP_SECOND_SSE_REGS:6253 FLOAT_SSE_REGS:6253 FLOAT_INT_REGS:4329 INT_SSE_REGS:6253 FLOAT_INT_SSE_REGS:6253 ALL_REGS:6253 MEM:1524
  Register 103 costs: AREG:0 DREG:-81 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11583 MMX_REGS:11583 FP_TOP_SSE_REGS:11583 FP_SECOND_SSE_REGS:11583 FLOAT_SSE_REGS:11583 FLOAT_INT_REGS:8019 INT_SSE_REGS:11583 FLOAT_INT_SSE_REGS:11583 ALL_REGS:11583 MEM:3561
  Register 104 costs: AREG:0 DREG:0 CREG:-81 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7397 MMX_REGS:7397 INT_SSE_REGS:7397 MEM:2008
  Register 105 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3263 MMX_REGS:3263 FP_TOP_SSE_REGS:3263 FP_SECOND_SSE_REGS:3263 FLOAT_SSE_REGS:3263 FLOAT_INT_REGS:2259 INT_SSE_REGS:3263 FLOAT_INT_SSE_REGS:3263 ALL_REGS:3263 MEM:915
  Register 106 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2106 MMX_REGS:2106 FP_TOP_SSE_REGS:2106 FP_SECOND_SSE_REGS:2106 FLOAT_SSE_REGS:2106 FLOAT_INT_REGS:1458 INT_SSE_REGS:2106 FLOAT_INT_SSE_REGS:2106 ALL_REGS:2106 MEM:567
  Register 111 costs: AREG:1404 DREG:1404 CREG:1404 BREG:1404 SIREG:1404 DIREG:1404 AD_REGS:1404 Q_REGS:1404 NON_Q_REGS:1404 INDEX_REGS:1404 LEGACY_REGS:1404 GENERAL_REGS:1404 FP_TOP_REG:2268 FP_SECOND_REG:2268 FLOAT_REGS:2268 SSE_REGS:0 FP_TOP_SSE_REGS:2268 FP_SECOND_SSE_REGS:2268 FLOAT_SSE_REGS:2268 FLOAT_INT_REGS:2268 INT_SSE_REGS:1404 FLOAT_INT_SSE_REGS:2268 ALL_REGS:2268 MEM:828
  Register 114 costs: AREG:468 DREG:468 CREG:468 BREG:468 SIREG:468 DIREG:468 AD_REGS:468 Q_REGS:468 NON_Q_REGS:468 INDEX_REGS:468 LEGACY_REGS:468 GENERAL_REGS:468 FP_TOP_REG:756 FP_SECOND_REG:756 FLOAT_REGS:756 SSE_REGS:0 FP_TOP_SSE_REGS:756 FP_SECOND_SSE_REGS:756 FLOAT_SSE_REGS:756 FLOAT_INT_REGS:756 INT_SSE_REGS:468 FLOAT_INT_SSE_REGS:756 ALL_REGS:756 MEM:270
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 119 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 120 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 121 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 122 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 123 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:910 MMX_REGS:910 FP_TOP_SSE_REGS:910 FP_SECOND_SSE_REGS:910 FLOAT_SSE_REGS:910 FLOAT_INT_REGS:630 INT_SSE_REGS:910 FLOAT_INT_SSE_REGS:910 ALL_REGS:910 MEM:245
  Register 124 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-35 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:910 MMX_REGS:910 FP_TOP_SSE_REGS:910 FP_SECOND_SSE_REGS:910 FLOAT_SSE_REGS:910 FLOAT_INT_REGS:630 INT_SSE_REGS:910 FLOAT_INT_SSE_REGS:910 ALL_REGS:910 MEM:210
  Register 125 costs: AREG:-70 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6136 MMX_REGS:6136 FP_TOP_SSE_REGS:6136 FP_SECOND_SSE_REGS:6136 FLOAT_SSE_REGS:6136 FLOAT_INT_REGS:4248 INT_SSE_REGS:6136 FLOAT_INT_SSE_REGS:6136 ALL_REGS:6136 MEM:1853
  Register 126 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:806 MMX_REGS:806 FP_TOP_SSE_REGS:806 FP_SECOND_SSE_REGS:806 FLOAT_SSE_REGS:806 FLOAT_INT_REGS:558 INT_SSE_REGS:806 FLOAT_INT_SSE_REGS:806 ALL_REGS:806 MEM:217
  Register 127 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:612 INDEX_REGS:0 LEGACY_REGS:612 GENERAL_REGS:612 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:756 MEM:144
  Register 128 costs: AREG:3015 DREG:3015 CREG:3015 BREG:3015 SIREG:3015 DIREG:3015 AD_REGS:3015 Q_REGS:3015 NON_Q_REGS:3780 INDEX_REGS:3015 LEGACY_REGS:3780 GENERAL_REGS:3780 FP_TOP_REG:4815 FP_SECOND_REG:4815 FLOAT_REGS:4815 SSE_REGS:90 FP_TOP_SSE_REGS:4815 FP_SECOND_SSE_REGS:4815 FLOAT_SSE_REGS:4815 FLOAT_INT_REGS:4815 INT_SSE_REGS:3015 FLOAT_INT_SSE_REGS:4815 ALL_REGS:5760 MEM:2025
  Register 129 costs: AREG:7336 DREG:7336 CREG:7336 BREG:7336 SIREG:7336 DIREG:7336 AD_REGS:7336 Q_REGS:7336 NON_Q_REGS:7863 INDEX_REGS:7336 LEGACY_REGS:7863 GENERAL_REGS:7863 FP_TOP_REG:11528 FP_SECOND_REG:11528 FLOAT_REGS:11528 SSE_REGS:524 FP_TOP_SSE_REGS:11528 FP_SECOND_SSE_REGS:11528 FLOAT_SSE_REGS:11528 FLOAT_INT_REGS:11528 INT_SSE_REGS:7336 FLOAT_INT_SSE_REGS:11528 ALL_REGS:12179 MEM:4578
  Register 130 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 131 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 136 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 140 costs: AREG:15509 DREG:15509 CREG:15509 BREG:15509 SIREG:15509 DIREG:15509 AD_REGS:15509 Q_REGS:15509 NON_Q_REGS:16835 INDEX_REGS:15509 LEGACY_REGS:16835 GENERAL_REGS:16835 FP_TOP_REG:25053 FP_SECOND_REG:25053 FLOAT_REGS:25053 SSE_REGS:0 FP_TOP_SSE_REGS:25053 FP_SECOND_SSE_REGS:25053 FLOAT_SSE_REGS:25053 FLOAT_INT_REGS:25053 INT_SSE_REGS:15509 FLOAT_INT_SSE_REGS:25053 ALL_REGS:26691 MEM:9856
  Register 141 costs: AREG:15899 DREG:15899 CREG:15899 BREG:15899 SIREG:15899 DIREG:15899 AD_REGS:15899 Q_REGS:15899 NON_Q_REGS:17208 INDEX_REGS:15899 LEGACY_REGS:17208 GENERAL_REGS:17208 FP_TOP_REG:25683 FP_SECOND_REG:25683 FLOAT_REGS:25683 SSE_REGS:0 FP_TOP_SSE_REGS:25683 FP_SECOND_SSE_REGS:25683 FLOAT_SSE_REGS:25683 FLOAT_INT_REGS:25683 INT_SSE_REGS:15899 FLOAT_INT_SSE_REGS:25683 ALL_REGS:27300 MEM:8869
  Register 153 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2002 MMX_REGS:2002 FP_TOP_SSE_REGS:2002 FP_SECOND_SSE_REGS:2002 FLOAT_SSE_REGS:2002 FLOAT_INT_REGS:1386 INT_SSE_REGS:2002 FLOAT_INT_SSE_REGS:2002 ALL_REGS:2002 MEM:512
  Register 154 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:254 INDEX_REGS:0 LEGACY_REGS:254 GENERAL_REGS:254 SSE_REGS:4979 MMX_REGS:4979 FP_TOP_SSE_REGS:4979 FP_SECOND_SSE_REGS:4979 FLOAT_SSE_REGS:4979 FLOAT_INT_REGS:3447 INT_SSE_REGS:4979 FLOAT_INT_SSE_REGS:4979 ALL_REGS:4979 MEM:1404
  Register 155 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1664 MMX_REGS:1664 FP_TOP_SSE_REGS:1664 FP_SECOND_SSE_REGS:1664 FLOAT_SSE_REGS:1664 FLOAT_INT_REGS:1152 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:1664 ALL_REGS:1664 MEM:384
  Register 158 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2262 MMX_REGS:2262 FP_TOP_SSE_REGS:2262 FP_SECOND_SSE_REGS:2262 FLOAT_SSE_REGS:2262 FLOAT_INT_REGS:1566 INT_SSE_REGS:2262 FLOAT_INT_SSE_REGS:2262 ALL_REGS:2262 MEM:561
  Register 163 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:910 MMX_REGS:910 FP_TOP_SSE_REGS:910 FP_SECOND_SSE_REGS:910 FLOAT_SSE_REGS:910 FLOAT_INT_REGS:630 INT_SSE_REGS:910 FLOAT_INT_SSE_REGS:910 ALL_REGS:910 MEM:226
  Register 165 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 166 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1924 MMX_REGS:1924 INT_SSE_REGS:1924 MEM:518
  Register 168 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5031 MMX_REGS:5031 FP_TOP_SSE_REGS:5031 FP_SECOND_SSE_REGS:5031 FLOAT_SSE_REGS:5031 FLOAT_INT_REGS:3483 INT_SSE_REGS:5031 FLOAT_INT_SSE_REGS:5031 ALL_REGS:5031 MEM:1161
  Register 169 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11024 MMX_REGS:11024 FP_TOP_SSE_REGS:11024 FP_SECOND_SSE_REGS:11024 FLOAT_SSE_REGS:11024 FLOAT_INT_REGS:7632 INT_SSE_REGS:11024 FLOAT_INT_SSE_REGS:11024 ALL_REGS:11024 MEM:3093
  Register 170 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17381 MMX_REGS:17381 FP_TOP_SSE_REGS:17381 FP_SECOND_SSE_REGS:17381 FLOAT_SSE_REGS:17381 FLOAT_INT_REGS:12033 INT_SSE_REGS:17381 FLOAT_INT_SSE_REGS:17381 ALL_REGS:17381 MEM:5063
  Register 171 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2041 MMX_REGS:2041 FP_TOP_SSE_REGS:2041 FP_SECOND_SSE_REGS:2041 FLOAT_SSE_REGS:2041 FLOAT_INT_REGS:1413 INT_SSE_REGS:2041 FLOAT_INT_SSE_REGS:2041 ALL_REGS:2041 MEM:488
  Register 172 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:228 INDEX_REGS:0 LEGACY_REGS:228 GENERAL_REGS:228 SSE_REGS:4004 MMX_REGS:4004 FP_TOP_SSE_REGS:4004 FP_SECOND_SSE_REGS:4004 FLOAT_SSE_REGS:4004 FLOAT_INT_REGS:2772 INT_SSE_REGS:4004 FLOAT_INT_SSE_REGS:4004 ALL_REGS:4004 MEM:1118
  Register 173 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 176 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 178 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 179 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 181 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 182 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 184 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 185 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 187 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 188 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 190 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 191 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 193 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:36 INDEX_REGS:0 LEGACY_REGS:36 GENERAL_REGS:36 SSE_REGS:351 MMX_REGS:351 FP_TOP_SSE_REGS:351 FP_SECOND_SSE_REGS:351 FLOAT_SSE_REGS:351 FLOAT_INT_REGS:243 INT_SSE_REGS:351 FLOAT_INT_SSE_REGS:351 ALL_REGS:351 MEM:108
  Register 194 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 195 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5109 MMX_REGS:5109 FP_TOP_SSE_REGS:5109 FP_SECOND_SSE_REGS:5109 FLOAT_SSE_REGS:5109 FLOAT_INT_REGS:3537 INT_SSE_REGS:5109 FLOAT_INT_SSE_REGS:5109 ALL_REGS:5109 MEM:1221
  Register 196 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 197 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 198 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 199 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 200 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8216 MMX_REGS:8216 FP_TOP_SSE_REGS:8216 FP_SECOND_SSE_REGS:8216 FLOAT_SSE_REGS:8216 FLOAT_INT_REGS:5688 INT_SSE_REGS:8216 FLOAT_INT_SSE_REGS:8216 ALL_REGS:8216 MEM:2222
  Register 202 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 203 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 204 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 205 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 208 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 209 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 210 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 211 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 214 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 215 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 216 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 217 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 220 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 221 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 222 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 223 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 226 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 227 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 228 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 229 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 232 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 233 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 234 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 235 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 238 costs: AREG:23 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 239 costs: AREG:46 DREG:0 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 INT_SSE_REGS:598 MEM:161
  Register 240 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:46 INDEX_REGS:0 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:598 MMX_REGS:598 FP_TOP_SSE_REGS:598 FP_SECOND_SSE_REGS:598 FLOAT_SSE_REGS:598 FLOAT_INT_REGS:414 INT_SSE_REGS:598 FLOAT_INT_SSE_REGS:598 ALL_REGS:598 MEM:184
  Register 241 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:782 INDEX_REGS:0 LEGACY_REGS:782 GENERAL_REGS:782 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:966 MEM:184
  Register 243 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:590 INDEX_REGS:0 LEGACY_REGS:590 GENERAL_REGS:590 SSE_REGS:8086 MMX_REGS:8086 FP_TOP_SSE_REGS:8086 FP_SECOND_SSE_REGS:8086 FLOAT_SSE_REGS:8086 FLOAT_INT_REGS:5598 INT_SSE_REGS:8086 FLOAT_INT_SSE_REGS:8086 ALL_REGS:8086 MEM:2161
  Register 244 costs: AREG:3975 DREG:3975 CREG:3975 BREG:3975 SIREG:3975 DIREG:3975 AD_REGS:3975 Q_REGS:3975 NON_Q_REGS:5063 INDEX_REGS:3975 LEGACY_REGS:5063 GENERAL_REGS:5063 FP_TOP_REG:6287 FP_SECOND_REG:6287 FLOAT_REGS:6287 SSE_REGS:218 FP_TOP_SSE_REGS:6287 FP_SECOND_SSE_REGS:6287 FLOAT_SSE_REGS:6287 FLOAT_INT_REGS:6287 INT_SSE_REGS:3975 FLOAT_INT_SSE_REGS:6287 ALL_REGS:7631 MEM:2632
  Register 245 costs: AREG:1507 DREG:1507 CREG:1507 BREG:1507 SIREG:1507 DIREG:1507 AD_REGS:1507 Q_REGS:1507 NON_Q_REGS:2595 INDEX_REGS:1507 LEGACY_REGS:2595 GENERAL_REGS:2595 FP_TOP_REG:2379 FP_SECOND_REG:2379 FLOAT_REGS:2379 SSE_REGS:90 FP_TOP_SSE_REGS:2379 FP_SECOND_SSE_REGS:2379 FLOAT_SSE_REGS:2379 FLOAT_INT_REGS:2379 INT_SSE_REGS:1507 FLOAT_INT_SSE_REGS:2379 ALL_REGS:3723 MEM:1109
  Register 246 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1664 MMX_REGS:1664 FP_TOP_SSE_REGS:1664 FP_SECOND_SSE_REGS:1664 FLOAT_SSE_REGS:1664 FLOAT_INT_REGS:1152 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:1664 ALL_REGS:1664 MEM:448
  Register 247 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5850 MMX_REGS:5850 FP_TOP_SSE_REGS:5850 FP_SECOND_SSE_REGS:5850 FLOAT_SSE_REGS:5850 FLOAT_INT_REGS:4050 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:5850 ALL_REGS:5850 MEM:1350
  Register 250 costs: AREG:3975 DREG:3975 CREG:3975 BREG:3975 SIREG:3975 DIREG:3975 AD_REGS:3975 Q_REGS:3975 NON_Q_REGS:5063 INDEX_REGS:3975 LEGACY_REGS:5063 GENERAL_REGS:5063 FP_TOP_REG:6287 FP_SECOND_REG:6287 FLOAT_REGS:6287 SSE_REGS:218 FP_TOP_SSE_REGS:6287 FP_SECOND_SSE_REGS:6287 FLOAT_SSE_REGS:6287 FLOAT_INT_REGS:6287 INT_SSE_REGS:3975 FLOAT_INT_SSE_REGS:6287 ALL_REGS:7631 MEM:2632
  Register 251 costs: AREG:1507 DREG:1507 CREG:1507 BREG:1507 SIREG:1507 DIREG:1507 AD_REGS:1507 Q_REGS:1507 NON_Q_REGS:2595 INDEX_REGS:1507 LEGACY_REGS:2595 GENERAL_REGS:2595 FP_TOP_REG:2379 FP_SECOND_REG:2379 FLOAT_REGS:2379 SSE_REGS:90 FP_TOP_SSE_REGS:2379 FP_SECOND_SSE_REGS:2379 FLOAT_SSE_REGS:2379 FLOAT_INT_REGS:2379 INT_SSE_REGS:1507 FLOAT_INT_SSE_REGS:2379 ALL_REGS:3723 MEM:1109
  Register 252 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1664 MMX_REGS:1664 FP_TOP_SSE_REGS:1664 FP_SECOND_SSE_REGS:1664 FLOAT_SSE_REGS:1664 FLOAT_INT_REGS:1152 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:1664 ALL_REGS:1664 MEM:448
  Register 253 costs: AREG:1518 DREG:1518 CREG:1518 BREG:1518 SIREG:1518 DIREG:1518 AD_REGS:1518 Q_REGS:1518 NON_Q_REGS:1518 INDEX_REGS:1518 LEGACY_REGS:1518 GENERAL_REGS:1518 FP_TOP_REG:2398 FP_SECOND_REG:2398 FLOAT_REGS:2398 SSE_REGS:88 FP_TOP_SSE_REGS:2398 FP_SECOND_SSE_REGS:2398 FLOAT_SSE_REGS:2398 FLOAT_INT_REGS:2398 INT_SSE_REGS:1518 FLOAT_INT_SSE_REGS:2398 ALL_REGS:2398 MEM:924
  Register 254 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 255 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 256 costs: AREG:1474 DREG:1474 CREG:1474 BREG:1474 SIREG:1474 DIREG:1474 AD_REGS:1474 Q_REGS:1474 NON_Q_REGS:1848 INDEX_REGS:1474 LEGACY_REGS:1848 GENERAL_REGS:1848 FP_TOP_REG:2354 FP_SECOND_REG:2354 FLOAT_REGS:2354 SSE_REGS:44 FP_TOP_SSE_REGS:2354 FP_SECOND_SSE_REGS:2354 FLOAT_SSE_REGS:2354 FLOAT_INT_REGS:2354 INT_SSE_REGS:1474 FLOAT_INT_SSE_REGS:2354 ALL_REGS:2816 MEM:990
  Register 258 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 259 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 263 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:306 INDEX_REGS:0 LEGACY_REGS:306 GENERAL_REGS:306 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:378 MEM:72
  Register 264 costs: AREG:1760 DREG:1760 CREG:1760 BREG:1760 SIREG:1760 DIREG:1760 AD_REGS:1760 Q_REGS:1760 NON_Q_REGS:2236 INDEX_REGS:1760 LEGACY_REGS:2236 GENERAL_REGS:2236 FP_TOP_REG:2784 FP_SECOND_REG:2784 FLOAT_REGS:2784 SSE_REGS:96 FP_TOP_SSE_REGS:2784 FP_SECOND_SSE_REGS:2784 FLOAT_SSE_REGS:2784 FLOAT_INT_REGS:2784 INT_SSE_REGS:1760 FLOAT_INT_SSE_REGS:2784 ALL_REGS:3372 MEM:1164
  Register 265 costs: AREG:664 DREG:664 CREG:664 BREG:664 SIREG:664 DIREG:664 AD_REGS:664 Q_REGS:664 NON_Q_REGS:1140 INDEX_REGS:664 LEGACY_REGS:1140 GENERAL_REGS:1140 FP_TOP_REG:1048 FP_SECOND_REG:1048 FLOAT_REGS:1048 SSE_REGS:40 FP_TOP_SSE_REGS:1048 FP_SECOND_SSE_REGS:1048 FLOAT_SSE_REGS:1048 FLOAT_INT_REGS:1048 INT_SSE_REGS:664 FLOAT_INT_SSE_REGS:1048 ALL_REGS:1636 MEM:488
  Register 266 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:196
  Register 267 costs: AREG:1380 DREG:1380 CREG:1380 BREG:1380 SIREG:1380 DIREG:1380 AD_REGS:1380 Q_REGS:1380 NON_Q_REGS:1380 INDEX_REGS:1380 LEGACY_REGS:1380 GENERAL_REGS:1380 FP_TOP_REG:2180 FP_SECOND_REG:2180 FLOAT_REGS:2180 SSE_REGS:80 FP_TOP_SSE_REGS:2180 FP_SECOND_SSE_REGS:2180 FLOAT_SSE_REGS:2180 FLOAT_INT_REGS:2180 INT_SSE_REGS:1380 FLOAT_INT_SSE_REGS:2180 ALL_REGS:2180 MEM:840
  Register 268 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 269 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 270 costs: AREG:1340 DREG:1340 CREG:1340 BREG:1340 SIREG:1340 DIREG:1340 AD_REGS:1340 Q_REGS:1340 NON_Q_REGS:1680 INDEX_REGS:1340 LEGACY_REGS:1680 GENERAL_REGS:1680 FP_TOP_REG:2140 FP_SECOND_REG:2140 FLOAT_REGS:2140 SSE_REGS:40 FP_TOP_SSE_REGS:2140 FP_SECOND_SSE_REGS:2140 FLOAT_SSE_REGS:2140 FLOAT_INT_REGS:2140 INT_SSE_REGS:1340 FLOAT_INT_SSE_REGS:2140 ALL_REGS:2560 MEM:900
  Register 272 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 273 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 277 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 278 costs: AREG:1760 DREG:1760 CREG:1760 BREG:1760 SIREG:1760 DIREG:1760 AD_REGS:1760 Q_REGS:1760 NON_Q_REGS:2236 INDEX_REGS:1760 LEGACY_REGS:2236 GENERAL_REGS:2236 FP_TOP_REG:2784 FP_SECOND_REG:2784 FLOAT_REGS:2784 SSE_REGS:96 FP_TOP_SSE_REGS:2784 FP_SECOND_SSE_REGS:2784 FLOAT_SSE_REGS:2784 FLOAT_INT_REGS:2784 INT_SSE_REGS:1760 FLOAT_INT_SSE_REGS:2784 ALL_REGS:3372 MEM:1164
  Register 279 costs: AREG:664 DREG:664 CREG:664 BREG:664 SIREG:664 DIREG:664 AD_REGS:664 Q_REGS:664 NON_Q_REGS:1140 INDEX_REGS:664 LEGACY_REGS:1140 GENERAL_REGS:1140 FP_TOP_REG:1048 FP_SECOND_REG:1048 FLOAT_REGS:1048 SSE_REGS:40 FP_TOP_SSE_REGS:1048 FP_SECOND_SSE_REGS:1048 FLOAT_SSE_REGS:1048 FLOAT_INT_REGS:1048 INT_SSE_REGS:664 FLOAT_INT_SSE_REGS:1048 ALL_REGS:1636 MEM:488
  Register 280 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:196
  Register 281 costs: AREG:1380 DREG:1380 CREG:1380 BREG:1380 SIREG:1380 DIREG:1380 AD_REGS:1380 Q_REGS:1380 NON_Q_REGS:1380 INDEX_REGS:1380 LEGACY_REGS:1380 GENERAL_REGS:1380 FP_TOP_REG:2180 FP_SECOND_REG:2180 FLOAT_REGS:2180 SSE_REGS:80 FP_TOP_SSE_REGS:2180 FP_SECOND_SSE_REGS:2180 FLOAT_SSE_REGS:2180 FLOAT_INT_REGS:2180 INT_SSE_REGS:1380 FLOAT_INT_SSE_REGS:2180 ALL_REGS:2180 MEM:840
  Register 282 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 283 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 284 costs: AREG:1340 DREG:1340 CREG:1340 BREG:1340 SIREG:1340 DIREG:1340 AD_REGS:1340 Q_REGS:1340 NON_Q_REGS:1680 INDEX_REGS:1340 LEGACY_REGS:1680 GENERAL_REGS:1680 FP_TOP_REG:2140 FP_SECOND_REG:2140 FLOAT_REGS:2140 SSE_REGS:40 FP_TOP_SSE_REGS:2140 FP_SECOND_SSE_REGS:2140 FLOAT_SSE_REGS:2140 FLOAT_INT_REGS:2140 INT_SSE_REGS:1340 FLOAT_INT_SSE_REGS:2140 ALL_REGS:2560 MEM:900
  Register 286 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 287 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 291 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 292 costs: AREG:1760 DREG:1760 CREG:1760 BREG:1760 SIREG:1760 DIREG:1760 AD_REGS:1760 Q_REGS:1760 NON_Q_REGS:2236 INDEX_REGS:1760 LEGACY_REGS:2236 GENERAL_REGS:2236 FP_TOP_REG:2784 FP_SECOND_REG:2784 FLOAT_REGS:2784 SSE_REGS:96 FP_TOP_SSE_REGS:2784 FP_SECOND_SSE_REGS:2784 FLOAT_SSE_REGS:2784 FLOAT_INT_REGS:2784 INT_SSE_REGS:1760 FLOAT_INT_SSE_REGS:2784 ALL_REGS:3372 MEM:1164
  Register 293 costs: AREG:664 DREG:664 CREG:664 BREG:664 SIREG:664 DIREG:664 AD_REGS:664 Q_REGS:664 NON_Q_REGS:1140 INDEX_REGS:664 LEGACY_REGS:1140 GENERAL_REGS:1140 FP_TOP_REG:1048 FP_SECOND_REG:1048 FLOAT_REGS:1048 SSE_REGS:40 FP_TOP_SSE_REGS:1048 FP_SECOND_SSE_REGS:1048 FLOAT_SSE_REGS:1048 FLOAT_INT_REGS:1048 INT_SSE_REGS:664 FLOAT_INT_SSE_REGS:1048 ALL_REGS:1636 MEM:488
  Register 294 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:196
  Register 295 costs: AREG:1380 DREG:1380 CREG:1380 BREG:1380 SIREG:1380 DIREG:1380 AD_REGS:1380 Q_REGS:1380 NON_Q_REGS:1380 INDEX_REGS:1380 LEGACY_REGS:1380 GENERAL_REGS:1380 FP_TOP_REG:2180 FP_SECOND_REG:2180 FLOAT_REGS:2180 SSE_REGS:80 FP_TOP_SSE_REGS:2180 FP_SECOND_SSE_REGS:2180 FLOAT_SSE_REGS:2180 FLOAT_INT_REGS:2180 INT_SSE_REGS:1380 FLOAT_INT_SSE_REGS:2180 ALL_REGS:2180 MEM:840
  Register 296 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 297 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 298 costs: AREG:1340 DREG:1340 CREG:1340 BREG:1340 SIREG:1340 DIREG:1340 AD_REGS:1340 Q_REGS:1340 NON_Q_REGS:1680 INDEX_REGS:1340 LEGACY_REGS:1680 GENERAL_REGS:1680 FP_TOP_REG:2140 FP_SECOND_REG:2140 FLOAT_REGS:2140 SSE_REGS:40 FP_TOP_SSE_REGS:2140 FP_SECOND_SSE_REGS:2140 FLOAT_SSE_REGS:2140 FLOAT_INT_REGS:2140 INT_SSE_REGS:1340 FLOAT_INT_SSE_REGS:2140 ALL_REGS:2560 MEM:900
  Register 300 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 301 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 305 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 306 costs: AREG:3105 DREG:3105 CREG:3105 BREG:3105 SIREG:3105 DIREG:3105 AD_REGS:3105 Q_REGS:3105 NON_Q_REGS:3105 INDEX_REGS:3105 LEGACY_REGS:3105 GENERAL_REGS:3105 FP_TOP_REG:4905 FP_SECOND_REG:4905 FLOAT_REGS:4905 SSE_REGS:180 FP_TOP_SSE_REGS:4905 FP_SECOND_SSE_REGS:4905 FLOAT_SSE_REGS:4905 FLOAT_INT_REGS:4905 INT_SSE_REGS:3105 FLOAT_INT_SSE_REGS:4905 ALL_REGS:4905 MEM:1890
  Register 307 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 308 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 309 costs: AREG:3015 DREG:3015 CREG:3015 BREG:3015 SIREG:3015 DIREG:3015 AD_REGS:3015 Q_REGS:3015 NON_Q_REGS:3780 INDEX_REGS:3015 LEGACY_REGS:3780 GENERAL_REGS:3780 FP_TOP_REG:4815 FP_SECOND_REG:4815 FLOAT_REGS:4815 SSE_REGS:90 FP_TOP_SSE_REGS:4815 FP_SECOND_SSE_REGS:4815 FLOAT_SSE_REGS:4815 FLOAT_INT_REGS:4815 INT_SSE_REGS:3015 FLOAT_INT_SSE_REGS:4815 ALL_REGS:5760 MEM:2025
  Register 311 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 312 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 316 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:612 INDEX_REGS:0 LEGACY_REGS:612 GENERAL_REGS:612 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:756 MEM:144
  Register 318 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:254 INDEX_REGS:0 LEGACY_REGS:254 GENERAL_REGS:254 SSE_REGS:2483 MMX_REGS:2483 FP_TOP_SSE_REGS:2483 FP_SECOND_SSE_REGS:2483 FLOAT_SSE_REGS:2483 FLOAT_INT_REGS:1719 INT_SSE_REGS:2483 FLOAT_INT_SSE_REGS:2483 ALL_REGS:2483 MEM:764
  Register 319 costs: AREG:3975 DREG:3975 CREG:3975 BREG:3975 SIREG:3975 DIREG:3975 AD_REGS:3975 Q_REGS:3975 NON_Q_REGS:5063 INDEX_REGS:3975 LEGACY_REGS:5063 GENERAL_REGS:5063 FP_TOP_REG:6287 FP_SECOND_REG:6287 FLOAT_REGS:6287 SSE_REGS:218 FP_TOP_SSE_REGS:6287 FP_SECOND_SSE_REGS:6287 FLOAT_SSE_REGS:6287 FLOAT_INT_REGS:6287 INT_SSE_REGS:3975 FLOAT_INT_SSE_REGS:6287 ALL_REGS:7631 MEM:2632
  Register 320 costs: AREG:1507 DREG:1507 CREG:1507 BREG:1507 SIREG:1507 DIREG:1507 AD_REGS:1507 Q_REGS:1507 NON_Q_REGS:2595 INDEX_REGS:1507 LEGACY_REGS:2595 GENERAL_REGS:2595 FP_TOP_REG:2379 FP_SECOND_REG:2379 FLOAT_REGS:2379 SSE_REGS:90 FP_TOP_SSE_REGS:2379 FP_SECOND_SSE_REGS:2379 FLOAT_SSE_REGS:2379 FLOAT_INT_REGS:2379 INT_SSE_REGS:1507 FLOAT_INT_SSE_REGS:2379 ALL_REGS:3723 MEM:1109
  Register 321 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1664 MMX_REGS:1664 FP_TOP_SSE_REGS:1664 FP_SECOND_SSE_REGS:1664 FLOAT_SSE_REGS:1664 FLOAT_INT_REGS:1152 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:1664 ALL_REGS:1664 MEM:448
  Register 322 costs: AREG:3105 DREG:3105 CREG:3105 BREG:3105 SIREG:3105 DIREG:3105 AD_REGS:3105 Q_REGS:3105 NON_Q_REGS:3105 INDEX_REGS:3105 LEGACY_REGS:3105 GENERAL_REGS:3105 FP_TOP_REG:4905 FP_SECOND_REG:4905 FLOAT_REGS:4905 SSE_REGS:180 FP_TOP_SSE_REGS:4905 FP_SECOND_SSE_REGS:4905 FLOAT_SSE_REGS:4905 FLOAT_INT_REGS:4905 INT_SSE_REGS:3105 FLOAT_INT_SSE_REGS:4905 ALL_REGS:4905 MEM:1890
  Register 323 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 324 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 325 costs: AREG:3015 DREG:3015 CREG:3015 BREG:3015 SIREG:3015 DIREG:3015 AD_REGS:3015 Q_REGS:3015 NON_Q_REGS:3780 INDEX_REGS:3015 LEGACY_REGS:3780 GENERAL_REGS:3780 FP_TOP_REG:4815 FP_SECOND_REG:4815 FLOAT_REGS:4815 SSE_REGS:90 FP_TOP_SSE_REGS:4815 FP_SECOND_SSE_REGS:4815 FLOAT_SSE_REGS:4815 FLOAT_INT_REGS:4815 INT_SSE_REGS:3015 FLOAT_INT_SSE_REGS:4815 ALL_REGS:5760 MEM:2025
  Register 327 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 328 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 332 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:612 INDEX_REGS:0 LEGACY_REGS:612 GENERAL_REGS:612 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:756 MEM:144
  Register 334 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:254 INDEX_REGS:0 LEGACY_REGS:254 GENERAL_REGS:254 SSE_REGS:2483 MMX_REGS:2483 FP_TOP_SSE_REGS:2483 FP_SECOND_SSE_REGS:2483 FLOAT_SSE_REGS:2483 FLOAT_INT_REGS:1719 INT_SSE_REGS:2483 FLOAT_INT_SSE_REGS:2483 ALL_REGS:2483 MEM:764
  Register 335 costs: AREG:3975 DREG:3975 CREG:3975 BREG:3975 SIREG:3975 DIREG:3975 AD_REGS:3975 Q_REGS:3975 NON_Q_REGS:5063 INDEX_REGS:3975 LEGACY_REGS:5063 GENERAL_REGS:5063 FP_TOP_REG:6287 FP_SECOND_REG:6287 FLOAT_REGS:6287 SSE_REGS:218 FP_TOP_SSE_REGS:6287 FP_SECOND_SSE_REGS:6287 FLOAT_SSE_REGS:6287 FLOAT_INT_REGS:6287 INT_SSE_REGS:3975 FLOAT_INT_SSE_REGS:6287 ALL_REGS:7631 MEM:2632
  Register 336 costs: AREG:1507 DREG:1507 CREG:1507 BREG:1507 SIREG:1507 DIREG:1507 AD_REGS:1507 Q_REGS:1507 NON_Q_REGS:2595 INDEX_REGS:1507 LEGACY_REGS:2595 GENERAL_REGS:2595 FP_TOP_REG:2379 FP_SECOND_REG:2379 FLOAT_REGS:2379 SSE_REGS:90 FP_TOP_SSE_REGS:2379 FP_SECOND_SSE_REGS:2379 FLOAT_SSE_REGS:2379 FLOAT_INT_REGS:2379 INT_SSE_REGS:1507 FLOAT_INT_SSE_REGS:2379 ALL_REGS:3723 MEM:1109
  Register 337 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1664 MMX_REGS:1664 FP_TOP_SSE_REGS:1664 FP_SECOND_SSE_REGS:1664 FLOAT_SSE_REGS:1664 FLOAT_INT_REGS:1152 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:1664 ALL_REGS:1664 MEM:448
  Register 338 costs: AREG:3105 DREG:3105 CREG:3105 BREG:3105 SIREG:3105 DIREG:3105 AD_REGS:3105 Q_REGS:3105 NON_Q_REGS:3105 INDEX_REGS:3105 LEGACY_REGS:3105 GENERAL_REGS:3105 FP_TOP_REG:4905 FP_SECOND_REG:4905 FLOAT_REGS:4905 SSE_REGS:180 FP_TOP_SSE_REGS:4905 FP_SECOND_SSE_REGS:4905 FLOAT_SSE_REGS:4905 FLOAT_INT_REGS:4905 INT_SSE_REGS:3105 FLOAT_INT_SSE_REGS:4905 ALL_REGS:4905 MEM:1890
  Register 339 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 340 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 341 costs: AREG:3015 DREG:3015 CREG:3015 BREG:3015 SIREG:3015 DIREG:3015 AD_REGS:3015 Q_REGS:3015 NON_Q_REGS:3780 INDEX_REGS:3015 LEGACY_REGS:3780 GENERAL_REGS:3780 FP_TOP_REG:4815 FP_SECOND_REG:4815 FLOAT_REGS:4815 SSE_REGS:90 FP_TOP_SSE_REGS:4815 FP_SECOND_SSE_REGS:4815 FLOAT_SSE_REGS:4815 FLOAT_INT_REGS:4815 INT_SSE_REGS:3015 FLOAT_INT_SSE_REGS:4815 ALL_REGS:5760 MEM:2025
  Register 343 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 INT_SSE_REGS:1170 MEM:315
  Register 344 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 348 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:612 INDEX_REGS:0 LEGACY_REGS:612 GENERAL_REGS:612 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:756 MEM:144
  Register 349 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 350 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 351 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 352 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 353 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 354 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 355 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 356 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 357 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 358 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 359 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 360 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 361 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 362 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 363 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 364 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 365 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 366 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 367 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 368 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 369 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 370 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 371 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 372 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 373 costs: AREG:20 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 374 costs: AREG:40 DREG:0 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 INT_SSE_REGS:520 MEM:140
  Register 375 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:40 INDEX_REGS:0 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:520 MMX_REGS:520 FP_TOP_SSE_REGS:520 FP_SECOND_SSE_REGS:520 FLOAT_SSE_REGS:520 FLOAT_INT_REGS:360 INT_SSE_REGS:520 FLOAT_INT_SSE_REGS:520 ALL_REGS:520 MEM:160
  Register 376 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:680 INDEX_REGS:0 LEGACY_REGS:680 GENERAL_REGS:680 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:840 MEM:160
  Register 377 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 378 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 379 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 380 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 381 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 382 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 383 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:272 INDEX_REGS:0 LEGACY_REGS:272 GENERAL_REGS:272 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:336 MEM:64
  Register 384 costs: AREG:1885 DREG:1885 CREG:1885 BREG:1885 SIREG:1885 DIREG:1885 AD_REGS:1885 Q_REGS:1885 NON_Q_REGS:3143 INDEX_REGS:1885 LEGACY_REGS:3143 GENERAL_REGS:3143 FP_TOP_REG:3045 FP_SECOND_REG:3045 FLOAT_REGS:3045 SSE_REGS:0 FP_TOP_SSE_REGS:3045 FP_SECOND_SSE_REGS:3045 FLOAT_SSE_REGS:3045 FLOAT_INT_REGS:3045 INT_SSE_REGS:1885 FLOAT_INT_SSE_REGS:3045 ALL_REGS:4599 MEM:1382
  Register 385 costs: AREG:1807 DREG:1807 CREG:1807 BREG:1807 SIREG:1807 DIREG:1807 AD_REGS:1807 Q_REGS:1807 NON_Q_REGS:3014 INDEX_REGS:1807 LEGACY_REGS:3014 GENERAL_REGS:3014 FP_TOP_REG:2919 FP_SECOND_REG:2919 FLOAT_REGS:2919 SSE_REGS:0 FP_TOP_SSE_REGS:2919 FP_SECOND_SSE_REGS:2919 FLOAT_SSE_REGS:2919 FLOAT_INT_REGS:2919 INT_SSE_REGS:1807 FLOAT_INT_SSE_REGS:2919 ALL_REGS:4410 MEM:1325
  Register 386 costs: AREG:1729 DREG:1729 CREG:1729 BREG:1729 SIREG:1729 DIREG:1729 AD_REGS:1729 Q_REGS:1729 NON_Q_REGS:2885 INDEX_REGS:1729 LEGACY_REGS:2885 GENERAL_REGS:2885 FP_TOP_REG:2793 FP_SECOND_REG:2793 FLOAT_REGS:2793 SSE_REGS:0 FP_TOP_SSE_REGS:2793 FP_SECOND_SSE_REGS:2793 FLOAT_SSE_REGS:2793 FLOAT_INT_REGS:2793 INT_SSE_REGS:1729 FLOAT_INT_SSE_REGS:2793 ALL_REGS:4221 MEM:1268
  Register 387 costs: AREG:1664 DREG:1664 CREG:1664 BREG:1664 SIREG:1664 DIREG:1664 AD_REGS:1664 Q_REGS:1664 NON_Q_REGS:2769 INDEX_REGS:1664 LEGACY_REGS:2769 GENERAL_REGS:2769 FP_TOP_REG:2688 FP_SECOND_REG:2688 FLOAT_REGS:2688 SSE_REGS:0 FP_TOP_SSE_REGS:2688 FP_SECOND_SSE_REGS:2688 FLOAT_SSE_REGS:2688 FLOAT_INT_REGS:2688 INT_SSE_REGS:1664 FLOAT_INT_SSE_REGS:2688 ALL_REGS:4053 MEM:1219
  Register 388 costs: AREG:1599 DREG:1599 CREG:1599 BREG:1599 SIREG:1599 DIREG:1599 AD_REGS:1599 Q_REGS:1599 NON_Q_REGS:2670 INDEX_REGS:1599 LEGACY_REGS:2670 GENERAL_REGS:2670 FP_TOP_REG:2583 FP_SECOND_REG:2583 FLOAT_REGS:2583 SSE_REGS:0 FP_TOP_SSE_REGS:2583 FP_SECOND_SSE_REGS:2583 FLOAT_SSE_REGS:2583 FLOAT_INT_REGS:2583 INT_SSE_REGS:1599 FLOAT_INT_SSE_REGS:2583 ALL_REGS:3906 MEM:1173
  Register 389 costs: AREG:1534 DREG:1534 CREG:1534 BREG:1534 SIREG:1534 DIREG:1534 AD_REGS:1534 Q_REGS:1534 NON_Q_REGS:2554 INDEX_REGS:1534 LEGACY_REGS:2554 GENERAL_REGS:2554 FP_TOP_REG:2478 FP_SECOND_REG:2478 FLOAT_REGS:2478 SSE_REGS:0 FP_TOP_SSE_REGS:2478 FP_SECOND_SSE_REGS:2478 FLOAT_SSE_REGS:2478 FLOAT_INT_REGS:2478 INT_SSE_REGS:1534 FLOAT_INT_SSE_REGS:2478 ALL_REGS:3738 MEM:1124
  Register 390 costs: AREG:1469 DREG:1469 CREG:1469 BREG:1469 SIREG:1469 DIREG:1469 AD_REGS:1469 Q_REGS:1469 NON_Q_REGS:2455 INDEX_REGS:1469 LEGACY_REGS:2455 GENERAL_REGS:2455 FP_TOP_REG:2373 FP_SECOND_REG:2373 FLOAT_REGS:2373 SSE_REGS:0 FP_TOP_SSE_REGS:2373 FP_SECOND_SSE_REGS:2373 FLOAT_SSE_REGS:2373 FLOAT_INT_REGS:2373 INT_SSE_REGS:1469 FLOAT_INT_SSE_REGS:2373 ALL_REGS:3591 MEM:1078
  Register 391 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2691 MMX_REGS:2691 FP_TOP_SSE_REGS:2691 FP_SECOND_SSE_REGS:2691 FLOAT_SSE_REGS:2691 FLOAT_INT_REGS:1863 INT_SSE_REGS:2691 FLOAT_INT_SSE_REGS:2691 ALL_REGS:2691 MEM:726
  Register 392 costs: AREG:2587 DREG:2587 CREG:2587 BREG:2587 SIREG:2587 DIREG:2587 AD_REGS:2587 Q_REGS:2587 NON_Q_REGS:4321 INDEX_REGS:2587 LEGACY_REGS:4321 GENERAL_REGS:4321 FP_TOP_REG:4179 FP_SECOND_REG:4179 FLOAT_REGS:4179 SSE_REGS:0 FP_TOP_SSE_REGS:4179 FP_SECOND_SSE_REGS:4179 FLOAT_SSE_REGS:4179 FLOAT_INT_REGS:4179 INT_SSE_REGS:2587 FLOAT_INT_SSE_REGS:4179 ALL_REGS:6321 MEM:1898
  Register 393 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2522 MMX_REGS:2522 FP_TOP_SSE_REGS:2522 FP_SECOND_SSE_REGS:2522 FLOAT_SSE_REGS:2522 FLOAT_INT_REGS:1746 INT_SSE_REGS:2522 FLOAT_INT_SSE_REGS:2522 ALL_REGS:2522 MEM:679
  Register 394 costs: AREG:2470 DREG:2470 CREG:2470 BREG:2470 SIREG:2470 DIREG:2470 AD_REGS:2470 Q_REGS:2470 NON_Q_REGS:4119 INDEX_REGS:2470 LEGACY_REGS:4119 GENERAL_REGS:4119 FP_TOP_REG:3990 FP_SECOND_REG:3990 FLOAT_REGS:3990 SSE_REGS:0 FP_TOP_SSE_REGS:3990 FP_SECOND_SSE_REGS:3990 FLOAT_SSE_REGS:3990 FLOAT_INT_REGS:3990 INT_SSE_REGS:2470 FLOAT_INT_SSE_REGS:3990 ALL_REGS:6027 MEM:1811
  Register 395 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2418 MMX_REGS:2418 FP_TOP_SSE_REGS:2418 FP_SECOND_SSE_REGS:2418 FLOAT_SSE_REGS:2418 FLOAT_INT_REGS:1674 INT_SSE_REGS:2418 FLOAT_INT_SSE_REGS:2418 ALL_REGS:2418 MEM:651
  Register 396 costs: AREG:2366 DREG:2366 CREG:2366 BREG:2366 SIREG:2366 DIREG:2366 AD_REGS:2366 Q_REGS:2366 NON_Q_REGS:3947 INDEX_REGS:2366 LEGACY_REGS:3947 GENERAL_REGS:3947 FP_TOP_REG:3822 FP_SECOND_REG:3822 FLOAT_REGS:3822 SSE_REGS:0 FP_TOP_SSE_REGS:3822 FP_SECOND_SSE_REGS:3822 FLOAT_SSE_REGS:3822 FLOAT_INT_REGS:3822 INT_SSE_REGS:2366 FLOAT_INT_SSE_REGS:3822 ALL_REGS:5775 MEM:1735
  Register 397 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2314 MMX_REGS:2314 FP_TOP_SSE_REGS:2314 FP_SECOND_SSE_REGS:2314 FLOAT_SSE_REGS:2314 FLOAT_INT_REGS:1602 INT_SSE_REGS:2314 FLOAT_INT_SSE_REGS:2314 ALL_REGS:2314 MEM:623
  Register 398 costs: AREG:2275 DREG:2275 CREG:2275 BREG:2275 SIREG:2275 DIREG:2275 AD_REGS:2275 Q_REGS:2275 NON_Q_REGS:3788 INDEX_REGS:2275 LEGACY_REGS:3788 GENERAL_REGS:3788 FP_TOP_REG:3675 FP_SECOND_REG:3675 FLOAT_REGS:3675 SSE_REGS:0 FP_TOP_SSE_REGS:3675 FP_SECOND_SSE_REGS:3675 FLOAT_SSE_REGS:3675 FLOAT_INT_REGS:3675 INT_SSE_REGS:2275 FLOAT_INT_SSE_REGS:3675 ALL_REGS:5544 MEM:1667
  Register 399 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:602
  Register 400 costs: AREG:2184 DREG:2184 CREG:2184 BREG:2184 SIREG:2184 DIREG:2184 AD_REGS:2184 Q_REGS:2184 NON_Q_REGS:3646 INDEX_REGS:2184 LEGACY_REGS:3646 GENERAL_REGS:3646 FP_TOP_REG:3528 FP_SECOND_REG:3528 FLOAT_REGS:3528 SSE_REGS:0 FP_TOP_SSE_REGS:3528 FP_SECOND_SSE_REGS:3528 FLOAT_SSE_REGS:3528 FLOAT_INT_REGS:3528 INT_SSE_REGS:2184 FLOAT_INT_SSE_REGS:3528 ALL_REGS:5334 MEM:1602
  Register 401 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2132 MMX_REGS:2132 FP_TOP_SSE_REGS:2132 FP_SECOND_SSE_REGS:2132 FLOAT_SSE_REGS:2132 FLOAT_INT_REGS:1476 INT_SSE_REGS:2132 FLOAT_INT_SSE_REGS:2132 ALL_REGS:2132 MEM:574
  Register 402 costs: AREG:2093 DREG:2093 CREG:2093 BREG:2093 SIREG:2093 DIREG:2093 AD_REGS:2093 Q_REGS:2093 NON_Q_REGS:3487 INDEX_REGS:2093 LEGACY_REGS:3487 GENERAL_REGS:3487 FP_TOP_REG:3381 FP_SECOND_REG:3381 FLOAT_REGS:3381 SSE_REGS:0 FP_TOP_SSE_REGS:3381 FP_SECOND_SSE_REGS:3381 FLOAT_SSE_REGS:3381 FLOAT_INT_REGS:3381 INT_SSE_REGS:2093 FLOAT_INT_SSE_REGS:3381 ALL_REGS:5103 MEM:1534
  Register 403 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2054 MMX_REGS:2054 FP_TOP_SSE_REGS:2054 FP_SECOND_SSE_REGS:2054 FLOAT_SSE_REGS:2054 FLOAT_INT_REGS:1422 INT_SSE_REGS:2054 FLOAT_INT_SSE_REGS:2054 ALL_REGS:2054 MEM:553
  Register 404 costs: AREG:2002 DREG:2002 CREG:2002 BREG:2002 SIREG:2002 DIREG:2002 AD_REGS:2002 Q_REGS:2002 NON_Q_REGS:3345 INDEX_REGS:2002 LEGACY_REGS:3345 GENERAL_REGS:3345 FP_TOP_REG:3234 FP_SECOND_REG:3234 FLOAT_REGS:3234 SSE_REGS:0 FP_TOP_SSE_REGS:3234 FP_SECOND_SSE_REGS:3234 FLOAT_SSE_REGS:3234 FLOAT_INT_REGS:3234 INT_SSE_REGS:2002 FLOAT_INT_SSE_REGS:3234 ALL_REGS:4893 MEM:1469
  Register 405 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 406 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 407 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 408 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 409 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 410 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 411 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 412 costs: AREG:0 DREG:46 CREG:46 BREG:46 SIREG:46 DIREG:46 AD_REGS:46 Q_REGS:46 NON_Q_REGS:46 INDEX_REGS:46 LEGACY_REGS:46 GENERAL_REGS:46 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:92
  Register 413 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 414 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 415 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 416 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 417 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 418 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80
  Register 419 costs: AREG:0 DREG:40 CREG:40 BREG:40 SIREG:40 DIREG:40 AD_REGS:40 Q_REGS:40 NON_Q_REGS:40 INDEX_REGS:40 LEGACY_REGS:40 GENERAL_REGS:40 SSE_REGS:260 MMX_REGS:260 FP_TOP_SSE_REGS:260 FP_SECOND_SSE_REGS:260 FLOAT_SSE_REGS:260 FLOAT_INT_REGS:180 INT_SSE_REGS:260 FLOAT_INT_SSE_REGS:260 ALL_REGS:260 MEM:80

  Register 61 pref DREG, else GENERAL_REGS
420 registers.

Register 59 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 60 used 2 times across 14 insns in block 10; set 1 time; crosses 3 calls; FLOAT_INT_SSE_REGS or none.

Register 61 used 18 times across 131 insns; set 16 times; user var; crosses 6 calls; pref DREG, else GENERAL_REGS; pointer.

Register 62 used 29 times across 86 insns; set 9 times; dies in 3 places; GENERAL_REGS or none; pointer.

Register 63 used 23 times across 124 insns; set 1 time; crosses 2 calls; pref AREG, else GENERAL_REGS; pointer.

Register 65 used 2 times across 2 insns in block 32; set 1 time; GENERAL_REGS or none.

Register 66 used 9 times across 203 insns; set 1 time; dies in 0 places; crosses 8 calls; SSE_REGS or none.

Register 67 used 10 times across 204 insns; set 1 time; dies in 0 places; crosses 8 calls; 4 bytes; GENERAL_REGS or none.

Register 68 used 2 times across 2 insns in block 10; set 1 time; pref DIREG, else GENERAL_REGS.

Register 70 used 2 times across 2 insns in block 10; set 1 time; pref DIREG, else GENERAL_REGS.

Register 72 used 2 times across 2 insns in block 5; set 1 time; pref DIREG, else GENERAL_REGS.

Register 74 used 5 times across 11 insns in block 27; set 2 times; user var; SSE_REGS or none.

Register 75 used 7 times across 15 insns; set 2 times; user var; crosses 1 call; SSE_REGS or none.

Register 76 used 2 times across 2 insns in block 32; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 79 used 25 times across 704 insns; set 17 times; user var; dies in 2 places; crosses 7 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 81 used 27 times across 445 insns; set 1 time; user var; crosses 26 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 82 used 14 times across 251 insns; set 2 times; user var; crosses 19 calls; 4 bytes; GENERAL_REGS or none.

Register 83 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 85 used 3 times across 2 insns in block 60; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 86 used 10 times across 449 insns; set 1 time; dies in 0 places; crosses 27 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 87 used 3 times across 235 insns; set 1 time; crosses 17 calls; pref SIREG, else GENERAL_REGS.

Register 88 used 2 times across 3 insns in block 10; set 1 time; pref DIREG, else GENERAL_REGS.

Register 89 used 2 times across 3 insns in block 10; set 1 time; pref DIREG, else GENERAL_REGS.

Register 90 used 2 times across 3 insns in block 10; set 1 time; pref DIREG, else GENERAL_REGS.

Register 91 used 2 times across 3 insns in block 10; set 1 time; pref DIREG, else GENERAL_REGS.

Register 92 used 2 times across 3 insns in block 10; set 1 time; pref DIREG, else GENERAL_REGS.

Register 93 used 2 times across 3 insns in block 10; set 1 time; pref DIREG, else GENERAL_REGS.

Register 94 used 2 times across 3 insns in block 10; set 1 time; pref DIREG, else GENERAL_REGS.

Register 95 used 3 times across 6 insns; set 1 time; SSE_REGS or none.

Register 96 used 2 times across 3 insns in block 5; set 1 time; pref DIREG, else GENERAL_REGS.

Register 97 used 2 times across 3 insns in block 5; set 1 time; pref DIREG, else GENERAL_REGS.

Register 98 used 2 times across 3 insns in block 5; set 1 time; pref DIREG, else GENERAL_REGS.

Register 99 used 2 times across 3 insns in block 5; set 1 time; pref DIREG, else GENERAL_REGS.

Register 101 used 33 times across 399 insns; set 1 time; user var; dies in 0 places; crosses 17 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 102 used 35 times across 316 insns; set 1 time; user var; dies in 0 places; crosses 17 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 103 used 16 times across 618 insns; set 1 time; user var; crosses 27 calls; pref DREG, else GENERAL_REGS; pointer.

Register 104 used 10 times across 615 insns; set 1 time; user var; dies in 0 places; crosses 27 calls; 4 bytes; pref CREG, else GENERAL_REGS.

Register 105 used 5 times across 173 insns; set 1 time; user var; crosses 1 call; 4 bytes; GENERAL_REGS or none.

Register 106 used 2 times across 2 insns in block 0; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 111 used 6 times across 7 insns in block 14; set 3 times; SSE_REGS or none.

Register 114 used 2 times across 2 insns in block 14; set 1 time; SSE_REGS or none.

Register 117 used 2 times across 4 insns in block 77; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 119 used 2 times across 2 insns in block 60; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 120 used 1 times across 1 insns in block 60; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 121 used 2 times across 2 insns in block 60; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 122 used 2 times across 2 insns in block 60; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 123 used 2 times across 2 insns in block 21; set 1 time; GENERAL_REGS or none.

Register 124 used 2 times across 2 insns in block 21; set 1 time; pref DIREG, else GENERAL_REGS.

Register 125 used 19 times across 213 insns; set 1 time; crosses 9 calls; pref AREG, else GENERAL_REGS; pointer.

Register 126 used 2 times across 2 insns in block 29; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 127 used 2 times across 4 insns in block 26; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 128 used 6 times across 12 insns in block 27; set 3 times; SSE_REGS or none.

Register 129 used 17 times across 400 insns; set 1 time; dies in 0 places; crosses 8 calls; SSE_REGS or none.

Register 130 used 2 times across 2 insns in block 27; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 131 used 2 times across 2 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 135 used 2 times across 2 insns in block 27; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 136 used 2 times across 2 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 140 used 16 times across 298 insns; set 1 time; dies in 0 places; SSE_REGS or none.

Register 141 used 17 times across 294 insns; set 1 time; dies in 0 places; SSE_REGS or none.

Register 153 used 6 times across 33 insns; set 2 times; crosses 1 call; 4 bytes; GENERAL_REGS or none.

Register 154 used 7 times across 68 insns; set 1 time; crosses 3 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 155 used 2 times across 68 insns; set 1 time; crosses 3 calls; 4 bytes; GENERAL_REGS or none.

Register 158 used 10 times across 26 insns; set 2 times; crosses 1 call; 4 bytes; GENERAL_REGS or none.

Register 163 used 10 times across 22 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 165 used 3 times across 3 insns in block 92; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 166 used 3 times across 2 insns in block 11; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 168 used 7 times across 21 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 169 used 9 times across 62 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 170 used 15 times across 59 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 171 used 19 times across 162 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 172 used 37 times across 158 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 173 used 2 times across 4 insns in block 92; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 176 used 2 times across 4 insns in block 92; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 178 used 3 times across 3 insns in block 92; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 179 used 2 times across 4 insns in block 92; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 181 used 3 times across 3 insns in block 92; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 182 used 2 times across 4 insns in block 92; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 184 used 3 times across 3 insns in block 92; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 185 used 2 times across 4 insns in block 92; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 187 used 3 times across 3 insns in block 92; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 188 used 2 times across 4 insns in block 92; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 190 used 3 times across 3 insns in block 92; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 191 used 2 times across 4 insns in block 92; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 193 used 3 times across 3 insns in block 92; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 194 used 2 times across 4 insns in block 92; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 195 used 19 times across 260 insns; set 9 times; user var; dies in 0 places; crosses 14 calls; 4 bytes; GENERAL_REGS or none.

Register 196 used 3 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 197 used 2 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 198 used 2 times across 2 insns in block 75; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 199 used 2 times across 2 insns in block 75; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 200 used 30 times across 128 insns; set 9 times; dies in 0 places; crosses 14 calls; GENERAL_REGS or none; pointer.

Register 202 used 3 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 203 used 2 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 204 used 2 times across 2 insns in block 75; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 205 used 2 times across 2 insns in block 75; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 208 used 3 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 209 used 2 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 210 used 2 times across 2 insns in block 75; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 211 used 2 times across 2 insns in block 75; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 214 used 3 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 215 used 2 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 216 used 2 times across 2 insns in block 75; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 217 used 2 times across 2 insns in block 75; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 220 used 3 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 221 used 2 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 222 used 2 times across 2 insns in block 75; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 223 used 2 times across 2 insns in block 75; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 226 used 3 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 227 used 2 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 228 used 2 times across 2 insns in block 75; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 229 used 2 times across 2 insns in block 75; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 232 used 3 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 233 used 2 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 234 used 2 times across 2 insns in block 75; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 235 used 2 times across 2 insns in block 75; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 238 used 3 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 239 used 2 times across 2 insns in block 75; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 240 used 2 times across 2 insns in block 75; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 241 used 2 times across 2 insns in block 75; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 243 used 21 times across 112 insns; set 5 times; crosses 4 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 244 used 7 times across 15 insns; set 2 times; user var; crosses 1 call; SSE_REGS or none.

Register 245 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 246 used 2 times across 2 insns in block 25; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 247 used 12 times across 113 insns; set 5 times; user var; crosses 4 calls; 4 bytes; GENERAL_REGS or none.

Register 250 used 7 times across 15 insns; set 2 times; user var; crosses 1 call; SSE_REGS or none.

Register 251 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 252 used 2 times across 2 insns in block 49; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 253 used 5 times across 11 insns in block 30; set 2 times; user var; SSE_REGS or none.

Register 254 used 2 times across 2 insns in block 30; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 255 used 2 times across 2 insns in block 30; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 256 used 6 times across 12 insns in block 30; set 3 times; SSE_REGS or none.

Register 258 used 2 times across 2 insns in block 30; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 259 used 2 times across 2 insns in block 30; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 263 used 2 times across 4 insns in block 31; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 264 used 7 times across 15 insns; set 2 times; user var; crosses 1 call; SSE_REGS or none.

Register 265 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 266 used 2 times across 2 insns in block 36; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 267 used 5 times across 11 insns in block 37; set 2 times; user var; SSE_REGS or none.

Register 268 used 2 times across 2 insns in block 37; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 269 used 2 times across 2 insns in block 37; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 270 used 6 times across 12 insns in block 37; set 3 times; SSE_REGS or none.

Register 272 used 2 times across 2 insns in block 37; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 273 used 2 times across 2 insns in block 37; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 277 used 2 times across 4 insns in block 38; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 278 used 7 times across 15 insns; set 2 times; user var; crosses 1 call; SSE_REGS or none.

Register 279 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 280 used 2 times across 2 insns in block 40; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 281 used 5 times across 11 insns in block 41; set 2 times; user var; SSE_REGS or none.

Register 282 used 2 times across 2 insns in block 41; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 283 used 2 times across 2 insns in block 41; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 284 used 6 times across 12 insns in block 41; set 3 times; SSE_REGS or none.

Register 286 used 2 times across 2 insns in block 41; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 287 used 2 times across 2 insns in block 41; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 291 used 2 times across 4 insns in block 42; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 292 used 7 times across 15 insns; set 2 times; user var; crosses 1 call; SSE_REGS or none.

Register 293 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 294 used 2 times across 2 insns in block 44; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 295 used 5 times across 11 insns in block 45; set 2 times; user var; SSE_REGS or none.

Register 296 used 2 times across 2 insns in block 45; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 297 used 2 times across 2 insns in block 45; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 298 used 6 times across 12 insns in block 45; set 3 times; SSE_REGS or none.

Register 300 used 2 times across 2 insns in block 45; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 301 used 2 times across 2 insns in block 45; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 305 used 2 times across 4 insns in block 46; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 306 used 5 times across 11 insns in block 50; set 2 times; user var; SSE_REGS or none.

Register 307 used 2 times across 2 insns in block 50; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 308 used 2 times across 2 insns in block 50; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 309 used 6 times across 12 insns in block 50; set 3 times; SSE_REGS or none.

Register 311 used 2 times across 2 insns in block 50; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 312 used 2 times across 2 insns in block 50; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 316 used 2 times across 4 insns in block 51; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 318 used 4 times across 21 insns; set 1 time; dies in 2 places; crosses 1 call; pref INDEX_REGS, else GENERAL_REGS.

Register 319 used 7 times across 15 insns; set 2 times; user var; crosses 1 call; SSE_REGS or none.

Register 320 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 321 used 2 times across 2 insns in block 52; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 322 used 5 times across 11 insns in block 53; set 2 times; user var; SSE_REGS or none.

Register 323 used 2 times across 2 insns in block 53; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 324 used 2 times across 2 insns in block 53; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 325 used 6 times across 12 insns in block 53; set 3 times; SSE_REGS or none.

Register 327 used 2 times across 2 insns in block 53; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 328 used 2 times across 2 insns in block 53; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 332 used 2 times across 4 insns in block 54; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 334 used 4 times across 21 insns; set 1 time; dies in 2 places; crosses 1 call; pref INDEX_REGS, else GENERAL_REGS.

Register 335 used 7 times across 15 insns; set 2 times; user var; crosses 1 call; SSE_REGS or none.

Register 336 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 337 used 2 times across 2 insns in block 55; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 338 used 5 times across 11 insns in block 56; set 2 times; user var; SSE_REGS or none.

Register 339 used 2 times across 2 insns in block 56; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 340 used 2 times across 2 insns in block 56; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 341 used 6 times across 12 insns in block 56; set 3 times; SSE_REGS or none.

Register 343 used 2 times across 2 insns in block 56; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 344 used 2 times across 2 insns in block 56; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 348 used 2 times across 4 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 349 used 3 times across 2 insns in block 68; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 350 used 2 times across 2 insns in block 68; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 351 used 2 times across 2 insns in block 68; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 352 used 2 times across 2 insns in block 68; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 353 used 3 times across 2 insns in block 69; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 354 used 2 times across 2 insns in block 69; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 355 used 2 times across 2 insns in block 69; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 356 used 2 times across 2 insns in block 69; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 357 used 3 times across 2 insns in block 70; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 358 used 2 times across 2 insns in block 70; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 359 used 2 times across 2 insns in block 70; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 360 used 2 times across 2 insns in block 70; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 361 used 3 times across 2 insns in block 71; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 362 used 2 times across 2 insns in block 71; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 363 used 2 times across 2 insns in block 71; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 364 used 2 times across 2 insns in block 71; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 365 used 3 times across 2 insns in block 72; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 366 used 2 times across 2 insns in block 72; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 367 used 2 times across 2 insns in block 72; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 368 used 2 times across 2 insns in block 72; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 369 used 3 times across 2 insns in block 73; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 370 used 2 times across 2 insns in block 73; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 371 used 2 times across 2 insns in block 73; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 372 used 2 times across 2 insns in block 73; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 373 used 3 times across 2 insns in block 74; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 374 used 2 times across 2 insns in block 74; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 375 used 2 times across 2 insns in block 74; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 376 used 2 times across 2 insns in block 74; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 377 used 2 times across 4 insns in block 85; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 378 used 2 times across 4 insns in block 86; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 379 used 2 times across 4 insns in block 87; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 380 used 2 times across 4 insns in block 88; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 381 used 2 times across 4 insns in block 89; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 382 used 2 times across 4 insns in block 90; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 383 used 2 times across 4 insns in block 91; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 384 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 385 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 386 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 387 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 388 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 389 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 390 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 391 used 2 times across 6 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 392 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 393 used 2 times across 5 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 394 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 395 used 2 times across 5 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 396 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 397 used 2 times across 5 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 398 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 399 used 2 times across 5 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 400 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 401 used 2 times across 5 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 402 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 403 used 2 times across 5 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 404 used 3 times across 5 insns; set 1 time; SSE_REGS or none.

Register 405 used 1 times across 1 insns in block 75; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 406 used 1 times across 1 insns in block 75; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 407 used 1 times across 1 insns in block 75; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 408 used 1 times across 1 insns in block 75; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 409 used 1 times across 1 insns in block 75; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 410 used 1 times across 1 insns in block 75; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 411 used 1 times across 1 insns in block 75; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 412 used 1 times across 1 insns in block 75; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 413 used 1 times across 1 insns in block 68; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 414 used 1 times across 1 insns in block 69; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 415 used 1 times across 1 insns in block 70; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 416 used 1 times across 1 insns in block 71; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 417 used 1 times across 1 insns in block 72; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 418 used 1 times across 1 insns in block 73; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 419 used 1 times across 1 insns in block 74; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

130 basic blocks, 210 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 817, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  5 [1.0%]  1 [99.0%]  (fallthru)
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 809, maybe hot.
Predecessors:  0 [99.0%]  (fallthru)
Successors:  13 [3.3%]  2 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 782, maybe hot.
Predecessors:  1 [96.7%]  (fallthru)
Successors:  9 [1.0%]  3 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 101 102 103 104 105 140

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 774, maybe hot.
Predecessors:  2 [99.0%]  (fallthru)
Successors:  4 [3.3%]  (fallthru) 11 [96.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 101 102 103 104 105 140
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 26, maybe hot.
Predecessors:  3 [3.3%]  (fallthru)
Successors:  9 [100.0%] 
Registers live at start: 7 [sp] 16 [argp] 20 [frame] 103
Registers live at end: 7 [sp] 16 [argp] 20 [frame] 103

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 8.
Predecessors:  0 [1.0%] 
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 6 prev 5, next 7, loop_depth 1, count 0, freq 1068, maybe hot.
Predecessors:  12 [96.7%] 
Successors:  10 [1.0%]  (loop_exit) 7 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 169
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 95 101 102 103 104 105 140 141 169

Basic block 7 prev 6, next 8, loop_depth 1, count 0, freq 1057, maybe hot.
Predecessors:  6 [99.0%]  (fallthru)
Successors:  10 [3.3%]  (loop_exit) 8 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 95 101 102 103 104 105 140 141 169
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 391

Basic block 8 prev 7, next 9, loop_depth 1, count 0, freq 1022, maybe hot.
Predecessors:  7 [96.7%]  (fallthru)
Successors:  115 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 391
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 391

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 34, maybe hot.
Predecessors:  2 [1.0%]  4 [100.0%] 
Successors:  10 [100.0%]  (fallthru)
Registers live at start: 7 [sp] 16 [argp] 20 [frame] 103
Registers live at end: 7 [sp] 16 [argp] 20 [frame] 61 79

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 449, maybe hot.
Predecessors:  6 [1.0%]  (loop_exit) 7 [3.3%]  (loop_exit) 9 [100.0%]  (fallthru) 94 [1.0%]  95 [3.3%]  102 [1.0%]  103 [3.3%]  104 [1.0%]  105 [3.3%]  106 [1.0%]  107 [3.3%]  108 [1.0%]  109 [3.3%]  110 [1.0%]  111 [3.3%]  112 [1.0%]  113 [3.3%]  115 [1.0%]  (loop_exit) 116 [3.3%]  (loop_exit) 117 [1.0%]  (loop_exit) 118 [3.3%]  (loop_exit) 119 [1.0%]  (loop_exit) 120 [3.3%]  (loop_exit) 121 [1.0%]  (loop_exit) 122 [3.3%]  (loop_exit) 123 [1.0%]  (loop_exit) 124 [3.3%]  (loop_exit) 125 [1.0%]  (loop_exit) 126 [3.3%]  (loop_exit) 127 [1.0%]  (loop_exit) 128 [3.3%]  (loop_exit)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame] 61 79
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 748, maybe hot.
Predecessors:  3 [96.7%] 
Successors:  94 [87.5%]  12 [12.5%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

Basic block 12 prev 11, next 13, loop_depth 1, count 0, freq 1105, maybe hot.
Predecessors:  114 [100.0%]  129 [100.0%]  11 [12.5%]  (fallthru) 96 [14.3%] 
Successors:  6 [96.7%]  13 [3.3%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 169
Invalid sum of incoming frequencies 1271, should be 1105

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 360, maybe hot.
Predecessors:  1 [3.3%]  12 [3.3%]  (fallthru,loop_exit)
Successors:  15 [50.0%]  14 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 101 102 103 104 105
Invalid sum of incoming frequencies 64, should be 360

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 180, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 101 102 103 104 105

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 360, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 13 [50.0%] 
Successors:  17 [99.0%]  16 [1.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 101 102 103 104 105
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 82 86 87 101 102 103 104 105

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 4.
Predecessors:  15 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 356, maybe hot.
Predecessors:  15 [99.0%] 
Successors:  20 [71.0%]  18 [29.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 82 86 87 101 102 103 104 105
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 103, maybe hot.
Predecessors:  17 [29.0%]  (fallthru)
Successors:  77 [90.0%]  19 [10.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 10, maybe hot.
Predecessors:  18 [10.0%]  (fallthru)
Successors:  21 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 103 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 103 104

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 253, maybe hot.
Predecessors:  17 [71.0%] 
Successors:  60 [90.0%]  21 [10.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 356, maybe hot.
Predecessors:  92 [10.0%]  (loop_exit) 19 [100.0%]  20 [10.0%]  (fallthru) 91 [10.0%]  60 [10.0%]  74 [10.0%]  75 [10.0%]  (loop_exit) 77 [10.0%] 
Successors:  24 [1.0%]  22 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 103 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 103 104 125
Invalid sum of incoming frequencies 129, should be 356

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 353, maybe hot.
Predecessors:  21 [99.0%]  (fallthru)
Successors:  29 [90.0%]  23 [10.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 103 104 125
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 103 104 125

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 35, maybe hot.
Predecessors:  22 [10.0%]  (fallthru)
Successors:  28 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 125
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 125

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 4.
Predecessors:  21 [1.0%] 
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 25 prev 24, next 26, loop_depth 1, count 0, freq 643, maybe hot.
Predecessors:  48 [100.0%]  59 [100.0%]  33 [25.0%] 
Successors:  27 [71.0%]  26 [29.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 244 245 247
Invalid sum of incoming frequencies 836, should be 643

Basic block 26 prev 25, next 27, loop_depth 1, count 0, freq 187, maybe hot.
Predecessors:  25 [29.0%]  (fallthru)
Successors:  49 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 27 prev 26, next 28, loop_depth 1, count 0, freq 457, maybe hot.
Predecessors:  25 [71.0%] 
Successors:  49 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 244 245 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 353, maybe hot.
Predecessors:  23 [100.0%]  58 [10.0%]  (loop_exit) 32 [10.0%]  47 [10.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 125
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Invalid sum of incoming frequencies 160, should be 353

Basic block 29 prev 28, next 30, loop_depth 0, count 0, freq 317, maybe hot.
Predecessors:  22 [90.0%] 
Successors:  30 [71.0%]  (fallthru) 31 [29.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 103 104 125
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 75 81 83 86 103 104 125 129 153

Basic block 30 prev 29, next 31, loop_depth 0, count 0, freq 225, maybe hot.
Predecessors:  29 [71.0%]  (fallthru)
Successors:  32 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 75 81 83 86 103 104 125 129 153
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 92, maybe hot.
Predecessors:  29 [29.0%] 
Successors:  32 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 317, maybe hot.
Predecessors:  31 [100.0%]  (fallthru) 30 [100.0%] 
Successors:  33 [90.0%]  (fallthru,dfs_back) 28 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 190, maybe hot.
Predecessors:  32 [90.0%]  (fallthru,dfs_back)
Successors:  34 [75.0%]  (fallthru) 25 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 143, maybe hot.
Predecessors:  33 [75.0%]  (fallthru)
Successors:  35 [66.7%]  (fallthru) 44 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 285, maybe hot.
Predecessors:  34 [66.7%]  (fallthru)
Successors:  36 [50.0%]  (fallthru) 40 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Invalid sum of incoming frequencies 95, should be 285

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 285, maybe hot.
Predecessors:  35 [50.0%]  (fallthru)
Successors:  37 [71.0%]  (fallthru) 38 [29.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 264 265
Invalid sum of incoming frequencies 143, should be 285

Basic block 37 prev 36, next 38, loop_depth 0, count 0, freq 202, maybe hot.
Predecessors:  36 [71.0%]  (fallthru)
Successors:  39 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 264 265
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 38 prev 37, next 39, loop_depth 0, count 0, freq 83, maybe hot.
Predecessors:  36 [29.0%] 
Successors:  39 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 39 prev 38, next 40, loop_depth 0, count 0, freq 285, maybe hot.
Predecessors:  38 [100.0%]  (fallthru) 37 [100.0%] 
Successors:  40 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 40 prev 39, next 41, loop_depth 0, count 0, freq 285, maybe hot.
Predecessors:  39 [100.0%]  (fallthru) 35 [50.0%] 
Successors:  41 [71.0%]  (fallthru) 42 [29.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 278 279
Invalid sum of incoming frequencies 428, should be 285

Basic block 41 prev 40, next 42, loop_depth 0, count 0, freq 202, maybe hot.
Predecessors:  40 [71.0%]  (fallthru)
Successors:  43 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 278 279
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 42 prev 41, next 43, loop_depth 0, count 0, freq 83, maybe hot.
Predecessors:  40 [29.0%] 
Successors:  43 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 43 prev 42, next 44, loop_depth 0, count 0, freq 285, maybe hot.
Predecessors:  42 [100.0%]  (fallthru) 41 [100.0%] 
Successors:  44 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 44 prev 43, next 45, loop_depth 0, count 0, freq 285, maybe hot.
Predecessors:  43 [100.0%]  (fallthru) 34 [33.3%] 
Successors:  45 [71.0%]  (fallthru) 46 [29.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 292 293

Basic block 45 prev 44, next 46, loop_depth 0, count 0, freq 202, maybe hot.
Predecessors:  44 [71.0%]  (fallthru)
Successors:  47 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 292 293
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 46 prev 45, next 47, loop_depth 0, count 0, freq 83, maybe hot.
Predecessors:  44 [29.0%] 
Successors:  47 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 47 prev 46, next 48, loop_depth 0, count 0, freq 285, maybe hot.
Predecessors:  46 [100.0%]  (fallthru) 45 [100.0%] 
Successors:  48 [90.0%]  (fallthru,dfs_back) 28 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 48 prev 47, next 49, loop_depth 0, count 0, freq 209, maybe hot.
Predecessors:  47 [90.0%]  (fallthru,dfs_back)
Successors:  25 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 49 prev 48, next 50, loop_depth 1, count 0, freq 643, maybe hot.
Predecessors:  26 [100.0%]  27 [100.0%] 
Successors:  50 [71.0%]  (fallthru) 51 [29.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 250 251

Basic block 50 prev 49, next 51, loop_depth 1, count 0, freq 457, maybe hot.
Predecessors:  49 [71.0%]  (fallthru)
Successors:  52 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 250 251
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

Basic block 51 prev 50, next 52, loop_depth 1, count 0, freq 187, maybe hot.
Predecessors:  49 [29.0%] 
Successors:  52 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

Basic block 52 prev 51, next 53, loop_depth 1, count 0, freq 643, maybe hot.
Predecessors:  51 [100.0%]  (fallthru) 50 [100.0%] 
Successors:  53 [71.0%]  (fallthru) 54 [29.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 318 319 320

Basic block 53 prev 52, next 54, loop_depth 1, count 0, freq 457, maybe hot.
Predecessors:  52 [71.0%]  (fallthru)
Successors:  55 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 318 319 320
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

Basic block 54 prev 53, next 55, loop_depth 1, count 0, freq 187, maybe hot.
Predecessors:  52 [29.0%] 
Successors:  55 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 318
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

Basic block 55 prev 54, next 56, loop_depth 1, count 0, freq 643, maybe hot.
Predecessors:  54 [100.0%]  (fallthru) 53 [100.0%] 
Successors:  56 [71.0%]  (fallthru) 57 [29.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 334 335 336

Basic block 56 prev 55, next 57, loop_depth 1, count 0, freq 457, maybe hot.
Predecessors:  55 [71.0%]  (fallthru)
Successors:  58 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 334 335 336
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

Basic block 57 prev 56, next 58, loop_depth 1, count 0, freq 187, maybe hot.
Predecessors:  55 [29.0%] 
Successors:  58 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 334
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

Basic block 58 prev 57, next 59, loop_depth 1, count 0, freq 643, maybe hot.
Predecessors:  57 [100.0%]  (fallthru) 56 [100.0%] 
Successors:  59 [90.0%]  (fallthru,dfs_back) 28 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 59 prev 58, next 60, loop_depth 1, count 0, freq 579, maybe hot.
Predecessors:  58 [90.0%]  (fallthru,dfs_back)
Successors:  25 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

Basic block 60 prev 59, next 61, loop_depth 0, count 0, freq 228, maybe hot.
Predecessors:  20 [90.0%] 
Successors:  61 [90.0%]  (fallthru,dfs_back) 21 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

Basic block 61 prev 60, next 62, loop_depth 0, count 0, freq 176, maybe hot.
Predecessors:  60 [90.0%]  (fallthru,dfs_back)
Successors:  62 [87.5%]  (fallthru) 75 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

Basic block 62 prev 61, next 63, loop_depth 0, count 0, freq 171, maybe hot.
Predecessors:  61 [87.5%]  (fallthru)
Successors:  63 [85.7%]  (fallthru) 74 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

Basic block 63 prev 62, next 64, loop_depth 0, count 0, freq 164, maybe hot.
Predecessors:  62 [85.7%]  (fallthru)
Successors:  64 [83.3%]  (fallthru) 73 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

Basic block 64 prev 63, next 65, loop_depth 0, count 0, freq 154, maybe hot.
Predecessors:  63 [83.3%]  (fallthru)
Successors:  65 [80.0%]  (fallthru) 72 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

Basic block 65 prev 64, next 66, loop_depth 0, count 0, freq 137, maybe hot.
Predecessors:  64 [80.0%]  (fallthru)
Successors:  66 [75.0%]  (fallthru) 71 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

Basic block 66 prev 65, next 67, loop_depth 0, count 0, freq 103, maybe hot.
Predecessors:  65 [75.0%]  (fallthru)
Successors:  67 [66.7%]  (fallthru) 70 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

Basic block 67 prev 66, next 68, loop_depth 0, count 0, freq 205, maybe hot.
Predecessors:  66 [66.7%]  (fallthru)
Successors:  68 [50.0%]  (fallthru) 69 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 195 200
Invalid sum of incoming frequencies 69, should be 205

Basic block 68 prev 67, next 69, loop_depth 0, count 0, freq 205, maybe hot.
Predecessors:  67 [50.0%]  (fallthru)
Successors:  69 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Invalid sum of incoming frequencies 103, should be 205

Basic block 69 prev 68, next 70, loop_depth 0, count 0, freq 205, maybe hot.
Predecessors:  68 [100.0%]  (fallthru) 67 [50.0%] 
Successors:  70 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Invalid sum of incoming frequencies 308, should be 205

Basic block 70 prev 69, next 71, loop_depth 0, count 0, freq 205, maybe hot.
Predecessors:  69 [100.0%]  (fallthru) 66 [33.3%] 
Successors:  71 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

Basic block 71 prev 70, next 72, loop_depth 0, count 0, freq 205, maybe hot.
Predecessors:  70 [100.0%]  (fallthru) 65 [25.0%] 
Successors:  72 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

Basic block 72 prev 71, next 73, loop_depth 0, count 0, freq 205, maybe hot.
Predecessors:  71 [100.0%]  (fallthru) 64 [20.0%] 
Successors:  73 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

Basic block 73 prev 72, next 74, loop_depth 0, count 0, freq 205, maybe hot.
Predecessors:  72 [100.0%]  (fallthru) 63 [16.7%] 
Successors:  74 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

Basic block 74 prev 73, next 75, loop_depth 0, count 0, freq 205, maybe hot.
Predecessors:  73 [100.0%]  (fallthru) 62 [14.3%] 
Successors:  75 [90.0%]  (fallthru,dfs_back) 21 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

Basic block 75 prev 74, next 76, loop_depth 1, count 0, freq 231, maybe hot.
Predecessors:  74 [90.0%]  (fallthru,dfs_back) 76 [100.0%]  61 [12.5%] 
Successors:  76 [90.0%]  (fallthru,dfs_back) 21 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Invalid sum of incoming frequencies 415, should be 231

Basic block 76 prev 75, next 77, loop_depth 1, count 0, freq 208, maybe hot.
Predecessors:  75 [90.0%]  (fallthru,dfs_back)
Successors:  75 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

Basic block 77 prev 76, next 78, loop_depth 0, count 0, freq 93, maybe hot.
Predecessors:  18 [90.0%] 
Successors:  78 [90.0%]  (fallthru,dfs_back) 21 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

Basic block 78 prev 77, next 79, loop_depth 0, count 0, freq 72, maybe hot.
Predecessors:  77 [90.0%]  (fallthru,dfs_back)
Successors:  79 [87.5%]  (fallthru) 92 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

Basic block 79 prev 78, next 80, loop_depth 0, count 0, freq 70, maybe hot.
Predecessors:  78 [87.5%]  (fallthru)
Successors:  80 [85.7%]  (fallthru) 91 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

Basic block 80 prev 79, next 81, loop_depth 0, count 0, freq 67, maybe hot.
Predecessors:  79 [85.7%]  (fallthru)
Successors:  81 [83.3%]  (fallthru) 90 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

Basic block 81 prev 80, next 82, loop_depth 0, count 0, freq 63, maybe hot.
Predecessors:  80 [83.3%]  (fallthru)
Successors:  82 [80.0%]  (fallthru) 89 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

Basic block 82 prev 81, next 83, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  81 [80.0%]  (fallthru)
Successors:  83 [75.0%]  (fallthru) 88 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

Basic block 83 prev 82, next 84, loop_depth 0, count 0, freq 42, maybe hot.
Predecessors:  82 [75.0%]  (fallthru)
Successors:  84 [66.7%]  (fallthru) 87 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

Basic block 84 prev 83, next 85, loop_depth 0, count 0, freq 84, maybe hot.
Predecessors:  83 [66.7%]  (fallthru)
Successors:  85 [50.0%]  (fallthru) 86 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

Basic block 85 prev 84, next 86, loop_depth 0, count 0, freq 84, maybe hot.
Predecessors:  84 [50.0%]  (fallthru)
Successors:  86 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

Basic block 86 prev 85, next 87, loop_depth 0, count 0, freq 84, maybe hot.
Predecessors:  85 [100.0%]  (fallthru) 84 [50.0%] 
Successors:  87 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

Basic block 87 prev 86, next 88, loop_depth 0, count 0, freq 84, maybe hot.
Predecessors:  86 [100.0%]  (fallthru) 83 [33.3%] 
Successors:  88 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

Basic block 88 prev 87, next 89, loop_depth 0, count 0, freq 84, maybe hot.
Predecessors:  87 [100.0%]  (fallthru) 82 [25.0%] 
Successors:  89 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

Basic block 89 prev 88, next 90, loop_depth 0, count 0, freq 84, maybe hot.
Predecessors:  88 [100.0%]  (fallthru) 81 [20.0%] 
Successors:  90 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

Basic block 90 prev 89, next 91, loop_depth 0, count 0, freq 84, maybe hot.
Predecessors:  89 [100.0%]  (fallthru) 80 [16.7%] 
Successors:  91 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

Basic block 91 prev 90, next 92, loop_depth 0, count 0, freq 84, maybe hot.
Predecessors:  90 [100.0%]  (fallthru) 79 [14.3%] 
Successors:  92 [90.0%]  (fallthru,dfs_back) 21 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

Basic block 92 prev 91, next 93, loop_depth 1, count 0, freq 95, maybe hot.
Predecessors:  91 [90.0%]  (fallthru,dfs_back) 93 [100.0%]  78 [12.5%] 
Successors:  93 [90.0%]  (fallthru,dfs_back) 21 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

Basic block 93 prev 92, next 94, loop_depth 1, count 0, freq 84, maybe hot.
Predecessors:  92 [90.0%]  (fallthru,dfs_back)
Successors:  92 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

Basic block 94 prev 93, next 95, loop_depth 0, count 0, freq 749, maybe hot.
Predecessors:  11 [87.5%] 
Successors:  10 [1.0%]  95 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 101 102 103 104 105 140 141 168
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 168 384

Basic block 95 prev 94, next 96, loop_depth 0, count 0, freq 717, maybe hot.
Predecessors:  94 [99.0%]  (fallthru)
Successors:  10 [3.3%]  96 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 168 384
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 168

Basic block 96 prev 95, next 97, loop_depth 0, count 0, freq 578, maybe hot.
Predecessors:  95 [96.7%]  (fallthru)
Successors:  97 [85.7%]  (fallthru) 12 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
Invalid sum of incoming frequencies 693, should be 578

Basic block 97 prev 96, next 98, loop_depth 0, count 0, freq 554, maybe hot.
Predecessors:  96 [85.7%]  (fallthru)
Successors:  98 [83.3%]  (fallthru) 112 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

Basic block 98 prev 97, next 99, loop_depth 0, count 0, freq 520, maybe hot.
Predecessors:  97 [83.3%]  (fallthru)
Successors:  99 [80.0%]  (fallthru) 110 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

Basic block 99 prev 98, next 100, loop_depth 0, count 0, freq 462, maybe hot.
Predecessors:  98 [80.0%]  (fallthru)
Successors:  100 [75.0%]  (fallthru) 108 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

Basic block 100 prev 99, next 101, loop_depth 0, count 0, freq 347, maybe hot.
Predecessors:  99 [75.0%]  (fallthru)
Successors:  101 [66.7%]  (fallthru) 106 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

Basic block 101 prev 100, next 102, loop_depth 0, count 0, freq 693, maybe hot.
Predecessors:  100 [66.7%]  (fallthru)
Successors:  102 [50.0%]  (fallthru) 104 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
Invalid sum of incoming frequencies 231, should be 693

Basic block 102 prev 101, next 103, loop_depth 0, count 0, freq 718, maybe hot.
Predecessors:  101 [50.0%]  (fallthru)
Successors:  10 [1.0%]  103 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 101 102 103 104 105 140 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 385
Invalid sum of incoming frequencies 347, should be 718

Basic block 103 prev 102, next 104, loop_depth 0, count 0, freq 687, maybe hot.
Predecessors:  102 [99.0%]  (fallthru)
Successors:  10 [3.3%]  104 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 385
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

Basic block 104 prev 103, next 105, loop_depth 0, count 0, freq 688, maybe hot.
Predecessors:  103 [96.7%]  (fallthru) 101 [50.0%] 
Successors:  10 [1.0%]  105 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 386
Invalid sum of incoming frequencies 1011, should be 688

Basic block 105 prev 104, next 106, loop_depth 0, count 0, freq 658, maybe hot.
Predecessors:  104 [99.0%]  (fallthru)
Successors:  10 [3.3%]  106 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 386
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

Basic block 106 prev 105, next 107, loop_depth 0, count 0, freq 659, maybe hot.
Predecessors:  105 [96.7%]  (fallthru) 100 [33.3%] 
Successors:  10 [1.0%]  107 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 387

Basic block 107 prev 106, next 108, loop_depth 0, count 0, freq 631, maybe hot.
Predecessors:  106 [99.0%]  (fallthru)
Successors:  10 [3.3%]  108 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 387
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

Basic block 108 prev 107, next 109, loop_depth 0, count 0, freq 632, maybe hot.
Predecessors:  107 [96.7%]  (fallthru) 99 [25.0%] 
Successors:  10 [1.0%]  109 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 388

Basic block 109 prev 108, next 110, loop_depth 0, count 0, freq 605, maybe hot.
Predecessors:  108 [99.0%]  (fallthru)
Successors:  10 [3.3%]  110 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 388
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

Basic block 110 prev 109, next 111, loop_depth 0, count 0, freq 606, maybe hot.
Predecessors:  109 [96.7%]  (fallthru) 98 [20.0%] 
Successors:  10 [1.0%]  111 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 389

Basic block 111 prev 110, next 112, loop_depth 0, count 0, freq 580, maybe hot.
Predecessors:  110 [99.0%]  (fallthru)
Successors:  10 [3.3%]  112 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 389
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

Basic block 112 prev 111, next 113, loop_depth 0, count 0, freq 581, maybe hot.
Predecessors:  111 [96.7%]  (fallthru) 97 [16.7%] 
Successors:  10 [1.0%]  113 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 390

Basic block 113 prev 112, next 114, loop_depth 0, count 0, freq 556, maybe hot.
Predecessors:  112 [99.0%]  (fallthru)
Successors:  10 [3.3%]  114 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 390
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

Basic block 114 prev 113, next 115, loop_depth 0, count 0, freq 361, maybe hot.
Predecessors:  113 [96.7%]  (fallthru)
Successors:  12 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
Invalid sum of incoming frequencies 537, should be 361

Basic block 115 prev 114, next 116, loop_depth 1, count 0, freq 1022, maybe hot.
Predecessors:  8 [100.0%] 
Successors:  10 [1.0%]  (loop_exit) 116 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 391
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 392

Basic block 116 prev 115, next 117, loop_depth 1, count 0, freq 978, maybe hot.
Predecessors:  115 [99.0%]  (fallthru)
Successors:  10 [3.3%]  (loop_exit) 117 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 392
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 393

Basic block 117 prev 116, next 118, loop_depth 1, count 0, freq 979, maybe hot.
Predecessors:  116 [96.7%]  (fallthru)
Successors:  10 [1.0%]  (loop_exit) 118 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 393
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 394

Basic block 118 prev 117, next 119, loop_depth 1, count 0, freq 937, maybe hot.
Predecessors:  117 [99.0%]  (fallthru)
Successors:  10 [3.3%]  (loop_exit) 119 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 394
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 395

Basic block 119 prev 118, next 120, loop_depth 1, count 0, freq 939, maybe hot.
Predecessors:  118 [96.7%]  (fallthru)
Successors:  10 [1.0%]  (loop_exit) 120 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 395
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 396

Basic block 120 prev 119, next 121, loop_depth 1, count 0, freq 898, maybe hot.
Predecessors:  119 [99.0%]  (fallthru)
Successors:  10 [3.3%]  (loop_exit) 121 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 396
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 397

Basic block 121 prev 120, next 122, loop_depth 1, count 0, freq 899, maybe hot.
Predecessors:  120 [96.7%]  (fallthru)
Successors:  10 [1.0%]  (loop_exit) 122 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 397
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 398

Basic block 122 prev 121, next 123, loop_depth 1, count 0, freq 861, maybe hot.
Predecessors:  121 [99.0%]  (fallthru)
Successors:  10 [3.3%]  (loop_exit) 123 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 398
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 399

Basic block 123 prev 122, next 124, loop_depth 1, count 0, freq 862, maybe hot.
Predecessors:  122 [96.7%]  (fallthru)
Successors:  10 [1.0%]  (loop_exit) 124 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 399
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 400

Basic block 124 prev 123, next 125, loop_depth 1, count 0, freq 825, maybe hot.
Predecessors:  123 [99.0%]  (fallthru)
Successors:  10 [3.3%]  (loop_exit) 125 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 400
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 401

Basic block 125 prev 124, next 126, loop_depth 1, count 0, freq 827, maybe hot.
Predecessors:  124 [96.7%]  (fallthru)
Successors:  10 [1.0%]  (loop_exit) 126 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 401
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 402

Basic block 126 prev 125, next 127, loop_depth 1, count 0, freq 791, maybe hot.
Predecessors:  125 [99.0%]  (fallthru)
Successors:  10 [3.3%]  (loop_exit) 127 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 402
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 403

Basic block 127 prev 126, next 128, loop_depth 1, count 0, freq 792, maybe hot.
Predecessors:  126 [96.7%]  (fallthru)
Successors:  10 [1.0%]  (loop_exit) 128 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 403
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 170 404

Basic block 128 prev 127, next 129, loop_depth 1, count 0, freq 758, maybe hot.
Predecessors:  127 [99.0%]  (fallthru)
Successors:  10 [3.3%]  (loop_exit) 129 [96.7%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 170 404
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

Basic block 129 prev 128, next -2, loop_depth 1, count 0, freq 733, maybe hot.
Predecessors:  128 [96.7%]  (fallthru)
Successors:  12 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141

;; Register 60 in 3.
;; Register 65 in 0.
;; Register 68 in 5.
;; Register 70 in 5.
;; Register 72 in 5.
;; Register 74 in 22.
;; Register 76 in 0.
;; Register 85 in 1.
;; Register 88 in 5.
;; Register 89 in 5.
;; Register 90 in 5.
;; Register 91 in 5.
;; Register 92 in 5.
;; Register 93 in 5.
;; Register 94 in 5.
;; Register 96 in 5.
;; Register 97 in 5.
;; Register 98 in 5.
;; Register 99 in 5.
;; Register 106 in 0.
;; Register 111 in 21.
;; Register 114 in 22.
;; Register 117 in 0.
;; Register 119 in 1.
;; Register 120 in 0.
;; Register 121 in 1.
;; Register 122 in 0.
;; Register 123 in 5.
;; Register 124 in 5.
;; Register 126 in 0.
;; Register 127 in 0.
;; Register 128 in 21.
;; Register 130 in 0.
;; Register 131 in 0.
;; Register 135 in 0.
;; Register 136 in 0.
;; Register 165 in 1.
;; Register 166 in 0.
;; Register 173 in 0.
;; Register 176 in 0.
;; Register 178 in 1.
;; Register 179 in 0.
;; Register 181 in 1.
;; Register 182 in 0.
;; Register 184 in 1.
;; Register 185 in 0.
;; Register 187 in 1.
;; Register 188 in 0.
;; Register 190 in 1.
;; Register 191 in 0.
;; Register 193 in 1.
;; Register 194 in 0.
;; Register 196 in 1.
;; Register 197 in 1.
;; Register 198 in 1.
;; Register 199 in 0.
;; Register 202 in 1.
;; Register 203 in 1.
;; Register 204 in 1.
;; Register 205 in 0.
;; Register 208 in 1.
;; Register 209 in 1.
;; Register 210 in 1.
;; Register 211 in 0.
;; Register 214 in 1.
;; Register 215 in 1.
;; Register 216 in 1.
;; Register 217 in 0.
;; Register 220 in 1.
;; Register 221 in 1.
;; Register 222 in 1.
;; Register 223 in 0.
;; Register 226 in 1.
;; Register 227 in 1.
;; Register 228 in 1.
;; Register 229 in 0.
;; Register 232 in 1.
;; Register 233 in 1.
;; Register 234 in 1.
;; Register 235 in 0.
;; Register 238 in 1.
;; Register 239 in 1.
;; Register 240 in 1.
;; Register 241 in 0.
;; Register 246 in 0.
;; Register 252 in 0.
;; Register 253 in 22.
;; Register 254 in 0.
;; Register 255 in 0.
;; Register 256 in 21.
;; Register 258 in 0.
;; Register 259 in 0.
;; Register 263 in 0.
;; Register 266 in 0.
;; Register 267 in 22.
;; Register 268 in 0.
;; Register 269 in 0.
;; Register 270 in 21.
;; Register 272 in 0.
;; Register 273 in 0.
;; Register 277 in 0.
;; Register 280 in 0.
;; Register 281 in 22.
;; Register 282 in 0.
;; Register 283 in 0.
;; Register 284 in 21.
;; Register 286 in 0.
;; Register 287 in 0.
;; Register 291 in 0.
;; Register 294 in 0.
;; Register 295 in 22.
;; Register 296 in 0.
;; Register 297 in 0.
;; Register 298 in 21.
;; Register 300 in 0.
;; Register 301 in 0.
;; Register 305 in 0.
;; Register 306 in 22.
;; Register 307 in 0.
;; Register 308 in 0.
;; Register 309 in 21.
;; Register 311 in 0.
;; Register 312 in 0.
;; Register 316 in 0.
;; Register 321 in 0.
;; Register 322 in 22.
;; Register 323 in 0.
;; Register 324 in 0.
;; Register 325 in 21.
;; Register 327 in 0.
;; Register 328 in 0.
;; Register 332 in 0.
;; Register 337 in 0.
;; Register 338 in 22.
;; Register 339 in 0.
;; Register 340 in 0.
;; Register 341 in 21.
;; Register 343 in 0.
;; Register 344 in 0.
;; Register 348 in 0.
;; Register 349 in 1.
;; Register 350 in 1.
;; Register 351 in 1.
;; Register 352 in 0.
;; Register 353 in 1.
;; Register 354 in 1.
;; Register 355 in 1.
;; Register 356 in 0.
;; Register 357 in 1.
;; Register 358 in 1.
;; Register 359 in 1.
;; Register 360 in 0.
;; Register 361 in 1.
;; Register 362 in 1.
;; Register 363 in 1.
;; Register 364 in 0.
;; Register 365 in 1.
;; Register 366 in 1.
;; Register 367 in 1.
;; Register 368 in 0.
;; Register 369 in 1.
;; Register 370 in 1.
;; Register 371 in 1.
;; Register 372 in 0.
;; Register 373 in 1.
;; Register 374 in 1.
;; Register 375 in 1.
;; Register 376 in 0.
;; Register 377 in 0.
;; Register 378 in 0.
;; Register 379 in 0.
;; Register 380 in 0.
;; Register 381 in 0.
;; Register 382 in 0.
;; Register 383 in 0.
;; Register 405 in 0.
;; Register 406 in 0.
;; Register 407 in 0.
;; Register 408 in 0.
;; Register 409 in 0.
;; Register 410 in 0.
;; Register 411 in 0.
;; Register 412 in 0.
;; Register 413 in 0.
;; Register 414 in 0.
;; Register 415 in 0.
;; Register 416 in 0.
;; Register 417 in 0.
;; Register 418 in 0.
;; Register 419 in 0.
(note:HI 1 0 11 ("./CppStatUtilities.cc") 347)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
(note:HI 11 1 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 4 11 5 0 ./CppStatUtilities.cc:347 (set (reg/v/f:DI 101 [ data ])
        (reg:DI 5 di [ data ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:347 (set (reg/v:SI 102 [ dataLen ])
        (reg:SI 4 si [ dataLen ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ dataLen ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:347 (set (reg/v/f:DI 103 [ prob ])
        (reg:DI 1 dx [ prob ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 1 dx [ prob ])
        (nil)))

(insn:HI 7 6 8 0 ./CppStatUtilities.cc:347 (set (reg/v:SI 104 [ probLen ])
        (reg:SI 2 cx [ probLen ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 2 cx [ probLen ])
        (nil)))

(insn:HI 8 7 9 0 ./CppStatUtilities.cc:347 (set (reg/v:SI 105 [ perLen ])
        (reg:SI 37 r8 [ perLen ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 37 r8 [ perLen ])
        (nil)))

(note:HI 9 8 13 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 13 9 14 0 ("./CppStatUtilities.cc") 349)

(insn:HI 14 13 15 0 ./CppStatUtilities.cc:349 (parallel [
            (set (reg:SI 106)
                (plus:SI (reg/v:SI 105 [ perLen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 8 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 15 14 16 0 ./CppStatUtilities.cc:349 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 106)
            (const_int 99 [0x63]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:SI 106)
        (nil)))

(jump_insn:HI 16 15 19 0 ./CppStatUtilities.cc:349 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105

(note:HI 19 16 18 ("./CppStatUtilities.cc") 356)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105
(note:HI 18 19 20 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 20 18 21 1 ./CppStatUtilities.cc:356 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 104 [ probLen ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 21 20 24 1 ./CppStatUtilities.cc:356 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 152)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105

(note:HI 24 21 23 ("./CppStatUtilities.cc") 357)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105
(note:HI 23 24 25 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 25 23 26 2 ./CppStatUtilities.cc:357 (set (reg:DF 59 [ temp.768 ])
        (mem:DF (reg/v/f:DI 103 [ prob ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 26 25 27 2 NOTE_INSN_DELETED)

(insn:HI 27 26 28 2 ./CppStatUtilities.cc:357 (set (reg:DF 140)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [3 S8 A64])
        (nil)))

(jump_insn:HI 28 27 30 2 ./CppStatUtilities.cc:357 (parallel [
            (set (pc)
                (if_then_else (lt (reg:DF 59 [ temp.768 ])
                        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [3 S8 A64]))
                    (label_ref 85)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 25 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_BR_PROB (const_int 100 [0x64])
                        (nil)))))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 101 102 103 104 105 140

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 101 102 103 104 105 140
(note:HI 30 28 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 31 30 32 3 ./CppStatUtilities.cc:357 (set (reg:DF 141)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn:HI 32 31 33 3 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 59 [ temp.768 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_DEAD (reg:DF 59 [ temp.768 ])
        (nil)))

(jump_insn:HI 33 32 1745 3 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1744)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 9667 [0x25c3])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141

;; Start of basic block 4, registers live: 7 [sp] 16 [argp] 20 [frame] 103
(note:HI 1745 33 1746 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1746 1745 1747 4 (set (pc)
        (label_ref 85)) 548 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 7 [sp] 16 [argp] 20 [frame] 103

(barrier:HI 1747 1746 37)

;; Start of basic block 5, registers live: 7 [sp] 16 [argp] 20 [frame]
(code_label:HI 37 1747 38 5 548 "" [1 uses])

(note:HI 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 39 38 40 5 ("./CppStatUtilities.cc") 352)

(insn:HI 40 39 41 5 ./CppStatUtilities.cc:352 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2] <string_cst 0x2b5eb6ab7840>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 41 40 42 5 ./CppStatUtilities.cc:352 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cerr") [flags 0x40] <var_decl 0x2b5eb61c5840 cerr>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 42 41 43 5 ./CppStatUtilities.cc:352 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 40 (insn_list:REG_DEP_TRUE 41 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 43 42 44 5 ./CppStatUtilities.cc:352 (set (reg:DI 99 [ D.34898 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 42 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 44 43 45 5 ./CppStatUtilities.cc:352 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 45 44 46 5 ./CppStatUtilities.cc:352 (set (reg:DI 5 di [ D.34898 ])
        (reg:DI 99 [ D.34898 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 43 (nil))
    (expr_list:REG_DEAD (reg:DI 99 [ D.34898 ])
        (nil)))

(call_insn:HI 46 45 47 5 ./CppStatUtilities.cc:352 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 44 (insn_list:REG_DEP_TRUE 45 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34898 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34898 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 47 46 48 5 ./CppStatUtilities.cc:352 (set (reg:DI 98 [ D.34899 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 48 47 49 5 ./CppStatUtilities.cc:352 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2] <string_cst 0x2b5eb6abb880>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 49 48 50 5 ./CppStatUtilities.cc:352 (set (reg:DI 5 di [ D.34899 ])
        (reg:DI 98 [ D.34899 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 47 (nil))
    (expr_list:REG_DEAD (reg:DI 98 [ D.34899 ])
        (nil)))

(call_insn:HI 50 49 51 5 ./CppStatUtilities.cc:352 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 48 (insn_list:REG_DEP_TRUE 49 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34899 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34899 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 51 50 52 5 ./CppStatUtilities.cc:352 (set (reg:DI 97 [ D.34900 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 50 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 52 51 53 5 ./CppStatUtilities.cc:352 (set (reg:SI 4 si)
        (const_int 351 [0x15f])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 53 52 54 5 ./CppStatUtilities.cc:352 (set (reg:DI 5 di [ D.34900 ])
        (reg:DI 97 [ D.34900 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 51 (nil))
    (expr_list:REG_DEAD (reg:DI 97 [ D.34900 ])
        (nil)))

(call_insn:HI 54 53 55 5 ./CppStatUtilities.cc:352 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41] <function_decl 0x2b5eb6055b00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 52 (insn_list:REG_DEP_TRUE 53 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34900 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34900 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 55 54 56 5 ./CppStatUtilities.cc:352 (set (reg:DI 96 [ D.34901 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 54 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 56 55 57 5 ./CppStatUtilities.cc:352 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2] <string_cst 0x2b5eb6ab8f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 57 56 58 5 ./CppStatUtilities.cc:352 (set (reg:DI 5 di [ D.34901 ])
        (reg:DI 96 [ D.34901 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 55 (nil))
    (expr_list:REG_DEAD (reg:DI 96 [ D.34901 ])
        (nil)))

(call_insn:HI 58 57 59 5 ./CppStatUtilities.cc:352 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 56 (insn_list:REG_DEP_TRUE 57 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34901 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34901 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 59 58 60 5 ./CppStatUtilities.cc:352 (set (reg:DI 72 [ this ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 58 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(note:HI 60 59 61 5 ("/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc") 72)

(insn:HI 61 60 62 5 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc:72 (set (reg:DI 5 di [ this ])
        (reg:DI 72 [ this ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 59 (nil))
    (expr_list:REG_DEAD (reg:DI 72 [ this ])
        (nil)))

(call_insn:HI 62 61 64 5 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc:72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41] <function_decl 0x2b5eb6063d00 endl>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 61 (nil))
    (expr_list:REG_UNUSED (reg:DI 0 ax)
        (expr_list:REG_DEAD (reg:DI 5 di [ this ])
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ this ]))
        (nil)))

(note:HI 64 62 65 5 ("./CppStatUtilities.cc") 353)

(insn:HI 65 64 66 5 ./CppStatUtilities.cc:353 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 66 65 67 5 ./CppStatUtilities.cc:353 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 65 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 5, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 67 66 361)

(note:HI 361 67 68 NOTE_INSN_LOOP_BEG)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 169
(code_label:HI 68 361 69 6 555 "" [1 uses])

(note:HI 69 68 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 70 69 71 6 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 62 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 71 70 72 6 ("./CppStatUtilities.cc") 357)

(insn:HI 72 71 74 6 ./CppStatUtilities.cc:357 (set (reg:DF 95 [ D.34913 ])
        (mem:DF (reg/f:DI 62 [ ivtmp.763 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 74 72 75 6 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 95 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 72 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 95 [ D.34913 ]))
        (nil)))

(jump_insn:HI 75 74 77 6 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 74 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 95 101 102 103 104 105 140 141 169

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 95 101 102 103 104 105 140 141 169
(note:HI 77 75 1729 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1729 77 78 7 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 170)
                (plus:DI (reg/f:DI 62 [ ivtmp.763 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 62 [ ivtmp.763 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 78 1729 80 7 ./CppStatUtilities.cc:357 (set (reg/f:DI 391 [ ivtmp.763 ])
        (reg/f:DI 170)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 1729 (nil))
    (nil))

(insn:HI 80 78 81 7 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 95 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 95 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 95 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 81 80 387 7 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 80 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 391

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 391
(note:HI 387 81 1749 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1749 387 1750 8 (set (pc)
        (label_ref 1748)) 548 {jump} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 391

(barrier:HI 1750 1749 85)

;; Start of basic block 9, registers live: 7 [sp] 16 [argp] 20 [frame] 103
(code_label:HI 85 1750 86 9 552 "" [2 uses])

(note:HI 86 85 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 87 86 88 9 ./CppStatUtilities.cc:357 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/v/f:DI 103 [ prob ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 103 [ prob ])
        (nil)))

(insn:HI 88 87 89 9 ./CppStatUtilities.cc:357 (set (reg/v:SI 79 [ i ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 9, registers live:
 7 [sp] 16 [argp] 20 [frame] 61 79

;; Start of basic block 10, registers live: 7 [sp] 16 [argp] 20 [frame] 61 79
(code_label:HI 89 88 90 10 556 "" [30 uses])

(note:HI 90 89 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 91 90 92 10 ("./CppStatUtilities.cc") 360)

(insn:HI 92 91 93 10 ./CppStatUtilities.cc:360 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2] <string_cst 0x2b5eb6ab7840>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 93 92 94 10 ./CppStatUtilities.cc:360 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cerr") [flags 0x40] <var_decl 0x2b5eb61c5840 cerr>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 94 93 95 10 ./CppStatUtilities.cc:360 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 92 (insn_list:REG_DEP_TRUE 93 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 95 94 96 10 ./CppStatUtilities.cc:360 (set (reg:DI 94 [ D.34914 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 94 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 96 95 97 10 ./CppStatUtilities.cc:360 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 97 96 98 10 ./CppStatUtilities.cc:360 (set (reg:DI 5 di [ D.34914 ])
        (reg:DI 94 [ D.34914 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 95 (nil))
    (expr_list:REG_DEAD (reg:DI 94 [ D.34914 ])
        (nil)))

(call_insn:HI 98 97 99 10 ./CppStatUtilities.cc:360 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 96 (insn_list:REG_DEP_TRUE 97 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34914 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34914 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 99 98 100 10 ./CppStatUtilities.cc:360 (set (reg:DI 93 [ D.34915 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 98 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 100 99 101 10 ./CppStatUtilities.cc:360 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2] <string_cst 0x2b5eb6abb880>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 101 100 102 10 ./CppStatUtilities.cc:360 (set (reg:DI 5 di [ D.34915 ])
        (reg:DI 93 [ D.34915 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 99 (nil))
    (expr_list:REG_DEAD (reg:DI 93 [ D.34915 ])
        (nil)))

(call_insn:HI 102 101 103 10 ./CppStatUtilities.cc:360 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 100 (insn_list:REG_DEP_TRUE 101 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34915 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34915 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 103 102 104 10 ./CppStatUtilities.cc:360 (set (reg:DI 92 [ D.34916 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 102 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 104 103 105 10 ./CppStatUtilities.cc:360 (set (reg:SI 4 si)
        (const_int 359 [0x167])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 105 104 106 10 ./CppStatUtilities.cc:360 (set (reg:DI 5 di [ D.34916 ])
        (reg:DI 92 [ D.34916 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 103 (nil))
    (expr_list:REG_DEAD (reg:DI 92 [ D.34916 ])
        (nil)))

(call_insn:HI 106 105 107 10 ./CppStatUtilities.cc:360 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41] <function_decl 0x2b5eb6055b00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 104 (insn_list:REG_DEP_TRUE 105 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34916 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34916 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn:HI 107 106 108 10 ./CppStatUtilities.cc:360 (set (reg:DI 91 [ D.34917 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 106 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 108 107 109 10 ./CppStatUtilities.cc:360 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2] <string_cst 0x2b5eb6539a10>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 109 108 110 10 ./CppStatUtilities.cc:360 (set (reg:DI 5 di [ D.34917 ])
        (reg:DI 91 [ D.34917 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 107 (nil))
    (expr_list:REG_DEAD (reg:DI 91 [ D.34917 ])
        (nil)))

(call_insn:HI 110 109 111 10 ./CppStatUtilities.cc:360 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 108 (insn_list:REG_DEP_TRUE 109 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34917 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34917 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 111 110 112 10 ./CppStatUtilities.cc:360 (set (reg:DI 70 [ this ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 110 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(note:HI 112 111 113 10 ("/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc") 72)

(insn:HI 113 112 114 10 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc:72 (set (reg:DI 5 di [ this ])
        (reg:DI 70 [ this ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 111 (nil))
    (expr_list:REG_DEAD (reg:DI 70 [ this ])
        (nil)))

(call_insn:HI 114 113 116 10 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc:72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41] <function_decl 0x2b5eb6063d00 endl>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 113 (nil))
    (expr_list:REG_UNUSED (reg:DI 0 ax)
        (expr_list:REG_DEAD (reg:DI 5 di [ this ])
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ this ]))
        (nil)))

(note:HI 116 114 117 10 ("./CppStatUtilities.cc") 361)

(insn:HI 117 116 118 10 ./CppStatUtilities.cc:361 (set (reg:DF 60 [ temp.767 ])
        (mem:DF (reg/v/f:DI 61 [ prob.766 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 61 [ prob.766 ])
        (nil)))

(insn:HI 118 117 119 10 ./CppStatUtilities.cc:361 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2] <string_cst 0x2b5eb6ab7b10>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 119 118 120 10 ./CppStatUtilities.cc:361 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZSt4cerr") [flags 0x40] <var_decl 0x2b5eb61c5840 cerr>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 120 119 121 10 ./CppStatUtilities.cc:361 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 118 (insn_list:REG_DEP_TRUE 119 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 121 120 122 10 ./CppStatUtilities.cc:361 (set (reg:DI 90 [ D.34919 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 120 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 122 121 123 10 ./CppStatUtilities.cc:361 (set (reg:SI 4 si [ i ])
        (reg/v:SI 79 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 79 [ i ])
        (nil)))

(insn:HI 123 122 124 10 ./CppStatUtilities.cc:361 (set (reg:DI 5 di [ D.34919 ])
        (reg:DI 90 [ D.34919 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 121 (nil))
    (expr_list:REG_DEAD (reg:DI 90 [ D.34919 ])
        (nil)))

(call_insn:HI 124 123 125 10 ./CppStatUtilities.cc:361 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEi") [flags 0x41] <function_decl 0x2b5eb6055b00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 122 (insn_list:REG_DEP_TRUE 123 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ i ])
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34919 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34919 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ i ]))
            (nil))))

(insn:HI 125 124 126 10 ./CppStatUtilities.cc:361 (set (reg:DI 89 [ D.34920 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 124 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 126 125 127 10 ./CppStatUtilities.cc:361 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2] <string_cst 0x2b5eb6ab7b40>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 127 126 128 10 ./CppStatUtilities.cc:361 (set (reg:DI 5 di [ D.34920 ])
        (reg:DI 89 [ D.34920 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 125 (nil))
    (expr_list:REG_DEAD (reg:DI 89 [ D.34920 ])
        (nil)))

(call_insn:HI 128 127 129 10 ./CppStatUtilities.cc:361 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc") [flags 0x41] <function_decl 0x2b5eb606a900 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 126 (insn_list:REG_DEP_TRUE 127 (nil)))
    (expr_list:REG_DEAD (reg:DI 4 si)
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34920 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34920 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn:HI 129 128 130 10 ./CppStatUtilities.cc:361 (set (reg:DI 88 [ D.34921 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 128 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 130 129 131 10 ./CppStatUtilities.cc:361 (set (reg:DF 21 xmm0 [ temp.767 ])
        (reg:DF 60 [ temp.767 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 117 (nil))
    (expr_list:REG_DEAD (reg:DF 60 [ temp.767 ])
        (nil)))

(insn:HI 131 130 132 10 ./CppStatUtilities.cc:361 (set (reg:DI 5 di [ D.34921 ])
        (reg:DI 88 [ D.34921 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 129 (nil))
    (expr_list:REG_DEAD (reg:DI 88 [ D.34921 ])
        (nil)))

(call_insn:HI 132 131 133 10 ./CppStatUtilities.cc:361 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSolsEd") [flags 0x41] <function_decl 0x2b5eb6055f00 operator<<>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 130 (insn_list:REG_DEP_TRUE 131 (nil)))
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ temp.767 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ D.34921 ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34921 ]))
        (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ temp.767 ]))
            (nil))))

(insn:HI 133 132 134 10 ./CppStatUtilities.cc:361 (set (reg:DI 68 [ this ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 132 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(note:HI 134 133 135 10 ("/usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc") 72)

(insn:HI 135 134 136 10 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc:72 (set (reg:DI 5 di [ this ])
        (reg:DI 68 [ this ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 133 (nil))
    (expr_list:REG_DEAD (reg:DI 68 [ this ])
        (nil)))

(call_insn:HI 136 135 138 10 /usr/lib/gcc/x86_64-redhat-linux/4.1.2/../../../../include/c++/4.1.2/bits/ostream.tcc:72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_") [flags 0x41] <function_decl 0x2b5eb6063d00 endl>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 135 (nil))
    (expr_list:REG_UNUSED (reg:DI 0 ax)
        (expr_list:REG_DEAD (reg:DI 5 di [ this ])
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ this ]))
        (nil)))

(note:HI 138 136 139 10 ("./CppStatUtilities.cc") 362)

(insn:HI 139 138 140 10 ./CppStatUtilities.cc:362 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 140 139 141 10 ./CppStatUtilities.cc:362 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 139 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 10, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 141 140 1744)

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141
(code_label:HI 1744 141 143 11 665 "" [1 uses])

(note:HI 143 1744 144 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 144 143 145 11 ./CppStatUtilities.cc:362 (parallel [
            (set (reg/f:DI 62 [ ivtmp.763 ])
                (plus:DI (reg/v/f:DI 103 [ prob ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 145 144 1366 11 ./CppStatUtilities.cc:362 (set (reg/v:SI 79 [ i ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 1366 145 1367 11 NOTE_INSN_DELETED)

(insn:HI 1367 1366 1368 11 (parallel [
            (set (reg:SI 166)
                (plus:SI (reg/v:SI 104 [ probLen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1368 1367 1564 11 NOTE_INSN_DELETED)

(insn:HI 1564 1368 1565 11 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 166)
                        (const_int 7 [0x7]))
                    (const_int 0 [0x0])))
            (set (reg:SI 168)
                (and:SI (reg:SI 166)
                    (const_int 7 [0x7])))
        ]) 301 {*andsi_2} (insn_list:REG_DEP_TRUE 1367 (nil))
    (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(jump_insn:HI 1565 1564 146 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1751)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1564 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
(code_label:HI 146 1565 147 12 558 "" [3 uses])

(note:HI 147 146 148 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 148 147 1728 12 ("./CppStatUtilities.cc") 356)

(insn:HI 1728 148 149 12 ./CppStatUtilities.cc:356 (parallel [
            (set (reg:SI 169)
                (plus:SI (reg/v:SI 79 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 79 [ i ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 149 1728 150 12 ./CppStatUtilities.cc:356 (set (reg/v:SI 79 [ i ])
        (reg:SI 169)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1728 (nil))
    (nil))

(insn:HI 150 149 151 12 ./CppStatUtilities.cc:356 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 79 [ i ])
            (reg/v:SI 104 [ probLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 149 (nil))
    (nil))

(jump_insn:HI 151 150 362 12 ./CppStatUtilities.cc:356 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 150 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9667 [0x25c3])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 169

(note:HI 362 151 152 NOTE_INSN_LOOP_END)

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105
(code_label:HI 152 362 153 13 550 "" [1 uses])

(note:HI 153 152 154 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 154 153 159 13 ("./CppStatUtilities.cc") 367)

(insn:HI 159 154 155 13 ./CppStatUtilities.cc:367 (set (reg/v:SI 82 [ sampleSize ])
        (reg/v:SI 102 [ dataLen ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 155 159 156 13 ./CppStatUtilities.cc:367 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 105 [ perLen ])
            (const_int 99 [0x63]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 156 155 163 13 ./CppStatUtilities.cc:367 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 171)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 155 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 101 102 103 104 105

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105
(note:HI 163 156 164 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 164 163 165 14 ("./CppStatUtilities.cc") 368)

(insn:HI 165 164 166 14 ./CppStatUtilities.cc:368 (set (reg:DF 111)
        (float:DF (reg/v:SI 105 [ perLen ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(note:HI 166 165 167 14 NOTE_INSN_DELETED)

(insn:HI 167 166 168 14 ./CppStatUtilities.cc:368 (set (reg:DF 111)
        (div:DF (reg:DF 111)
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC25") [flags 0x2]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 165 (nil))
    (nil))

(insn:HI 168 167 169 14 ./CppStatUtilities.cc:368 (set (reg:DF 114)
        (float:DF (reg/v:SI 102 [ dataLen ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 169 168 170 14 ./CppStatUtilities.cc:368 (set (reg:DF 111)
        (mult:DF (reg:DF 111)
            (reg:DF 114))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 167 (insn_list:REG_DEP_TRUE 168 (nil)))
    (expr_list:REG_DEAD (reg:DF 114)
        (nil)))

(insn:HI 170 169 171 14 ./CppStatUtilities.cc:368 (set (reg/v:SI 82 [ sampleSize ])
        (fix:SI (reg:DF 111))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 169 (nil))
    (expr_list:REG_DEAD (reg:DF 111)
        (nil)))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 101 102 103 104 105

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 101 102 103 104 105
(code_label:HI 171 170 172 15 561 "" [1 uses])

(note:HI 172 171 173 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 173 172 174 15 ("./CppStatUtilities.cc") 372)

(insn:HI 174 173 175 15 ./CppStatUtilities.cc:372 (set (reg:DI 87 [ D.34927 ])
        (sign_extend:DI (reg/v:SI 82 [ sampleSize ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 175 174 176 15 ./CppStatUtilities.cc:372 (parallel [
            (set (reg:DI 86 [ D.34928 ])
                (ashift:DI (reg:DI 87 [ D.34927 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 174 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 176 175 177 15 ./CppStatUtilities.cc:372 (set (reg:DI 5 di [ D.34928 ])
        (reg:DI 86 [ D.34928 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 175 (nil))
    (nil))

(call_insn:HI 177 176 178 15 ./CppStatUtilities.cc:372 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 176 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ D.34928 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34928 ]))
        (nil)))

(insn:HI 178 177 180 15 ./CppStatUtilities.cc:372 (set (reg/f:DI 63 [ ivtmp.758 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 177 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 116)
            (nil))))

(note:HI 180 178 181 15 ("./CppStatUtilities.cc") 373)

(insn:HI 181 180 182 15 ./CppStatUtilities.cc:373 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 63 [ ivtmp.758 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 178 (nil))
    (nil))

(jump_insn:HI 182 181 184 15 ./CppStatUtilities.cc:373 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 194)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 181 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 82 86 87 101 102 103 104 105

;; Start of basic block 16, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 184 182 185 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 185 184 186 16 ./CppStatUtilities.cc:373 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 186 185 187 16 ./CppStatUtilities.cc:373 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 187 186 188 16 ./CppStatUtilities.cc:373 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 188 187 189 16 ./CppStatUtilities.cc:373 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 189 188 190 16 ./CppStatUtilities.cc:373 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 190 189 191 16 ./CppStatUtilities.cc:373 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 185 (insn_list:REG_DEP_TRUE 186 (insn_list:REG_DEP_TRUE 187 (insn_list:REG_DEP_TRUE 188 (insn_list:REG_DEP_TRUE 189 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 191 190 192 16 ./CppStatUtilities.cc:373 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 192 191 193 16 ./CppStatUtilities.cc:373 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 191 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 16, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 193 192 194)

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 82 86 87 101 102 103 104 105
(code_label:HI 194 193 195 17 562 "" [1 uses])

(note:HI 195 194 196 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 196 195 197 17 ("./CppStatUtilities.cc") 372)

(insn:HI 197 196 198 17 ./CppStatUtilities.cc:372 (set (reg/v/f:DI 81 [ b ])
        (reg/f:DI 63 [ ivtmp.758 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 198 197 199 17 ("./CppStatUtilities.cc") 375)

(insn:HI 199 198 200 17 ./CppStatUtilities.cc:375 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 105 [ perLen ])
            (const_int 100 [0x64]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg/v:SI 105 [ perLen ])
        (nil)))

(jump_insn:HI 200 199 203 17 ./CppStatUtilities.cc:375 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 209)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 199 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104

(note:HI 203 200 202 ("./CppStatUtilities.cc") 377)

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104
(note:HI 202 203 204 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:HI 204 202 205 18 ./CppStatUtilities.cc:377 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 82 [ sampleSize ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 205 204 1757 18 ./CppStatUtilities.cc:377 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 204 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 103 104
(note:HI 1757 205 1758 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1758 1757 1759 19 (set (pc)
        (label_ref 251)) 548 {jump} (nil)
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 103 104

(barrier:HI 1759 1758 209)

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104
(code_label:HI 209 1759 210 20 564 "" [1 uses])

(note:HI 210 209 211 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note:HI 211 210 212 20 ("./CppStatUtilities.cc") 383)

(insn:HI 212 211 213 20 ./CppStatUtilities.cc:383 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 82 [ sampleSize ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 213 212 363 20 ./CppStatUtilities.cc:383 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 234)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 212 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104

(note:HI 363 213 364 NOTE_INSN_LOOP_BEG)

(note:HI 364 363 365 NOTE_INSN_LOOP_END)

(note:HI 365 364 366 NOTE_INSN_LOOP_BEG)

(note:HI 366 365 251 NOTE_INSN_LOOP_END)

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 103 104
(code_label:HI 251 366 252 21 567 "" [7 uses])

(note:HI 252 251 253 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note:HI 253 252 254 21 ("./CppStatUtilities.cc") 387)

(insn:HI 254 253 255 21 ./CppStatUtilities.cc:387 (set (reg:DI 2 cx)
        (symbol_ref:DI ("compareDouble") [flags 0x41] <function_decl 0x2b5eb6409400 compareDouble>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 255 254 256 21 ./CppStatUtilities.cc:387 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 256 255 257 21 ./CppStatUtilities.cc:387 (set (reg:DI 4 si [ D.34927 ])
        (reg:DI 87 [ D.34927 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 87 [ D.34927 ])
        (nil)))

(insn:HI 257 256 258 21 ./CppStatUtilities.cc:387 (set (reg:DI 5 di [ b ])
        (reg/v/f:DI 81 [ b ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 258 257 259 21 ./CppStatUtilities.cc:387 (call (mem:QI (symbol_ref:DI ("qsort") [flags 0x41] <function_decl 0x2b5eb5107600 qsort>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 254 (insn_list:REG_DEP_TRUE 255 (insn_list:REG_DEP_TRUE 256 (insn_list:REG_DEP_TRUE 257 (nil)))))
    (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_DEAD (reg:DI 4 si [ D.34927 ])
                (expr_list:REG_DEAD (reg:DI 5 di [ b ])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ b ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si [ D.34927 ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(note:HI 259 258 260 21 ("./CppStatUtilities.cc") 389)

(insn:HI 260 259 261 21 ./CppStatUtilities.cc:389 (set (reg:DI 123 [ probLen ])
        (sign_extend:DI (reg/v:SI 104 [ probLen ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 261 260 262 21 ./CppStatUtilities.cc:389 (parallel [
            (set (reg:DI 124)
                (ashift:DI (reg:DI 123 [ probLen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 260 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 123 [ probLen ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 262 261 263 21 ./CppStatUtilities.cc:389 (set (reg:DI 5 di)
        (reg:DI 124)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 261 (nil))
    (expr_list:REG_DEAD (reg:DI 124)
        (nil)))

(call_insn:HI 263 262 264 21 ./CppStatUtilities.cc:389 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 262 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 264 263 266 21 ./CppStatUtilities.cc:389 (set (reg/f:DI 125)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 263 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 125)
            (nil))))

(note:HI 266 264 267 21 ("./CppStatUtilities.cc") 390)

(insn:HI 267 266 268 21 ./CppStatUtilities.cc:390 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 125)
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 264 (nil))
    (nil))

(jump_insn:HI 268 267 271 21 ./CppStatUtilities.cc:390 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 279)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 267 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 103 104 125

(note:HI 271 268 273 ("./CppStatUtilities.cc") 389)

(note:HI 273 271 270 ("./CppStatUtilities.cc") 392)

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 103 104 125
(note:HI 270 273 274 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 274 270 275 22 ./CppStatUtilities.cc:392 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 104 [ probLen ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 275 274 1783 22 ./CppStatUtilities.cc:392 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 291)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 274 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 103 104 125

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 125
(note:HI 1783 275 1784 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1784 1783 1785 23 (set (pc)
        (label_ref 340)) 548 {jump} (nil)
    (nil))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 125

(barrier:HI 1785 1784 279)

;; Start of basic block 24, registers live: 7 [sp] 16 [argp] 20 [frame]
(code_label:HI 279 1785 280 24 571 "" [1 uses])

(note:HI 280 279 281 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note:HI 281 280 282 24 ("./CppStatUtilities.cc") 390)

(insn:HI 282 281 283 24 ./CppStatUtilities.cc:390 (set (reg:SI 2 cx)
        (const_int 390 [0x186])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 283 282 284 24 ./CppStatUtilities.cc:390 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 284 283 285 24 ./CppStatUtilities.cc:390 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 285 284 286 24 ./CppStatUtilities.cc:390 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 286 285 287 24 ./CppStatUtilities.cc:390 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 287 286 288 24 ./CppStatUtilities.cc:390 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 282 (insn_list:REG_DEP_TRUE 283 (insn_list:REG_DEP_TRUE 284 (insn_list:REG_DEP_TRUE 285 (insn_list:REG_DEP_TRUE 286 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 288 287 289 24 ./CppStatUtilities.cc:390 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 289 288 290 24 ./CppStatUtilities.cc:390 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 288 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 24, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 290 289 367)

(note:HI 367 290 297 NOTE_INSN_LOOP_BEG)

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(code_label:HI 297 367 298 25 575 "" [3 uses])

(note:HI 298 297 299 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note:HI 299 298 300 25 ("./CppStatUtilities.cc") 394)

(insn:HI 300 299 301 25 ./CppStatUtilities.cc:394 (set (reg/v:DF 244 [ x ])
        (mult:DF (reg:DF 66 [ pretmp.737 ])
            (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 103 [ prob ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 301 300 302 25 ("./CppStatUtilities.cc") 395)

(insn:HI 302 301 303 25 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0 [ x ])
        (reg/v:DF 244 [ x ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 300 (nil))
    (nil))

(call_insn/u:HI 303 302 304 25 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 302 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ x ]))
        (nil)))

(insn:HI 304 303 305 25 ./CppStatUtilities.cc:395 (set (reg:DF 245 [ D.34976 ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 303 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 305 304 306 25 ("./CppStatUtilities.cc") 397)

(insn:HI 306 305 307 25 ./CppStatUtilities.cc:397 (set (reg:SI 246)
        (fix:SI (reg:DF 245 [ D.34976 ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 304 (nil))
    (nil))

(insn:HI 307 306 308 25 ./CppStatUtilities.cc:397 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 246)
            (reg:SI 67 [ pretmp.736 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 306 (nil))
    (expr_list:REG_DEAD (reg:SI 246)
        (nil)))

(jump_insn:HI 308 307 311 25 ./CppStatUtilities.cc:397 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 316)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 307 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 244 245 247

(note:HI 311 308 310 ("./CppStatUtilities.cc") 398)

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(note:HI 310 311 312 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:HI 312 310 313 26 ./CppStatUtilities.cc:398 (set (reg:DF 127)
        (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])
        (nil)))

(insn:HI 313 312 1789 26 ./CppStatUtilities.cc:398 (set (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 127)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 312 (nil))
    (expr_list:REG_DEAD (reg:DF 127)
        (nil)))

(jump_insn:HI 1789 313 1790 26 (set (pc)
        (label_ref 333)) 548 {jump} (nil)
    (nil))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

(barrier:HI 1790 1789 316)

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 244 245 247
(code_label:HI 316 1790 317 27 576 "" [1 uses])

(note:HI 317 316 318 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note:HI 318 317 319 27 ("./CppStatUtilities.cc") 395)

(insn:HI 319 318 320 27 ./CppStatUtilities.cc:395 (set (reg/v:DF 74 [ t ])
        (minus:DF (reg/v:DF 244 [ x ])
            (reg:DF 245 [ D.34976 ]))) 619 {*fop_df_1_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 245 [ D.34976 ])
        (nil)))

(note:HI 320 319 322 27 ("./CppStatUtilities.cc") 400)

(insn:HI 322 320 323 27 ./CppStatUtilities.cc:400 (set (reg:DF 128)
        (minus:DF (reg:DF 129)
            (reg/v:DF 74 [ t ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 319 (nil))
    (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
            (reg/v:DF 74 [ t ]))
        (nil)))

(insn:HI 323 322 324 27 ./CppStatUtilities.cc:400 (set (reg:SI 130)
        (fix:SI (reg/v:DF 244 [ x ]))) 145 {fix_truncdfsi_sse} (nil)
    (nil))

(insn:HI 324 323 325 27 ./CppStatUtilities.cc:400 (set (reg:DI 131)
        (sign_extend:DI (reg:SI 130))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 323 (nil))
    (expr_list:REG_DEAD (reg:SI 130)
        (nil)))

(insn:HI 325 324 327 27 ./CppStatUtilities.cc:400 (set (reg:DF 128)
        (mult:DF (reg:DF 128)
            (mem:DF (plus:DI (mult:DI (reg:DI 131)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 322 (insn_list:REG_DEP_TRUE 324 (nil)))
    (expr_list:REG_DEAD (reg:DI 131)
        (nil)))

(insn:HI 327 325 328 27 ./CppStatUtilities.cc:400 (set (reg/v:DF 244 [ x ])
        (plus:DF (reg/v:DF 244 [ x ])
            (reg:DF 129))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_EQUAL (plus:DF (reg/v:DF 244 [ x ])
            (const_double:DF 1.0e+0 [0x0.8p+1]))
        (nil)))

(insn:HI 328 327 329 27 ./CppStatUtilities.cc:400 (set (reg:SI 135)
        (fix:SI (reg/v:DF 244 [ x ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 327 (nil))
    (expr_list:REG_DEAD (reg/v:DF 244 [ x ])
        (nil)))

(insn:HI 329 328 330 27 ./CppStatUtilities.cc:400 (set (reg:DI 136)
        (sign_extend:DI (reg:SI 135))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 328 (nil))
    (expr_list:REG_DEAD (reg:SI 135)
        (nil)))

(insn:HI 330 329 331 27 ./CppStatUtilities.cc:400 (set (reg/v:DF 74 [ t ])
        (mult:DF (reg/v:DF 74 [ t ])
            (mem:DF (plus:DI (mult:DI (reg:DI 136)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 329 (nil))
    (expr_list:REG_DEAD (reg:DI 136)
        (nil)))

(insn:HI 331 330 332 27 ./CppStatUtilities.cc:400 (set (reg:DF 128)
        (plus:DF (reg:DF 128)
            (reg/v:DF 74 [ t ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 325 (insn_list:REG_DEP_TRUE 330 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 74 [ t ])
        (nil)))

(insn:HI 332 331 1864 27 ./CppStatUtilities.cc:400 (set (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 128)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 331 (nil))
    (expr_list:REG_DEAD (reg:DF 128)
        (nil)))

(jump_insn:HI 1864 332 1865 27 (set (pc)
        (label_ref 333)) 548 {jump} (nil)
    (nil))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

(barrier:HI 1865 1864 368)

(note:HI 368 1865 340 NOTE_INSN_LOOP_END)

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 125
(code_label:HI 340 368 341 28 574 "" [4 uses])

(note:HI 341 340 342 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note:HI 342 341 343 28 ("./CppStatUtilities.cc") 403)

(insn:HI 343 342 344 28 ./CppStatUtilities.cc:403 (set (reg:DI 5 di [ b ])
        (reg/v/f:DI 81 [ b ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 81 [ b ])
        (nil)))

(call_insn:HI 344 343 348 28 ./CppStatUtilities.cc:403 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 343 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ b ]))
        (nil)))

(note:HI 348 344 349 28 NOTE_INSN_FUNCTION_END)

(note:HI 349 348 351 28 ("./CppStatUtilities.cc") 406)

(insn:HI 351 349 357 28 ./CppStatUtilities.cc:406 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 125)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 125)
        (nil)))

(insn:HI 357 351 291 28 ./CppStatUtilities.cc:406 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 351 (nil))
    (nil))
;; End of basic block 28, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 103 104 125
(code_label:HI 291 357 292 29 573 "" [1 uses])

(note:HI 292 291 293 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:HI 293 292 294 29 ./CppStatUtilities.cc:390 (parallel [
            (set (reg:SI 67 [ pretmp.736 ])
                (plus:SI (reg/v:SI 82 [ sampleSize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 82 [ sampleSize ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 294 293 373 29 ./CppStatUtilities.cc:390 (set (reg:DF 66 [ pretmp.737 ])
        (float:DF (reg:SI 67 [ pretmp.736 ]))) 175 {*floatsidf2_sse} (insn_list:REG_DEP_TRUE 293 (nil))
    (nil))

(insn:HI 373 294 395 29 (set (reg:DF 129)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))

(note:HI 395 373 396 29 NOTE_INSN_DELETED)

(insn:HI 396 395 397 29 (parallel [
            (set (reg:SI 153)
                (plus:SI (reg/v:SI 104 [ probLen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 397 396 400 29 (parallel [
            (set (reg:SI 153)
                (and:SI (reg:SI 153)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 396 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 400 397 401 29 ("./CppStatUtilities.cc") 394)

(insn:HI 401 400 402 29 ./CppStatUtilities.cc:394 (set (reg/v:DF 75 [ x ])
        (mult:DF (reg:DF 66 [ pretmp.737 ])
            (mem:DF (reg/v/f:DI 103 [ prob ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 294 (nil))
    (nil))

(note:HI 402 401 403 29 ("./CppStatUtilities.cc") 395)

(insn:HI 403 402 404 29 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0 [ x ])
        (reg/v:DF 75 [ x ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 401 (nil))
    (nil))

(call_insn/u:HI 404 403 405 29 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 403 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ x ]))
        (nil)))

(insn:HI 405 404 406 29 ./CppStatUtilities.cc:395 (set (reg:DF 83 [ D.34976 ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 404 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 406 405 407 29 ("./CppStatUtilities.cc") 397)

(insn:HI 407 406 408 29 ./CppStatUtilities.cc:397 (set (reg:SI 126)
        (fix:SI (reg:DF 83 [ D.34976 ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 405 (nil))
    (nil))

(insn:HI 408 407 409 29 ./CppStatUtilities.cc:397 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126)
            (reg:SI 67 [ pretmp.736 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 407 (nil))
    (expr_list:REG_DEAD (reg:SI 126)
        (nil)))

(jump_insn:HI 409 408 426 29 ./CppStatUtilities.cc:397 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1798)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 408 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 75 81 83 86 103 104 125 129 153

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 75 81 83 86 103 104 125 129 153
(note:HI 426 409 413 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note:HI 413 426 414 30 ("./CppStatUtilities.cc") 395)

(insn:HI 414 413 415 30 ./CppStatUtilities.cc:395 (set (reg/v:DF 253 [ t ])
        (minus:DF (reg/v:DF 75 [ x ])
            (reg:DF 83 [ D.34976 ]))) 619 {*fop_df_1_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 83 [ D.34976 ])
        (nil)))

(note:HI 415 414 416 30 ("./CppStatUtilities.cc") 400)

(insn:HI 416 415 417 30 ./CppStatUtilities.cc:400 (set (reg:DF 256)
        (minus:DF (reg:DF 129)
            (reg/v:DF 253 [ t ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 414 (nil))
    (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
            (reg/v:DF 253 [ t ]))
        (nil)))

(insn:HI 417 416 418 30 ./CppStatUtilities.cc:400 (set (reg:SI 254)
        (fix:SI (reg/v:DF 75 [ x ]))) 145 {fix_truncdfsi_sse} (nil)
    (nil))

(insn:HI 418 417 419 30 ./CppStatUtilities.cc:400 (set (reg:DI 255)
        (sign_extend:DI (reg:SI 254))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 417 (nil))
    (expr_list:REG_DEAD (reg:SI 254)
        (nil)))

(insn:HI 419 418 420 30 ./CppStatUtilities.cc:400 (set (reg:DF 256)
        (mult:DF (reg:DF 256)
            (mem:DF (plus:DI (mult:DI (reg:DI 255)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 416 (insn_list:REG_DEP_TRUE 418 (nil)))
    (expr_list:REG_DEAD (reg:DI 255)
        (nil)))

(insn:HI 420 419 421 30 ./CppStatUtilities.cc:400 (set (reg/v:DF 75 [ x ])
        (plus:DF (reg/v:DF 75 [ x ])
            (reg:DF 129))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_EQUAL (plus:DF (reg/v:DF 75 [ x ])
            (const_double:DF 1.0e+0 [0x0.8p+1]))
        (nil)))

(insn:HI 421 420 422 30 ./CppStatUtilities.cc:400 (set (reg:SI 258)
        (fix:SI (reg/v:DF 75 [ x ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 420 (nil))
    (expr_list:REG_DEAD (reg/v:DF 75 [ x ])
        (nil)))

(insn:HI 422 421 423 30 ./CppStatUtilities.cc:400 (set (reg:DI 259)
        (sign_extend:DI (reg:SI 258))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 421 (nil))
    (expr_list:REG_DEAD (reg:SI 258)
        (nil)))

(insn:HI 423 422 424 30 ./CppStatUtilities.cc:400 (set (reg/v:DF 253 [ t ])
        (mult:DF (reg/v:DF 253 [ t ])
            (mem:DF (plus:DI (mult:DI (reg:DI 259)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 422 (nil))
    (expr_list:REG_DEAD (reg:DI 259)
        (nil)))

(insn:HI 424 423 425 30 ./CppStatUtilities.cc:400 (set (reg:DF 256)
        (plus:DF (reg:DF 256)
            (reg/v:DF 253 [ t ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 419 (insn_list:REG_DEP_TRUE 423 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 253 [ t ])
        (nil)))

(insn:HI 425 424 1800 30 ./CppStatUtilities.cc:400 (set (mem:DF (reg/f:DI 125) [3 S8 A64])
        (reg:DF 256)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 424 (nil))
    (expr_list:REG_DEAD (reg:DF 256)
        (nil)))

(jump_insn:HI 1800 425 1801 30 (set (pc)
        (label_ref 1799)) 548 {jump} (nil)
    (nil))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153

(barrier:HI 1801 1800 432)

(note:HI 432 1801 1798 ("./CppStatUtilities.cc") 398)

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153
(code_label:HI 1798 432 430 31 674 "" [1 uses])

(note:HI 430 1798 428 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:HI 428 430 429 31 ./CppStatUtilities.cc:398 (set (reg:DF 263)
        (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])
        (nil)))

(insn:HI 429 428 1799 31 ./CppStatUtilities.cc:398 (set (mem:DF (reg/f:DI 125) [3 S8 A64])
        (reg:DF 263)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 428 (nil))
    (expr_list:REG_DEAD (reg:DF 263)
        (nil)))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153
(code_label:HI 1799 429 439 32 675 "" [1 uses])

(note:HI 439 1799 434 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note:HI 434 439 1868 32 ("./CppStatUtilities.cc") 392)

(insn 1868 434 435 32 ./CppStatUtilities.cc:392 (set (reg/v:SI 76 [ k ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:HI 435 1868 1867 32 ./CppStatUtilities.cc:392 (parallel [
            (set (reg/v:SI 247 [ k ])
                (plus:SI (reg/v:SI 76 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 76 [ k ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn 1867 435 436 32 ./CppStatUtilities.cc:392 (set (reg:DI 65 [ ivtmp.744 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:HI 436 1867 437 32 ./CppStatUtilities.cc:392 (parallel [
            (set (reg:DI 243 [ ivtmp.744 ])
                (plus:DI (reg:DI 65 [ ivtmp.744 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 65 [ ivtmp.744 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 437 436 438 32 ./CppStatUtilities.cc:392 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 247 [ k ])
            (reg/v:SI 104 [ probLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 435 (nil))
    (nil))

(jump_insn:HI 438 437 598 32 ./CppStatUtilities.cc:392 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 340)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 437 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247
(note:HI 598 438 596 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:HI 596 598 597 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 597 596 547 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 297)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 596 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247
(note:HI 547 597 545 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:HI 545 547 546 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 546 545 496 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1845)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 545 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 153 243 247
(note:HI 496 546 494 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn:HI 494 496 495 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(jump_insn:HI 495 494 457 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1846)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 494 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(note:HI 457 495 447 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note:HI 447 457 448 36 ("./CppStatUtilities.cc") 394)

(insn:HI 448 447 449 36 ./CppStatUtilities.cc:394 (set (reg/v:DF 264 [ x ])
        (mult:DF (reg:DF 66 [ pretmp.737 ])
            (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 103 [ prob ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 449 448 450 36 ("./CppStatUtilities.cc") 395)

(insn:HI 450 449 451 36 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0 [ x ])
        (reg/v:DF 264 [ x ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 448 (nil))
    (nil))

(call_insn/u:HI 451 450 452 36 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 450 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ x ]))
        (nil)))

(insn:HI 452 451 453 36 ./CppStatUtilities.cc:395 (set (reg:DF 265 [ D.34976 ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 451 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 453 452 454 36 ("./CppStatUtilities.cc") 397)

(insn:HI 454 453 455 36 ./CppStatUtilities.cc:397 (set (reg:SI 266)
        (fix:SI (reg:DF 265 [ D.34976 ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 452 (nil))
    (nil))

(insn:HI 455 454 456 36 ./CppStatUtilities.cc:397 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 266)
            (reg:SI 67 [ pretmp.736 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 454 (nil))
    (expr_list:REG_DEAD (reg:SI 266)
        (nil)))

(jump_insn:HI 456 455 473 36 ./CppStatUtilities.cc:397 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1803)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 455 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 264 265

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 264 265
(note:HI 473 456 460 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note:HI 460 473 461 37 ("./CppStatUtilities.cc") 395)

(insn:HI 461 460 462 37 ./CppStatUtilities.cc:395 (set (reg/v:DF 267 [ t ])
        (minus:DF (reg/v:DF 264 [ x ])
            (reg:DF 265 [ D.34976 ]))) 619 {*fop_df_1_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 265 [ D.34976 ])
        (nil)))

(note:HI 462 461 463 37 ("./CppStatUtilities.cc") 400)

(insn:HI 463 462 464 37 ./CppStatUtilities.cc:400 (set (reg:DF 270)
        (minus:DF (reg:DF 129)
            (reg/v:DF 267 [ t ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 461 (nil))
    (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
            (reg/v:DF 267 [ t ]))
        (nil)))

(insn:HI 464 463 465 37 ./CppStatUtilities.cc:400 (set (reg:SI 268)
        (fix:SI (reg/v:DF 264 [ x ]))) 145 {fix_truncdfsi_sse} (nil)
    (nil))

(insn:HI 465 464 466 37 ./CppStatUtilities.cc:400 (set (reg:DI 269)
        (sign_extend:DI (reg:SI 268))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 464 (nil))
    (expr_list:REG_DEAD (reg:SI 268)
        (nil)))

(insn:HI 466 465 467 37 ./CppStatUtilities.cc:400 (set (reg:DF 270)
        (mult:DF (reg:DF 270)
            (mem:DF (plus:DI (mult:DI (reg:DI 269)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 463 (insn_list:REG_DEP_TRUE 465 (nil)))
    (expr_list:REG_DEAD (reg:DI 269)
        (nil)))

(insn:HI 467 466 468 37 ./CppStatUtilities.cc:400 (set (reg/v:DF 264 [ x ])
        (plus:DF (reg/v:DF 264 [ x ])
            (reg:DF 129))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_EQUAL (plus:DF (reg/v:DF 264 [ x ])
            (const_double:DF 1.0e+0 [0x0.8p+1]))
        (nil)))

(insn:HI 468 467 469 37 ./CppStatUtilities.cc:400 (set (reg:SI 272)
        (fix:SI (reg/v:DF 264 [ x ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 467 (nil))
    (expr_list:REG_DEAD (reg/v:DF 264 [ x ])
        (nil)))

(insn:HI 469 468 470 37 ./CppStatUtilities.cc:400 (set (reg:DI 273)
        (sign_extend:DI (reg:SI 272))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 468 (nil))
    (expr_list:REG_DEAD (reg:SI 272)
        (nil)))

(insn:HI 470 469 471 37 ./CppStatUtilities.cc:400 (set (reg/v:DF 267 [ t ])
        (mult:DF (reg/v:DF 267 [ t ])
            (mem:DF (plus:DI (mult:DI (reg:DI 273)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 469 (nil))
    (expr_list:REG_DEAD (reg:DI 273)
        (nil)))

(insn:HI 471 470 472 37 ./CppStatUtilities.cc:400 (set (reg:DF 270)
        (plus:DF (reg:DF 270)
            (reg/v:DF 267 [ t ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 466 (insn_list:REG_DEP_TRUE 470 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 267 [ t ])
        (nil)))

(insn:HI 472 471 1805 37 ./CppStatUtilities.cc:400 (set (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 270)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 471 (nil))
    (expr_list:REG_DEAD (reg:DF 270)
        (nil)))

(jump_insn:HI 1805 472 1806 37 (set (pc)
        (label_ref 1804)) 548 {jump} (nil)
    (nil))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

(barrier:HI 1806 1805 479)

(note:HI 479 1806 1803 ("./CppStatUtilities.cc") 398)

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(code_label:HI 1803 479 477 38 677 "" [1 uses])

(note:HI 477 1803 475 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:HI 475 477 476 38 ./CppStatUtilities.cc:398 (set (reg:DF 277)
        (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])
        (nil)))

(insn:HI 476 475 1804 38 ./CppStatUtilities.cc:398 (set (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 277)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 475 (nil))
    (expr_list:REG_DEAD (reg:DF 277)
        (nil)))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(code_label:HI 1804 476 486 39 678 "" [1 uses])

(note:HI 486 1804 481 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note:HI 481 486 482 39 ("./CppStatUtilities.cc") 392)

(insn:HI 482 481 483 39 ./CppStatUtilities.cc:392 (parallel [
            (set (reg/v:SI 247 [ k ])
                (plus:SI (reg/v:SI 247 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 483 482 1846 39 ./CppStatUtilities.cc:392 (parallel [
            (set (reg:DI 243 [ ivtmp.744 ])
                (plus:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(code_label:HI 1846 483 508 40 692 "" [1 uses])

(note:HI 508 1846 498 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(note:HI 498 508 499 40 ("./CppStatUtilities.cc") 394)

(insn:HI 499 498 500 40 ./CppStatUtilities.cc:394 (set (reg/v:DF 278 [ x ])
        (mult:DF (reg:DF 66 [ pretmp.737 ])
            (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 103 [ prob ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 500 499 501 40 ("./CppStatUtilities.cc") 395)

(insn:HI 501 500 502 40 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0 [ x ])
        (reg/v:DF 278 [ x ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 499 (nil))
    (nil))

(call_insn/u:HI 502 501 503 40 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 501 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ x ]))
        (nil)))

(insn:HI 503 502 504 40 ./CppStatUtilities.cc:395 (set (reg:DF 279 [ D.34976 ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 502 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 504 503 505 40 ("./CppStatUtilities.cc") 397)

(insn:HI 505 504 506 40 ./CppStatUtilities.cc:397 (set (reg:SI 280)
        (fix:SI (reg:DF 279 [ D.34976 ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 503 (nil))
    (nil))

(insn:HI 506 505 507 40 ./CppStatUtilities.cc:397 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 280)
            (reg:SI 67 [ pretmp.736 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 505 (nil))
    (expr_list:REG_DEAD (reg:SI 280)
        (nil)))

(jump_insn:HI 507 506 524 40 ./CppStatUtilities.cc:397 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1807)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 506 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 278 279

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 278 279
(note:HI 524 507 511 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note:HI 511 524 512 41 ("./CppStatUtilities.cc") 395)

(insn:HI 512 511 513 41 ./CppStatUtilities.cc:395 (set (reg/v:DF 281 [ t ])
        (minus:DF (reg/v:DF 278 [ x ])
            (reg:DF 279 [ D.34976 ]))) 619 {*fop_df_1_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 279 [ D.34976 ])
        (nil)))

(note:HI 513 512 514 41 ("./CppStatUtilities.cc") 400)

(insn:HI 514 513 515 41 ./CppStatUtilities.cc:400 (set (reg:DF 284)
        (minus:DF (reg:DF 129)
            (reg/v:DF 281 [ t ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 512 (nil))
    (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
            (reg/v:DF 281 [ t ]))
        (nil)))

(insn:HI 515 514 516 41 ./CppStatUtilities.cc:400 (set (reg:SI 282)
        (fix:SI (reg/v:DF 278 [ x ]))) 145 {fix_truncdfsi_sse} (nil)
    (nil))

(insn:HI 516 515 517 41 ./CppStatUtilities.cc:400 (set (reg:DI 283)
        (sign_extend:DI (reg:SI 282))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 515 (nil))
    (expr_list:REG_DEAD (reg:SI 282)
        (nil)))

(insn:HI 517 516 518 41 ./CppStatUtilities.cc:400 (set (reg:DF 284)
        (mult:DF (reg:DF 284)
            (mem:DF (plus:DI (mult:DI (reg:DI 283)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 514 (insn_list:REG_DEP_TRUE 516 (nil)))
    (expr_list:REG_DEAD (reg:DI 283)
        (nil)))

(insn:HI 518 517 519 41 ./CppStatUtilities.cc:400 (set (reg/v:DF 278 [ x ])
        (plus:DF (reg/v:DF 278 [ x ])
            (reg:DF 129))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_EQUAL (plus:DF (reg/v:DF 278 [ x ])
            (const_double:DF 1.0e+0 [0x0.8p+1]))
        (nil)))

(insn:HI 519 518 520 41 ./CppStatUtilities.cc:400 (set (reg:SI 286)
        (fix:SI (reg/v:DF 278 [ x ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 518 (nil))
    (expr_list:REG_DEAD (reg/v:DF 278 [ x ])
        (nil)))

(insn:HI 520 519 521 41 ./CppStatUtilities.cc:400 (set (reg:DI 287)
        (sign_extend:DI (reg:SI 286))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 519 (nil))
    (expr_list:REG_DEAD (reg:SI 286)
        (nil)))

(insn:HI 521 520 522 41 ./CppStatUtilities.cc:400 (set (reg/v:DF 281 [ t ])
        (mult:DF (reg/v:DF 281 [ t ])
            (mem:DF (plus:DI (mult:DI (reg:DI 287)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 520 (nil))
    (expr_list:REG_DEAD (reg:DI 287)
        (nil)))

(insn:HI 522 521 523 41 ./CppStatUtilities.cc:400 (set (reg:DF 284)
        (plus:DF (reg:DF 284)
            (reg/v:DF 281 [ t ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 517 (insn_list:REG_DEP_TRUE 521 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 281 [ t ])
        (nil)))

(insn:HI 523 522 1809 41 ./CppStatUtilities.cc:400 (set (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 284)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 522 (nil))
    (expr_list:REG_DEAD (reg:DF 284)
        (nil)))

(jump_insn:HI 1809 523 1810 41 (set (pc)
        (label_ref 1808)) 548 {jump} (nil)
    (nil))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

(barrier:HI 1810 1809 530)

(note:HI 530 1810 1807 ("./CppStatUtilities.cc") 398)

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(code_label:HI 1807 530 528 42 679 "" [1 uses])

(note:HI 528 1807 526 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:HI 526 528 527 42 ./CppStatUtilities.cc:398 (set (reg:DF 291)
        (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])
        (nil)))

(insn:HI 527 526 1808 42 ./CppStatUtilities.cc:398 (set (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 291)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 526 (nil))
    (expr_list:REG_DEAD (reg:DF 291)
        (nil)))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(code_label:HI 1808 527 537 43 680 "" [1 uses])

(note:HI 537 1808 532 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(note:HI 532 537 533 43 ("./CppStatUtilities.cc") 392)

(insn:HI 533 532 534 43 ./CppStatUtilities.cc:392 (parallel [
            (set (reg/v:SI 247 [ k ])
                (plus:SI (reg/v:SI 247 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 534 533 1845 43 ./CppStatUtilities.cc:392 (parallel [
            (set (reg:DI 243 [ ivtmp.744 ])
                (plus:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(code_label:HI 1845 534 559 44 691 "" [1 uses])

(note:HI 559 1845 549 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(note:HI 549 559 550 44 ("./CppStatUtilities.cc") 394)

(insn:HI 550 549 551 44 ./CppStatUtilities.cc:394 (set (reg/v:DF 292 [ x ])
        (mult:DF (reg:DF 66 [ pretmp.737 ])
            (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 103 [ prob ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 551 550 552 44 ("./CppStatUtilities.cc") 395)

(insn:HI 552 551 553 44 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0 [ x ])
        (reg/v:DF 292 [ x ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 550 (nil))
    (nil))

(call_insn/u:HI 553 552 554 44 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 552 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ x ]))
        (nil)))

(insn:HI 554 553 555 44 ./CppStatUtilities.cc:395 (set (reg:DF 293 [ D.34976 ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 553 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 555 554 556 44 ("./CppStatUtilities.cc") 397)

(insn:HI 556 555 557 44 ./CppStatUtilities.cc:397 (set (reg:SI 294)
        (fix:SI (reg:DF 293 [ D.34976 ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 554 (nil))
    (nil))

(insn:HI 557 556 558 44 ./CppStatUtilities.cc:397 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 294)
            (reg:SI 67 [ pretmp.736 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 556 (nil))
    (expr_list:REG_DEAD (reg:SI 294)
        (nil)))

(jump_insn:HI 558 557 575 44 ./CppStatUtilities.cc:397 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1811)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 557 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 292 293

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247 292 293
(note:HI 575 558 562 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(note:HI 562 575 563 45 ("./CppStatUtilities.cc") 395)

(insn:HI 563 562 564 45 ./CppStatUtilities.cc:395 (set (reg/v:DF 295 [ t ])
        (minus:DF (reg/v:DF 292 [ x ])
            (reg:DF 293 [ D.34976 ]))) 619 {*fop_df_1_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 293 [ D.34976 ])
        (nil)))

(note:HI 564 563 565 45 ("./CppStatUtilities.cc") 400)

(insn:HI 565 564 566 45 ./CppStatUtilities.cc:400 (set (reg:DF 298)
        (minus:DF (reg:DF 129)
            (reg/v:DF 295 [ t ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 563 (nil))
    (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
            (reg/v:DF 295 [ t ]))
        (nil)))

(insn:HI 566 565 567 45 ./CppStatUtilities.cc:400 (set (reg:SI 296)
        (fix:SI (reg/v:DF 292 [ x ]))) 145 {fix_truncdfsi_sse} (nil)
    (nil))

(insn:HI 567 566 568 45 ./CppStatUtilities.cc:400 (set (reg:DI 297)
        (sign_extend:DI (reg:SI 296))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 566 (nil))
    (expr_list:REG_DEAD (reg:SI 296)
        (nil)))

(insn:HI 568 567 569 45 ./CppStatUtilities.cc:400 (set (reg:DF 298)
        (mult:DF (reg:DF 298)
            (mem:DF (plus:DI (mult:DI (reg:DI 297)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 565 (insn_list:REG_DEP_TRUE 567 (nil)))
    (expr_list:REG_DEAD (reg:DI 297)
        (nil)))

(insn:HI 569 568 570 45 ./CppStatUtilities.cc:400 (set (reg/v:DF 292 [ x ])
        (plus:DF (reg/v:DF 292 [ x ])
            (reg:DF 129))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_EQUAL (plus:DF (reg/v:DF 292 [ x ])
            (const_double:DF 1.0e+0 [0x0.8p+1]))
        (nil)))

(insn:HI 570 569 571 45 ./CppStatUtilities.cc:400 (set (reg:SI 300)
        (fix:SI (reg/v:DF 292 [ x ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 569 (nil))
    (expr_list:REG_DEAD (reg/v:DF 292 [ x ])
        (nil)))

(insn:HI 571 570 572 45 ./CppStatUtilities.cc:400 (set (reg:DI 301)
        (sign_extend:DI (reg:SI 300))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 570 (nil))
    (expr_list:REG_DEAD (reg:SI 300)
        (nil)))

(insn:HI 572 571 573 45 ./CppStatUtilities.cc:400 (set (reg/v:DF 295 [ t ])
        (mult:DF (reg/v:DF 295 [ t ])
            (mem:DF (plus:DI (mult:DI (reg:DI 301)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 571 (nil))
    (expr_list:REG_DEAD (reg:DI 301)
        (nil)))

(insn:HI 573 572 574 45 ./CppStatUtilities.cc:400 (set (reg:DF 298)
        (plus:DF (reg:DF 298)
            (reg/v:DF 295 [ t ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 568 (insn_list:REG_DEP_TRUE 572 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 295 [ t ])
        (nil)))

(insn:HI 574 573 1813 45 ./CppStatUtilities.cc:400 (set (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 298)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 573 (nil))
    (expr_list:REG_DEAD (reg:DF 298)
        (nil)))

(jump_insn:HI 1813 574 1814 45 (set (pc)
        (label_ref 1812)) 548 {jump} (nil)
    (nil))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

(barrier:HI 1814 1813 581)

(note:HI 581 1814 1811 ("./CppStatUtilities.cc") 398)

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(code_label:HI 1811 581 579 46 681 "" [1 uses])

(note:HI 579 1811 577 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn:HI 577 579 578 46 ./CppStatUtilities.cc:398 (set (reg:DF 305)
        (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])
        (nil)))

(insn:HI 578 577 1812 46 ./CppStatUtilities.cc:398 (set (mem:DF (plus:DI (mult:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 305)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 577 (nil))
    (expr_list:REG_DEAD (reg:DF 305)
        (nil)))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(code_label:HI 1812 578 588 47 682 "" [1 uses])

(note:HI 588 1812 583 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(note:HI 583 588 584 47 ("./CppStatUtilities.cc") 392)

(insn:HI 584 583 585 47 ./CppStatUtilities.cc:392 (parallel [
            (set (reg/v:SI 247 [ k ])
                (plus:SI (reg/v:SI 247 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 585 584 586 47 ./CppStatUtilities.cc:392 (parallel [
            (set (reg:DI 243 [ ivtmp.744 ])
                (plus:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 586 585 587 47 ./CppStatUtilities.cc:392 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 247 [ k ])
            (reg/v:SI 104 [ probLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 584 (nil))
    (nil))

(jump_insn:HI 587 586 594 47 ./CppStatUtilities.cc:392 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 340)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 586 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(note:HI 594 587 1815 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1815 594 1816 48 (set (pc)
        (label_ref 297)) 548 {jump} (nil)
    (nil))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

(barrier:HI 1816 1815 333)

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(code_label:HI 333 1816 334 49 578 "" [2 uses])

(note:HI 334 333 335 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note:HI 335 334 737 49 ("./CppStatUtilities.cc") 392)

(insn:HI 737 335 738 49 ./CppStatUtilities.cc:392 (parallel [
            (set (reg:SI 155)
                (plus:SI (reg/v:SI 247 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 247 [ k ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 738 737 600 49 ./CppStatUtilities.cc:392 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg:DI 243 [ ivtmp.744 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 243 [ ivtmp.744 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 600 738 601 49 ("./CppStatUtilities.cc") 394)

(insn:HI 601 600 602 49 ./CppStatUtilities.cc:394 (set (reg/v:DF 250 [ x ])
        (mult:DF (reg:DF 66 [ pretmp.737 ])
            (mem:DF (plus:DI (mult:DI (reg:DI 154)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 103 [ prob ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 738 (nil))
    (nil))

(note:HI 602 601 603 49 ("./CppStatUtilities.cc") 395)

(insn:HI 603 602 604 49 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0 [ x ])
        (reg/v:DF 250 [ x ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 601 (nil))
    (nil))

(call_insn/u:HI 604 603 605 49 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 603 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ x ]))
        (nil)))

(insn:HI 605 604 606 49 ./CppStatUtilities.cc:395 (set (reg:DF 251 [ D.34976 ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 604 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 606 605 607 49 ("./CppStatUtilities.cc") 397)

(insn:HI 607 606 608 49 ./CppStatUtilities.cc:397 (set (reg:SI 252)
        (fix:SI (reg:DF 251 [ D.34976 ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 605 (nil))
    (nil))

(insn:HI 608 607 609 49 ./CppStatUtilities.cc:397 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 252)
            (reg:SI 67 [ pretmp.736 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 607 (nil))
    (expr_list:REG_DEAD (reg:SI 252)
        (nil)))

(jump_insn:HI 609 608 626 49 ./CppStatUtilities.cc:397 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1817)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 608 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 49, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 250 251

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 250 251
(note:HI 626 609 613 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(note:HI 613 626 614 50 ("./CppStatUtilities.cc") 395)

(insn:HI 614 613 615 50 ./CppStatUtilities.cc:395 (set (reg/v:DF 306 [ t ])
        (minus:DF (reg/v:DF 250 [ x ])
            (reg:DF 251 [ D.34976 ]))) 619 {*fop_df_1_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 251 [ D.34976 ])
        (nil)))

(note:HI 615 614 616 50 ("./CppStatUtilities.cc") 400)

(insn:HI 616 615 617 50 ./CppStatUtilities.cc:400 (set (reg:DF 309)
        (minus:DF (reg:DF 129)
            (reg/v:DF 306 [ t ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 614 (nil))
    (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
            (reg/v:DF 306 [ t ]))
        (nil)))

(insn:HI 617 616 618 50 ./CppStatUtilities.cc:400 (set (reg:SI 307)
        (fix:SI (reg/v:DF 250 [ x ]))) 145 {fix_truncdfsi_sse} (nil)
    (nil))

(insn:HI 618 617 619 50 ./CppStatUtilities.cc:400 (set (reg:DI 308)
        (sign_extend:DI (reg:SI 307))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 617 (nil))
    (expr_list:REG_DEAD (reg:SI 307)
        (nil)))

(insn:HI 619 618 620 50 ./CppStatUtilities.cc:400 (set (reg:DF 309)
        (mult:DF (reg:DF 309)
            (mem:DF (plus:DI (mult:DI (reg:DI 308)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 616 (insn_list:REG_DEP_TRUE 618 (nil)))
    (expr_list:REG_DEAD (reg:DI 308)
        (nil)))

(insn:HI 620 619 621 50 ./CppStatUtilities.cc:400 (set (reg/v:DF 250 [ x ])
        (plus:DF (reg/v:DF 250 [ x ])
            (reg:DF 129))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_EQUAL (plus:DF (reg/v:DF 250 [ x ])
            (const_double:DF 1.0e+0 [0x0.8p+1]))
        (nil)))

(insn:HI 621 620 622 50 ./CppStatUtilities.cc:400 (set (reg:SI 311)
        (fix:SI (reg/v:DF 250 [ x ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 620 (nil))
    (expr_list:REG_DEAD (reg/v:DF 250 [ x ])
        (nil)))

(insn:HI 622 621 623 50 ./CppStatUtilities.cc:400 (set (reg:DI 312)
        (sign_extend:DI (reg:SI 311))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 621 (nil))
    (expr_list:REG_DEAD (reg:SI 311)
        (nil)))

(insn:HI 623 622 624 50 ./CppStatUtilities.cc:400 (set (reg/v:DF 306 [ t ])
        (mult:DF (reg/v:DF 306 [ t ])
            (mem:DF (plus:DI (mult:DI (reg:DI 312)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 622 (nil))
    (expr_list:REG_DEAD (reg:DI 312)
        (nil)))

(insn:HI 624 623 625 50 ./CppStatUtilities.cc:400 (set (reg:DF 309)
        (plus:DF (reg:DF 309)
            (reg/v:DF 306 [ t ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 619 (insn_list:REG_DEP_TRUE 623 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 306 [ t ])
        (nil)))

(insn:HI 625 624 1819 50 ./CppStatUtilities.cc:400 (set (mem:DF (plus:DI (mult:DI (reg:DI 154)
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 309)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 624 (nil))
    (expr_list:REG_DEAD (reg:DF 309)
        (nil)))

(jump_insn:HI 1819 625 1820 50 (set (pc)
        (label_ref 1818)) 548 {jump} (nil)
    (nil))
;; End of basic block 50, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

(barrier:HI 1820 1819 632)

(note:HI 632 1820 1817 ("./CppStatUtilities.cc") 398)

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155
(code_label:HI 1817 632 630 51 683 "" [1 uses])

(note:HI 630 1817 628 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn:HI 628 630 629 51 ./CppStatUtilities.cc:398 (set (reg:DF 316)
        (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])
        (nil)))

(insn:HI 629 628 1818 51 ./CppStatUtilities.cc:398 (set (mem:DF (plus:DI (mult:DI (reg:DI 154)
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 316)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 628 (nil))
    (expr_list:REG_DEAD (reg:DF 316)
        (nil)))
;; End of basic block 51, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155
(code_label:HI 1818 629 639 52 684 "" [1 uses])

(note:HI 639 1818 634 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(note:HI 634 639 636 52 ("./CppStatUtilities.cc") 392)

(insn:HI 636 634 646 52 ./CppStatUtilities.cc:392 (parallel [
            (set (reg:DI 318 [ ivtmp.744 ])
                (plus:DI (reg:DI 154)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 646 636 647 52 ("./CppStatUtilities.cc") 394)

(insn:HI 647 646 648 52 ./CppStatUtilities.cc:394 (set (reg/v:DF 319 [ x ])
        (mult:DF (reg:DF 66 [ pretmp.737 ])
            (mem:DF (plus:DI (mult:DI (reg:DI 318 [ ivtmp.744 ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 103 [ prob ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 636 (nil))
    (nil))

(note:HI 648 647 649 52 ("./CppStatUtilities.cc") 395)

(insn:HI 649 648 650 52 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0 [ x ])
        (reg/v:DF 319 [ x ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 647 (nil))
    (nil))

(call_insn/u:HI 650 649 651 52 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 649 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ x ]))
        (nil)))

(insn:HI 651 650 652 52 ./CppStatUtilities.cc:395 (set (reg:DF 320 [ D.34976 ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 650 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 652 651 653 52 ("./CppStatUtilities.cc") 397)

(insn:HI 653 652 654 52 ./CppStatUtilities.cc:397 (set (reg:SI 321)
        (fix:SI (reg:DF 320 [ D.34976 ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 651 (nil))
    (nil))

(insn:HI 654 653 655 52 ./CppStatUtilities.cc:397 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 321)
            (reg:SI 67 [ pretmp.736 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 653 (nil))
    (expr_list:REG_DEAD (reg:SI 321)
        (nil)))

(jump_insn:HI 655 654 672 52 ./CppStatUtilities.cc:397 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1821)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 654 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 52, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 318 319 320

;; Start of basic block 53, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 318 319 320
(note:HI 672 655 659 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(note:HI 659 672 660 53 ("./CppStatUtilities.cc") 395)

(insn:HI 660 659 661 53 ./CppStatUtilities.cc:395 (set (reg/v:DF 322 [ t ])
        (minus:DF (reg/v:DF 319 [ x ])
            (reg:DF 320 [ D.34976 ]))) 619 {*fop_df_1_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 320 [ D.34976 ])
        (nil)))

(note:HI 661 660 662 53 ("./CppStatUtilities.cc") 400)

(insn:HI 662 661 663 53 ./CppStatUtilities.cc:400 (set (reg:DF 325)
        (minus:DF (reg:DF 129)
            (reg/v:DF 322 [ t ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 660 (nil))
    (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
            (reg/v:DF 322 [ t ]))
        (nil)))

(insn:HI 663 662 664 53 ./CppStatUtilities.cc:400 (set (reg:SI 323)
        (fix:SI (reg/v:DF 319 [ x ]))) 145 {fix_truncdfsi_sse} (nil)
    (nil))

(insn:HI 664 663 665 53 ./CppStatUtilities.cc:400 (set (reg:DI 324)
        (sign_extend:DI (reg:SI 323))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 663 (nil))
    (expr_list:REG_DEAD (reg:SI 323)
        (nil)))

(insn:HI 665 664 666 53 ./CppStatUtilities.cc:400 (set (reg:DF 325)
        (mult:DF (reg:DF 325)
            (mem:DF (plus:DI (mult:DI (reg:DI 324)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 662 (insn_list:REG_DEP_TRUE 664 (nil)))
    (expr_list:REG_DEAD (reg:DI 324)
        (nil)))

(insn:HI 666 665 667 53 ./CppStatUtilities.cc:400 (set (reg/v:DF 319 [ x ])
        (plus:DF (reg/v:DF 319 [ x ])
            (reg:DF 129))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_EQUAL (plus:DF (reg/v:DF 319 [ x ])
            (const_double:DF 1.0e+0 [0x0.8p+1]))
        (nil)))

(insn:HI 667 666 668 53 ./CppStatUtilities.cc:400 (set (reg:SI 327)
        (fix:SI (reg/v:DF 319 [ x ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 666 (nil))
    (expr_list:REG_DEAD (reg/v:DF 319 [ x ])
        (nil)))

(insn:HI 668 667 669 53 ./CppStatUtilities.cc:400 (set (reg:DI 328)
        (sign_extend:DI (reg:SI 327))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 667 (nil))
    (expr_list:REG_DEAD (reg:SI 327)
        (nil)))

(insn:HI 669 668 670 53 ./CppStatUtilities.cc:400 (set (reg/v:DF 322 [ t ])
        (mult:DF (reg/v:DF 322 [ t ])
            (mem:DF (plus:DI (mult:DI (reg:DI 328)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 668 (nil))
    (expr_list:REG_DEAD (reg:DI 328)
        (nil)))

(insn:HI 670 669 671 53 ./CppStatUtilities.cc:400 (set (reg:DF 325)
        (plus:DF (reg:DF 325)
            (reg/v:DF 322 [ t ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 665 (insn_list:REG_DEP_TRUE 669 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 322 [ t ])
        (nil)))

(insn:HI 671 670 1823 53 ./CppStatUtilities.cc:400 (set (mem:DF (plus:DI (mult:DI (reg:DI 318 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 325)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 670 (nil))
    (expr_list:REG_DEAD (reg:DF 325)
        (expr_list:REG_DEAD (reg:DI 318 [ ivtmp.744 ])
            (nil))))

(jump_insn:HI 1823 671 1824 53 (set (pc)
        (label_ref 1822)) 548 {jump} (nil)
    (nil))
;; End of basic block 53, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

(barrier:HI 1824 1823 678)

(note:HI 678 1824 1821 ("./CppStatUtilities.cc") 398)

;; Start of basic block 54, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 318
(code_label:HI 1821 678 676 54 685 "" [1 uses])

(note:HI 676 1821 674 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn:HI 674 676 675 54 ./CppStatUtilities.cc:398 (set (reg:DF 332)
        (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])
        (nil)))

(insn:HI 675 674 1822 54 ./CppStatUtilities.cc:398 (set (mem:DF (plus:DI (mult:DI (reg:DI 318 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 332)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 674 (nil))
    (expr_list:REG_DEAD (reg:DF 332)
        (expr_list:REG_DEAD (reg:DI 318 [ ivtmp.744 ])
            (nil))))
;; End of basic block 54, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

;; Start of basic block 55, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155
(code_label:HI 1822 675 685 55 686 "" [1 uses])

(note:HI 685 1822 680 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(note:HI 680 685 682 55 ("./CppStatUtilities.cc") 392)

(insn:HI 682 680 692 55 ./CppStatUtilities.cc:392 (parallel [
            (set (reg:DI 334 [ ivtmp.744 ])
                (plus:DI (reg:DI 154)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 692 682 693 55 ("./CppStatUtilities.cc") 394)

(insn:HI 693 692 694 55 ./CppStatUtilities.cc:394 (set (reg/v:DF 335 [ x ])
        (mult:DF (reg:DF 66 [ pretmp.737 ])
            (mem:DF (plus:DI (mult:DI (reg:DI 334 [ ivtmp.744 ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 103 [ prob ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 682 (nil))
    (nil))

(note:HI 694 693 695 55 ("./CppStatUtilities.cc") 395)

(insn:HI 695 694 696 55 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0 [ x ])
        (reg/v:DF 335 [ x ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 693 (nil))
    (nil))

(call_insn/u:HI 696 695 697 55 ./CppStatUtilities.cc:395 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("floor") [flags 0x41] <function_decl 0x2b5eb3c39300 floor>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 695 (nil))
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0 [ x ]))
        (nil)))

(insn:HI 697 696 698 55 ./CppStatUtilities.cc:395 (set (reg:DF 336 [ D.34976 ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 696 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 698 697 699 55 ("./CppStatUtilities.cc") 397)

(insn:HI 699 698 700 55 ./CppStatUtilities.cc:397 (set (reg:SI 337)
        (fix:SI (reg:DF 336 [ D.34976 ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 697 (nil))
    (nil))

(insn:HI 700 699 701 55 ./CppStatUtilities.cc:397 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 337)
            (reg:SI 67 [ pretmp.736 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 699 (nil))
    (expr_list:REG_DEAD (reg:SI 337)
        (nil)))

(jump_insn:HI 701 700 718 55 ./CppStatUtilities.cc:397 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1825)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 700 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 55, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 334 335 336

;; Start of basic block 56, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 334 335 336
(note:HI 718 701 705 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(note:HI 705 718 706 56 ("./CppStatUtilities.cc") 395)

(insn:HI 706 705 707 56 ./CppStatUtilities.cc:395 (set (reg/v:DF 338 [ t ])
        (minus:DF (reg/v:DF 335 [ x ])
            (reg:DF 336 [ D.34976 ]))) 619 {*fop_df_1_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 336 [ D.34976 ])
        (nil)))

(note:HI 707 706 708 56 ("./CppStatUtilities.cc") 400)

(insn:HI 708 707 709 56 ./CppStatUtilities.cc:400 (set (reg:DF 341)
        (minus:DF (reg:DF 129)
            (reg/v:DF 338 [ t ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 706 (nil))
    (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
            (reg/v:DF 338 [ t ]))
        (nil)))

(insn:HI 709 708 710 56 ./CppStatUtilities.cc:400 (set (reg:SI 339)
        (fix:SI (reg/v:DF 335 [ x ]))) 145 {fix_truncdfsi_sse} (nil)
    (nil))

(insn:HI 710 709 711 56 ./CppStatUtilities.cc:400 (set (reg:DI 340)
        (sign_extend:DI (reg:SI 339))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 709 (nil))
    (expr_list:REG_DEAD (reg:SI 339)
        (nil)))

(insn:HI 711 710 712 56 ./CppStatUtilities.cc:400 (set (reg:DF 341)
        (mult:DF (reg:DF 341)
            (mem:DF (plus:DI (mult:DI (reg:DI 340)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 708 (insn_list:REG_DEP_TRUE 710 (nil)))
    (expr_list:REG_DEAD (reg:DI 340)
        (nil)))

(insn:HI 712 711 713 56 ./CppStatUtilities.cc:400 (set (reg/v:DF 335 [ x ])
        (plus:DF (reg/v:DF 335 [ x ])
            (reg:DF 129))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_EQUAL (plus:DF (reg/v:DF 335 [ x ])
            (const_double:DF 1.0e+0 [0x0.8p+1]))
        (nil)))

(insn:HI 713 712 714 56 ./CppStatUtilities.cc:400 (set (reg:SI 343)
        (fix:SI (reg/v:DF 335 [ x ]))) 145 {fix_truncdfsi_sse} (insn_list:REG_DEP_TRUE 712 (nil))
    (expr_list:REG_DEAD (reg/v:DF 335 [ x ])
        (nil)))

(insn:HI 714 713 715 56 ./CppStatUtilities.cc:400 (set (reg:DI 344)
        (sign_extend:DI (reg:SI 343))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 713 (nil))
    (expr_list:REG_DEAD (reg:SI 343)
        (nil)))

(insn:HI 715 714 716 56 ./CppStatUtilities.cc:400 (set (reg/v:DF 338 [ t ])
        (mult:DF (reg/v:DF 338 [ t ])
            (mem:DF (plus:DI (mult:DI (reg:DI 344)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 81 [ b ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 714 (nil))
    (expr_list:REG_DEAD (reg:DI 344)
        (nil)))

(insn:HI 716 715 717 56 ./CppStatUtilities.cc:400 (set (reg:DF 341)
        (plus:DF (reg:DF 341)
            (reg/v:DF 338 [ t ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 711 (insn_list:REG_DEP_TRUE 715 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 338 [ t ])
        (nil)))

(insn:HI 717 716 1827 56 ./CppStatUtilities.cc:400 (set (mem:DF (plus:DI (mult:DI (reg:DI 334 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 341)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 716 (nil))
    (expr_list:REG_DEAD (reg:DF 341)
        (expr_list:REG_DEAD (reg:DI 334 [ ivtmp.744 ])
            (nil))))

(jump_insn:HI 1827 717 1828 56 (set (pc)
        (label_ref 1826)) 548 {jump} (nil)
    (nil))
;; End of basic block 56, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

(barrier:HI 1828 1827 724)

(note:HI 724 1828 1825 ("./CppStatUtilities.cc") 398)

;; Start of basic block 57, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155 334
(code_label:HI 1825 724 722 57 687 "" [1 uses])

(note:HI 722 1825 720 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn:HI 720 722 721 57 ./CppStatUtilities.cc:398 (set (reg:DF 348)
        (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (plus:DI (reg/v/f:DI 81 [ b ])
                    (reg:DI 86 [ D.34928 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])
        (nil)))

(insn:HI 721 720 1826 57 ./CppStatUtilities.cc:398 (set (mem:DF (plus:DI (mult:DI (reg:DI 334 [ ivtmp.744 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 125)) [3 S8 A64])
        (reg:DF 348)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 720 (nil))
    (expr_list:REG_DEAD (reg:DF 348)
        (expr_list:REG_DEAD (reg:DI 334 [ ivtmp.744 ])
            (nil))))
;; End of basic block 57, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155

;; Start of basic block 58, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 154 155
(code_label:HI 1826 721 731 58 688 "" [1 uses])

(note:HI 731 1826 726 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(note:HI 726 731 727 58 ("./CppStatUtilities.cc") 392)

(insn:HI 727 726 728 58 ./CppStatUtilities.cc:392 (parallel [
            (set (reg/v:SI 247 [ k ])
                (plus:SI (reg:SI 155)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 155)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 728 727 729 58 ./CppStatUtilities.cc:392 (parallel [
            (set (reg:DI 243 [ ivtmp.744 ])
                (plus:DI (reg:DI 154)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 154)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 729 728 730 58 ./CppStatUtilities.cc:392 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 247 [ k ])
            (reg/v:SI 104 [ probLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 727 (nil))
    (nil))

(jump_insn:HI 730 729 734 58 ./CppStatUtilities.cc:392 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 340)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 729 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 58, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

;; Start of basic block 59, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247
(note:HI 734 730 1829 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1829 734 1830 59 (set (pc)
        (label_ref 297)) 548 {jump} (nil)
    (nil))
;; End of basic block 59, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 81 86 103 104 125 129 243 247

(barrier:HI 1830 1829 234)

;; Start of basic block 60, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104
(code_label:HI 234 1830 235 60 568 "" [1 uses])

(note:HI 235 234 745 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(note:HI 745 235 746 60 NOTE_INSN_DELETED)

(insn:HI 746 745 747 60 (parallel [
            (set (reg:SI 158)
                (plus:SI (reg/v:SI 82 [ sampleSize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 747 746 750 60 (parallel [
            (set (reg:SI 158)
                (and:SI (reg:SI 158)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 746 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 750 747 751 60 ("./CppStatUtilities.cc") 384)

(call_insn:HI 751 750 752 60 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 752 751 753 60 ./CppStatUtilities.cc:384 (set (reg:SI 85 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 751 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 753 752 754 60 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 120)
                (div:SI (reg:SI 85 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 119)
                (mod:SI (reg:SI 85 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 752 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 120)
            (expr_list:REG_DEAD (reg:SI 85 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 120)
                        (nil)))))))

(insn:HI 754 753 755 60 ./CppStatUtilities.cc:384 (set (reg:DI 121)
        (sign_extend:DI (reg:SI 119))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 753 (nil))
    (expr_list:REG_DEAD (reg:SI 119)
        (nil)))

(insn:HI 755 754 756 60 ./CppStatUtilities.cc:384 (set (reg:DF 122)
        (mem:DF (plus:DI (mult:DI (reg:DI 121)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 754 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 63 [ ivtmp.758 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 121)
            (nil))))

(insn:HI 756 755 757 60 ./CppStatUtilities.cc:384 (set (mem:DF (reg/f:DI 63 [ ivtmp.758 ]) [3 S8 A64])
        (reg:DF 122)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 755 (nil))
    (expr_list:REG_DEAD (reg:DF 122)
        (nil)))

(note:HI 757 756 758 60 ("./CppStatUtilities.cc") 383)

(insn:HI 758 757 759 60 ./CppStatUtilities.cc:383 (set (reg/v:SI 195 [ k ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 759 758 760 60 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/f:DI 200 [ ivtmp.758 ])
                (plus:DI (reg/f:DI 63 [ ivtmp.758 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 760 759 761 60 ./CppStatUtilities.cc:383 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 195 [ k ])
            (reg/v:SI 82 [ sampleSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 758 (nil))
    (nil))

(jump_insn:HI 761 760 936 60 ./CppStatUtilities.cc:383 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 251)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 760 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 60, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

;; Start of basic block 61, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
(note:HI 936 761 934 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn:HI 934 936 935 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 935 934 912 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 237)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 934 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 61, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

;; Start of basic block 62, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
(note:HI 912 935 910 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn:HI 910 912 911 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 911 910 888 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1847)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 910 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 62, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

;; Start of basic block 63, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
(note:HI 888 911 886 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn:HI 886 888 887 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 887 886 864 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1848)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 886 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 63, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

;; Start of basic block 64, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
(note:HI 864 887 862 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn:HI 862 864 863 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 863 862 840 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1849)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 862 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 64, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

;; Start of basic block 65, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
(note:HI 840 863 838 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn:HI 838 840 839 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 839 838 816 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1850)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 838 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 65, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

;; Start of basic block 66, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
(note:HI 816 839 814 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn:HI 814 816 815 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 815 814 792 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1851)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 814 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 66, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200

;; Start of basic block 67, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 158 195 200
(note:HI 792 815 790 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn:HI 790 792 791 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(jump_insn:HI 791 790 782 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1852)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 790 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 67, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104 195 200

;; Start of basic block 68, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 102 103 104
(note:HI 782 791 770 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(note:HI 770 782 771 68 ("./CppStatUtilities.cc") 384)

(call_insn:HI 771 770 772 68 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 772 771 773 68 ./CppStatUtilities.cc:384 (set (reg:SI 349 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 771 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 773 772 774 68 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 413)
                (div:SI (reg:SI 349 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 350)
                (mod:SI (reg:SI 349 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 772 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 413)
            (expr_list:REG_DEAD (reg:SI 349 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 413)
                        (nil)))))))

(insn:HI 774 773 775 68 ./CppStatUtilities.cc:384 (set (reg:DI 351)
        (sign_extend:DI (reg:SI 350))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 773 (nil))
    (expr_list:REG_DEAD (reg:SI 350)
        (nil)))

(insn:HI 775 774 776 68 ./CppStatUtilities.cc:384 (set (reg:DF 352)
        (mem:DF (plus:DI (mult:DI (reg:DI 351)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 774 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 63 [ ivtmp.758 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 351)
            (nil))))

(insn:HI 776 775 777 68 ./CppStatUtilities.cc:384 (set (mem:DF (plus:DI (reg/f:DI 63 [ ivtmp.758 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 352)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 775 (nil))
    (expr_list:REG_DEAD (reg:DF 352)
        (nil)))

(note:HI 777 776 778 68 ("./CppStatUtilities.cc") 383)

(insn:HI 778 777 779 68 ./CppStatUtilities.cc:383 (set (reg/v:SI 195 [ k ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 779 778 1852 68 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/f:DI 200 [ ivtmp.758 ])
                (plus:DI (reg/f:DI 63 [ ivtmp.758 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 63 [ ivtmp.758 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 68, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

;; Start of basic block 69, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
(code_label:HI 1852 779 806 69 698 "" [1 uses])

(note:HI 806 1852 794 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(note:HI 794 806 795 69 ("./CppStatUtilities.cc") 384)

(call_insn:HI 795 794 796 69 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 796 795 797 69 ./CppStatUtilities.cc:384 (set (reg:SI 353 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 795 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 797 796 798 69 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 414)
                (div:SI (reg:SI 353 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 354)
                (mod:SI (reg:SI 353 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 796 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 414)
            (expr_list:REG_DEAD (reg:SI 353 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 414)
                        (nil)))))))

(insn:HI 798 797 799 69 ./CppStatUtilities.cc:384 (set (reg:DI 355)
        (sign_extend:DI (reg:SI 354))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 797 (nil))
    (expr_list:REG_DEAD (reg:SI 354)
        (nil)))

(insn:HI 799 798 800 69 ./CppStatUtilities.cc:384 (set (reg:DF 356)
        (mem:DF (plus:DI (mult:DI (reg:DI 355)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 798 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 355)
            (nil))))

(insn:HI 800 799 801 69 ./CppStatUtilities.cc:384 (set (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (reg:DF 356)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 799 (nil))
    (expr_list:REG_DEAD (reg:DF 356)
        (nil)))

(note:HI 801 800 802 69 ("./CppStatUtilities.cc") 383)

(insn:HI 802 801 803 69 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/v:SI 195 [ k ])
                (plus:SI (reg/v:SI 195 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 803 802 1851 69 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/f:DI 200 [ ivtmp.758 ])
                (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 69, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

;; Start of basic block 70, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
(code_label:HI 1851 803 830 70 697 "" [1 uses])

(note:HI 830 1851 818 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(note:HI 818 830 819 70 ("./CppStatUtilities.cc") 384)

(call_insn:HI 819 818 820 70 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 820 819 821 70 ./CppStatUtilities.cc:384 (set (reg:SI 357 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 819 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 821 820 822 70 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 415)
                (div:SI (reg:SI 357 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 358)
                (mod:SI (reg:SI 357 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 820 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 415)
            (expr_list:REG_DEAD (reg:SI 357 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 415)
                        (nil)))))))

(insn:HI 822 821 823 70 ./CppStatUtilities.cc:384 (set (reg:DI 359)
        (sign_extend:DI (reg:SI 358))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 821 (nil))
    (expr_list:REG_DEAD (reg:SI 358)
        (nil)))

(insn:HI 823 822 824 70 ./CppStatUtilities.cc:384 (set (reg:DF 360)
        (mem:DF (plus:DI (mult:DI (reg:DI 359)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 822 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 359)
            (nil))))

(insn:HI 824 823 825 70 ./CppStatUtilities.cc:384 (set (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (reg:DF 360)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 823 (nil))
    (expr_list:REG_DEAD (reg:DF 360)
        (nil)))

(note:HI 825 824 826 70 ("./CppStatUtilities.cc") 383)

(insn:HI 826 825 827 70 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/v:SI 195 [ k ])
                (plus:SI (reg/v:SI 195 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 827 826 1850 70 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/f:DI 200 [ ivtmp.758 ])
                (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 70, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

;; Start of basic block 71, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
(code_label:HI 1850 827 854 71 696 "" [1 uses])

(note:HI 854 1850 842 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(note:HI 842 854 843 71 ("./CppStatUtilities.cc") 384)

(call_insn:HI 843 842 844 71 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 844 843 845 71 ./CppStatUtilities.cc:384 (set (reg:SI 361 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 843 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 845 844 846 71 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 416)
                (div:SI (reg:SI 361 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 362)
                (mod:SI (reg:SI 361 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 844 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 416)
            (expr_list:REG_DEAD (reg:SI 361 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 416)
                        (nil)))))))

(insn:HI 846 845 847 71 ./CppStatUtilities.cc:384 (set (reg:DI 363)
        (sign_extend:DI (reg:SI 362))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 845 (nil))
    (expr_list:REG_DEAD (reg:SI 362)
        (nil)))

(insn:HI 847 846 848 71 ./CppStatUtilities.cc:384 (set (reg:DF 364)
        (mem:DF (plus:DI (mult:DI (reg:DI 363)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 846 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 363)
            (nil))))

(insn:HI 848 847 849 71 ./CppStatUtilities.cc:384 (set (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (reg:DF 364)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 847 (nil))
    (expr_list:REG_DEAD (reg:DF 364)
        (nil)))

(note:HI 849 848 850 71 ("./CppStatUtilities.cc") 383)

(insn:HI 850 849 851 71 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/v:SI 195 [ k ])
                (plus:SI (reg/v:SI 195 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 851 850 1849 71 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/f:DI 200 [ ivtmp.758 ])
                (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 71, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

;; Start of basic block 72, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
(code_label:HI 1849 851 878 72 695 "" [1 uses])

(note:HI 878 1849 866 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(note:HI 866 878 867 72 ("./CppStatUtilities.cc") 384)

(call_insn:HI 867 866 868 72 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 868 867 869 72 ./CppStatUtilities.cc:384 (set (reg:SI 365 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 867 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 869 868 870 72 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 417)
                (div:SI (reg:SI 365 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 366)
                (mod:SI (reg:SI 365 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 868 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 417)
            (expr_list:REG_DEAD (reg:SI 365 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 417)
                        (nil)))))))

(insn:HI 870 869 871 72 ./CppStatUtilities.cc:384 (set (reg:DI 367)
        (sign_extend:DI (reg:SI 366))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 869 (nil))
    (expr_list:REG_DEAD (reg:SI 366)
        (nil)))

(insn:HI 871 870 872 72 ./CppStatUtilities.cc:384 (set (reg:DF 368)
        (mem:DF (plus:DI (mult:DI (reg:DI 367)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 870 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 367)
            (nil))))

(insn:HI 872 871 873 72 ./CppStatUtilities.cc:384 (set (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (reg:DF 368)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 871 (nil))
    (expr_list:REG_DEAD (reg:DF 368)
        (nil)))

(note:HI 873 872 874 72 ("./CppStatUtilities.cc") 383)

(insn:HI 874 873 875 72 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/v:SI 195 [ k ])
                (plus:SI (reg/v:SI 195 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 875 874 1848 72 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/f:DI 200 [ ivtmp.758 ])
                (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 72, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

;; Start of basic block 73, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
(code_label:HI 1848 875 902 73 694 "" [1 uses])

(note:HI 902 1848 890 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(note:HI 890 902 891 73 ("./CppStatUtilities.cc") 384)

(call_insn:HI 891 890 892 73 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 892 891 893 73 ./CppStatUtilities.cc:384 (set (reg:SI 369 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 891 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 893 892 894 73 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 418)
                (div:SI (reg:SI 369 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 370)
                (mod:SI (reg:SI 369 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 892 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 418)
            (expr_list:REG_DEAD (reg:SI 369 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 418)
                        (nil)))))))

(insn:HI 894 893 895 73 ./CppStatUtilities.cc:384 (set (reg:DI 371)
        (sign_extend:DI (reg:SI 370))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 893 (nil))
    (expr_list:REG_DEAD (reg:SI 370)
        (nil)))

(insn:HI 895 894 896 73 ./CppStatUtilities.cc:384 (set (reg:DF 372)
        (mem:DF (plus:DI (mult:DI (reg:DI 371)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 894 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 371)
            (nil))))

(insn:HI 896 895 897 73 ./CppStatUtilities.cc:384 (set (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (reg:DF 372)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 895 (nil))
    (expr_list:REG_DEAD (reg:DF 372)
        (nil)))

(note:HI 897 896 898 73 ("./CppStatUtilities.cc") 383)

(insn:HI 898 897 899 73 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/v:SI 195 [ k ])
                (plus:SI (reg/v:SI 195 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 899 898 1847 73 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/f:DI 200 [ ivtmp.758 ])
                (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 73, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

;; Start of basic block 74, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
(code_label:HI 1847 899 926 74 693 "" [1 uses])

(note:HI 926 1847 914 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(note:HI 914 926 915 74 ("./CppStatUtilities.cc") 384)

(call_insn:HI 915 914 916 74 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 916 915 917 74 ./CppStatUtilities.cc:384 (set (reg:SI 373 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 915 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 917 916 918 74 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 419)
                (div:SI (reg:SI 373 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 374)
                (mod:SI (reg:SI 373 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 916 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 419)
            (expr_list:REG_DEAD (reg:SI 373 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 419)
                        (nil)))))))

(insn:HI 918 917 919 74 ./CppStatUtilities.cc:384 (set (reg:DI 375)
        (sign_extend:DI (reg:SI 374))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 917 (nil))
    (expr_list:REG_DEAD (reg:SI 374)
        (nil)))

(insn:HI 919 918 920 74 ./CppStatUtilities.cc:384 (set (reg:DF 376)
        (mem:DF (plus:DI (mult:DI (reg:DI 375)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 918 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 375)
            (nil))))

(insn:HI 920 919 921 74 ./CppStatUtilities.cc:384 (set (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (reg:DF 376)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 919 (nil))
    (expr_list:REG_DEAD (reg:DF 376)
        (nil)))

(note:HI 921 920 922 74 ("./CppStatUtilities.cc") 383)

(insn:HI 922 921 923 74 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/v:SI 195 [ k ])
                (plus:SI (reg/v:SI 195 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 923 922 924 74 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/f:DI 200 [ ivtmp.758 ])
                (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 924 923 925 74 ./CppStatUtilities.cc:383 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 195 [ k ])
            (reg/v:SI 82 [ sampleSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 922 (nil))
    (nil))

(jump_insn:HI 925 924 237 74 ./CppStatUtilities.cc:383 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 251)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 924 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 74, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

;; Start of basic block 75, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
(code_label:HI 237 925 238 75 570 "" [2 uses])

(note:HI 238 237 239 75 [bb 75] NOTE_INSN_BASIC_BLOCK)

(note:HI 239 238 240 75 ("./CppStatUtilities.cc") 384)

(call_insn:HI 240 239 241 75 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 241 240 242 75 ./CppStatUtilities.cc:384 (set (reg:SI 196 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 240 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 242 241 243 75 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 405)
                (div:SI (reg:SI 196 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 197)
                (mod:SI (reg:SI 196 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 241 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 405)
            (expr_list:REG_DEAD (reg:SI 196 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 405)
                        (nil)))))))

(insn:HI 243 242 244 75 ./CppStatUtilities.cc:384 (set (reg:DI 198)
        (sign_extend:DI (reg:SI 197))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 242 (nil))
    (expr_list:REG_DEAD (reg:SI 197)
        (nil)))

(insn:HI 244 243 245 75 ./CppStatUtilities.cc:384 (set (reg:DF 199)
        (mem:DF (plus:DI (mult:DI (reg:DI 198)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 243 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 198)
            (nil))))

(insn:HI 245 244 246 75 ./CppStatUtilities.cc:384 (set (mem:DF (reg/f:DI 200 [ ivtmp.758 ]) [3 S8 A64])
        (reg:DF 199)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 244 (nil))
    (expr_list:REG_DEAD (reg:DF 199)
        (nil)))

(note:HI 246 245 938 75 ("./CppStatUtilities.cc") 383)

(note:HI 938 246 939 75 ("./CppStatUtilities.cc") 384)

(call_insn:HI 939 938 940 75 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 940 939 941 75 ./CppStatUtilities.cc:384 (set (reg:SI 202 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 939 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 941 940 942 75 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 406)
                (div:SI (reg:SI 202 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 203)
                (mod:SI (reg:SI 202 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 940 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 406)
            (expr_list:REG_DEAD (reg:SI 202 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 406)
                        (nil)))))))

(insn:HI 942 941 943 75 ./CppStatUtilities.cc:384 (set (reg:DI 204)
        (sign_extend:DI (reg:SI 203))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 941 (nil))
    (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(insn:HI 943 942 944 75 ./CppStatUtilities.cc:384 (set (reg:DF 205)
        (mem:DF (plus:DI (mult:DI (reg:DI 204)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 942 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 204)
            (nil))))

(insn:HI 944 943 945 75 ./CppStatUtilities.cc:384 (set (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 205)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 943 (nil))
    (expr_list:REG_DEAD (reg:DF 205)
        (nil)))

(note:HI 945 944 957 75 ("./CppStatUtilities.cc") 383)

(note:HI 957 945 958 75 ("./CppStatUtilities.cc") 384)

(call_insn:HI 958 957 959 75 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 959 958 960 75 ./CppStatUtilities.cc:384 (set (reg:SI 208 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 958 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 960 959 961 75 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 407)
                (div:SI (reg:SI 208 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 209)
                (mod:SI (reg:SI 208 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 959 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 407)
            (expr_list:REG_DEAD (reg:SI 208 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 407)
                        (nil)))))))

(insn:HI 961 960 962 75 ./CppStatUtilities.cc:384 (set (reg:DI 210)
        (sign_extend:DI (reg:SI 209))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 960 (nil))
    (expr_list:REG_DEAD (reg:SI 209)
        (nil)))

(insn:HI 962 961 963 75 ./CppStatUtilities.cc:384 (set (reg:DF 211)
        (mem:DF (plus:DI (mult:DI (reg:DI 210)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 961 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 16 [0x10])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 210)
            (nil))))

(insn:HI 963 962 964 75 ./CppStatUtilities.cc:384 (set (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 16 [0x10])) [3 S8 A64])
        (reg:DF 211)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 962 (nil))
    (expr_list:REG_DEAD (reg:DF 211)
        (nil)))

(note:HI 964 963 976 75 ("./CppStatUtilities.cc") 383)

(note:HI 976 964 977 75 ("./CppStatUtilities.cc") 384)

(call_insn:HI 977 976 978 75 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 978 977 979 75 ./CppStatUtilities.cc:384 (set (reg:SI 214 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 977 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 979 978 980 75 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 408)
                (div:SI (reg:SI 214 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 215)
                (mod:SI (reg:SI 214 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 978 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 408)
            (expr_list:REG_DEAD (reg:SI 214 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 408)
                        (nil)))))))

(insn:HI 980 979 981 75 ./CppStatUtilities.cc:384 (set (reg:DI 216)
        (sign_extend:DI (reg:SI 215))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 979 (nil))
    (expr_list:REG_DEAD (reg:SI 215)
        (nil)))

(insn:HI 981 980 982 75 ./CppStatUtilities.cc:384 (set (reg:DF 217)
        (mem:DF (plus:DI (mult:DI (reg:DI 216)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 980 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 24 [0x18])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 216)
            (nil))))

(insn:HI 982 981 983 75 ./CppStatUtilities.cc:384 (set (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 24 [0x18])) [3 S8 A64])
        (reg:DF 217)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 981 (nil))
    (expr_list:REG_DEAD (reg:DF 217)
        (nil)))

(note:HI 983 982 995 75 ("./CppStatUtilities.cc") 383)

(note:HI 995 983 996 75 ("./CppStatUtilities.cc") 384)

(call_insn:HI 996 995 997 75 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 997 996 998 75 ./CppStatUtilities.cc:384 (set (reg:SI 220 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 996 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 998 997 999 75 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 409)
                (div:SI (reg:SI 220 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 221)
                (mod:SI (reg:SI 220 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 997 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 409)
            (expr_list:REG_DEAD (reg:SI 220 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 409)
                        (nil)))))))

(insn:HI 999 998 1000 75 ./CppStatUtilities.cc:384 (set (reg:DI 222)
        (sign_extend:DI (reg:SI 221))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 998 (nil))
    (expr_list:REG_DEAD (reg:SI 221)
        (nil)))

(insn:HI 1000 999 1001 75 ./CppStatUtilities.cc:384 (set (reg:DF 223)
        (mem:DF (plus:DI (mult:DI (reg:DI 222)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 999 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 32 [0x20])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 222)
            (nil))))

(insn:HI 1001 1000 1002 75 ./CppStatUtilities.cc:384 (set (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 32 [0x20])) [3 S8 A64])
        (reg:DF 223)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1000 (nil))
    (expr_list:REG_DEAD (reg:DF 223)
        (nil)))

(note:HI 1002 1001 1014 75 ("./CppStatUtilities.cc") 383)

(note:HI 1014 1002 1015 75 ("./CppStatUtilities.cc") 384)

(call_insn:HI 1015 1014 1016 75 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1016 1015 1017 75 ./CppStatUtilities.cc:384 (set (reg:SI 226 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1015 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1017 1016 1018 75 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 410)
                (div:SI (reg:SI 226 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 227)
                (mod:SI (reg:SI 226 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1016 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 410)
            (expr_list:REG_DEAD (reg:SI 226 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 410)
                        (nil)))))))

(insn:HI 1018 1017 1019 75 ./CppStatUtilities.cc:384 (set (reg:DI 228)
        (sign_extend:DI (reg:SI 227))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1017 (nil))
    (expr_list:REG_DEAD (reg:SI 227)
        (nil)))

(insn:HI 1019 1018 1020 75 ./CppStatUtilities.cc:384 (set (reg:DF 229)
        (mem:DF (plus:DI (mult:DI (reg:DI 228)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1018 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 40 [0x28])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 228)
            (nil))))

(insn:HI 1020 1019 1021 75 ./CppStatUtilities.cc:384 (set (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 40 [0x28])) [3 S8 A64])
        (reg:DF 229)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1019 (nil))
    (expr_list:REG_DEAD (reg:DF 229)
        (nil)))

(note:HI 1021 1020 1033 75 ("./CppStatUtilities.cc") 383)

(note:HI 1033 1021 1034 75 ("./CppStatUtilities.cc") 384)

(call_insn:HI 1034 1033 1035 75 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1035 1034 1036 75 ./CppStatUtilities.cc:384 (set (reg:SI 232 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1034 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1036 1035 1037 75 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 411)
                (div:SI (reg:SI 232 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 233)
                (mod:SI (reg:SI 232 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1035 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 411)
            (expr_list:REG_DEAD (reg:SI 232 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 411)
                        (nil)))))))

(insn:HI 1037 1036 1038 75 ./CppStatUtilities.cc:384 (set (reg:DI 234)
        (sign_extend:DI (reg:SI 233))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1036 (nil))
    (expr_list:REG_DEAD (reg:SI 233)
        (nil)))

(insn:HI 1038 1037 1039 75 ./CppStatUtilities.cc:384 (set (reg:DF 235)
        (mem:DF (plus:DI (mult:DI (reg:DI 234)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1037 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 48 [0x30])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 234)
            (nil))))

(insn:HI 1039 1038 1040 75 ./CppStatUtilities.cc:384 (set (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 48 [0x30])) [3 S8 A64])
        (reg:DF 235)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1038 (nil))
    (expr_list:REG_DEAD (reg:DF 235)
        (nil)))

(note:HI 1040 1039 1052 75 ("./CppStatUtilities.cc") 383)

(note:HI 1052 1040 1053 75 ("./CppStatUtilities.cc") 384)

(call_insn:HI 1053 1052 1054 75 ./CppStatUtilities.cc:384 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1054 1053 1055 75 ./CppStatUtilities.cc:384 (set (reg:SI 238 [ D.34952 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1053 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1055 1054 1056 75 ./CppStatUtilities.cc:384 (parallel [
            (set (reg:SI 412)
                (div:SI (reg:SI 238 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (set (reg:SI 239)
                (mod:SI (reg:SI 238 [ D.34952 ])
                    (reg/v:SI 102 [ dataLen ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1054 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 412)
            (expr_list:REG_DEAD (reg:SI 238 [ D.34952 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 412)
                        (nil)))))))

(insn:HI 1056 1055 1057 75 ./CppStatUtilities.cc:384 (set (reg:DI 240)
        (sign_extend:DI (reg:SI 239))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1055 (nil))
    (expr_list:REG_DEAD (reg:SI 239)
        (nil)))

(insn:HI 1057 1056 1058 75 ./CppStatUtilities.cc:384 (set (reg:DF 241)
        (mem:DF (plus:DI (mult:DI (reg:DI 240)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1056 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 56 [0x38])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 240)
            (nil))))

(insn:HI 1058 1057 1059 75 ./CppStatUtilities.cc:384 (set (mem:DF (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                (const_int 56 [0x38])) [3 S8 A64])
        (reg:DF 241)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1057 (nil))
    (expr_list:REG_DEAD (reg:DF 241)
        (nil)))

(note:HI 1059 1058 1060 75 ("./CppStatUtilities.cc") 383)

(insn:HI 1060 1059 1061 75 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/v:SI 195 [ k ])
                (plus:SI (reg/v:SI 195 [ k ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1061 1060 1062 75 ./CppStatUtilities.cc:383 (parallel [
            (set (reg/f:DI 200 [ ivtmp.758 ])
                (plus:DI (reg/f:DI 200 [ ivtmp.758 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1062 1061 1063 75 ./CppStatUtilities.cc:383 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 195 [ k ])
            (reg/v:SI 82 [ sampleSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1060 (nil))
    (nil))

(jump_insn:HI 1063 1062 1068 75 ./CppStatUtilities.cc:383 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 251)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1062 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 75, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

;; Start of basic block 76, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200
(note:HI 1068 1063 1834 76 [bb 76] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1834 1068 1835 76 (set (pc)
        (label_ref 237)) 548 {jump} (nil)
    (nil))
;; End of basic block 76, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 81 82 86 87 101 102 103 104 195 200

(barrier:HI 1835 1834 217)

;; Start of basic block 77, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104
(code_label:HI 217 1835 218 77 566 "" [1 uses])

(note:HI 218 217 1086 77 [bb 77] NOTE_INSN_BASIC_BLOCK)

(note:HI 1086 218 1087 77 NOTE_INSN_DELETED)

(insn:HI 1087 1086 1088 77 (parallel [
            (set (reg:SI 163)
                (plus:SI (reg/v:SI 82 [ sampleSize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1088 1087 1091 77 (parallel [
            (set (reg:SI 163)
                (and:SI (reg:SI 163)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 1087 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1091 1088 1092 77 ("./CppStatUtilities.cc") 378)

(insn:HI 1092 1091 1093 77 ./CppStatUtilities.cc:378 (set (reg:DF 117)
        (mem:DF (reg/v/f:DI 101 [ data ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 101 [ data ]) [3 S8 A64])
        (nil)))

(insn:HI 1093 1092 1094 77 ./CppStatUtilities.cc:378 (set (mem:DF (reg/f:DI 63 [ ivtmp.758 ]) [3 S8 A64])
        (reg:DF 117)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1092 (nil))
    (expr_list:REG_DEAD (reg:DF 117)
        (nil)))

(note:HI 1094 1093 1095 77 ("./CppStatUtilities.cc") 377)

(insn:HI 1095 1094 1096 77 ./CppStatUtilities.cc:377 (set (reg/v:SI 171 [ k ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 1096 1095 1097 77 ./CppStatUtilities.cc:377 (set (reg:DI 172 [ ivtmp.750 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 1097 1096 1098 77 ./CppStatUtilities.cc:377 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 171 [ k ])
            (reg/v:SI 82 [ sampleSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1095 (nil))
    (nil))

(jump_insn:HI 1098 1097 1245 77 ./CppStatUtilities.cc:377 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 251)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1097 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 77, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

;; Start of basic block 78, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
(note:HI 1245 1098 1243 78 [bb 78] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1243 1245 1244 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 1244 1243 1225 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 221)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1243 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 78, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

;; Start of basic block 79, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
(note:HI 1225 1244 1223 79 [bb 79] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1223 1225 1224 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1224 1223 1205 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1853)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1223 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 79, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

;; Start of basic block 80, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
(note:HI 1205 1224 1203 80 [bb 80] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1203 1205 1204 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1204 1203 1185 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1854)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1203 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 80, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

;; Start of basic block 81, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
(note:HI 1185 1204 1183 81 [bb 81] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1183 1185 1184 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1184 1183 1165 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1855)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1183 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 81, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

;; Start of basic block 82, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
(note:HI 1165 1184 1163 82 [bb 82] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1163 1165 1164 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1164 1163 1145 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1856)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1163 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 82, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

;; Start of basic block 83, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
(note:HI 1145 1164 1143 83 [bb 83] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1143 1145 1144 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1144 1143 1125 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1857)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1143 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 83, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172

;; Start of basic block 84, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 163 171 172
(note:HI 1125 1144 1123 84 [bb 84] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1123 1125 1124 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(jump_insn:HI 1124 1123 1115 84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1858)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1123 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 84, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

;; Start of basic block 85, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104
(note:HI 1115 1124 1107 85 [bb 85] NOTE_INSN_BASIC_BLOCK)

(note:HI 1107 1115 1108 85 ("./CppStatUtilities.cc") 378)

(insn:HI 1108 1107 1109 85 ./CppStatUtilities.cc:378 (set (reg:DF 377)
        (mem:DF (plus:DI (reg/v/f:DI 101 [ data ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 101 [ data ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(insn:HI 1109 1108 1110 85 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (reg/f:DI 63 [ ivtmp.758 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 377)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1108 (nil))
    (expr_list:REG_DEAD (reg:DF 377)
        (nil)))

(note:HI 1110 1109 1111 85 ("./CppStatUtilities.cc") 377)

(insn:HI 1111 1110 1112 85 ./CppStatUtilities.cc:377 (set (reg/v:SI 171 [ k ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 1112 1111 1858 85 ./CppStatUtilities.cc:377 (set (reg:DI 172 [ ivtmp.750 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
;; End of basic block 85, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

;; Start of basic block 86, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
(code_label:HI 1858 1112 1135 86 704 "" [1 uses])

(note:HI 1135 1858 1127 86 [bb 86] NOTE_INSN_BASIC_BLOCK)

(note:HI 1127 1135 1128 86 ("./CppStatUtilities.cc") 378)

(insn:HI 1128 1127 1129 86 ./CppStatUtilities.cc:378 (set (reg:DF 378)
        (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1129 1128 1130 86 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 378)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1128 (nil))
    (expr_list:REG_DEAD (reg:DF 378)
        (nil)))

(note:HI 1130 1129 1131 86 ("./CppStatUtilities.cc") 377)

(insn:HI 1131 1130 1132 86 ./CppStatUtilities.cc:377 (parallel [
            (set (reg/v:SI 171 [ k ])
                (plus:SI (reg/v:SI 171 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1132 1131 1857 86 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 172 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 86, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

;; Start of basic block 87, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
(code_label:HI 1857 1132 1155 87 703 "" [1 uses])

(note:HI 1155 1857 1147 87 [bb 87] NOTE_INSN_BASIC_BLOCK)

(note:HI 1147 1155 1148 87 ("./CppStatUtilities.cc") 378)

(insn:HI 1148 1147 1149 87 ./CppStatUtilities.cc:378 (set (reg:DF 379)
        (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1149 1148 1150 87 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 379)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1148 (nil))
    (expr_list:REG_DEAD (reg:DF 379)
        (nil)))

(note:HI 1150 1149 1151 87 ("./CppStatUtilities.cc") 377)

(insn:HI 1151 1150 1152 87 ./CppStatUtilities.cc:377 (parallel [
            (set (reg/v:SI 171 [ k ])
                (plus:SI (reg/v:SI 171 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1152 1151 1856 87 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 172 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 87, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

;; Start of basic block 88, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
(code_label:HI 1856 1152 1175 88 702 "" [1 uses])

(note:HI 1175 1856 1167 88 [bb 88] NOTE_INSN_BASIC_BLOCK)

(note:HI 1167 1175 1168 88 ("./CppStatUtilities.cc") 378)

(insn:HI 1168 1167 1169 88 ./CppStatUtilities.cc:378 (set (reg:DF 380)
        (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1169 1168 1170 88 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 380)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1168 (nil))
    (expr_list:REG_DEAD (reg:DF 380)
        (nil)))

(note:HI 1170 1169 1171 88 ("./CppStatUtilities.cc") 377)

(insn:HI 1171 1170 1172 88 ./CppStatUtilities.cc:377 (parallel [
            (set (reg/v:SI 171 [ k ])
                (plus:SI (reg/v:SI 171 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1172 1171 1855 88 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 172 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 88, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

;; Start of basic block 89, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
(code_label:HI 1855 1172 1195 89 701 "" [1 uses])

(note:HI 1195 1855 1187 89 [bb 89] NOTE_INSN_BASIC_BLOCK)

(note:HI 1187 1195 1188 89 ("./CppStatUtilities.cc") 378)

(insn:HI 1188 1187 1189 89 ./CppStatUtilities.cc:378 (set (reg:DF 381)
        (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1189 1188 1190 89 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 381)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1188 (nil))
    (expr_list:REG_DEAD (reg:DF 381)
        (nil)))

(note:HI 1190 1189 1191 89 ("./CppStatUtilities.cc") 377)

(insn:HI 1191 1190 1192 89 ./CppStatUtilities.cc:377 (parallel [
            (set (reg/v:SI 171 [ k ])
                (plus:SI (reg/v:SI 171 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1192 1191 1854 89 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 172 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 89, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

;; Start of basic block 90, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
(code_label:HI 1854 1192 1215 90 700 "" [1 uses])

(note:HI 1215 1854 1207 90 [bb 90] NOTE_INSN_BASIC_BLOCK)

(note:HI 1207 1215 1208 90 ("./CppStatUtilities.cc") 378)

(insn:HI 1208 1207 1209 90 ./CppStatUtilities.cc:378 (set (reg:DF 382)
        (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1209 1208 1210 90 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 382)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1208 (nil))
    (expr_list:REG_DEAD (reg:DF 382)
        (nil)))

(note:HI 1210 1209 1211 90 ("./CppStatUtilities.cc") 377)

(insn:HI 1211 1210 1212 90 ./CppStatUtilities.cc:377 (parallel [
            (set (reg/v:SI 171 [ k ])
                (plus:SI (reg/v:SI 171 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1212 1211 1853 90 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 172 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 90, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

;; Start of basic block 91, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
(code_label:HI 1853 1212 1235 91 699 "" [1 uses])

(note:HI 1235 1853 1227 91 [bb 91] NOTE_INSN_BASIC_BLOCK)

(note:HI 1227 1235 1228 91 ("./CppStatUtilities.cc") 378)

(insn:HI 1228 1227 1229 91 ./CppStatUtilities.cc:378 (set (reg:DF 383)
        (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1229 1228 1230 91 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 383)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1228 (nil))
    (expr_list:REG_DEAD (reg:DF 383)
        (nil)))

(note:HI 1230 1229 1231 91 ("./CppStatUtilities.cc") 377)

(insn:HI 1231 1230 1232 91 ./CppStatUtilities.cc:377 (parallel [
            (set (reg/v:SI 171 [ k ])
                (plus:SI (reg/v:SI 171 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1232 1231 1233 91 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 172 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1233 1232 1234 91 ./CppStatUtilities.cc:377 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 171 [ k ])
            (reg/v:SI 82 [ sampleSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1231 (nil))
    (nil))

(jump_insn:HI 1234 1233 221 91 ./CppStatUtilities.cc:377 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 251)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1233 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 91, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

;; Start of basic block 92, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
(code_label:HI 221 1234 222 92 569 "" [2 uses])

(note:HI 222 221 223 92 [bb 92] NOTE_INSN_BASIC_BLOCK)

(note:HI 223 222 224 92 ("./CppStatUtilities.cc") 378)

(insn:HI 224 223 225 92 ./CppStatUtilities.cc:378 (set (reg:DF 173)
        (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 225 224 226 92 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 173)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 224 (nil))
    (expr_list:REG_DEAD (reg:DF 173)
        (nil)))

(note:HI 226 225 1352 92 ("./CppStatUtilities.cc") 377)

(insn:HI 1352 226 1247 92 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1247 1352 1248 92 ("./CppStatUtilities.cc") 378)

(insn:HI 1248 1247 1249 92 ./CppStatUtilities.cc:378 (set (reg:DF 176)
        (mem:DF (plus:DI (mult:DI (reg:DI 165)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1352 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 165)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1249 1248 1250 92 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 165)
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 176)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1248 (nil))
    (expr_list:REG_DEAD (reg:DF 176)
        (expr_list:REG_DEAD (reg:DI 165)
            (nil))))

(note:HI 1250 1249 1252 92 ("./CppStatUtilities.cc") 377)

(insn:HI 1252 1250 1262 92 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 178 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1262 1252 1263 92 ("./CppStatUtilities.cc") 378)

(insn:HI 1263 1262 1264 92 ./CppStatUtilities.cc:378 (set (reg:DF 179)
        (mem:DF (plus:DI (mult:DI (reg:DI 178 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1252 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 178 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1264 1263 1265 92 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 178 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 179)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1263 (nil))
    (expr_list:REG_DEAD (reg:DF 179)
        (expr_list:REG_DEAD (reg:DI 178 [ ivtmp.750 ])
            (nil))))

(note:HI 1265 1264 1267 92 ("./CppStatUtilities.cc") 377)

(insn:HI 1267 1265 1277 92 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 181 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1277 1267 1278 92 ("./CppStatUtilities.cc") 378)

(insn:HI 1278 1277 1279 92 ./CppStatUtilities.cc:378 (set (reg:DF 182)
        (mem:DF (plus:DI (mult:DI (reg:DI 181 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1267 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 181 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1279 1278 1280 92 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 181 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 182)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1278 (nil))
    (expr_list:REG_DEAD (reg:DF 182)
        (expr_list:REG_DEAD (reg:DI 181 [ ivtmp.750 ])
            (nil))))

(note:HI 1280 1279 1282 92 ("./CppStatUtilities.cc") 377)

(insn:HI 1282 1280 1292 92 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 184 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1292 1282 1293 92 ("./CppStatUtilities.cc") 378)

(insn:HI 1293 1292 1294 92 ./CppStatUtilities.cc:378 (set (reg:DF 185)
        (mem:DF (plus:DI (mult:DI (reg:DI 184 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1282 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 184 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1294 1293 1295 92 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 184 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 185)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1293 (nil))
    (expr_list:REG_DEAD (reg:DF 185)
        (expr_list:REG_DEAD (reg:DI 184 [ ivtmp.750 ])
            (nil))))

(note:HI 1295 1294 1297 92 ("./CppStatUtilities.cc") 377)

(insn:HI 1297 1295 1307 92 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 187 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1307 1297 1308 92 ("./CppStatUtilities.cc") 378)

(insn:HI 1308 1307 1309 92 ./CppStatUtilities.cc:378 (set (reg:DF 188)
        (mem:DF (plus:DI (mult:DI (reg:DI 187 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1297 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 187 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1309 1308 1310 92 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 187 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 188)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1308 (nil))
    (expr_list:REG_DEAD (reg:DF 188)
        (expr_list:REG_DEAD (reg:DI 187 [ ivtmp.750 ])
            (nil))))

(note:HI 1310 1309 1312 92 ("./CppStatUtilities.cc") 377)

(insn:HI 1312 1310 1322 92 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 190 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1322 1312 1323 92 ("./CppStatUtilities.cc") 378)

(insn:HI 1323 1322 1324 92 ./CppStatUtilities.cc:378 (set (reg:DF 191)
        (mem:DF (plus:DI (mult:DI (reg:DI 190 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1312 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 190 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1324 1323 1325 92 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 190 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 191)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1323 (nil))
    (expr_list:REG_DEAD (reg:DF 191)
        (expr_list:REG_DEAD (reg:DI 190 [ ivtmp.750 ])
            (nil))))

(note:HI 1325 1324 1327 92 ("./CppStatUtilities.cc") 377)

(insn:HI 1327 1325 1337 92 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 193 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1337 1327 1338 92 ("./CppStatUtilities.cc") 378)

(insn:HI 1338 1337 1339 92 ./CppStatUtilities.cc:378 (set (reg:DF 194)
        (mem:DF (plus:DI (mult:DI (reg:DI 193 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1327 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 193 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 101 [ data ])) [3 S8 A64])
        (nil)))

(insn:HI 1339 1338 1340 92 ./CppStatUtilities.cc:378 (set (mem:DF (plus:DI (mult:DI (reg:DI 193 [ ivtmp.750 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 63 [ ivtmp.758 ])) [3 S8 A64])
        (reg:DF 194)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1338 (nil))
    (expr_list:REG_DEAD (reg:DF 194)
        (expr_list:REG_DEAD (reg:DI 193 [ ivtmp.750 ])
            (nil))))

(note:HI 1340 1339 1341 92 ("./CppStatUtilities.cc") 377)

(insn:HI 1341 1340 1342 92 ./CppStatUtilities.cc:377 (parallel [
            (set (reg/v:SI 171 [ k ])
                (plus:SI (reg/v:SI 171 [ k ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1342 1341 1343 92 ./CppStatUtilities.cc:377 (parallel [
            (set (reg:DI 172 [ ivtmp.750 ])
                (plus:DI (reg:DI 172 [ ivtmp.750 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1343 1342 1344 92 ./CppStatUtilities.cc:377 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 171 [ k ])
            (reg/v:SI 82 [ sampleSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1341 (nil))
    (nil))

(jump_insn:HI 1344 1343 1349 92 ./CppStatUtilities.cc:377 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 251)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1343 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 92, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

;; Start of basic block 93, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172
(note:HI 1349 1344 1839 93 [bb 93] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1839 1349 1840 93 (set (pc)
        (label_ref 221)) 548 {jump} (nil)
    (nil))
;; End of basic block 93, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 81 82 86 87 101 103 104 171 172

(barrier:HI 1840 1839 1751)

;; Start of basic block 94, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 101 102 103 104 105 140 141 168
(code_label:HI 1751 1840 1375 94 667 "" [1 uses])

(note:HI 1375 1751 1371 94 [bb 94] NOTE_INSN_BASIC_BLOCK)

(note:HI 1371 1375 1372 94 ("./CppStatUtilities.cc") 356)

(insn:HI 1372 1371 1378 94 ./CppStatUtilities.cc:356 (set (reg/v:SI 79 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 1378 1372 1379 94 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 62 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 62 [ ivtmp.763 ])
        (nil)))

(note:HI 1379 1378 1380 94 ("./CppStatUtilities.cc") 357)

(insn:HI 1380 1379 1381 94 ./CppStatUtilities.cc:357 (set (reg:DF 384 [ D.34913 ])
        (mem:DF (plus:DI (reg/v/f:DI 103 [ prob ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1381 1380 1382 94 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 384 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1380 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 384 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1382 1381 1389 94 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1381 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 94, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 168 384

;; Start of basic block 95, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 168 384
(note:HI 1389 1382 1386 95 [bb 95] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1386 1389 1387 95 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 62 [ ivtmp.763 ])
                (plus:DI (reg/v/f:DI 103 [ prob ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1387 1386 1388 95 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 384 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 384 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 384 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1388 1387 1561 95 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1387 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 95, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 168

;; Start of basic block 96, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
(note:HI 1561 1388 1559 96 [bb 96] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1559 1561 1560 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 168)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1560 1559 1533 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 146)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1559 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 96, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

;; Start of basic block 97, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
(note:HI 1533 1560 1531 97 [bb 97] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1531 1533 1532 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 168)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1532 1531 1505 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1859)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1531 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 97, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

;; Start of basic block 98, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
(note:HI 1505 1532 1503 98 [bb 98] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1503 1505 1504 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 168)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1504 1503 1477 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1860)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1503 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 98, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

;; Start of basic block 99, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
(note:HI 1477 1504 1475 99 [bb 99] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1475 1477 1476 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 168)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1476 1475 1449 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1861)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1475 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 99, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

;; Start of basic block 100, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
(note:HI 1449 1476 1447 100 [bb 100] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1447 1449 1448 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 168)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1448 1447 1421 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1862)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1447 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 100, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168

;; Start of basic block 101, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141 168
(note:HI 1421 1448 1419 101 [bb 101] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1419 1421 1420 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 168)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(jump_insn:HI 1420 1419 1399 101 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1863)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1419 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 101, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141

;; Start of basic block 102, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 101 102 103 104 105 140 141
(note:HI 1399 1420 1395 102 [bb 102] NOTE_INSN_BASIC_BLOCK)

(note:HI 1395 1399 1396 102 ("./CppStatUtilities.cc") 356)

(insn:HI 1396 1395 1402 102 ./CppStatUtilities.cc:356 (set (reg/v:SI 79 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 1402 1396 1403 102 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 62 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 62 [ ivtmp.763 ])
        (nil)))

(note:HI 1403 1402 1404 102 ("./CppStatUtilities.cc") 357)

(insn:HI 1404 1403 1405 102 ./CppStatUtilities.cc:357 (set (reg:DF 385 [ D.34913 ])
        (mem:DF (plus:DI (reg/v/f:DI 103 [ prob ])
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1405 1404 1406 102 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 385 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1404 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 385 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1406 1405 1413 102 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1405 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 102, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 385

;; Start of basic block 103, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 385
(note:HI 1413 1406 1410 103 [bb 103] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1410 1413 1411 103 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 62 [ ivtmp.763 ])
                (plus:DI (reg/v/f:DI 103 [ prob ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1411 1410 1412 103 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 385 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 385 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 385 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1412 1411 1863 103 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1411 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 103, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

;; Start of basic block 104, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
(code_label:HI 1863 1412 1427 104 709 "" [1 uses])

(note:HI 1427 1863 1423 104 [bb 104] NOTE_INSN_BASIC_BLOCK)

(note:HI 1423 1427 1424 104 ("./CppStatUtilities.cc") 356)

(insn:HI 1424 1423 1430 104 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg/v:SI 79 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1430 1424 1431 104 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 62 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 1431 1430 1432 104 ("./CppStatUtilities.cc") 357)

(insn:HI 1432 1431 1433 104 ./CppStatUtilities.cc:357 (set (reg:DF 386 [ D.34913 ])
        (mem:DF (reg/f:DI 62 [ ivtmp.763 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1433 1432 1434 104 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 386 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1432 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 386 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1434 1433 1441 104 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1433 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 104, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 386

;; Start of basic block 105, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 386
(note:HI 1441 1434 1438 105 [bb 105] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1438 1441 1439 105 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 62 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.763 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1439 1438 1440 105 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 386 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 386 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 386 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1440 1439 1862 105 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1439 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 105, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

;; Start of basic block 106, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
(code_label:HI 1862 1440 1455 106 708 "" [1 uses])

(note:HI 1455 1862 1451 106 [bb 106] NOTE_INSN_BASIC_BLOCK)

(note:HI 1451 1455 1452 106 ("./CppStatUtilities.cc") 356)

(insn:HI 1452 1451 1458 106 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg/v:SI 79 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1458 1452 1459 106 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 62 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 1459 1458 1460 106 ("./CppStatUtilities.cc") 357)

(insn:HI 1460 1459 1461 106 ./CppStatUtilities.cc:357 (set (reg:DF 387 [ D.34913 ])
        (mem:DF (reg/f:DI 62 [ ivtmp.763 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1461 1460 1462 106 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 387 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1460 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 387 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1462 1461 1469 106 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1461 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 106, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 387

;; Start of basic block 107, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 387
(note:HI 1469 1462 1466 107 [bb 107] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1466 1469 1467 107 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 62 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.763 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1467 1466 1468 107 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 387 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 387 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 387 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1468 1467 1861 107 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1467 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 107, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

;; Start of basic block 108, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
(code_label:HI 1861 1468 1483 108 707 "" [1 uses])

(note:HI 1483 1861 1479 108 [bb 108] NOTE_INSN_BASIC_BLOCK)

(note:HI 1479 1483 1480 108 ("./CppStatUtilities.cc") 356)

(insn:HI 1480 1479 1486 108 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg/v:SI 79 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1486 1480 1487 108 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 62 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 1487 1486 1488 108 ("./CppStatUtilities.cc") 357)

(insn:HI 1488 1487 1489 108 ./CppStatUtilities.cc:357 (set (reg:DF 388 [ D.34913 ])
        (mem:DF (reg/f:DI 62 [ ivtmp.763 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1489 1488 1490 108 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 388 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1488 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 388 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1490 1489 1497 108 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1489 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 108, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 388

;; Start of basic block 109, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 388
(note:HI 1497 1490 1494 109 [bb 109] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1494 1497 1495 109 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 62 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.763 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1495 1494 1496 109 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 388 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 388 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 388 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1496 1495 1860 109 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1495 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 109, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

;; Start of basic block 110, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
(code_label:HI 1860 1496 1511 110 706 "" [1 uses])

(note:HI 1511 1860 1507 110 [bb 110] NOTE_INSN_BASIC_BLOCK)

(note:HI 1507 1511 1508 110 ("./CppStatUtilities.cc") 356)

(insn:HI 1508 1507 1514 110 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg/v:SI 79 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1514 1508 1515 110 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 62 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 1515 1514 1516 110 ("./CppStatUtilities.cc") 357)

(insn:HI 1516 1515 1517 110 ./CppStatUtilities.cc:357 (set (reg:DF 389 [ D.34913 ])
        (mem:DF (reg/f:DI 62 [ ivtmp.763 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1517 1516 1518 110 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 389 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1516 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 389 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1518 1517 1525 110 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1517 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 110, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 389

;; Start of basic block 111, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 389
(note:HI 1525 1518 1522 111 [bb 111] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1522 1525 1523 111 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 62 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.763 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1523 1522 1524 111 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 389 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 389 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 389 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1524 1523 1859 111 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1523 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 111, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

;; Start of basic block 112, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
(code_label:HI 1859 1524 1539 112 705 "" [1 uses])

(note:HI 1539 1859 1535 112 [bb 112] NOTE_INSN_BASIC_BLOCK)

(note:HI 1535 1539 1536 112 ("./CppStatUtilities.cc") 356)

(insn:HI 1536 1535 1542 112 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg/v:SI 79 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1542 1536 1543 112 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 62 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 1543 1542 1544 112 ("./CppStatUtilities.cc") 357)

(insn:HI 1544 1543 1545 112 ./CppStatUtilities.cc:357 (set (reg:DF 390 [ D.34913 ])
        (mem:DF (reg/f:DI 62 [ ivtmp.763 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1545 1544 1546 112 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 390 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1544 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 390 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1546 1545 1553 112 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1545 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 112, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 390

;; Start of basic block 113, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141 390
(note:HI 1553 1546 1550 113 [bb 113] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1550 1553 1551 113 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 62 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.763 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1551 1550 1552 113 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 390 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 390 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 390 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1552 1551 1562 113 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1551 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 113, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

;; Start of basic block 114, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
(note:HI 1562 1552 1841 114 [bb 114] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1841 1562 1842 114 (set (pc)
        (label_ref 146)) 548 {jump} (nil)
    (nil))
;; End of basic block 114, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141

(barrier:HI 1842 1841 1748)

;; Start of basic block 115, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 391
(code_label:HI 1748 1842 1572 115 666 "" [1 uses])

(note:HI 1572 1748 1568 115 [bb 115] NOTE_INSN_BASIC_BLOCK)

(note:HI 1568 1572 1569 115 ("./CppStatUtilities.cc") 356)

(insn:HI 1569 1568 1575 115 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg:SI 169)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1575 1569 1576 115 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 391 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 391 [ ivtmp.763 ])
        (nil)))

(note:HI 1576 1575 1577 115 ("./CppStatUtilities.cc") 357)

(insn:HI 1577 1576 1578 115 ./CppStatUtilities.cc:357 (set (reg:DF 392 [ D.34913 ])
        (mem:DF (reg/v/f:DI 61 [ prob.766 ]) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1575 (nil))
    (nil))

(insn:HI 1578 1577 1579 115 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 392 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1577 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 392 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1579 1578 1586 115 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1578 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 115, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 392

;; Start of basic block 116, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 392
(note:HI 1586 1579 1583 116 [bb 116] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1583 1586 1584 116 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 393 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 170)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1584 1583 1585 116 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 392 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 392 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 392 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1585 1584 1595 116 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1584 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 116, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 393

;; Start of basic block 117, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 393
(note:HI 1595 1585 1591 117 [bb 117] NOTE_INSN_BASIC_BLOCK)

(note:HI 1591 1595 1592 117 ("./CppStatUtilities.cc") 356)

(insn:HI 1592 1591 1598 117 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg:SI 169)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1598 1592 1599 117 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 393 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 393 [ ivtmp.763 ])
        (nil)))

(note:HI 1599 1598 1600 117 ("./CppStatUtilities.cc") 357)

(insn:HI 1600 1599 1601 117 ./CppStatUtilities.cc:357 (set (reg:DF 394 [ D.34913 ])
        (mem:DF (plus:DI (reg/f:DI 170)
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1601 1600 1602 117 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 394 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1600 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 394 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1602 1601 1609 117 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1601 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 117, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 394

;; Start of basic block 118, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 394
(note:HI 1609 1602 1606 118 [bb 118] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1606 1609 1607 118 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 395 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 170)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1607 1606 1608 118 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 394 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 394 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 394 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1608 1607 1618 118 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1607 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 118, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 395

;; Start of basic block 119, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 395
(note:HI 1618 1608 1614 119 [bb 119] NOTE_INSN_BASIC_BLOCK)

(note:HI 1614 1618 1615 119 ("./CppStatUtilities.cc") 356)

(insn:HI 1615 1614 1621 119 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg:SI 169)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1621 1615 1622 119 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 395 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 395 [ ivtmp.763 ])
        (nil)))

(note:HI 1622 1621 1623 119 ("./CppStatUtilities.cc") 357)

(insn:HI 1623 1622 1624 119 ./CppStatUtilities.cc:357 (set (reg:DF 396 [ D.34913 ])
        (mem:DF (plus:DI (reg/f:DI 170)
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1624 1623 1625 119 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 396 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1623 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 396 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1625 1624 1632 119 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1624 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 119, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 396

;; Start of basic block 120, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 396
(note:HI 1632 1625 1629 120 [bb 120] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1629 1632 1630 120 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 397 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 170)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1630 1629 1631 120 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 396 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 396 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 396 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1631 1630 1641 120 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1630 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 120, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 397

;; Start of basic block 121, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 397
(note:HI 1641 1631 1637 121 [bb 121] NOTE_INSN_BASIC_BLOCK)

(note:HI 1637 1641 1638 121 ("./CppStatUtilities.cc") 356)

(insn:HI 1638 1637 1644 121 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg:SI 169)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1644 1638 1645 121 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 397 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 397 [ ivtmp.763 ])
        (nil)))

(note:HI 1645 1644 1646 121 ("./CppStatUtilities.cc") 357)

(insn:HI 1646 1645 1647 121 ./CppStatUtilities.cc:357 (set (reg:DF 398 [ D.34913 ])
        (mem:DF (plus:DI (reg/f:DI 170)
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1647 1646 1648 121 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 398 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1646 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 398 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1648 1647 1655 121 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1647 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 121, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 398

;; Start of basic block 122, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 398
(note:HI 1655 1648 1652 122 [bb 122] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1652 1655 1653 122 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 399 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 170)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1653 1652 1654 122 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 398 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 398 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 398 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1654 1653 1664 122 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1653 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 122, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 399

;; Start of basic block 123, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 399
(note:HI 1664 1654 1660 123 [bb 123] NOTE_INSN_BASIC_BLOCK)

(note:HI 1660 1664 1661 123 ("./CppStatUtilities.cc") 356)

(insn:HI 1661 1660 1667 123 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg:SI 169)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1667 1661 1668 123 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 399 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 399 [ ivtmp.763 ])
        (nil)))

(note:HI 1668 1667 1669 123 ("./CppStatUtilities.cc") 357)

(insn:HI 1669 1668 1670 123 ./CppStatUtilities.cc:357 (set (reg:DF 400 [ D.34913 ])
        (mem:DF (plus:DI (reg/f:DI 170)
                (const_int 32 [0x20])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1670 1669 1671 123 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 400 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1669 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 400 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1671 1670 1678 123 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1670 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 123, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 400

;; Start of basic block 124, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 400
(note:HI 1678 1671 1675 124 [bb 124] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1675 1678 1676 124 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 401 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 170)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1676 1675 1677 124 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 400 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 400 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 400 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1677 1676 1687 124 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1676 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 124, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 401

;; Start of basic block 125, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 401
(note:HI 1687 1677 1683 125 [bb 125] NOTE_INSN_BASIC_BLOCK)

(note:HI 1683 1687 1684 125 ("./CppStatUtilities.cc") 356)

(insn:HI 1684 1683 1690 125 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg:SI 169)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1690 1684 1691 125 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 401 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 401 [ ivtmp.763 ])
        (nil)))

(note:HI 1691 1690 1692 125 ("./CppStatUtilities.cc") 357)

(insn:HI 1692 1691 1693 125 ./CppStatUtilities.cc:357 (set (reg:DF 402 [ D.34913 ])
        (mem:DF (plus:DI (reg/f:DI 170)
                (const_int 40 [0x28])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1693 1692 1694 125 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 402 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1692 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 402 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1694 1693 1701 125 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1693 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 125, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 402

;; Start of basic block 126, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 402
(note:HI 1701 1694 1698 126 [bb 126] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1698 1701 1699 126 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 403 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 170)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1699 1698 1700 126 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 402 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 402 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 402 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1700 1699 1710 126 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1699 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 126, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 169 170 403

;; Start of basic block 127, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 104 105 140 141 169 170 403
(note:HI 1710 1700 1706 127 [bb 127] NOTE_INSN_BASIC_BLOCK)

(note:HI 1706 1710 1707 127 ("./CppStatUtilities.cc") 356)

(insn:HI 1707 1706 1713 127 ./CppStatUtilities.cc:356 (parallel [
            (set (reg/v:SI 79 [ i ])
                (plus:SI (reg:SI 169)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 169)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 1713 1707 1714 127 ./CppStatUtilities.cc:353 (set (reg/v/f:DI 61 [ prob.766 ])
        (reg/f:DI 403 [ ivtmp.763 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 403 [ ivtmp.763 ])
        (nil)))

(note:HI 1714 1713 1715 127 ("./CppStatUtilities.cc") 357)

(insn:HI 1715 1714 1716 127 ./CppStatUtilities.cc:357 (set (reg:DF 404 [ D.34913 ])
        (mem:DF (plus:DI (reg/f:DI 170)
                (const_int 48 [0x30])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1716 1715 1717 127 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 140)
            (reg:DF 404 [ D.34913 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 1715 (nil))
    (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 0.0 [0x0.0p+0])
            (reg:DF 404 [ D.34913 ]))
        (nil)))

(jump_insn:HI 1717 1716 1724 127 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1716 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 127, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 170 404

;; Start of basic block 128, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 79 101 102 103 104 105 140 141 170 404
(note:HI 1724 1717 1721 128 [bb 128] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1721 1724 1722 128 ./CppStatUtilities.cc:357 (parallel [
            (set (reg/f:DI 62 [ ivtmp.763 ])
                (plus:DI (reg/f:DI 170)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 170)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 1722 1721 1723 128 ./CppStatUtilities.cc:357 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 404 [ D.34913 ])
            (reg:DF 141))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 404 [ D.34913 ])
        (expr_list:REG_EQUAL (compare:CCFPU (reg:DF 404 [ D.34913 ])
                (const_double:DF 1.0e+0 [0x0.8p+1]))
            (nil))))

(jump_insn:HI 1723 1722 1726 128 ./CppStatUtilities.cc:357 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1722 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 333 [0x14d])
            (nil))))
;; End of basic block 128, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 79 101 102 103 104 105 140 141

;; Start of basic block 129, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141
(note:HI 1726 1723 1843 129 [bb 129] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1843 1726 1844 129 (set (pc)
        (label_ref 146)) 548 {jump} (nil)
    (nil))
;; End of basic block 129, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 79 101 102 103 104 105 140 141

(barrier:HI 1844 1843 0)


;; Function double median(double*, double*, int, int) (_Z6medianPdS_ii)



Pass 0

  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6240 MMX_REGS:6240 FP_TOP_SSE_REGS:6240 FP_SECOND_SSE_REGS:6240 FLOAT_SSE_REGS:6240 FLOAT_INT_REGS:4320 INT_SSE_REGS:6240 FLOAT_INT_SSE_REGS:6240 ALL_REGS:6240 MEM:1730
  Register 63 costs: AREG:220 DREG:220 CREG:220 BREG:220 SIREG:220 DIREG:220 AD_REGS:220 Q_REGS:220 NON_Q_REGS:220 INDEX_REGS:220 LEGACY_REGS:220 GENERAL_REGS:220 SSE_REGS:18277 MMX_REGS:18277 INT_SSE_REGS:18277 MEM:4806
  Register 64 costs: AREG:8424 DREG:8424 CREG:8424 BREG:8424 SIREG:8424 DIREG:8424 AD_REGS:8424 Q_REGS:8424 NON_Q_REGS:18845 INDEX_REGS:8424 LEGACY_REGS:18845 GENERAL_REGS:18845 FP_TOP_REG:13608 FP_SECOND_REG:13608 FLOAT_REGS:13608 SSE_REGS:0 FP_TOP_SSE_REGS:13608 FP_SECOND_SSE_REGS:13608 FLOAT_SSE_REGS:13608 FLOAT_INT_REGS:13608 INT_SSE_REGS:8424 FLOAT_INT_SSE_REGS:13608 ALL_REGS:26481 MEM:7329
  Register 65 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:49374 MMX_REGS:49374 FP_TOP_SSE_REGS:49374 FP_SECOND_SSE_REGS:49374 FLOAT_SSE_REGS:49374 FLOAT_INT_REGS:34182 INT_SSE_REGS:49374 FLOAT_INT_SSE_REGS:49374 ALL_REGS:49374 MEM:14859
  Register 66 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4355 MMX_REGS:4355 FP_TOP_SSE_REGS:4355 FP_SECOND_SSE_REGS:4355 FLOAT_SSE_REGS:4355 FLOAT_INT_REGS:3015 INT_SSE_REGS:4355 FLOAT_INT_SSE_REGS:4355 ALL_REGS:4355 MEM:1117
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:224 INDEX_REGS:0 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:4355 MMX_REGS:4355 FP_TOP_SSE_REGS:4355 FP_SECOND_SSE_REGS:4355 FLOAT_SSE_REGS:4355 FLOAT_INT_REGS:3015 INT_SSE_REGS:4355 FLOAT_INT_SSE_REGS:4355 ALL_REGS:4355 MEM:1229
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 FP_TOP_SSE_REGS:4186 FP_SECOND_SSE_REGS:4186 FLOAT_SSE_REGS:4186 FLOAT_INT_REGS:2898 INT_SSE_REGS:4186 FLOAT_INT_SSE_REGS:4186 ALL_REGS:4186 MEM:966
  Register 69 costs: AREG:616 DREG:616 CREG:616 BREG:616 SIREG:616 DIREG:616 AD_REGS:616 Q_REGS:616 NON_Q_REGS:616 INDEX_REGS:616 LEGACY_REGS:616 GENERAL_REGS:616 SSE_REGS:9924 MMX_REGS:9924 INT_SSE_REGS:9924 MEM:3072
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-308 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9386 MMX_REGS:9386 FP_TOP_SSE_REGS:9386 FP_SECOND_SSE_REGS:9386 FLOAT_SSE_REGS:9386 FLOAT_INT_REGS:6498 INT_SSE_REGS:9386 FLOAT_INT_SSE_REGS:9386 ALL_REGS:9386 MEM:2777
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-308 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5304 MMX_REGS:5304 FP_TOP_SSE_REGS:5304 FP_SECOND_SSE_REGS:5304 FLOAT_SSE_REGS:5304 FLOAT_INT_REGS:3672 INT_SSE_REGS:5304 FLOAT_INT_SSE_REGS:5304 ALL_REGS:5304 MEM:1532
  Register 73 costs: AREG:616 DREG:308 CREG:616 BREG:616 SIREG:616 DIREG:616 AD_REGS:616 Q_REGS:616 NON_Q_REGS:616 INDEX_REGS:616 LEGACY_REGS:616 GENERAL_REGS:616 SSE_REGS:12615 MMX_REGS:12615 INT_SSE_REGS:12615 MEM:3693
  Register 74 costs: AREG:616 DREG:616 CREG:308 BREG:616 SIREG:616 DIREG:616 AD_REGS:616 Q_REGS:616 NON_Q_REGS:616 INDEX_REGS:616 LEGACY_REGS:616 GENERAL_REGS:616 SSE_REGS:10015 MMX_REGS:10015 INT_SSE_REGS:10015 MEM:3093
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:178 INDEX_REGS:0 LEGACY_REGS:178 GENERAL_REGS:178 SSE_REGS:2314 MMX_REGS:2314 FP_TOP_SSE_REGS:2314 FP_SECOND_SSE_REGS:2314 FLOAT_SSE_REGS:2314 FLOAT_INT_REGS:1602 INT_SSE_REGS:2314 FLOAT_INT_SSE_REGS:2314 ALL_REGS:2314 MEM:712
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:214 INDEX_REGS:0 LEGACY_REGS:214 GENERAL_REGS:214 SSE_REGS:2782 MMX_REGS:2782 FP_TOP_SSE_REGS:2782 FP_SECOND_SSE_REGS:2782 FLOAT_SSE_REGS:2782 FLOAT_INT_REGS:1926 INT_SSE_REGS:2782 FLOAT_INT_SSE_REGS:2782 ALL_REGS:2782 MEM:856
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:214 INDEX_REGS:0 LEGACY_REGS:214 GENERAL_REGS:214 SSE_REGS:2782 MMX_REGS:2782 FP_TOP_SSE_REGS:2782 FP_SECOND_SSE_REGS:2782 FLOAT_SSE_REGS:2782 FLOAT_INT_REGS:1926 INT_SSE_REGS:2782 FLOAT_INT_SSE_REGS:2782 ALL_REGS:2782 MEM:856
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:666
  Register 90 costs: AREG:2600 DREG:2600 CREG:2600 BREG:2600 SIREG:2600 DIREG:2600 AD_REGS:2600 Q_REGS:2600 NON_Q_REGS:6000 INDEX_REGS:2600 LEGACY_REGS:6000 GENERAL_REGS:6000 FP_TOP_REG:4200 FP_SECOND_REG:4200 FLOAT_REGS:4200 SSE_REGS:0 FP_TOP_SSE_REGS:4200 FP_SECOND_SSE_REGS:4200 FLOAT_SSE_REGS:4200 FLOAT_INT_REGS:4200 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:4200 ALL_REGS:8400 MEM:2400
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5083 MMX_REGS:5083 FP_TOP_SSE_REGS:5083 FP_SECOND_SSE_REGS:5083 FLOAT_SSE_REGS:5083 FLOAT_INT_REGS:3519 INT_SSE_REGS:5083 FLOAT_INT_SSE_REGS:5083 ALL_REGS:5083 MEM:1273
  Register 96 costs: AREG:110 DREG:110 CREG:110 BREG:110 SIREG:110 DIREG:110 AD_REGS:110 Q_REGS:110 NON_Q_REGS:110 INDEX_REGS:110 LEGACY_REGS:110 GENERAL_REGS:110 SSE_REGS:1540 MMX_REGS:1540 FP_TOP_SSE_REGS:1540 FP_SECOND_SSE_REGS:1540 FLOAT_SSE_REGS:1540 FLOAT_INT_REGS:1100 INT_SSE_REGS:1540 FLOAT_INT_SSE_REGS:1540 ALL_REGS:1540 MEM:440
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2860 MMX_REGS:2860 INT_SSE_REGS:2860 MEM:660
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:220 INDEX_REGS:0 LEGACY_REGS:220 GENERAL_REGS:220 SSE_REGS:2145 MMX_REGS:2145 FP_TOP_SSE_REGS:2145 FP_SECOND_SSE_REGS:2145 FLOAT_SSE_REGS:2145 FLOAT_INT_REGS:1485 INT_SSE_REGS:2145 FLOAT_INT_SSE_REGS:2145 ALL_REGS:2145 MEM:660
  Register 104 costs: AREG:110 DREG:110 CREG:110 BREG:110 SIREG:110 DIREG:110 AD_REGS:110 Q_REGS:110 NON_Q_REGS:110 INDEX_REGS:110 LEGACY_REGS:110 GENERAL_REGS:110 SSE_REGS:1540 MMX_REGS:1540 FP_TOP_SSE_REGS:1540 FP_SECOND_SSE_REGS:1540 FLOAT_SSE_REGS:1540 FLOAT_INT_REGS:1100 INT_SSE_REGS:1540 FLOAT_INT_SSE_REGS:1540 ALL_REGS:1540 MEM:440
  Register 105 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2860 MMX_REGS:2860 INT_SSE_REGS:2860 MEM:660
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:110 INDEX_REGS:0 LEGACY_REGS:110 GENERAL_REGS:110 SSE_REGS:1430 MMX_REGS:1430 FP_TOP_SSE_REGS:1430 FP_SECOND_SSE_REGS:1430 FLOAT_SSE_REGS:1430 FLOAT_INT_REGS:990 INT_SSE_REGS:1430 FLOAT_INT_SSE_REGS:1430 ALL_REGS:1430 MEM:440
  Register 109 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1100
  Register 114 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7618 MMX_REGS:7618 FP_TOP_SSE_REGS:7618 FP_SECOND_SSE_REGS:7618 FLOAT_SSE_REGS:7618 FLOAT_INT_REGS:5274 INT_SSE_REGS:7618 FLOAT_INT_SSE_REGS:7618 ALL_REGS:7618 MEM:1835
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2564 INDEX_REGS:0 LEGACY_REGS:2564 GENERAL_REGS:2564 SSE_REGS:48776 MMX_REGS:48776 FP_TOP_SSE_REGS:48776 FP_SECOND_SSE_REGS:48776 FLOAT_SSE_REGS:48776 FLOAT_INT_REGS:33768 INT_SSE_REGS:48776 FLOAT_INT_SSE_REGS:48776 ALL_REGS:48776 MEM:13435
  Register 118 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 119 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 123 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 125 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 127 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 129 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 131 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 133 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 135 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 137 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 139 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 141 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 143 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 147 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 149 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 151 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 153 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 155 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 157 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 159 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 161 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160

  Register 60 pref GENERAL_REGS or none
  Register 63 pref GENERAL_REGS or none
  Register 64 pref SSE_REGS or none
  Register 65 pref AREG, else GENERAL_REGS
  Register 66 pref DREG, else GENERAL_REGS
  Register 67 pref SIREG, else GENERAL_REGS
  Register 68 pref GENERAL_REGS or none
  Register 69 pref GENERAL_REGS or none
  Register 71 pref DIREG, else GENERAL_REGS
  Register 72 pref SIREG, else GENERAL_REGS
  Register 73 pref DREG, else GENERAL_REGS
  Register 74 pref CREG, else GENERAL_REGS
  Register 75 pref INDEX_REGS, else GENERAL_REGS
  Register 76 pref INDEX_REGS, else GENERAL_REGS
  Register 77 pref INDEX_REGS, else GENERAL_REGS
  Register 82 pref GENERAL_REGS or none
  Register 83 pref SIREG, else GENERAL_REGS
  Register 90 pref SSE_REGS or none
  Register 93 pref GENERAL_REGS or none
  Register 96 pref GENERAL_REGS or none
  Register 97 pref GENERAL_REGS or none
  Register 99 pref INDEX_REGS, else GENERAL_REGS
  Register 104 pref GENERAL_REGS or none
  Register 105 pref GENERAL_REGS or none
  Register 107 pref INDEX_REGS, else GENERAL_REGS
  Register 109 pref GENERAL_REGS or none
  Register 114 pref GENERAL_REGS or none
  Register 116 pref INDEX_REGS, else GENERAL_REGS
  Register 117 pref INDEX_REGS, else GENERAL_REGS
  Register 118 pref GENERAL_REGS or none
  Register 119 pref SSE_REGS or none
  Register 123 pref SSE_REGS or none
  Register 125 pref INDEX_REGS, else GENERAL_REGS
  Register 127 pref SSE_REGS or none
  Register 129 pref INDEX_REGS, else GENERAL_REGS
  Register 131 pref SSE_REGS or none
  Register 133 pref INDEX_REGS, else GENERAL_REGS
  Register 135 pref SSE_REGS or none
  Register 137 pref INDEX_REGS, else GENERAL_REGS
  Register 139 pref SSE_REGS or none
  Register 141 pref INDEX_REGS, else GENERAL_REGS
  Register 143 pref SSE_REGS or none
  Register 145 pref INDEX_REGS, else GENERAL_REGS
  Register 147 pref SSE_REGS or none
  Register 149 pref SSE_REGS or none
  Register 151 pref SSE_REGS or none
  Register 153 pref SSE_REGS or none
  Register 155 pref SSE_REGS or none
  Register 157 pref SSE_REGS or none
  Register 159 pref SSE_REGS or none
  Register 161 pref SSE_REGS or none


Pass 1

  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6240 MMX_REGS:6240 FP_TOP_SSE_REGS:6240 FP_SECOND_SSE_REGS:6240 FLOAT_SSE_REGS:6240 FLOAT_INT_REGS:4320 INT_SSE_REGS:6240 FLOAT_INT_SSE_REGS:6240 ALL_REGS:6240 MEM:1730
  Register 63 costs: AREG:220 DREG:220 CREG:220 BREG:220 SIREG:220 DIREG:220 AD_REGS:220 Q_REGS:220 NON_Q_REGS:220 INDEX_REGS:220 LEGACY_REGS:220 GENERAL_REGS:220 SSE_REGS:18277 MMX_REGS:18277 INT_SSE_REGS:18277 MEM:4806
  Register 64 costs: AREG:8424 DREG:8424 CREG:8424 BREG:8424 SIREG:8424 DIREG:8424 AD_REGS:8424 Q_REGS:8424 NON_Q_REGS:18845 INDEX_REGS:8424 LEGACY_REGS:18845 GENERAL_REGS:18845 FP_TOP_REG:13608 FP_SECOND_REG:13608 FLOAT_REGS:13608 SSE_REGS:0 FP_TOP_SSE_REGS:13608 FP_SECOND_SSE_REGS:13608 FLOAT_SSE_REGS:13608 FLOAT_INT_REGS:13608 INT_SSE_REGS:8424 FLOAT_INT_SSE_REGS:13608 ALL_REGS:26481 MEM:7329
  Register 65 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:49374 MMX_REGS:49374 FP_TOP_SSE_REGS:49374 FP_SECOND_SSE_REGS:49374 FLOAT_SSE_REGS:49374 FLOAT_INT_REGS:34182 INT_SSE_REGS:49374 FLOAT_INT_SSE_REGS:49374 ALL_REGS:49374 MEM:14859
  Register 66 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4355 MMX_REGS:4355 FP_TOP_SSE_REGS:4355 FP_SECOND_SSE_REGS:4355 FLOAT_SSE_REGS:4355 FLOAT_INT_REGS:3015 INT_SSE_REGS:4355 FLOAT_INT_SSE_REGS:4355 ALL_REGS:4355 MEM:1117
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:224 INDEX_REGS:0 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:4355 MMX_REGS:4355 FP_TOP_SSE_REGS:4355 FP_SECOND_SSE_REGS:4355 FLOAT_SSE_REGS:4355 FLOAT_INT_REGS:3015 INT_SSE_REGS:4355 FLOAT_INT_SSE_REGS:4355 ALL_REGS:4355 MEM:1229
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 FP_TOP_SSE_REGS:4186 FP_SECOND_SSE_REGS:4186 FLOAT_SSE_REGS:4186 FLOAT_INT_REGS:2898 INT_SSE_REGS:4186 FLOAT_INT_SSE_REGS:4186 ALL_REGS:4186 MEM:966
  Register 69 costs: AREG:616 DREG:616 CREG:616 BREG:616 SIREG:616 DIREG:616 AD_REGS:616 Q_REGS:616 NON_Q_REGS:616 INDEX_REGS:616 LEGACY_REGS:616 GENERAL_REGS:616 SSE_REGS:9924 MMX_REGS:9924 INT_SSE_REGS:9924 MEM:3072
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-308 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9386 MMX_REGS:9386 FP_TOP_SSE_REGS:9386 FP_SECOND_SSE_REGS:9386 FLOAT_SSE_REGS:9386 FLOAT_INT_REGS:6498 INT_SSE_REGS:9386 FLOAT_INT_SSE_REGS:9386 ALL_REGS:9386 MEM:2777
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-308 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5304 MMX_REGS:5304 FP_TOP_SSE_REGS:5304 FP_SECOND_SSE_REGS:5304 FLOAT_SSE_REGS:5304 FLOAT_INT_REGS:3672 INT_SSE_REGS:5304 FLOAT_INT_SSE_REGS:5304 ALL_REGS:5304 MEM:1532
  Register 73 costs: AREG:616 DREG:308 CREG:616 BREG:616 SIREG:616 DIREG:616 AD_REGS:616 Q_REGS:616 NON_Q_REGS:616 INDEX_REGS:616 LEGACY_REGS:616 GENERAL_REGS:616 SSE_REGS:12615 MMX_REGS:12615 INT_SSE_REGS:12615 MEM:3693
  Register 74 costs: AREG:616 DREG:616 CREG:308 BREG:616 SIREG:616 DIREG:616 AD_REGS:616 Q_REGS:616 NON_Q_REGS:616 INDEX_REGS:616 LEGACY_REGS:616 GENERAL_REGS:616 SSE_REGS:10015 MMX_REGS:10015 INT_SSE_REGS:10015 MEM:3093
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:178 INDEX_REGS:0 LEGACY_REGS:178 GENERAL_REGS:178 SSE_REGS:2314 MMX_REGS:2314 FP_TOP_SSE_REGS:2314 FP_SECOND_SSE_REGS:2314 FLOAT_SSE_REGS:2314 FLOAT_INT_REGS:1602 INT_SSE_REGS:2314 FLOAT_INT_SSE_REGS:2314 ALL_REGS:2314 MEM:712
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:214 INDEX_REGS:0 LEGACY_REGS:214 GENERAL_REGS:214 SSE_REGS:2782 MMX_REGS:2782 FP_TOP_SSE_REGS:2782 FP_SECOND_SSE_REGS:2782 FLOAT_SSE_REGS:2782 FLOAT_INT_REGS:1926 INT_SSE_REGS:2782 FLOAT_INT_SSE_REGS:2782 ALL_REGS:2782 MEM:856
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:214 INDEX_REGS:0 LEGACY_REGS:214 GENERAL_REGS:214 SSE_REGS:2782 MMX_REGS:2782 FP_TOP_SSE_REGS:2782 FP_SECOND_SSE_REGS:2782 FLOAT_SSE_REGS:2782 FLOAT_INT_REGS:1926 INT_SSE_REGS:2782 FLOAT_INT_SSE_REGS:2782 ALL_REGS:2782 MEM:856
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:666
  Register 90 costs: AREG:2600 DREG:2600 CREG:2600 BREG:2600 SIREG:2600 DIREG:2600 AD_REGS:2600 Q_REGS:2600 NON_Q_REGS:6000 INDEX_REGS:2600 LEGACY_REGS:6000 GENERAL_REGS:6000 FP_TOP_REG:4200 FP_SECOND_REG:4200 FLOAT_REGS:4200 SSE_REGS:0 FP_TOP_SSE_REGS:4200 FP_SECOND_SSE_REGS:4200 FLOAT_SSE_REGS:4200 FLOAT_INT_REGS:4200 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:4200 ALL_REGS:8400 MEM:2400
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5083 MMX_REGS:5083 FP_TOP_SSE_REGS:5083 FP_SECOND_SSE_REGS:5083 FLOAT_SSE_REGS:5083 FLOAT_INT_REGS:3519 INT_SSE_REGS:5083 FLOAT_INT_SSE_REGS:5083 ALL_REGS:5083 MEM:1273
  Register 96 costs: AREG:110 DREG:110 CREG:110 BREG:110 SIREG:110 DIREG:110 AD_REGS:110 Q_REGS:110 NON_Q_REGS:110 INDEX_REGS:110 LEGACY_REGS:110 GENERAL_REGS:110 SSE_REGS:1540 MMX_REGS:1540 FP_TOP_SSE_REGS:1540 FP_SECOND_SSE_REGS:1540 FLOAT_SSE_REGS:1540 FLOAT_INT_REGS:1100 INT_SSE_REGS:1540 FLOAT_INT_SSE_REGS:1540 ALL_REGS:1540 MEM:440
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2860 MMX_REGS:2860 INT_SSE_REGS:2860 MEM:660
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:220 INDEX_REGS:0 LEGACY_REGS:220 GENERAL_REGS:220 SSE_REGS:2145 MMX_REGS:2145 FP_TOP_SSE_REGS:2145 FP_SECOND_SSE_REGS:2145 FLOAT_SSE_REGS:2145 FLOAT_INT_REGS:1485 INT_SSE_REGS:2145 FLOAT_INT_SSE_REGS:2145 ALL_REGS:2145 MEM:660
  Register 104 costs: AREG:110 DREG:110 CREG:110 BREG:110 SIREG:110 DIREG:110 AD_REGS:110 Q_REGS:110 NON_Q_REGS:110 INDEX_REGS:110 LEGACY_REGS:110 GENERAL_REGS:110 SSE_REGS:1540 MMX_REGS:1540 FP_TOP_SSE_REGS:1540 FP_SECOND_SSE_REGS:1540 FLOAT_SSE_REGS:1540 FLOAT_INT_REGS:1100 INT_SSE_REGS:1540 FLOAT_INT_SSE_REGS:1540 ALL_REGS:1540 MEM:440
  Register 105 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2860 MMX_REGS:2860 INT_SSE_REGS:2860 MEM:660
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:110 INDEX_REGS:0 LEGACY_REGS:110 GENERAL_REGS:110 SSE_REGS:1430 MMX_REGS:1430 FP_TOP_SSE_REGS:1430 FP_SECOND_SSE_REGS:1430 FLOAT_SSE_REGS:1430 FLOAT_INT_REGS:990 INT_SSE_REGS:1430 FLOAT_INT_SSE_REGS:1430 ALL_REGS:1430 MEM:440
  Register 109 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1100
  Register 114 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7618 MMX_REGS:7618 FP_TOP_SSE_REGS:7618 FP_SECOND_SSE_REGS:7618 FLOAT_SSE_REGS:7618 FLOAT_INT_REGS:5274 INT_SSE_REGS:7618 FLOAT_INT_SSE_REGS:7618 ALL_REGS:7618 MEM:1835
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2564 INDEX_REGS:0 LEGACY_REGS:2564 GENERAL_REGS:2564 SSE_REGS:48776 MMX_REGS:48776 FP_TOP_SSE_REGS:48776 FP_SECOND_SSE_REGS:48776 FLOAT_SSE_REGS:48776 FLOAT_INT_REGS:33768 INT_SSE_REGS:48776 FLOAT_INT_SSE_REGS:48776 ALL_REGS:48776 MEM:13435
  Register 118 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 119 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 123 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 125 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 127 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 129 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 131 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 133 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 135 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 137 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 139 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 141 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 143 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 147 costs: AREG:2626 DREG:2626 CREG:2626 BREG:2626 SIREG:2626 DIREG:2626 AD_REGS:2626 Q_REGS:2626 NON_Q_REGS:6060 INDEX_REGS:2626 LEGACY_REGS:6060 GENERAL_REGS:6060 FP_TOP_REG:4242 FP_SECOND_REG:4242 FLOAT_REGS:4242 SSE_REGS:0 FP_TOP_SSE_REGS:4242 FP_SECOND_SSE_REGS:4242 FLOAT_SSE_REGS:4242 FLOAT_INT_REGS:4242 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:4242 ALL_REGS:8484 MEM:2424
  Register 149 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 151 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 153 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 155 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 157 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 159 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160
  Register 161 costs: AREG:2340 DREG:2340 CREG:2340 BREG:2340 SIREG:2340 DIREG:2340 AD_REGS:2340 Q_REGS:2340 NON_Q_REGS:5400 INDEX_REGS:2340 LEGACY_REGS:5400 GENERAL_REGS:5400 FP_TOP_REG:3780 FP_SECOND_REG:3780 FLOAT_REGS:3780 SSE_REGS:0 FP_TOP_SSE_REGS:3780 FP_SECOND_SSE_REGS:3780 FLOAT_SSE_REGS:3780 FLOAT_INT_REGS:3780 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:3780 ALL_REGS:7560 MEM:2160

163 registers.

Register 60 used 5 times across 30 insns; set 1 time; GENERAL_REGS or none.

Register 63 used 10 times across 130 insns; set 1 time; user var; dies in 2 places; crosses 3 calls; 4 bytes; GENERAL_REGS or none.

Register 64 used 13 times across 18 insns; set 8 times; user var; crosses 1 call; SSE_REGS or none.

Register 65 used 40 times across 131 insns; set 1 time; crosses 2 calls; pref AREG, else GENERAL_REGS; pointer.

Register 66 used 3 times across 10 insns; set 1 time; crosses 1 call; pref DREG, else GENERAL_REGS.

Register 67 used 3 times across 117 insns; set 1 time; crosses 2 calls; pref SIREG, else GENERAL_REGS.

Register 68 used 3 times across 9 insns; set 1 time; crosses 1 call; GENERAL_REGS or none.

Register 69 used 3 times across 24 insns; set 1 time; crosses 2 calls; 4 bytes; GENERAL_REGS or none.

Register 71 used 5 times across 26 insns; set 1 time; user var; dies in 3 places; crosses 1 call; pref DIREG, else GENERAL_REGS; pointer.

Register 72 used 2 times across 26 insns; set 1 time; user var; crosses 2 calls; pref SIREG, else GENERAL_REGS; pointer.

Register 73 used 5 times across 18 insns; set 1 time; user var; dies in 3 places; crosses 1 call; 4 bytes; pref DREG, else GENERAL_REGS.

Register 74 used 3 times across 9 insns; set 1 time; user var; 4 bytes; pref CREG, else GENERAL_REGS.

Register 75 used 2 times across 2 insns in block 1; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 76 used 2 times across 3 insns in block 3; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 77 used 2 times across 3 insns in block 3; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 82 used 2 times across 2 insns in block 6; set 1 time; GENERAL_REGS or none.

Register 83 used 2 times across 3 insns in block 6; set 1 time; pref SIREG, else GENERAL_REGS.

Register 90 used 4 times across 4 insns in block 12; set 2 times; SSE_REGS or none.

Register 93 used 4 times across 96 insns; set 1 time; dies in 0 places; GENERAL_REGS or none.

Register 96 used 2 times across 2 insns in block 8; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 97 used 4 times across 4 insns in block 8; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 99 used 3 times across 3 insns in block 8; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 104 used 2 times across 2 insns in block 9; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 105 used 4 times across 4 insns in block 9; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 107 used 2 times across 2 insns in block 9; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 109 used 3 times across 3 insns in block 12; set 1 time; GENERAL_REGS or none.

Register 114 used 8 times across 21 insns; set 1 time; GENERAL_REGS or none.

Register 116 used 3 times across 4 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 117 used 40 times across 190 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 118 used 30 times across 93 insns; set 9 times; dies in 0 places; GENERAL_REGS or none.

Register 119 used 4 times across 4 insns in block 27; set 2 times; SSE_REGS or none.

Register 123 used 4 times across 4 insns in block 27; set 2 times; SSE_REGS or none.

Register 125 used 3 times across 4 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 127 used 4 times across 4 insns in block 27; set 2 times; SSE_REGS or none.

Register 129 used 3 times across 4 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 131 used 4 times across 4 insns in block 27; set 2 times; SSE_REGS or none.

Register 133 used 3 times across 4 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 135 used 4 times across 4 insns in block 27; set 2 times; SSE_REGS or none.

Register 137 used 3 times across 4 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 139 used 4 times across 4 insns in block 27; set 2 times; SSE_REGS or none.

Register 141 used 3 times across 4 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 143 used 4 times across 4 insns in block 27; set 2 times; SSE_REGS or none.

Register 145 used 3 times across 4 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 147 used 4 times across 4 insns in block 27; set 2 times; SSE_REGS or none.

Register 149 used 4 times across 4 insns in block 20; set 2 times; SSE_REGS or none.

Register 151 used 4 times across 4 insns in block 21; set 2 times; SSE_REGS or none.

Register 153 used 4 times across 4 insns in block 22; set 2 times; SSE_REGS or none.

Register 155 used 4 times across 4 insns in block 23; set 2 times; SSE_REGS or none.

Register 157 used 4 times across 4 insns in block 24; set 2 times; SSE_REGS or none.

Register 159 used 4 times across 4 insns in block 25; set 2 times; SSE_REGS or none.

Register 161 used 4 times across 4 insns in block 26; set 2 times; SSE_REGS or none.

29 basic blocks, 44 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 3087, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [71.0%]  1 [29.0%]  (fallthru)
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 71 72 73 74

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 895, maybe hot.
Predecessors:  0 [29.0%]  (fallthru)
Successors:  11 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 73
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 2192, maybe hot.
Predecessors:  0 [71.0%] 
Successors:  4 [51.2%]  3 [48.8%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 71 72 73 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 71 72 73 74

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1070, maybe hot.
Predecessors:  2 [48.8%]  (fallthru)
Successors:  11 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 73 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 1122, maybe hot.
Predecessors:  2 [51.2%] 
Successors:  6 [99.0%]  5 [1.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 71 72 73
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66 67 69 71 72 73

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  4 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  4 [99.0%] 
Successors:  7 [10.0%]  (fallthru) 12 [90.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66 67 69 71 72 73
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 68 69 72

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  26 [10.0%]  27 [10.0%]  (loop_exit) 12 [10.0%]  6 [10.0%]  (fallthru)
Successors:  9 [50.0%]  8 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
Invalid sum of incoming frequencies 402, should be 1111

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 556, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
Successors:  10 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 556, maybe hot.
Predecessors:  7 [50.0%] 
Successors:  10 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  9 [100.0%]  (fallthru) 8 [100.0%] 
Successors:  11 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 3076, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 1 [100.0%]  3 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  6 [90.0%] 
Successors:  13 [90.0%]  (fallthru,dfs_back) 7 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 68 69 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  12 [90.0%]  (fallthru,dfs_back)
Successors:  14 [87.5%]  (fallthru) 27 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
Invalid sum of incoming frequencies 900, should be 771

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  13 [87.5%]  (fallthru)
Successors:  15 [85.7%]  (fallthru) 26 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  14 [85.7%]  (fallthru)
Successors:  16 [83.3%]  (fallthru) 25 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  15 [83.3%]  (fallthru)
Successors:  17 [80.0%]  (fallthru) 24 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  16 [80.0%]  (fallthru)
Successors:  18 [75.0%]  (fallthru) 23 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  17 [75.0%]  (fallthru)
Successors:  19 [66.7%]  (fallthru) 22 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  18 [66.7%]  (fallthru)
Successors:  20 [50.0%]  (fallthru) 21 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 117 118
Invalid sum of incoming frequencies 300, should be 900

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  19 [50.0%]  (fallthru)
Successors:  21 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Invalid sum of incoming frequencies 450, should be 900

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  20 [100.0%]  (fallthru) 19 [50.0%] 
Successors:  22 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Invalid sum of incoming frequencies 1350, should be 900

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  21 [100.0%]  (fallthru) 18 [33.3%] 
Successors:  23 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Invalid sum of incoming frequencies 1050, should be 900

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  22 [100.0%]  (fallthru) 17 [25.0%] 
Successors:  24 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Invalid sum of incoming frequencies 1050, should be 900

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  23 [100.0%]  (fallthru) 16 [20.0%] 
Successors:  25 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Invalid sum of incoming frequencies 1035, should be 900

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  24 [100.0%]  (fallthru) 15 [16.7%] 
Successors:  26 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Invalid sum of incoming frequencies 1020, should be 900

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  25 [100.0%]  (fallthru) 14 [14.3%] 
Successors:  27 [90.0%]  (fallthru,dfs_back) 7 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Invalid sum of incoming frequencies 1007, should be 900

Basic block 27 prev 26, next 28, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  26 [90.0%]  (fallthru,dfs_back) 28 [100.0%]  13 [12.5%] 
Successors:  28 [90.0%]  (fallthru,dfs_back) 7 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 28 prev 27, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  27 [90.0%]  (fallthru,dfs_back)
Successors:  27 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118

;; Register 75 in 0.
;; Register 76 in 0.
;; Register 77 in 1.
;; Register 82 in 0.
;; Register 83 in 4.
;; Register 90 in 21.
;; Register 96 in 0.
;; Register 97 in 0.
;; Register 99 in 0.
;; Register 104 in 0.
;; Register 105 in 0.
;; Register 107 in 0.
;; Register 109 in 0.
;; Register 116 in 0.
;; Register 119 in 21.
;; Register 123 in 21.
;; Register 125 in 0.
;; Register 127 in 21.
;; Register 129 in 0.
;; Register 131 in 21.
;; Register 133 in 0.
;; Register 135 in 21.
;; Register 137 in 0.
;; Register 139 in 21.
;; Register 141 in 0.
;; Register 143 in 21.
;; Register 145 in 0.
;; Register 147 in 21.
;; Register 149 in 21.
;; Register 151 in 21.
;; Register 153 in 21.
;; Register 155 in 21.
;; Register 157 in 21.
;; Register 159 in 21.
;; Register 161 in 21.
(note:HI 1 0 9 ("./CppStatUtilities.cc") 301)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 9 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 9 4 0 ./CppStatUtilities.cc:301 (set (reg/v/f:DI 71 [ a ])
        (reg:DI 5 di [ a ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:301 (set (reg/v/f:DI 72 [ w ])
        (reg:DI 4 si [ w ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 4 si [ w ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:301 (set (reg/v:SI 73 [ start ])
        (reg:SI 1 dx [ start ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 1 dx [ start ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:301 (set (reg/v:SI 74 [ end ])
        (reg:SI 2 cx [ end ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 2 cx [ end ])
        (nil)))

(note:HI 7 6 11 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 11 7 12 0 ("./CppStatUtilities.cc") 304)

(insn:HI 12 11 13 0 ./CppStatUtilities.cc:304 (parallel [
            (set (reg:SI 69 [ D.34825 ])
                (minus:SI (reg/v:SI 74 [ end ])
                    (reg/v:SI 73 [ start ])))
            (clobber (reg:CC 17 flags))
        ]) 242 {*subsi_1} (insn_list:REG_DEP_TRUE 5 (insn_list:REG_DEP_TRUE 6 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 13 12 14 0 ./CppStatUtilities.cc:304 (parallel [
            (set (reg/v:SI 63 [ len ])
                (plus:SI (reg:SI 69 [ D.34825 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 14 13 15 0 ("./CppStatUtilities.cc") 306)

(insn:HI 15 14 16 0 ./CppStatUtilities.cc:306 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 63 [ len ])
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 13 (nil))
    (nil))

(jump_insn:HI 16 15 19 0 ./CppStatUtilities.cc:306 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 71 72 73 74

(note:HI 19 16 18 ("./CppStatUtilities.cc") 307)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 73
(note:HI 18 19 20 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 20 18 21 1 ./CppStatUtilities.cc:307 (set (reg:DI 75 [ start ])
        (sign_extend:DI (reg/v:SI 73 [ start ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 73 [ start ])
        (nil)))

(insn:HI 21 20 482 1 ./CppStatUtilities.cc:307 (set (reg/v:DF 64 [ median ])
        (mem:DF (plus:DI (mult:DI (reg:DI 75 [ start ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 71 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_DEAD (reg:DI 75 [ start ])
        (expr_list:REG_DEAD (reg/v/f:DI 71 [ a ])
            (nil))))

(jump_insn:HI 482 21 483 1 (set (pc)
        (label_ref 142)) 548 {jump} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

(barrier:HI 483 482 24)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 71 72 73 74
(code_label:HI 24 483 25 2 713 "" [1 uses])

(note:HI 25 24 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 26 25 27 2 ("./CppStatUtilities.cc") 308)

(insn:HI 27 26 28 2 ./CppStatUtilities.cc:308 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 63 [ len ])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 28 27 31 2 ./CppStatUtilities.cc:308 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5120 [0x1400])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 71 72 73 74

(note:HI 31 28 30 ("./CppStatUtilities.cc") 309)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71 73 74
(note:HI 30 31 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 32 30 33 3 ./CppStatUtilities.cc:309 (set (reg:DI 76 [ start ])
        (sign_extend:DI (reg/v:SI 73 [ start ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 73 [ start ])
        (nil)))

(insn:HI 33 32 34 3 ./CppStatUtilities.cc:309 (set (reg:DI 77 [ end ])
        (sign_extend:DI (reg/v:SI 74 [ end ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 74 [ end ])
        (nil)))

(insn:HI 34 33 35 3 ./CppStatUtilities.cc:309 (set (reg/v:DF 64 [ median ])
        (mem:DF (plus:DI (mult:DI (reg:DI 76 [ start ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 71 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_DEAD (reg:DI 76 [ start ])
        (nil)))

(insn:HI 35 34 36 3 ./CppStatUtilities.cc:309 (set (reg/v:DF 64 [ median ])
        (plus:DF (reg/v:DF 64 [ median ])
            (mem:DF (plus:DI (mult:DI (reg:DI 77 [ end ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 71 [ a ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 34 (nil)))
    (expr_list:REG_DEAD (reg:DI 77 [ end ])
        (expr_list:REG_DEAD (reg/v/f:DI 71 [ a ])
            (nil))))

(note:HI 36 35 37 3 NOTE_INSN_DELETED)

(insn:HI 37 36 484 3 ./CppStatUtilities.cc:309 (set (reg/v:DF 64 [ median ])
        (mult:DF (reg/v:DF 64 [ median ])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC26") [flags 0x2]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 35 (nil))
    (nil))

(jump_insn:HI 484 37 485 3 (set (pc)
        (label_ref 142)) 548 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

(barrier:HI 485 484 40)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 71 72 73
(code_label:HI 40 485 41 4 716 "" [1 uses])

(note:HI 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 42 41 43 4 ("./CppStatUtilities.cc") 311)

(insn:HI 43 42 44 4 ./CppStatUtilities.cc:311 (set (reg:DI 67 [ D.34838 ])
        (sign_extend:DI (reg/v:SI 63 [ len ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 44 43 45 4 ./CppStatUtilities.cc:311 (parallel [
            (set (reg:DI 66 [ D.34839 ])
                (ashift:DI (reg:DI 67 [ D.34838 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 43 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 45 44 46 4 ./CppStatUtilities.cc:311 (set (reg:DI 5 di [ D.34839 ])
        (reg:DI 66 [ D.34839 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 44 (nil))
    (nil))

(call_insn:HI 46 45 47 4 ./CppStatUtilities.cc:311 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 45 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ D.34839 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34839 ]))
        (nil)))

(insn:HI 47 46 49 4 ./CppStatUtilities.cc:311 (set (reg/f:DI 65 [ D.34840 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 81)
            (nil))))

(note:HI 49 47 50 4 ("./CppStatUtilities.cc") 312)

(insn:HI 50 49 51 4 ./CppStatUtilities.cc:312 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 65 [ D.34840 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 47 (nil))
    (nil))

(jump_insn:HI 51 50 53 4 ./CppStatUtilities.cc:312 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 50 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66 67 69 71 72 73

;; Start of basic block 5, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 53 51 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 54 53 55 5 ./CppStatUtilities.cc:312 (set (reg:SI 2 cx)
        (const_int 312 [0x138])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 55 54 56 5 ./CppStatUtilities.cc:312 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 56 55 57 5 ./CppStatUtilities.cc:312 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 57 56 58 5 ./CppStatUtilities.cc:312 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 58 57 59 5 ./CppStatUtilities.cc:312 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 59 58 60 5 ./CppStatUtilities.cc:312 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 54 (insn_list:REG_DEP_TRUE 55 (insn_list:REG_DEP_TRUE 56 (insn_list:REG_DEP_TRUE 57 (insn_list:REG_DEP_TRUE 58 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 60 59 61 5 ./CppStatUtilities.cc:312 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 61 60 62 5 ./CppStatUtilities.cc:312 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 60 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 5, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 62 61 63)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66 67 69 71 72 73
(code_label:HI 63 62 64 6 718 "" [1 uses])

(note:HI 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note:HI 65 64 67 6 ("./CppStatUtilities.cc") 311)

(note:HI 67 65 68 6 ("./CppStatUtilities.cc") 314)

(insn:HI 68 67 69 6 ./CppStatUtilities.cc:314 (set (reg:DI 82 [ start ])
        (sign_extend:DI (reg/v:SI 73 [ start ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 73 [ start ])
        (nil)))

(insn:HI 69 68 70 6 ./CppStatUtilities.cc:314 (parallel [
            (set (reg:DI 68 [ D.34828 ])
                (ashift:DI (reg:DI 82 [ start ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 68 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 82 [ start ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 70 69 76 6 ./CppStatUtilities.cc:314 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg:DI 68 [ D.34828 ])
                    (reg/v/f:DI 71 [ a ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 69 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 71 [ a ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 76 70 77 6 ./CppStatUtilities.cc:314 (set (reg:DI 1 dx [ D.34839 ])
        (reg:DI 66 [ D.34839 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 66 [ D.34839 ])
        (nil)))

(insn:HI 77 76 78 6 ./CppStatUtilities.cc:314 (set (reg:DI 4 si)
        (reg:DI 83)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 70 (nil))
    (expr_list:REG_DEAD (reg:DI 83)
        (nil)))

(insn:HI 78 77 79 6 ./CppStatUtilities.cc:314 (set (reg:DI 5 di [ b ])
        (reg/f:DI 65 [ D.34840 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 79 78 81 6 ./CppStatUtilities.cc:314 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41] <function_decl 0x2b5eb6bd5500 memcpy>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 76 (insn_list:REG_DEP_TRUE 77 (insn_list:REG_DEP_TRUE 78 (nil))))
    (expr_list:REG_UNUSED (reg:DI 0 ax)
        (expr_list:REG_DEAD (reg:DI 1 dx [ D.34839 ])
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 5 di [ b ])
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 0 [0x0])
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ b ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx [ D.34839 ]))
                (nil)))))

(note:HI 81 79 82 6 ("./CppStatUtilities.cc") 316)

(insn:HI 82 81 83 6 ./CppStatUtilities.cc:316 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 63 [ len ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 83 82 160 6 ./CppStatUtilities.cc:316 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 504)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 82 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 68 69 72

(note:HI 160 83 161 NOTE_INSN_LOOP_BEG)

(note:HI 161 160 103 NOTE_INSN_LOOP_END)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67
(code_label:HI 103 161 104 7 720 "" [3 uses])

(note:HI 104 103 105 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 105 104 106 7 ("./CppStatUtilities.cc") 319)

(insn:HI 106 105 107 7 ./CppStatUtilities.cc:319 (set (reg:DI 2 cx)
        (symbol_ref:DI ("compareDouble") [flags 0x41] <function_decl 0x2b5eb6409400 compareDouble>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 107 106 108 7 ./CppStatUtilities.cc:319 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 108 107 109 7 ./CppStatUtilities.cc:319 (set (reg:DI 4 si [ D.34838 ])
        (reg:DI 67 [ D.34838 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 67 [ D.34838 ])
        (nil)))

(insn:HI 109 108 110 7 ./CppStatUtilities.cc:319 (set (reg:DI 5 di [ b ])
        (reg/f:DI 65 [ D.34840 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 110 109 111 7 ./CppStatUtilities.cc:319 (call (mem:QI (symbol_ref:DI ("qsort") [flags 0x41] <function_decl 0x2b5eb5107600 qsort>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 106 (insn_list:REG_DEP_TRUE 107 (insn_list:REG_DEP_TRUE 108 (insn_list:REG_DEP_TRUE 109 (nil)))))
    (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_DEAD (reg:DI 4 si [ D.34838 ])
                (expr_list:REG_DEAD (reg:DI 5 di [ b ])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ b ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si [ D.34838 ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(note:HI 111 110 112 7 ("./CppStatUtilities.cc") 321)

(note:HI 112 111 514 7 NOTE_INSN_DELETED)

(insn 514 112 114 7 ./CppStatUtilities.cc:321 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:SI (reg/v:SI 63 [ len ])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 287 {testsi_1} (nil)
    (nil))

(jump_insn:HI 114 514 117 7 ./CppStatUtilities.cc:321 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 129)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 113 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65

(note:HI 117 114 116 ("./CppStatUtilities.cc") 322)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
(note:HI 116 117 118 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 118 116 119 8 ./CppStatUtilities.cc:322 (parallel [
            (set (reg:SI 96)
                (lshiftrt:SI (reg/v:SI 63 [ len ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 476 {*lshrsi3_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 119 118 120 8 ./CppStatUtilities.cc:322 (parallel [
            (set (reg:SI 97)
                (plus:SI (reg:SI 96)
                    (reg/v:SI 63 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 118 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 96)
            (expr_list:REG_DEAD (reg/v:SI 63 [ len ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(insn:HI 120 119 121 8 ./CppStatUtilities.cc:322 (parallel [
            (set (reg:SI 97)
                (ashiftrt:SI (reg:SI 97)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 441 {*ashrsi3_1_one_bit} (insn_list:REG_DEP_TRUE 119 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg/v:SI 63 [ len ])
                    (const_int 2 [0x2]))
                (nil)))))

(insn:HI 121 120 122 8 ./CppStatUtilities.cc:322 (set (reg:DI 99)
        (sign_extend:DI (reg:SI 97))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 120 (nil))
    (expr_list:REG_DEAD (reg:SI 97)
        (nil)))

(note:HI 122 121 123 8 NOTE_INSN_DELETED)

(insn:HI 123 122 124 8 ./CppStatUtilities.cc:322 (set (reg/v:DF 64 [ median ])
        (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 99)
                        (const_int 8 [0x8]))
                    (reg/f:DI 65 [ D.34840 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 121 (nil))
    (nil))

(insn:HI 124 123 125 8 ./CppStatUtilities.cc:322 (set (reg/v:DF 64 [ median ])
        (plus:DF (reg/v:DF 64 [ median ])
            (mem:DF (plus:DI (mult:DI (reg:DI 99)
                        (const_int 8 [0x8]))
                    (reg/f:DI 65 [ D.34840 ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 123 (nil))
    (expr_list:REG_DEAD (reg:DI 99)
        (nil)))

(note:HI 125 124 126 8 NOTE_INSN_DELETED)

(insn:HI 126 125 496 8 ./CppStatUtilities.cc:322 (set (reg/v:DF 64 [ median ])
        (mult:DF (reg/v:DF 64 [ median ])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC26") [flags 0x2]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 124 (nil))
    (nil))

(jump_insn:HI 496 126 497 8 (set (pc)
        (label_ref 137)) 548 {jump} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65

(barrier:HI 497 496 129)

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65
(code_label:HI 129 497 130 9 723 "" [1 uses])

(note:HI 130 129 131 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note:HI 131 130 132 9 ("./CppStatUtilities.cc") 324)

(insn:HI 132 131 133 9 ./CppStatUtilities.cc:324 (parallel [
            (set (reg:SI 104)
                (lshiftrt:SI (reg/v:SI 63 [ len ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 476 {*lshrsi3_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 133 132 134 9 ./CppStatUtilities.cc:324 (parallel [
            (set (reg:SI 105)
                (plus:SI (reg:SI 104)
                    (reg/v:SI 63 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 132 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 104)
            (expr_list:REG_DEAD (reg/v:SI 63 [ len ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(insn:HI 134 133 135 9 ./CppStatUtilities.cc:324 (parallel [
            (set (reg:SI 105)
                (ashiftrt:SI (reg:SI 105)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 441 {*ashrsi3_1_one_bit} (insn_list:REG_DEP_TRUE 133 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg/v:SI 63 [ len ])
                    (const_int 2 [0x2]))
                (nil)))))

(insn:HI 135 134 136 9 ./CppStatUtilities.cc:324 (set (reg:DI 107)
        (sign_extend:DI (reg:SI 105))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 134 (nil))
    (expr_list:REG_DEAD (reg:SI 105)
        (nil)))

(insn:HI 136 135 137 9 ./CppStatUtilities.cc:324 (set (reg/v:DF 64 [ median ])
        (mem:DF (plus:DI (mult:DI (reg:DI 107)
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 135 (nil))
    (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65
(code_label:HI 137 136 138 10 725 "" [1 uses])

(note:HI 138 137 139 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 139 138 140 10 ("./CppStatUtilities.cc") 326)

(insn:HI 140 139 141 10 ./CppStatUtilities.cc:326 (set (reg:DI 5 di [ b ])
        (reg/f:DI 65 [ D.34840 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 65 [ D.34840 ])
        (nil)))

(call_insn:HI 141 140 142 10 ./CppStatUtilities.cc:326 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 140 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ b ]))
        (nil)))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
(code_label:HI 142 141 143 11 715 "" [2 uses])

(note:HI 143 142 147 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note:HI 147 143 148 11 NOTE_INSN_FUNCTION_END)

(note:HI 148 147 150 11 ("./CppStatUtilities.cc") 329)

(insn:HI 150 148 156 11 ./CppStatUtilities.cc:329 (set (reg/i:DF 21 xmm0 [ <result> ])
        (reg/v:DF 64 [ median ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 64 [ median ])
        (nil)))

(insn:HI 156 150 504 11 ./CppStatUtilities.cc:329 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 150 (nil))
    (nil))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 68 69 72
(code_label:HI 504 156 85 12 753 "" [1 uses])

(note:HI 85 504 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 86 85 163 12 ./CppStatUtilities.cc:316 (parallel [
            (set (reg:DI 60 [ ivtmp.808 ])
                (plus:DI (reg:DI 68 [ D.34828 ])
                    (reg/v/f:DI 72 [ w ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 68 [ D.34828 ])
            (expr_list:REG_DEAD (reg/v/f:DI 72 [ w ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(insn:HI 163 86 164 12 (set (reg:DI 109 [ D.34825 ])
        (zero_extend:DI (reg:SI 69 [ D.34825 ]))) 111 {zero_extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:SI 69 [ D.34825 ])
        (nil)))

(insn:HI 164 163 174 12 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg:DI 109 [ D.34825 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 163 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 174 164 177 12 (parallel [
            (set (reg:DI 114)
                (and:DI (reg:DI 109 [ D.34825 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 297 {*anddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 109 [ D.34825 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 177 174 178 12 ("./CppStatUtilities.cc") 301)

(note:HI 178 177 179 12 ("./CppStatUtilities.cc") 317)

(insn:HI 179 178 180 12 ./CppStatUtilities.cc:317 (set (reg:DF 90)
        (mem:DF (reg/f:DI 65 [ D.34840 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 180 179 181 12 ./CppStatUtilities.cc:317 (set (reg:DF 90)
        (mult:DF (reg:DF 90)
            (mem:DF (reg:DI 60 [ ivtmp.808 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 86 (insn_list:REG_DEP_TRUE 179 (nil)))
    (nil))

(insn:HI 181 180 182 12 ./CppStatUtilities.cc:317 (set (mem:DF (reg/f:DI 65 [ D.34840 ]) [3 S8 A64])
        (reg:DF 90)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 180 (nil))
    (expr_list:REG_DEAD (reg:DF 90)
        (nil)))

(insn:HI 182 181 183 12 ./CppStatUtilities.cc:317 (set (reg:DI 117 [ ivtmp.804 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 183 182 184 12 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 118 [ ivtmp.808 ])
                (plus:DI (reg:DI 60 [ ivtmp.808 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 184 183 185 12 ("./CppStatUtilities.cc") 316)

(insn:HI 185 184 186 12 ./CppStatUtilities.cc:316 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 117 [ ivtmp.804 ])
            (reg:DI 93))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 164 (insn_list:REG_DEP_TRUE 182 (nil)))
    (nil))

(jump_insn:HI 186 185 347 12 ./CppStatUtilities.cc:316 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 103)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 185 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
(note:HI 347 186 345 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 345 347 346 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114)
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(jump_insn:HI 346 345 325 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 88)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 345 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
(note:HI 325 346 323 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 323 325 324 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114)
            (const_int 1 [0x1]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 324 323 303 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 507)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 323 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
(note:HI 303 324 301 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:HI 301 303 302 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114)
            (const_int 2 [0x2]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 302 301 281 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 508)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 301 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
(note:HI 281 302 279 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 279 281 280 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114)
            (const_int 3 [0x3]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 280 279 259 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 509)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 279 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
(note:HI 259 280 257 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:HI 257 259 258 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114)
            (const_int 4 [0x4]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 258 257 237 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 510)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 257 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
(note:HI 237 258 235 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:HI 235 237 236 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114)
            (const_int 5 [0x5]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 236 235 215 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 511)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 235 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 114 117 118
(note:HI 215 236 213 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:HI 213 215 214 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 114)
            (const_int 6 [0x6]))) 2 {cmpdi_1_insn_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 114)
        (nil)))

(jump_insn:HI 214 213 205 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 512)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 213 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93 117 118

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63 65 67 93
(note:HI 205 214 195 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note:HI 195 205 196 20 ("./CppStatUtilities.cc") 301)

(note:HI 196 195 197 20 ("./CppStatUtilities.cc") 317)

(insn:HI 197 196 198 20 ./CppStatUtilities.cc:317 (set (reg:DF 149)
        (mem:DF (plus:DI (reg/f:DI 65 [ D.34840 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 198 197 199 20 ./CppStatUtilities.cc:317 (set (reg:DF 149)
        (mult:DF (reg:DF 149)
            (mem:DF (plus:DI (reg:DI 60 [ ivtmp.808 ])
                    (const_int 8 [0x8])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 197 (nil))
    (nil))

(insn:HI 199 198 200 20 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (reg/f:DI 65 [ D.34840 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 149)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 198 (nil))
    (expr_list:REG_DEAD (reg:DF 149)
        (nil)))

(insn:HI 200 199 201 20 ./CppStatUtilities.cc:317 (set (reg:DI 117 [ ivtmp.804 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 201 200 202 20 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 118 [ ivtmp.808 ])
                (plus:DI (reg:DI 60 [ ivtmp.808 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 60 [ ivtmp.808 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 202 201 512 20 ("./CppStatUtilities.cc") 316)
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
(code_label:HI 512 202 227 21 759 "" [1 uses])

(note:HI 227 512 217 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note:HI 217 227 218 21 ("./CppStatUtilities.cc") 301)

(note:HI 218 217 219 21 ("./CppStatUtilities.cc") 317)

(insn:HI 219 218 220 21 ./CppStatUtilities.cc:317 (set (reg:DF 151)
        (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 220 219 221 21 ./CppStatUtilities.cc:317 (set (reg:DF 151)
        (mult:DF (reg:DF 151)
            (mem:DF (reg:DI 118 [ ivtmp.808 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 219 (nil))
    (nil))

(insn:HI 221 220 222 21 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 151)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 220 (nil))
    (expr_list:REG_DEAD (reg:DF 151)
        (nil)))

(insn:HI 222 221 223 21 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 117 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 223 222 224 21 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 118 [ ivtmp.808 ])
                (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 224 223 511 21 ("./CppStatUtilities.cc") 316)
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
(code_label:HI 511 224 249 22 758 "" [1 uses])

(note:HI 249 511 239 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note:HI 239 249 240 22 ("./CppStatUtilities.cc") 301)

(note:HI 240 239 241 22 ("./CppStatUtilities.cc") 317)

(insn:HI 241 240 242 22 ./CppStatUtilities.cc:317 (set (reg:DF 153)
        (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 242 241 243 22 ./CppStatUtilities.cc:317 (set (reg:DF 153)
        (mult:DF (reg:DF 153)
            (mem:DF (reg:DI 118 [ ivtmp.808 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 241 (nil))
    (nil))

(insn:HI 243 242 244 22 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 153)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 242 (nil))
    (expr_list:REG_DEAD (reg:DF 153)
        (nil)))

(insn:HI 244 243 245 22 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 117 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 245 244 246 22 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 118 [ ivtmp.808 ])
                (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 246 245 510 22 ("./CppStatUtilities.cc") 316)
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
(code_label:HI 510 246 271 23 757 "" [1 uses])

(note:HI 271 510 261 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note:HI 261 271 262 23 ("./CppStatUtilities.cc") 301)

(note:HI 262 261 263 23 ("./CppStatUtilities.cc") 317)

(insn:HI 263 262 264 23 ./CppStatUtilities.cc:317 (set (reg:DF 155)
        (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 264 263 265 23 ./CppStatUtilities.cc:317 (set (reg:DF 155)
        (mult:DF (reg:DF 155)
            (mem:DF (reg:DI 118 [ ivtmp.808 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 263 (nil))
    (nil))

(insn:HI 265 264 266 23 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 155)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 264 (nil))
    (expr_list:REG_DEAD (reg:DF 155)
        (nil)))

(insn:HI 266 265 267 23 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 117 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 267 266 268 23 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 118 [ ivtmp.808 ])
                (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 268 267 509 23 ("./CppStatUtilities.cc") 316)
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
(code_label:HI 509 268 293 24 756 "" [1 uses])

(note:HI 293 509 283 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note:HI 283 293 284 24 ("./CppStatUtilities.cc") 301)

(note:HI 284 283 285 24 ("./CppStatUtilities.cc") 317)

(insn:HI 285 284 286 24 ./CppStatUtilities.cc:317 (set (reg:DF 157)
        (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 286 285 287 24 ./CppStatUtilities.cc:317 (set (reg:DF 157)
        (mult:DF (reg:DF 157)
            (mem:DF (reg:DI 118 [ ivtmp.808 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 285 (nil))
    (nil))

(insn:HI 287 286 288 24 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 157)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 286 (nil))
    (expr_list:REG_DEAD (reg:DF 157)
        (nil)))

(insn:HI 288 287 289 24 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 117 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 289 288 290 24 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 118 [ ivtmp.808 ])
                (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 290 289 508 24 ("./CppStatUtilities.cc") 316)
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
(code_label:HI 508 290 315 25 755 "" [1 uses])

(note:HI 315 508 305 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note:HI 305 315 306 25 ("./CppStatUtilities.cc") 301)

(note:HI 306 305 307 25 ("./CppStatUtilities.cc") 317)

(insn:HI 307 306 308 25 ./CppStatUtilities.cc:317 (set (reg:DF 159)
        (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 308 307 309 25 ./CppStatUtilities.cc:317 (set (reg:DF 159)
        (mult:DF (reg:DF 159)
            (mem:DF (reg:DI 118 [ ivtmp.808 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 307 (nil))
    (nil))

(insn:HI 309 308 310 25 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 159)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 308 (nil))
    (expr_list:REG_DEAD (reg:DF 159)
        (nil)))

(insn:HI 310 309 311 25 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 117 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 311 310 312 25 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 118 [ ivtmp.808 ])
                (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 312 311 507 25 ("./CppStatUtilities.cc") 316)
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
(code_label:HI 507 312 337 26 754 "" [1 uses])

(note:HI 337 507 327 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note:HI 327 337 328 26 ("./CppStatUtilities.cc") 301)

(note:HI 328 327 329 26 ("./CppStatUtilities.cc") 317)

(insn:HI 329 328 330 26 ./CppStatUtilities.cc:317 (set (reg:DF 161)
        (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 330 329 331 26 ./CppStatUtilities.cc:317 (set (reg:DF 161)
        (mult:DF (reg:DF 161)
            (mem:DF (reg:DI 118 [ ivtmp.808 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 329 (nil))
    (nil))

(insn:HI 331 330 332 26 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 161)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 330 (nil))
    (expr_list:REG_DEAD (reg:DF 161)
        (nil)))

(insn:HI 332 331 333 26 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 117 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 333 332 334 26 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 118 [ ivtmp.808 ])
                (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 334 333 335 26 ("./CppStatUtilities.cc") 316)

(insn:HI 335 334 336 26 ./CppStatUtilities.cc:316 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 117 [ ivtmp.804 ])
            (reg:DI 93))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 332 (nil))
    (nil))

(jump_insn:HI 336 335 88 26 ./CppStatUtilities.cc:316 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 103)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 335 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
(code_label:HI 88 336 89 27 722 "" [2 uses])

(note:HI 89 88 90 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note:HI 90 89 92 27 ("./CppStatUtilities.cc") 301)

(note:HI 92 90 93 27 ("./CppStatUtilities.cc") 317)

(insn:HI 93 92 94 27 ./CppStatUtilities.cc:317 (set (reg:DF 119)
        (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 94 93 95 27 ./CppStatUtilities.cc:317 (set (reg:DF 119)
        (mult:DF (reg:DF 119)
            (mem:DF (reg:DI 118 [ ivtmp.808 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 93 (nil))
    (nil))

(insn:HI 95 94 467 27 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 119)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 94 (nil))
    (expr_list:REG_DEAD (reg:DF 119)
        (nil)))

(insn:HI 467 95 98 27 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 98 467 349 27 ("./CppStatUtilities.cc") 316)

(note:HI 349 98 350 27 ("./CppStatUtilities.cc") 301)

(note:HI 350 349 351 27 ("./CppStatUtilities.cc") 317)

(insn:HI 351 350 352 27 ./CppStatUtilities.cc:317 (set (reg:DF 123)
        (mem:DF (plus:DI (mult:DI (reg:DI 116)
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 467 (nil))
    (nil))

(insn:HI 352 351 353 27 ./CppStatUtilities.cc:317 (set (reg:DF 123)
        (mult:DF (reg:DF 123)
            (mem:DF (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 8 [0x8])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 351 (nil))
    (nil))

(insn:HI 353 352 354 27 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 116)
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 123)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 352 (nil))
    (expr_list:REG_DEAD (reg:DF 123)
        (expr_list:REG_DEAD (reg:DI 116)
            (nil))))

(insn:HI 354 353 356 27 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 125 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 356 354 366 27 ("./CppStatUtilities.cc") 316)

(note:HI 366 356 367 27 ("./CppStatUtilities.cc") 301)

(note:HI 367 366 368 27 ("./CppStatUtilities.cc") 317)

(insn:HI 368 367 369 27 ./CppStatUtilities.cc:317 (set (reg:DF 127)
        (mem:DF (plus:DI (mult:DI (reg:DI 125 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 354 (nil))
    (nil))

(insn:HI 369 368 370 27 ./CppStatUtilities.cc:317 (set (reg:DF 127)
        (mult:DF (reg:DF 127)
            (mem:DF (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 16 [0x10])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 368 (nil))
    (nil))

(insn:HI 370 369 371 27 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 125 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 127)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 369 (nil))
    (expr_list:REG_DEAD (reg:DF 127)
        (expr_list:REG_DEAD (reg:DI 125 [ ivtmp.804 ])
            (nil))))

(insn:HI 371 370 373 27 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 129 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 373 371 383 27 ("./CppStatUtilities.cc") 316)

(note:HI 383 373 384 27 ("./CppStatUtilities.cc") 301)

(note:HI 384 383 385 27 ("./CppStatUtilities.cc") 317)

(insn:HI 385 384 386 27 ./CppStatUtilities.cc:317 (set (reg:DF 131)
        (mem:DF (plus:DI (mult:DI (reg:DI 129 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 371 (nil))
    (nil))

(insn:HI 386 385 387 27 ./CppStatUtilities.cc:317 (set (reg:DF 131)
        (mult:DF (reg:DF 131)
            (mem:DF (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 24 [0x18])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 385 (nil))
    (nil))

(insn:HI 387 386 388 27 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 129 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 131)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 386 (nil))
    (expr_list:REG_DEAD (reg:DF 131)
        (expr_list:REG_DEAD (reg:DI 129 [ ivtmp.804 ])
            (nil))))

(insn:HI 388 387 390 27 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 133 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 390 388 400 27 ("./CppStatUtilities.cc") 316)

(note:HI 400 390 401 27 ("./CppStatUtilities.cc") 301)

(note:HI 401 400 402 27 ("./CppStatUtilities.cc") 317)

(insn:HI 402 401 403 27 ./CppStatUtilities.cc:317 (set (reg:DF 135)
        (mem:DF (plus:DI (mult:DI (reg:DI 133 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 388 (nil))
    (nil))

(insn:HI 403 402 404 27 ./CppStatUtilities.cc:317 (set (reg:DF 135)
        (mult:DF (reg:DF 135)
            (mem:DF (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 32 [0x20])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 402 (nil))
    (nil))

(insn:HI 404 403 405 27 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 133 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 135)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 403 (nil))
    (expr_list:REG_DEAD (reg:DF 135)
        (expr_list:REG_DEAD (reg:DI 133 [ ivtmp.804 ])
            (nil))))

(insn:HI 405 404 407 27 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 137 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 407 405 417 27 ("./CppStatUtilities.cc") 316)

(note:HI 417 407 418 27 ("./CppStatUtilities.cc") 301)

(note:HI 418 417 419 27 ("./CppStatUtilities.cc") 317)

(insn:HI 419 418 420 27 ./CppStatUtilities.cc:317 (set (reg:DF 139)
        (mem:DF (plus:DI (mult:DI (reg:DI 137 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 405 (nil))
    (nil))

(insn:HI 420 419 421 27 ./CppStatUtilities.cc:317 (set (reg:DF 139)
        (mult:DF (reg:DF 139)
            (mem:DF (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 40 [0x28])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 419 (nil))
    (nil))

(insn:HI 421 420 422 27 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 137 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 139)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 420 (nil))
    (expr_list:REG_DEAD (reg:DF 139)
        (expr_list:REG_DEAD (reg:DI 137 [ ivtmp.804 ])
            (nil))))

(insn:HI 422 421 424 27 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 141 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 424 422 434 27 ("./CppStatUtilities.cc") 316)

(note:HI 434 424 435 27 ("./CppStatUtilities.cc") 301)

(note:HI 435 434 436 27 ("./CppStatUtilities.cc") 317)

(insn:HI 436 435 437 27 ./CppStatUtilities.cc:317 (set (reg:DF 143)
        (mem:DF (plus:DI (mult:DI (reg:DI 141 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 422 (nil))
    (nil))

(insn:HI 437 436 438 27 ./CppStatUtilities.cc:317 (set (reg:DF 143)
        (mult:DF (reg:DF 143)
            (mem:DF (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 48 [0x30])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 436 (nil))
    (nil))

(insn:HI 438 437 439 27 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 141 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 143)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 437 (nil))
    (expr_list:REG_DEAD (reg:DF 143)
        (expr_list:REG_DEAD (reg:DI 141 [ ivtmp.804 ])
            (nil))))

(insn:HI 439 438 441 27 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 145 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 441 439 451 27 ("./CppStatUtilities.cc") 316)

(note:HI 451 441 452 27 ("./CppStatUtilities.cc") 301)

(note:HI 452 451 453 27 ("./CppStatUtilities.cc") 317)

(insn:HI 453 452 454 27 ./CppStatUtilities.cc:317 (set (reg:DF 147)
        (mem:DF (plus:DI (mult:DI (reg:DI 145 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 439 (nil))
    (nil))

(insn:HI 454 453 455 27 ./CppStatUtilities.cc:317 (set (reg:DF 147)
        (mult:DF (reg:DF 147)
            (mem:DF (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 56 [0x38])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 453 (nil))
    (nil))

(insn:HI 455 454 456 27 ./CppStatUtilities.cc:317 (set (mem:DF (plus:DI (mult:DI (reg:DI 145 [ ivtmp.804 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 65 [ D.34840 ])) [3 S8 A64])
        (reg:DF 147)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 454 (nil))
    (expr_list:REG_DEAD (reg:DF 147)
        (expr_list:REG_DEAD (reg:DI 145 [ ivtmp.804 ])
            (nil))))

(insn:HI 456 455 457 27 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 117 [ ivtmp.804 ])
                (plus:DI (reg:DI 117 [ ivtmp.804 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 457 456 458 27 ./CppStatUtilities.cc:317 (parallel [
            (set (reg:DI 118 [ ivtmp.808 ])
                (plus:DI (reg:DI 118 [ ivtmp.808 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 458 457 459 27 ("./CppStatUtilities.cc") 316)

(insn:HI 459 458 460 27 ./CppStatUtilities.cc:316 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 117 [ ivtmp.804 ])
            (reg:DI 93))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 456 (nil))
    (nil))

(jump_insn:HI 460 459 465 27 ./CppStatUtilities.cc:316 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 103)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 459 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118
(note:HI 465 460 501 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 501 465 502 28 (set (pc)
        (label_ref 88)) 548 {jump} (nil)
    (nil))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 67 93 117 118

(barrier:HI 502 501 0)


;; Function double median(double*, int, int) (_Z6medianPdii)



Pass 0

  Register 60 costs: AREG:716 DREG:716 CREG:716 BREG:716 SIREG:716 DIREG:716 AD_REGS:716 Q_REGS:716 NON_Q_REGS:716 INDEX_REGS:716 LEGACY_REGS:716 GENERAL_REGS:716 SSE_REGS:54640 MMX_REGS:54640 INT_SSE_REGS:54640 MEM:13160
  Register 61 costs: AREG:27300 DREG:27300 CREG:27300 BREG:27300 SIREG:27300 DIREG:27300 AD_REGS:27300 Q_REGS:27300 NON_Q_REGS:61130 INDEX_REGS:27300 LEGACY_REGS:61130 GENERAL_REGS:61130 FP_TOP_REG:44100 FP_SECOND_REG:44100 FLOAT_REGS:44100 SSE_REGS:0 FP_TOP_SSE_REGS:44100 FP_SECOND_SSE_REGS:44100 FLOAT_SSE_REGS:44100 FLOAT_INT_REGS:44100 INT_SSE_REGS:27300 FLOAT_INT_SSE_REGS:44100 ALL_REGS:85890 MEM:23764
  Register 62 costs: AREG:-363 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-359 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:30420 MMX_REGS:30420 FP_TOP_SSE_REGS:30420 FP_SECOND_SSE_REGS:30420 FLOAT_SSE_REGS:30420 FLOAT_INT_REGS:21060 INT_SSE_REGS:30420 FLOAT_INT_SSE_REGS:30420 ALL_REGS:30420 MEM:8283
  Register 63 costs: AREG:0 DREG:-359 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:14105 MMX_REGS:14105 FP_TOP_SSE_REGS:14105 FP_SECOND_SSE_REGS:14105 FLOAT_SSE_REGS:14105 FLOAT_INT_REGS:9765 INT_SSE_REGS:14105 FLOAT_INT_SSE_REGS:14105 ALL_REGS:14105 MEM:3618
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-359 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:726 INDEX_REGS:0 LEGACY_REGS:726 GENERAL_REGS:726 SSE_REGS:14105 MMX_REGS:14105 FP_TOP_SSE_REGS:14105 FP_SECOND_SSE_REGS:14105 FLOAT_SSE_REGS:14105 FLOAT_INT_REGS:9765 INT_SSE_REGS:14105 FLOAT_INT_SSE_REGS:14105 ALL_REGS:14105 MEM:3981
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:30433 MMX_REGS:30433 FP_TOP_SSE_REGS:30433 FP_SECOND_SSE_REGS:30433 FLOAT_SSE_REGS:30433 FLOAT_INT_REGS:21069 INT_SSE_REGS:30433 FLOAT_INT_SSE_REGS:30433 ALL_REGS:30433 MEM:9364
  Register 67 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:1000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:40935 MMX_REGS:40935 INT_SSE_REGS:40935 MEM:11985
  Register 68 costs: AREG:2000 DREG:1000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:32498 MMX_REGS:32498 INT_SSE_REGS:32498 MEM:10038
  Register 69 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:28000 MMX_REGS:28000 FP_TOP_SSE_REGS:28000 FP_SECOND_SSE_REGS:28000 FLOAT_SSE_REGS:28000 FLOAT_INT_REGS:20000 INT_SSE_REGS:28000 FLOAT_INT_SSE_REGS:28000 ALL_REGS:28000 MEM:8000
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:580 INDEX_REGS:0 LEGACY_REGS:580 GENERAL_REGS:580 SSE_REGS:7540 MMX_REGS:7540 FP_TOP_SSE_REGS:7540 FP_SECOND_SSE_REGS:7540 FLOAT_SSE_REGS:7540 FLOAT_INT_REGS:5220 INT_SSE_REGS:7540 FLOAT_INT_SSE_REGS:7540 ALL_REGS:7540 MEM:2320
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:692 INDEX_REGS:0 LEGACY_REGS:692 GENERAL_REGS:692 SSE_REGS:8996 MMX_REGS:8996 FP_TOP_SSE_REGS:8996 FP_SECOND_SSE_REGS:8996 FLOAT_SSE_REGS:8996 FLOAT_INT_REGS:6228 INT_SSE_REGS:8996 FLOAT_INT_SSE_REGS:8996 ALL_REGS:8996 MEM:2768
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:692 INDEX_REGS:0 LEGACY_REGS:692 GENERAL_REGS:692 SSE_REGS:8996 MMX_REGS:8996 FP_TOP_SSE_REGS:8996 FP_SECOND_SSE_REGS:8996 FLOAT_SSE_REGS:8996 FLOAT_INT_REGS:6228 INT_SSE_REGS:8996 FLOAT_INT_SSE_REGS:8996 ALL_REGS:8996 MEM:2768
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:718 INDEX_REGS:0 LEGACY_REGS:718 GENERAL_REGS:718 SSE_REGS:9334 MMX_REGS:9334 FP_TOP_SSE_REGS:9334 FP_SECOND_SSE_REGS:9334 FLOAT_SSE_REGS:9334 FLOAT_INT_REGS:6462 INT_SSE_REGS:9334 FLOAT_INT_SSE_REGS:9334 ALL_REGS:9334 MEM:2872
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-359 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9334 MMX_REGS:9334 FP_TOP_SSE_REGS:9334 FP_SECOND_SSE_REGS:9334 FLOAT_SSE_REGS:9334 FLOAT_INT_REGS:6462 INT_SSE_REGS:9334 FLOAT_INT_SSE_REGS:9334 ALL_REGS:9334 MEM:2513
  Register 88 costs: AREG:358 DREG:358 CREG:358 BREG:358 SIREG:358 DIREG:358 AD_REGS:358 Q_REGS:358 NON_Q_REGS:358 INDEX_REGS:358 LEGACY_REGS:358 GENERAL_REGS:358 SSE_REGS:5012 MMX_REGS:5012 FP_TOP_SSE_REGS:5012 FP_SECOND_SSE_REGS:5012 FLOAT_SSE_REGS:5012 FLOAT_INT_REGS:3580 INT_SSE_REGS:5012 FLOAT_INT_SSE_REGS:5012 ALL_REGS:5012 MEM:1432
  Register 89 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9308 MMX_REGS:9308 INT_SSE_REGS:9308 MEM:2148
  Register 91 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:716 INDEX_REGS:0 LEGACY_REGS:716 GENERAL_REGS:716 SSE_REGS:6981 MMX_REGS:6981 FP_TOP_SSE_REGS:6981 FP_SECOND_SSE_REGS:6981 FLOAT_SSE_REGS:6981 FLOAT_INT_REGS:4833 INT_SSE_REGS:6981 FLOAT_INT_SSE_REGS:6981 ALL_REGS:6981 MEM:2148
  Register 96 costs: AREG:358 DREG:358 CREG:358 BREG:358 SIREG:358 DIREG:358 AD_REGS:358 Q_REGS:358 NON_Q_REGS:358 INDEX_REGS:358 LEGACY_REGS:358 GENERAL_REGS:358 SSE_REGS:5012 MMX_REGS:5012 FP_TOP_SSE_REGS:5012 FP_SECOND_SSE_REGS:5012 FLOAT_SSE_REGS:5012 FLOAT_INT_REGS:3580 INT_SSE_REGS:5012 FLOAT_INT_SSE_REGS:5012 ALL_REGS:5012 MEM:1432
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9308 MMX_REGS:9308 INT_SSE_REGS:9308 MEM:2148
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:358 INDEX_REGS:0 LEGACY_REGS:358 GENERAL_REGS:358 SSE_REGS:4654 MMX_REGS:4654 FP_TOP_SSE_REGS:4654 FP_SECOND_SSE_REGS:4654 FLOAT_SSE_REGS:4654 FLOAT_INT_REGS:3222 INT_SSE_REGS:4654 FLOAT_INT_SSE_REGS:4654 ALL_REGS:4654 MEM:1432

  Register 60 pref GENERAL_REGS or none
  Register 61 pref SSE_REGS or none
  Register 62 pref AREG, else GENERAL_REGS
  Register 63 pref DREG, else GENERAL_REGS
  Register 64 pref SIREG, else GENERAL_REGS
  Register 66 pref DIREG, else GENERAL_REGS
  Register 67 pref SIREG, else GENERAL_REGS
  Register 68 pref DREG, else GENERAL_REGS
  Register 69 pref GENERAL_REGS or none
  Register 70 pref INDEX_REGS, else GENERAL_REGS
  Register 71 pref INDEX_REGS, else GENERAL_REGS
  Register 72 pref INDEX_REGS, else GENERAL_REGS
  Register 77 pref INDEX_REGS, else GENERAL_REGS
  Register 79 pref SIREG, else GENERAL_REGS
  Register 88 pref GENERAL_REGS or none
  Register 89 pref GENERAL_REGS or none
  Register 91 pref INDEX_REGS, else GENERAL_REGS
  Register 96 pref GENERAL_REGS or none
  Register 97 pref GENERAL_REGS or none
  Register 99 pref INDEX_REGS, else GENERAL_REGS


Pass 1

  Register 60 costs: AREG:716 DREG:716 CREG:716 BREG:716 SIREG:716 DIREG:716 AD_REGS:716 Q_REGS:716 NON_Q_REGS:716 INDEX_REGS:716 LEGACY_REGS:716 GENERAL_REGS:716 SSE_REGS:54640 MMX_REGS:54640 INT_SSE_REGS:54640 MEM:13160
  Register 61 costs: AREG:27300 DREG:27300 CREG:27300 BREG:27300 SIREG:27300 DIREG:27300 AD_REGS:27300 Q_REGS:27300 NON_Q_REGS:61130 INDEX_REGS:27300 LEGACY_REGS:61130 GENERAL_REGS:61130 FP_TOP_REG:44100 FP_SECOND_REG:44100 FLOAT_REGS:44100 SSE_REGS:0 FP_TOP_SSE_REGS:44100 FP_SECOND_SSE_REGS:44100 FLOAT_SSE_REGS:44100 FLOAT_INT_REGS:44100 INT_SSE_REGS:27300 FLOAT_INT_SSE_REGS:44100 ALL_REGS:85890 MEM:23764
  Register 62 costs: AREG:-363 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-359 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:30420 MMX_REGS:30420 FP_TOP_SSE_REGS:30420 FP_SECOND_SSE_REGS:30420 FLOAT_SSE_REGS:30420 FLOAT_INT_REGS:21060 INT_SSE_REGS:30420 FLOAT_INT_SSE_REGS:30420 ALL_REGS:30420 MEM:8283
  Register 63 costs: AREG:0 DREG:-359 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:14105 MMX_REGS:14105 FP_TOP_SSE_REGS:14105 FP_SECOND_SSE_REGS:14105 FLOAT_SSE_REGS:14105 FLOAT_INT_REGS:9765 INT_SSE_REGS:14105 FLOAT_INT_SSE_REGS:14105 ALL_REGS:14105 MEM:3618
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-359 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:726 INDEX_REGS:0 LEGACY_REGS:726 GENERAL_REGS:726 SSE_REGS:14105 MMX_REGS:14105 FP_TOP_SSE_REGS:14105 FP_SECOND_SSE_REGS:14105 FLOAT_SSE_REGS:14105 FLOAT_INT_REGS:9765 INT_SSE_REGS:14105 FLOAT_INT_SSE_REGS:14105 ALL_REGS:14105 MEM:3981
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:30433 MMX_REGS:30433 FP_TOP_SSE_REGS:30433 FP_SECOND_SSE_REGS:30433 FLOAT_SSE_REGS:30433 FLOAT_INT_REGS:21069 INT_SSE_REGS:30433 FLOAT_INT_SSE_REGS:30433 ALL_REGS:30433 MEM:9364
  Register 67 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:1000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:40935 MMX_REGS:40935 INT_SSE_REGS:40935 MEM:11985
  Register 68 costs: AREG:2000 DREG:1000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:32498 MMX_REGS:32498 INT_SSE_REGS:32498 MEM:10038
  Register 69 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:28000 MMX_REGS:28000 FP_TOP_SSE_REGS:28000 FP_SECOND_SSE_REGS:28000 FLOAT_SSE_REGS:28000 FLOAT_INT_REGS:20000 INT_SSE_REGS:28000 FLOAT_INT_SSE_REGS:28000 ALL_REGS:28000 MEM:8000
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:580 INDEX_REGS:0 LEGACY_REGS:580 GENERAL_REGS:580 SSE_REGS:7540 MMX_REGS:7540 FP_TOP_SSE_REGS:7540 FP_SECOND_SSE_REGS:7540 FLOAT_SSE_REGS:7540 FLOAT_INT_REGS:5220 INT_SSE_REGS:7540 FLOAT_INT_SSE_REGS:7540 ALL_REGS:7540 MEM:2320
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:692 INDEX_REGS:0 LEGACY_REGS:692 GENERAL_REGS:692 SSE_REGS:8996 MMX_REGS:8996 FP_TOP_SSE_REGS:8996 FP_SECOND_SSE_REGS:8996 FLOAT_SSE_REGS:8996 FLOAT_INT_REGS:6228 INT_SSE_REGS:8996 FLOAT_INT_SSE_REGS:8996 ALL_REGS:8996 MEM:2768
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:692 INDEX_REGS:0 LEGACY_REGS:692 GENERAL_REGS:692 SSE_REGS:8996 MMX_REGS:8996 FP_TOP_SSE_REGS:8996 FP_SECOND_SSE_REGS:8996 FLOAT_SSE_REGS:8996 FLOAT_INT_REGS:6228 INT_SSE_REGS:8996 FLOAT_INT_SSE_REGS:8996 ALL_REGS:8996 MEM:2768
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:718 INDEX_REGS:0 LEGACY_REGS:718 GENERAL_REGS:718 SSE_REGS:9334 MMX_REGS:9334 FP_TOP_SSE_REGS:9334 FP_SECOND_SSE_REGS:9334 FLOAT_SSE_REGS:9334 FLOAT_INT_REGS:6462 INT_SSE_REGS:9334 FLOAT_INT_SSE_REGS:9334 ALL_REGS:9334 MEM:2872
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-359 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9334 MMX_REGS:9334 FP_TOP_SSE_REGS:9334 FP_SECOND_SSE_REGS:9334 FLOAT_SSE_REGS:9334 FLOAT_INT_REGS:6462 INT_SSE_REGS:9334 FLOAT_INT_SSE_REGS:9334 ALL_REGS:9334 MEM:2513
  Register 88 costs: AREG:358 DREG:358 CREG:358 BREG:358 SIREG:358 DIREG:358 AD_REGS:358 Q_REGS:358 NON_Q_REGS:358 INDEX_REGS:358 LEGACY_REGS:358 GENERAL_REGS:358 SSE_REGS:5012 MMX_REGS:5012 FP_TOP_SSE_REGS:5012 FP_SECOND_SSE_REGS:5012 FLOAT_SSE_REGS:5012 FLOAT_INT_REGS:3580 INT_SSE_REGS:5012 FLOAT_INT_SSE_REGS:5012 ALL_REGS:5012 MEM:1432
  Register 89 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9308 MMX_REGS:9308 INT_SSE_REGS:9308 MEM:2148
  Register 91 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:716 INDEX_REGS:0 LEGACY_REGS:716 GENERAL_REGS:716 SSE_REGS:6981 MMX_REGS:6981 FP_TOP_SSE_REGS:6981 FP_SECOND_SSE_REGS:6981 FLOAT_SSE_REGS:6981 FLOAT_INT_REGS:4833 INT_SSE_REGS:6981 FLOAT_INT_SSE_REGS:6981 ALL_REGS:6981 MEM:2148
  Register 96 costs: AREG:358 DREG:358 CREG:358 BREG:358 SIREG:358 DIREG:358 AD_REGS:358 Q_REGS:358 NON_Q_REGS:358 INDEX_REGS:358 LEGACY_REGS:358 GENERAL_REGS:358 SSE_REGS:5012 MMX_REGS:5012 FP_TOP_SSE_REGS:5012 FP_SECOND_SSE_REGS:5012 FLOAT_SSE_REGS:5012 FLOAT_INT_REGS:3580 INT_SSE_REGS:5012 FLOAT_INT_SSE_REGS:5012 ALL_REGS:5012 MEM:1432
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9308 MMX_REGS:9308 INT_SSE_REGS:9308 MEM:2148
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:358 INDEX_REGS:0 LEGACY_REGS:358 GENERAL_REGS:358 SSE_REGS:4654 MMX_REGS:4654 FP_TOP_SSE_REGS:4654 FP_SECOND_SSE_REGS:4654 FLOAT_SSE_REGS:4654 FLOAT_INT_REGS:3222 INT_SSE_REGS:4654 FLOAT_INT_SSE_REGS:4654 ALL_REGS:4654 MEM:1432

101 registers.

Register 60 used 9 times across 29 insns; set 1 time; user var; dies in 2 places; crosses 3 calls; 4 bytes; GENERAL_REGS or none.

Register 61 used 13 times across 18 insns; set 8 times; user var; crosses 1 call; SSE_REGS or none.

Register 62 used 8 times across 30 insns; set 1 time; crosses 2 calls; pref AREG, else GENERAL_REGS; pointer.

Register 63 used 3 times across 9 insns; set 1 time; crosses 1 call; pref DREG, else GENERAL_REGS.

Register 64 used 3 times across 16 insns; set 1 time; crosses 2 calls; pref SIREG, else GENERAL_REGS.

Register 66 used 5 times across 24 insns; set 1 time; user var; dies in 3 places; crosses 1 call; pref DIREG, else GENERAL_REGS; pointer.

Register 67 used 5 times across 18 insns; set 1 time; user var; dies in 3 places; crosses 1 call; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 68 used 3 times across 9 insns; set 1 time; user var; 4 bytes; pref DREG, else GENERAL_REGS.

Register 69 used 2 times across 2 insns in block 0; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 70 used 2 times across 2 insns in block 1; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 71 used 2 times across 3 insns in block 3; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 72 used 2 times across 3 insns in block 3; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 77 used 2 times across 2 insns in block 6; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 79 used 2 times across 3 insns in block 6; set 1 time; pref SIREG, else GENERAL_REGS.

Register 88 used 2 times across 2 insns in block 7; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 89 used 4 times across 4 insns in block 7; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 91 used 3 times across 3 insns in block 7; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 96 used 2 times across 2 insns in block 8; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 97 used 4 times across 4 insns in block 8; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 99 used 2 times across 2 insns in block 8; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

11 basic blocks, 15 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [71.0%]  1 [29.0%]  (fallthru)
Registers live at start: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 67 68

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  0 [29.0%]  (fallthru)
Successors:  10 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 7100, maybe hot.
Predecessors:  0 [71.0%] 
Successors:  4 [51.2%]  3 [48.8%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 67 68
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 67 68

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 3465, maybe hot.
Predecessors:  2 [48.8%]  (fallthru)
Successors:  10 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 3635, maybe hot.
Predecessors:  2 [51.2%] 
Successors:  6 [99.0%]  5 [1.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 64 66 67

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 36, maybe hot.
Predecessors:  4 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 3599, maybe hot.
Predecessors:  4 [99.0%] 
Successors:  8 [50.0%]  7 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 64 66 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1799, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
Successors:  9 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 1799, maybe hot.
Predecessors:  6 [50.0%] 
Successors:  9 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 3599, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [100.0%] 
Successors:  10 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

Basic block 10 prev 9, next -2, loop_depth 0, count 0, freq 9964, maybe hot.
Predecessors:  9 [100.0%]  (fallthru) 1 [100.0%]  3 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Register 69 in 0.
;; Register 70 in 0.
;; Register 71 in 0.
;; Register 72 in 1.
;; Register 77 in 4.
;; Register 79 in 4.
;; Register 88 in 0.
;; Register 89 in 0.
;; Register 91 in 0.
;; Register 96 in 0.
;; Register 97 in 0.
;; Register 99 in 0.
(note:HI 1 0 8 ("./CppStatUtilities.cc") 271)

;; Start of basic block 0, registers live: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 8 4 0 ./CppStatUtilities.cc:271 (set (reg/v/f:DI 66 [ a ])
        (reg:DI 5 di [ a ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:271 (set (reg/v:SI 67 [ start ])
        (reg:SI 4 si [ start ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ start ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:271 (set (reg/v:SI 68 [ end ])
        (reg:SI 1 dx [ end ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 1 dx [ end ])
        (nil)))

(note:HI 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 10 6 11 0 ("./CppStatUtilities.cc") 274)

(insn:HI 11 10 12 0 ./CppStatUtilities.cc:274 (parallel [
            (set (reg:SI 69)
                (minus:SI (reg/v:SI 68 [ end ])
                    (reg/v:SI 67 [ start ])))
            (clobber (reg:CC 17 flags))
        ]) 242 {*subsi_1} (insn_list:REG_DEP_TRUE 4 (insn_list:REG_DEP_TRUE 5 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 12 11 13 0 ./CppStatUtilities.cc:274 (parallel [
            (set (reg/v:SI 60 [ len ])
                (plus:SI (reg:SI 69)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 11 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 69)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 13 12 14 0 ("./CppStatUtilities.cc") 276)

(insn:HI 14 13 15 0 ./CppStatUtilities.cc:276 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 60 [ len ])
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 12 (nil))
    (nil))

(jump_insn:HI 15 14 18 0 ./CppStatUtilities.cc:276 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 67 68

(note:HI 18 15 17 ("./CppStatUtilities.cc") 277)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67
(note:HI 17 18 19 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 19 17 20 1 ./CppStatUtilities.cc:277 (set (reg:DI 70 [ start ])
        (sign_extend:DI (reg/v:SI 67 [ start ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 67 [ start ])
        (nil)))

(insn:HI 20 19 135 1 ./CppStatUtilities.cc:277 (set (reg/v:DF 61 [ median ])
        (mem:DF (plus:DI (mult:DI (reg:DI 70 [ start ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 19 (nil))
    (expr_list:REG_DEAD (reg:DI 70 [ start ])
        (expr_list:REG_DEAD (reg/v/f:DI 66 [ a ])
            (nil))))

(jump_insn:HI 135 20 136 1 (set (pc)
        (label_ref 117)) 548 {jump} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

(barrier:HI 136 135 23)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 67 68
(code_label:HI 23 136 24 2 764 "" [1 uses])

(note:HI 24 23 25 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 25 24 26 2 ("./CppStatUtilities.cc") 278)

(insn:HI 26 25 27 2 ./CppStatUtilities.cc:278 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 60 [ len ])
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 27 26 30 2 ./CppStatUtilities.cc:278 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 26 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5120 [0x1400])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 67 68

(note:HI 30 27 29 ("./CppStatUtilities.cc") 279)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 67 68
(note:HI 29 30 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 31 29 32 3 ./CppStatUtilities.cc:279 (set (reg:DI 71 [ start ])
        (sign_extend:DI (reg/v:SI 67 [ start ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 67 [ start ])
        (nil)))

(insn:HI 32 31 33 3 ./CppStatUtilities.cc:279 (set (reg:DI 72 [ end ])
        (sign_extend:DI (reg/v:SI 68 [ end ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 68 [ end ])
        (nil)))

(insn:HI 33 32 34 3 ./CppStatUtilities.cc:279 (set (reg/v:DF 61 [ median ])
        (mem:DF (plus:DI (mult:DI (reg:DI 71 [ start ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_DEAD (reg:DI 71 [ start ])
        (nil)))

(insn:HI 34 33 35 3 ./CppStatUtilities.cc:279 (set (reg/v:DF 61 [ median ])
        (plus:DF (reg/v:DF 61 [ median ])
            (mem:DF (plus:DI (mult:DI (reg:DI 72 [ end ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 66 [ a ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 32 (insn_list:REG_DEP_TRUE 33 (nil)))
    (expr_list:REG_DEAD (reg:DI 72 [ end ])
        (expr_list:REG_DEAD (reg/v/f:DI 66 [ a ])
            (nil))))

(note:HI 35 34 36 3 NOTE_INSN_DELETED)

(insn:HI 36 35 137 3 ./CppStatUtilities.cc:279 (set (reg/v:DF 61 [ median ])
        (mult:DF (reg/v:DF 61 [ median ])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC27") [flags 0x2]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 34 (nil))
    (nil))

(jump_insn:HI 137 36 138 3 (set (pc)
        (label_ref 117)) 548 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

(barrier:HI 138 137 39)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 67
(code_label:HI 39 138 40 4 767 "" [1 uses])

(note:HI 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 41 40 42 4 ("./CppStatUtilities.cc") 281)

(insn:HI 42 41 43 4 ./CppStatUtilities.cc:281 (set (reg:DI 64 [ D.34796 ])
        (sign_extend:DI (reg/v:SI 60 [ len ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 43 42 44 4 ./CppStatUtilities.cc:281 (parallel [
            (set (reg:DI 63 [ D.34797 ])
                (ashift:DI (reg:DI 64 [ D.34796 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 42 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 44 43 45 4 ./CppStatUtilities.cc:281 (set (reg:DI 5 di [ D.34797 ])
        (reg:DI 63 [ D.34797 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 43 (nil))
    (nil))

(call_insn:HI 45 44 46 4 ./CppStatUtilities.cc:281 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 44 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ D.34797 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34797 ]))
        (nil)))

(insn:HI 46 45 48 4 ./CppStatUtilities.cc:281 (set (reg/f:DI 62 [ D.34798 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 45 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 76)
            (nil))))

(note:HI 48 46 49 4 ("./CppStatUtilities.cc") 282)

(insn:HI 49 48 50 4 ./CppStatUtilities.cc:282 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ D.34798 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 46 (nil))
    (nil))

(jump_insn:HI 50 49 52 4 ./CppStatUtilities.cc:282 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 49 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 64 66 67

;; Start of basic block 5, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 52 50 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 53 52 54 5 ./CppStatUtilities.cc:282 (set (reg:SI 2 cx)
        (const_int 282 [0x11a])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 54 53 55 5 ./CppStatUtilities.cc:282 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 55 54 56 5 ./CppStatUtilities.cc:282 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 56 55 57 5 ./CppStatUtilities.cc:282 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 57 56 58 5 ./CppStatUtilities.cc:282 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 58 57 59 5 ./CppStatUtilities.cc:282 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 53 (insn_list:REG_DEP_TRUE 54 (insn_list:REG_DEP_TRUE 55 (insn_list:REG_DEP_TRUE 56 (insn_list:REG_DEP_TRUE 57 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 59 58 60 5 ./CppStatUtilities.cc:282 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 60 59 61 5 ./CppStatUtilities.cc:282 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 59 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 5, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 61 60 62)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 64 66 67
(code_label:HI 62 61 63 6 769 "" [1 uses])

(note:HI 63 62 64 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note:HI 64 63 66 6 ("./CppStatUtilities.cc") 281)

(note:HI 66 64 67 6 ("./CppStatUtilities.cc") 284)

(insn:HI 67 66 68 6 ./CppStatUtilities.cc:284 (set (reg:DI 77 [ start ])
        (sign_extend:DI (reg/v:SI 67 [ start ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 67 [ start ])
        (nil)))

(note:HI 68 67 69 6 NOTE_INSN_DELETED)

(insn:HI 69 68 75 6 ./CppStatUtilities.cc:284 (set (reg:DI 79)
        (plus:DI (mult:DI (reg:DI 77 [ start ])
                (const_int 8 [0x8]))
            (reg/v/f:DI 66 [ a ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 67 (nil))
    (expr_list:REG_DEAD (reg:DI 77 [ start ])
        (expr_list:REG_DEAD (reg/v/f:DI 66 [ a ])
            (nil))))

(insn:HI 75 69 76 6 ./CppStatUtilities.cc:284 (set (reg:DI 1 dx [ D.34797 ])
        (reg:DI 63 [ D.34797 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 63 [ D.34797 ])
        (nil)))

(insn:HI 76 75 77 6 ./CppStatUtilities.cc:284 (set (reg:DI 4 si)
        (reg:DI 79)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 69 (nil))
    (expr_list:REG_DEAD (reg:DI 79)
        (nil)))

(insn:HI 77 76 78 6 ./CppStatUtilities.cc:284 (set (reg:DI 5 di [ b ])
        (reg/f:DI 62 [ D.34798 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 78 77 80 6 ./CppStatUtilities.cc:284 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41] <function_decl 0x2b5eb6bd5500 memcpy>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 75 (insn_list:REG_DEP_TRUE 76 (insn_list:REG_DEP_TRUE 77 (nil))))
    (expr_list:REG_UNUSED (reg:DI 0 ax)
        (expr_list:REG_DEAD (reg:DI 1 dx [ D.34797 ])
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 5 di [ b ])
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 0 [0x0])
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ b ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx [ D.34797 ]))
                (nil)))))

(note:HI 80 78 81 6 ("./CppStatUtilities.cc") 286)

(insn:HI 81 80 82 6 ./CppStatUtilities.cc:286 (set (reg:DI 2 cx)
        (symbol_ref:DI ("compareDouble") [flags 0x41] <function_decl 0x2b5eb6409400 compareDouble>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 82 81 83 6 ./CppStatUtilities.cc:286 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 83 82 84 6 ./CppStatUtilities.cc:286 (set (reg:DI 4 si [ D.34796 ])
        (reg:DI 64 [ D.34796 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 64 [ D.34796 ])
        (nil)))

(insn:HI 84 83 85 6 ./CppStatUtilities.cc:286 (set (reg:DI 5 di [ b ])
        (reg/f:DI 62 [ D.34798 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 85 84 86 6 ./CppStatUtilities.cc:286 (call (mem:QI (symbol_ref:DI ("qsort") [flags 0x41] <function_decl 0x2b5eb5107600 qsort>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 81 (insn_list:REG_DEP_TRUE 82 (insn_list:REG_DEP_TRUE 83 (insn_list:REG_DEP_TRUE 84 (nil)))))
    (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_DEAD (reg:DI 4 si [ D.34796 ])
                (expr_list:REG_DEAD (reg:DI 5 di [ b ])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ b ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si [ D.34796 ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(note:HI 86 85 87 6 ("./CppStatUtilities.cc") 288)

(note:HI 87 86 142 6 NOTE_INSN_DELETED)

(insn 142 87 89 6 ./CppStatUtilities.cc:288 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:SI (reg/v:SI 60 [ len ])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 287 {testsi_1} (nil)
    (nil))

(jump_insn:HI 89 142 92 6 ./CppStatUtilities.cc:288 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 88 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62

(note:HI 92 89 91 ("./CppStatUtilities.cc") 289)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62
(note:HI 91 92 93 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 93 91 94 7 ./CppStatUtilities.cc:289 (parallel [
            (set (reg:SI 88)
                (lshiftrt:SI (reg/v:SI 60 [ len ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 476 {*lshrsi3_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 94 93 95 7 ./CppStatUtilities.cc:289 (parallel [
            (set (reg:SI 89)
                (plus:SI (reg:SI 88)
                    (reg/v:SI 60 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 93 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 88)
            (expr_list:REG_DEAD (reg/v:SI 60 [ len ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(insn:HI 95 94 96 7 ./CppStatUtilities.cc:289 (parallel [
            (set (reg:SI 89)
                (ashiftrt:SI (reg:SI 89)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 441 {*ashrsi3_1_one_bit} (insn_list:REG_DEP_TRUE 94 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg/v:SI 60 [ len ])
                    (const_int 2 [0x2]))
                (nil)))))

(insn:HI 96 95 97 7 ./CppStatUtilities.cc:289 (set (reg:DI 91)
        (sign_extend:DI (reg:SI 89))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 95 (nil))
    (expr_list:REG_DEAD (reg:SI 89)
        (nil)))

(note:HI 97 96 98 7 NOTE_INSN_DELETED)

(insn:HI 98 97 99 7 ./CppStatUtilities.cc:289 (set (reg/v:DF 61 [ median ])
        (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 91)
                        (const_int 8 [0x8]))
                    (reg/f:DI 62 [ D.34798 ]))
                (const_int -8 [0xfffffffffffffff8])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 96 (nil))
    (nil))

(insn:HI 99 98 100 7 ./CppStatUtilities.cc:289 (set (reg/v:DF 61 [ median ])
        (plus:DF (reg/v:DF 61 [ median ])
            (mem:DF (plus:DI (mult:DI (reg:DI 91)
                        (const_int 8 [0x8]))
                    (reg/f:DI 62 [ D.34798 ])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 98 (nil))
    (expr_list:REG_DEAD (reg:DI 91)
        (nil)))

(note:HI 100 99 101 7 NOTE_INSN_DELETED)

(insn:HI 101 100 139 7 ./CppStatUtilities.cc:289 (set (reg/v:DF 61 [ median ])
        (mult:DF (reg/v:DF 61 [ median ])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC27") [flags 0x2]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 99 (nil))
    (nil))

(jump_insn:HI 139 101 140 7 (set (pc)
        (label_ref 112)) 548 {jump} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62

(barrier:HI 140 139 104)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62
(code_label:HI 104 140 105 8 771 "" [1 uses])

(note:HI 105 104 106 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note:HI 106 105 107 8 ("./CppStatUtilities.cc") 291)

(insn:HI 107 106 108 8 ./CppStatUtilities.cc:291 (parallel [
            (set (reg:SI 96)
                (lshiftrt:SI (reg/v:SI 60 [ len ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 476 {*lshrsi3_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 108 107 109 8 ./CppStatUtilities.cc:291 (parallel [
            (set (reg:SI 97)
                (plus:SI (reg:SI 96)
                    (reg/v:SI 60 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 107 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 96)
            (expr_list:REG_DEAD (reg/v:SI 60 [ len ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(insn:HI 109 108 110 8 ./CppStatUtilities.cc:291 (parallel [
            (set (reg:SI 97)
                (ashiftrt:SI (reg:SI 97)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 441 {*ashrsi3_1_one_bit} (insn_list:REG_DEP_TRUE 108 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg/v:SI 60 [ len ])
                    (const_int 2 [0x2]))
                (nil)))))

(insn:HI 110 109 111 8 ./CppStatUtilities.cc:291 (set (reg:DI 99)
        (sign_extend:DI (reg:SI 97))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 109 (nil))
    (expr_list:REG_DEAD (reg:SI 97)
        (nil)))

(insn:HI 111 110 112 8 ./CppStatUtilities.cc:291 (set (reg/v:DF 61 [ median ])
        (mem:DF (plus:DI (mult:DI (reg:DI 99)
                    (const_int 8 [0x8]))
                (reg/f:DI 62 [ D.34798 ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 110 (nil))
    (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62
(code_label:HI 112 111 113 9 773 "" [1 uses])

(note:HI 113 112 114 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note:HI 114 113 115 9 ("./CppStatUtilities.cc") 293)

(insn:HI 115 114 116 9 ./CppStatUtilities.cc:293 (set (reg:DI 5 di [ b ])
        (reg/f:DI 62 [ D.34798 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 62 [ D.34798 ])
        (nil)))

(call_insn:HI 116 115 117 9 ./CppStatUtilities.cc:293 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 115 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ b ]))
        (nil)))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
(code_label:HI 117 116 118 10 766 "" [2 uses])

(note:HI 118 117 122 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 122 118 123 10 NOTE_INSN_FUNCTION_END)

(note:HI 123 122 125 10 ("./CppStatUtilities.cc") 296)

(insn:HI 125 123 131 10 ./CppStatUtilities.cc:296 (set (reg/i:DF 21 xmm0 [ <result> ])
        (reg/v:DF 61 [ median ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 61 [ median ])
        (nil)))

(insn:HI 131 125 0 10 ./CppStatUtilities.cc:296 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 125 (nil))
    (nil))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function double median(double*, int) (_Z6medianPdi)



Pass 0

  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-2000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1000 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 62 costs: AREG:0 DREG:-1000 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:6000

  Register 60 pref DIREG, else GENERAL_REGS
  Register 61 pref SIREG, else GENERAL_REGS
  Register 62 pref DREG, else GENERAL_REGS


Pass 1

  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-2000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1000 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 62 costs: AREG:0 DREG:-1000 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:6000

63 registers.

Register 60 used 2 times across 6 insns in block 0; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 61 used 2 times across 2 insns in block 0; set 1 time; user var; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 62 used 2 times across 2 insns in block 0; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

1 basic blocks, 2 edges.

Basic block 0 prev -1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Register 60 in 5.
;; Register 61 in 4.
;; Register 62 in 1.
(note:HI 1 0 7 ("./CppStatUtilities.cc") 334)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 7 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 7 4 0 ./CppStatUtilities.cc:334 (set (reg/v/f:DI 60 [ data ])
        (reg:DI 5 di [ data ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:334 (set (reg/v:SI 61 [ dataLen ])
        (reg:SI 4 si [ dataLen ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ dataLen ])
        (nil)))

(note:HI 5 4 9 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 9 5 10 0 ("./CppStatUtilities.cc") 336)

(insn:HI 10 9 11 0 ./CppStatUtilities.cc:336 (parallel [
            (set (reg:SI 62)
                (plus:SI (reg/v:SI 61 [ dataLen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 61 [ dataLen ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 11 10 12 0 ./CppStatUtilities.cc:336 (set (reg:SI 1 dx)
        (reg:SI 62)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:SI 62)
        (nil)))

(insn:HI 12 11 13 0 ./CppStatUtilities.cc:336 (set (reg:SI 4 si)
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 13 12 14 0 ./CppStatUtilities.cc:336 (set (reg:DI 5 di [ data ])
        (reg/v/f:DI 60 [ data ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 3 (nil))
    (expr_list:REG_DEAD (reg/v/f:DI 60 [ data ])
        (nil)))

(call_insn/j:HI 14 13 15 0 ./CppStatUtilities.cc:336 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("_Z6medianPdii") [flags 0x3] <function_decl 0x2b5eb6361e00 median>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 11 (insn_list:REG_DEP_TRUE 12 (insn_list:REG_DEP_TRUE 13 (nil))))
    (expr_list:REG_DEAD (reg:SI 1 dx)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 5 di [ data ])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ data ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (nil)))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

(barrier:HI 15 14 17)

(note:HI 17 15 18 NOTE_INSN_FUNCTION_END)

(note:HI 18 17 0 ("./CppStatUtilities.cc") 337)


;; Function void madInPlace(double*, int, double*, double&, double&, double) (_Z10madInPlacePdiS_RdS0_d)



Pass 0

  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22880 MMX_REGS:22880 FP_TOP_SSE_REGS:22880 FP_SECOND_SSE_REGS:22880 FLOAT_SSE_REGS:22880 FLOAT_INT_REGS:15840 INT_SSE_REGS:22880 FLOAT_INT_SSE_REGS:22880 ALL_REGS:22880 MEM:6929
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-222 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10855 MMX_REGS:10855 FP_TOP_SSE_REGS:10855 FP_SECOND_SSE_REGS:10855 FLOAT_SSE_REGS:10855 FLOAT_INT_REGS:7515 INT_SSE_REGS:10855 FLOAT_INT_SSE_REGS:10855 ALL_REGS:10855 MEM:2827
  Register 65 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22880 MMX_REGS:22880 FP_TOP_SSE_REGS:22880 FP_SECOND_SSE_REGS:22880 FLOAT_SSE_REGS:22880 FLOAT_INT_REGS:15840 INT_SSE_REGS:22880 FLOAT_INT_SSE_REGS:22880 ALL_REGS:22880 MEM:6929
  Register 66 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22880 MMX_REGS:22880 FP_TOP_SSE_REGS:22880 FP_SECOND_SSE_REGS:22880 FLOAT_SSE_REGS:22880 FLOAT_INT_REGS:15840 INT_SSE_REGS:22880 FLOAT_INT_SSE_REGS:22880 ALL_REGS:22880 MEM:7040
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 68 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6660 INDEX_REGS:2886 LEGACY_REGS:6660 GENERAL_REGS:6660 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9324 MEM:2664
  Register 70 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:8600 INDEX_REGS:5200 LEGACY_REGS:8600 GENERAL_REGS:8600 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:12600 MEM:4000
  Register 74 costs: SSE_REGS:0 FP_TOP_SSE_REGS:27846 FP_SECOND_SSE_REGS:27846 FLOAT_SSE_REGS:27846 INT_SSE_REGS:58606 FLOAT_INT_SSE_REGS:58606 ALL_REGS:58606 MEM:11566
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2564 INDEX_REGS:0 LEGACY_REGS:2564 GENERAL_REGS:2564 SSE_REGS:44993 MMX_REGS:44993 FP_TOP_SSE_REGS:44993 FP_SECOND_SSE_REGS:44993 FLOAT_SSE_REGS:44993 FLOAT_INT_REGS:31149 INT_SSE_REGS:44993 FLOAT_INT_SSE_REGS:44993 ALL_REGS:44993 MEM:12562
  Register 84 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 89 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 94 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 99 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 103 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 104 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 109 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 113 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 114 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 118 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 119 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 122 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 125 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 128 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 131 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 134 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 137 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 140 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600

  Register 63 pref DIREG, else GENERAL_REGS
  Register 64 pref SIREG, else GENERAL_REGS
  Register 65 pref DIREG, else GENERAL_REGS
  Register 66 pref CREG, else GENERAL_REGS
  Register 67 pref GENERAL_REGS or none
  Register 68 pref SSE_REGS or none
  Register 70 pref SSE_REGS or none
  Register 74 pref SSE_REGS or none
  Register 79 pref GENERAL_REGS or none
  Register 80 pref INDEX_REGS, else GENERAL_REGS
  Register 82 pref GENERAL_REGS or none
  Register 83 pref INDEX_REGS, else GENERAL_REGS
  Register 84 pref SSE_REGS or none
  Register 89 pref SSE_REGS or none
  Register 93 pref INDEX_REGS, else GENERAL_REGS
  Register 94 pref SSE_REGS or none
  Register 98 pref INDEX_REGS, else GENERAL_REGS
  Register 99 pref SSE_REGS or none
  Register 103 pref INDEX_REGS, else GENERAL_REGS
  Register 104 pref SSE_REGS or none
  Register 108 pref INDEX_REGS, else GENERAL_REGS
  Register 109 pref SSE_REGS or none
  Register 113 pref INDEX_REGS, else GENERAL_REGS
  Register 114 pref SSE_REGS or none
  Register 118 pref INDEX_REGS, else GENERAL_REGS
  Register 119 pref SSE_REGS or none
  Register 122 pref SSE_REGS or none
  Register 125 pref SSE_REGS or none
  Register 128 pref SSE_REGS or none
  Register 131 pref SSE_REGS or none
  Register 134 pref SSE_REGS or none
  Register 137 pref SSE_REGS or none
  Register 140 pref SSE_REGS or none


Pass 1

  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22880 MMX_REGS:22880 FP_TOP_SSE_REGS:22880 FP_SECOND_SSE_REGS:22880 FLOAT_SSE_REGS:22880 FLOAT_INT_REGS:15840 INT_SSE_REGS:22880 FLOAT_INT_SSE_REGS:22880 ALL_REGS:22880 MEM:6929
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-222 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10855 MMX_REGS:10855 FP_TOP_SSE_REGS:10855 FP_SECOND_SSE_REGS:10855 FLOAT_SSE_REGS:10855 FLOAT_INT_REGS:7515 INT_SSE_REGS:10855 FLOAT_INT_SSE_REGS:10855 ALL_REGS:10855 MEM:2827
  Register 65 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22880 MMX_REGS:22880 FP_TOP_SSE_REGS:22880 FP_SECOND_SSE_REGS:22880 FLOAT_SSE_REGS:22880 FLOAT_INT_REGS:15840 INT_SSE_REGS:22880 FLOAT_INT_SSE_REGS:22880 ALL_REGS:22880 MEM:6929
  Register 66 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22880 MMX_REGS:22880 FP_TOP_SSE_REGS:22880 FP_SECOND_SSE_REGS:22880 FLOAT_SSE_REGS:22880 FLOAT_INT_REGS:15840 INT_SSE_REGS:22880 FLOAT_INT_SSE_REGS:22880 ALL_REGS:22880 MEM:7040
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 68 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6660 INDEX_REGS:2886 LEGACY_REGS:6660 GENERAL_REGS:6660 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9324 MEM:2664
  Register 70 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:8600 INDEX_REGS:5200 LEGACY_REGS:8600 GENERAL_REGS:8600 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:12600 MEM:4000
  Register 74 costs: SSE_REGS:0 FP_TOP_SSE_REGS:27846 FP_SECOND_SSE_REGS:27846 FLOAT_SSE_REGS:27846 INT_SSE_REGS:58606 FLOAT_INT_SSE_REGS:58606 ALL_REGS:58606 MEM:11566
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2564 INDEX_REGS:0 LEGACY_REGS:2564 GENERAL_REGS:2564 SSE_REGS:44993 MMX_REGS:44993 FP_TOP_SSE_REGS:44993 FP_SECOND_SSE_REGS:44993 FLOAT_SSE_REGS:44993 FLOAT_INT_REGS:31149 INT_SSE_REGS:44993 FLOAT_INT_SSE_REGS:44993 ALL_REGS:44993 MEM:12562
  Register 84 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 89 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 94 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 99 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 103 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 104 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 109 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 113 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 114 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 118 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 119 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 122 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 125 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 128 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 131 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 134 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 137 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 140 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600

143 registers.

Register 63 used 18 times across 125 insns; set 1 time; user var; dies in 0 places; crosses 1 call; pref DIREG, else GENERAL_REGS; pointer.

Register 64 used 8 times across 125 insns; set 1 time; user var; crosses 1 call; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 65 used 18 times across 125 insns; set 1 time; user var; crosses 1 call; pref DIREG, else GENERAL_REGS; pointer.

Register 66 used 18 times across 122 insns; set 1 time; user var; dies in 0 places; crosses 1 call; pref CREG, else GENERAL_REGS; pointer.

Register 67 used 2 times across 126 insns; set 1 time; user var; crosses 2 calls; GENERAL_REGS or none; pointer.

Register 68 used 4 times across 126 insns; set 2 times; user var; crosses 2 calls; SSE_REGS or none.

Register 70 used 6 times across 6 insns in block 2; set 3 times; SSE_REGS or none.

Register 74 used 17 times across 226 insns; set 1 time; dies in 0 places; 16 bytes; SSE_REGS or none.

Register 79 used 10 times across 24 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 80 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 82 used 19 times across 218 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 83 used 37 times across 214 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 84 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 89 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 93 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 94 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 98 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 99 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 103 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 104 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 108 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 109 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 113 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 114 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 118 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 119 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 122 used 6 times across 6 insns in block 10; set 3 times; SSE_REGS or none.

Register 125 used 6 times across 6 insns in block 11; set 3 times; SSE_REGS or none.

Register 128 used 6 times across 6 insns in block 12; set 3 times; SSE_REGS or none.

Register 131 used 6 times across 6 insns in block 13; set 3 times; SSE_REGS or none.

Register 134 used 6 times across 6 insns in block 14; set 3 times; SSE_REGS or none.

Register 137 used 6 times across 6 insns in block 15; set 3 times; SSE_REGS or none.

Register 140 used 6 times across 6 insns in block 16; set 3 times; SSE_REGS or none.

19 basic blocks, 31 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  1 [10.0%]  (fallthru) 2 [90.0%] 
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  16 [10.0%]  17 [10.0%]  (loop_exit) 2 [10.0%]  0 [10.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 67 68
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  3 [90.0%]  (fallthru,dfs_back) 1 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  2 [90.0%]  (fallthru,dfs_back)
Successors:  4 [87.5%]  (fallthru) 17 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
Invalid sum of incoming frequencies 900, should be 771

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  3 [87.5%]  (fallthru)
Successors:  5 [85.7%]  (fallthru) 16 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  4 [85.7%]  (fallthru)
Successors:  6 [83.3%]  (fallthru) 15 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  5 [83.3%]  (fallthru)
Successors:  7 [80.0%]  (fallthru) 14 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  6 [80.0%]  (fallthru)
Successors:  8 [75.0%]  (fallthru) 13 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  7 [75.0%]  (fallthru)
Successors:  9 [66.7%]  (fallthru) 12 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  8 [66.7%]  (fallthru)
Successors:  10 [50.0%]  (fallthru) 11 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Invalid sum of incoming frequencies 300, should be 900

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
Successors:  11 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Invalid sum of incoming frequencies 450, should be 900

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 9 [50.0%] 
Successors:  12 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Invalid sum of incoming frequencies 1350, should be 900

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 8 [33.3%] 
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Invalid sum of incoming frequencies 1050, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 7 [25.0%] 
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Invalid sum of incoming frequencies 1050, should be 900

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 6 [20.0%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Invalid sum of incoming frequencies 1035, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 5 [16.7%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Invalid sum of incoming frequencies 1020, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 4 [14.3%] 
Successors:  17 [90.0%]  (fallthru,dfs_back) 1 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Invalid sum of incoming frequencies 1007, should be 900

Basic block 17 prev 16, next 18, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  16 [90.0%]  (fallthru,dfs_back) 18 [100.0%]  3 [12.5%] 
Successors:  18 [90.0%]  (fallthru,dfs_back) 1 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 18 prev 17, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  17 [90.0%]  (fallthru,dfs_back)
Successors:  17 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

;; Register 70 in 21.
;; Register 80 in 0.
;; Register 84 in 21.
;; Register 89 in 21.
;; Register 93 in 0.
;; Register 94 in 21.
;; Register 98 in 0.
;; Register 99 in 21.
;; Register 103 in 0.
;; Register 104 in 21.
;; Register 108 in 0.
;; Register 109 in 21.
;; Register 113 in 0.
;; Register 114 in 21.
;; Register 118 in 0.
;; Register 119 in 21.
;; Register 122 in 21.
;; Register 125 in 21.
;; Register 128 in 21.
;; Register 131 in 21.
;; Register 134 in 21.
;; Register 137 in 21.
;; Register 140 in 21.
(note:HI 1 0 11 ("./CppStatUtilities.cc") 257)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
(note:HI 11 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 11 4 0 ./CppStatUtilities.cc:257 (set (reg/v/f:DI 63 [ a ])
        (reg:DI 5 di [ a ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:257 (set (reg/v:SI 64 [ n ])
        (reg:SI 4 si [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:257 (set (reg/v/f:DI 65 [ res ])
        (reg:DI 1 dx [ res ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 1 dx [ res ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:257 (set (reg/v/f:DI 66 [ median ])
        (reg:DI 2 cx [ median ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 2 cx [ median ])
        (nil)))

(insn:HI 7 6 8 0 ./CppStatUtilities.cc:257 (set (reg/v/f:DI 67 [ mad ])
        (reg:DI 37 r8 [ mad ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 37 r8 [ mad ])
        (nil)))

(insn:HI 8 7 9 0 ./CppStatUtilities.cc:257 (set (reg/v:DF 68 [ constant ])
        (reg:DF 21 xmm0 [ constant ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ constant ])
        (nil)))

(note:HI 9 8 13 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 13 9 14 0 ("./CppStatUtilities.cc") 259)

(insn:HI 14 13 15 0 ./CppStatUtilities.cc:259 (set (reg:SI 4 si [ n ])
        (reg/v:SI 64 [ n ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(insn:HI 15 14 16 0 ./CppStatUtilities.cc:259 (set (reg:DI 5 di [ a ])
        (reg/v/f:DI 63 [ a ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(call_insn:HI 16 15 17 0 ./CppStatUtilities.cc:259 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x41] <function_decl 0x2b5eb631e600 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 14 (insn_list:REG_DEP_TRUE 15 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (expr_list:REG_DEAD (reg:DI 5 di [ a ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ a ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ n ]))
            (nil))))

(note:HI 17 16 18 0 NOTE_INSN_DELETED)

(insn:HI 18 17 19 0 ./CppStatUtilities.cc:259 (set (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 16 (insn_list:REG_DEP_TRUE 6 (nil)))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 19 18 20 0 ("./CppStatUtilities.cc") 262)

(insn:HI 20 19 21 0 ./CppStatUtilities.cc:262 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 64 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 21 20 59 0 ./CppStatUtilities.cc:262 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 411)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68

(note:HI 59 21 60 NOTE_INSN_LOOP_BEG)

(note:HI 60 59 41 NOTE_INSN_LOOP_END)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65 67 68
(code_label:HI 41 60 42 1 781 "" [3 uses])

(note:HI 42 41 43 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(note:HI 43 42 44 1 ("./CppStatUtilities.cc") 265)

(insn:HI 44 43 45 1 ./CppStatUtilities.cc:265 (set (reg:SI 4 si [ n ])
        (reg/v:SI 64 [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 64 [ n ])
        (nil)))

(insn:HI 45 44 46 1 ./CppStatUtilities.cc:265 (set (reg:DI 5 di [ res ])
        (reg/v/f:DI 65 [ res ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 65 [ res ])
        (nil)))

(call_insn:HI 46 45 47 1 ./CppStatUtilities.cc:265 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x41] <function_decl 0x2b5eb631e600 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 44 (insn_list:REG_DEP_TRUE 45 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (expr_list:REG_DEAD (reg:DI 5 di [ res ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ n ]))
            (nil))))

(note:HI 47 46 48 1 NOTE_INSN_DELETED)

(insn:HI 48 47 49 1 ./CppStatUtilities.cc:265 (set (reg/v:DF 68 [ constant ])
        (mult:DF (reg:DF 21 xmm0)
            (reg/v:DF 68 [ constant ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 49 48 411 1 ./CppStatUtilities.cc:265 (set (mem:DF (reg/v/f:DI 67 [ mad ]) [3 S8 A64])
        (reg/v:DF 68 [ constant ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 48 (nil))
    (expr_list:REG_DEAD (reg/v:DF 68 [ constant ])
        (expr_list:REG_DEAD (reg/v/f:DI 67 [ mad ])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68
(code_label:HI 411 49 23 2 811 "" [1 uses])

(note:HI 23 411 62 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 62 23 70 2 (set (reg:V2DF 74)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC28") [flags 0x2]) [3 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(note:HI 70 62 71 2 NOTE_INSN_DELETED)

(insn:HI 71 70 72 2 (parallel [
            (set (reg:SI 79)
                (plus:SI (reg/v:SI 64 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 72 71 75 2 (parallel [
            (set (reg:SI 79)
                (and:SI (reg:SI 79)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 71 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 75 72 76 2 ("./CppStatUtilities.cc") 257)

(note:HI 76 75 77 2 ("./CppStatUtilities.cc") 263)

(insn:HI 77 76 78 2 ./CppStatUtilities.cc:263 (set (reg:DF 70)
        (mem:DF (reg/v/f:DI 63 [ a ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 78 77 79 2 ./CppStatUtilities.cc:263 (set (reg:DF 70)
        (minus:DF (reg:DF 70)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 77 (nil))
    (nil))

(insn:HI 79 78 80 2 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 70)
                (abs:DF (reg:DF 70)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 62 (insn_list:REG_DEP_TRUE 78 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 80 79 81 2 ./CppStatUtilities.cc:263 (set (mem:DF (reg/v/f:DI 65 [ res ]) [3 S8 A64])
        (reg:DF 70)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 79 (nil))
    (expr_list:REG_DEAD (reg:DF 70)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 69))
            (nil))))

(note:HI 81 80 82 2 ("./CppStatUtilities.cc") 262)

(insn:HI 82 81 83 2 ./CppStatUtilities.cc:262 (set (reg/v:SI 82 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 83 82 84 2 ./CppStatUtilities.cc:262 (set (reg:DI 83 [ ivtmp.921 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 84 83 85 2 ./CppStatUtilities.cc:262 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 82 [ i ])
            (reg/v:SI 64 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 82 (nil))
    (nil))

(jump_insn:HI 85 84 253 2 ./CppStatUtilities.cc:262 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 41)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 84 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
(note:HI 253 85 251 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 251 253 252 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 252 251 230 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 26)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 251 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
(note:HI 230 252 228 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 228 230 229 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 229 228 207 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 414)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 228 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
(note:HI 207 229 205 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 205 207 206 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 206 205 184 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 415)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 205 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
(note:HI 184 206 182 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 182 184 183 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 183 182 161 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 416)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 182 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
(note:HI 161 183 159 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 159 161 160 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 160 159 138 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 417)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 159 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
(note:HI 138 160 136 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 136 138 137 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 137 136 115 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 418)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 136 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 79 82 83
(note:HI 115 137 113 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 113 115 114 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 79)
        (nil)))

(jump_insn:HI 114 113 105 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 419)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 113 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74
(note:HI 105 114 94 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 94 105 95 10 ("./CppStatUtilities.cc") 257)

(note:HI 95 94 96 10 ("./CppStatUtilities.cc") 263)

(insn:HI 96 95 97 10 ./CppStatUtilities.cc:263 (set (reg:DF 122)
        (mem:DF (plus:DI (reg/v/f:DI 63 [ a ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 97 96 98 10 ./CppStatUtilities.cc:263 (set (reg:DF 122)
        (minus:DF (reg:DF 122)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 96 (nil))
    (nil))

(insn:HI 98 97 99 10 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 122)
                (abs:DF (reg:DF 122)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 97 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 99 98 100 10 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (reg/v/f:DI 65 [ res ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 122)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 98 (nil))
    (expr_list:REG_DEAD (reg:DF 122)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 123))
            (nil))))

(note:HI 100 99 101 10 ("./CppStatUtilities.cc") 262)

(insn:HI 101 100 102 10 ./CppStatUtilities.cc:262 (set (reg/v:SI 82 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 102 101 419 10 ./CppStatUtilities.cc:262 (set (reg:DI 83 [ ivtmp.921 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
(code_label:HI 419 102 128 11 817 "" [1 uses])

(note:HI 128 419 117 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note:HI 117 128 118 11 ("./CppStatUtilities.cc") 257)

(note:HI 118 117 119 11 ("./CppStatUtilities.cc") 263)

(insn:HI 119 118 120 11 ./CppStatUtilities.cc:263 (set (reg:DF 125)
        (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 120 119 121 11 ./CppStatUtilities.cc:263 (set (reg:DF 125)
        (minus:DF (reg:DF 125)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 119 (nil))
    (nil))

(insn:HI 121 120 122 11 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 125)
                (abs:DF (reg:DF 125)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 120 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 122 121 123 11 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 125)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 121 (nil))
    (expr_list:REG_DEAD (reg:DF 125)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 126))
            (nil))))

(note:HI 123 122 124 11 ("./CppStatUtilities.cc") 262)

(insn:HI 124 123 125 11 ./CppStatUtilities.cc:262 (parallel [
            (set (reg/v:SI 82 [ i ])
                (plus:SI (reg/v:SI 82 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 125 124 418 11 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 83 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
(code_label:HI 418 125 151 12 816 "" [1 uses])

(note:HI 151 418 140 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 140 151 141 12 ("./CppStatUtilities.cc") 257)

(note:HI 141 140 142 12 ("./CppStatUtilities.cc") 263)

(insn:HI 142 141 143 12 ./CppStatUtilities.cc:263 (set (reg:DF 128)
        (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 143 142 144 12 ./CppStatUtilities.cc:263 (set (reg:DF 128)
        (minus:DF (reg:DF 128)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 142 (nil))
    (nil))

(insn:HI 144 143 145 12 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 128)
                (abs:DF (reg:DF 128)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 143 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 145 144 146 12 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 128)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 144 (nil))
    (expr_list:REG_DEAD (reg:DF 128)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 129))
            (nil))))

(note:HI 146 145 147 12 ("./CppStatUtilities.cc") 262)

(insn:HI 147 146 148 12 ./CppStatUtilities.cc:262 (parallel [
            (set (reg/v:SI 82 [ i ])
                (plus:SI (reg/v:SI 82 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 148 147 417 12 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 83 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
(code_label:HI 417 148 174 13 815 "" [1 uses])

(note:HI 174 417 163 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 163 174 164 13 ("./CppStatUtilities.cc") 257)

(note:HI 164 163 165 13 ("./CppStatUtilities.cc") 263)

(insn:HI 165 164 166 13 ./CppStatUtilities.cc:263 (set (reg:DF 131)
        (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 166 165 167 13 ./CppStatUtilities.cc:263 (set (reg:DF 131)
        (minus:DF (reg:DF 131)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 165 (nil))
    (nil))

(insn:HI 167 166 168 13 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 131)
                (abs:DF (reg:DF 131)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 166 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 168 167 169 13 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 131)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 167 (nil))
    (expr_list:REG_DEAD (reg:DF 131)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 132))
            (nil))))

(note:HI 169 168 170 13 ("./CppStatUtilities.cc") 262)

(insn:HI 170 169 171 13 ./CppStatUtilities.cc:262 (parallel [
            (set (reg/v:SI 82 [ i ])
                (plus:SI (reg/v:SI 82 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 171 170 416 13 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 83 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
(code_label:HI 416 171 197 14 814 "" [1 uses])

(note:HI 197 416 186 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 186 197 187 14 ("./CppStatUtilities.cc") 257)

(note:HI 187 186 188 14 ("./CppStatUtilities.cc") 263)

(insn:HI 188 187 189 14 ./CppStatUtilities.cc:263 (set (reg:DF 134)
        (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 189 188 190 14 ./CppStatUtilities.cc:263 (set (reg:DF 134)
        (minus:DF (reg:DF 134)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 188 (nil))
    (nil))

(insn:HI 190 189 191 14 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 134)
                (abs:DF (reg:DF 134)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 189 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 191 190 192 14 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 134)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 190 (nil))
    (expr_list:REG_DEAD (reg:DF 134)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 135))
            (nil))))

(note:HI 192 191 193 14 ("./CppStatUtilities.cc") 262)

(insn:HI 193 192 194 14 ./CppStatUtilities.cc:262 (parallel [
            (set (reg/v:SI 82 [ i ])
                (plus:SI (reg/v:SI 82 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 194 193 415 14 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 83 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
(code_label:HI 415 194 220 15 813 "" [1 uses])

(note:HI 220 415 209 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 209 220 210 15 ("./CppStatUtilities.cc") 257)

(note:HI 210 209 211 15 ("./CppStatUtilities.cc") 263)

(insn:HI 211 210 212 15 ./CppStatUtilities.cc:263 (set (reg:DF 137)
        (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 212 211 213 15 ./CppStatUtilities.cc:263 (set (reg:DF 137)
        (minus:DF (reg:DF 137)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 211 (nil))
    (nil))

(insn:HI 213 212 214 15 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 137)
                (abs:DF (reg:DF 137)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 212 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 214 213 215 15 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 137)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 213 (nil))
    (expr_list:REG_DEAD (reg:DF 137)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 138))
            (nil))))

(note:HI 215 214 216 15 ("./CppStatUtilities.cc") 262)

(insn:HI 216 215 217 15 ./CppStatUtilities.cc:262 (parallel [
            (set (reg/v:SI 82 [ i ])
                (plus:SI (reg/v:SI 82 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 217 216 414 15 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 83 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
(code_label:HI 414 217 243 16 812 "" [1 uses])

(note:HI 243 414 232 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 232 243 233 16 ("./CppStatUtilities.cc") 257)

(note:HI 233 232 234 16 ("./CppStatUtilities.cc") 263)

(insn:HI 234 233 235 16 ./CppStatUtilities.cc:263 (set (reg:DF 140)
        (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 235 234 236 16 ./CppStatUtilities.cc:263 (set (reg:DF 140)
        (minus:DF (reg:DF 140)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 234 (nil))
    (nil))

(insn:HI 236 235 237 16 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 140)
                (abs:DF (reg:DF 140)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 235 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 237 236 238 16 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 140)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 236 (nil))
    (expr_list:REG_DEAD (reg:DF 140)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 141))
            (nil))))

(note:HI 238 237 239 16 ("./CppStatUtilities.cc") 262)

(insn:HI 239 238 240 16 ./CppStatUtilities.cc:262 (parallel [
            (set (reg/v:SI 82 [ i ])
                (plus:SI (reg/v:SI 82 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 240 239 241 16 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 83 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 241 240 242 16 ./CppStatUtilities.cc:262 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 82 [ i ])
            (reg/v:SI 64 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 239 (nil))
    (nil))

(jump_insn:HI 242 241 26 16 ./CppStatUtilities.cc:262 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 41)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 241 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
(code_label:HI 26 242 27 17 783 "" [2 uses])

(note:HI 27 26 28 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 28 27 30 17 ("./CppStatUtilities.cc") 257)

(note:HI 30 28 31 17 ("./CppStatUtilities.cc") 263)

(insn:HI 31 30 32 17 ./CppStatUtilities.cc:263 (set (reg:DF 84)
        (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 32 31 34 17 ./CppStatUtilities.cc:263 (set (reg:DF 84)
        (minus:DF (reg:DF 84)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 31 (nil))
    (nil))

(insn:HI 34 32 35 17 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 84)
                (abs:DF (reg:DF 84)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 35 34 36 17 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 84)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 34 (nil))
    (expr_list:REG_DEAD (reg:DF 84)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 85))
            (nil))))

(note:HI 36 35 381 17 ("./CppStatUtilities.cc") 262)

(insn:HI 381 36 255 17 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 80)
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 255 381 256 17 ("./CppStatUtilities.cc") 257)

(note:HI 256 255 257 17 ("./CppStatUtilities.cc") 263)

(insn:HI 257 256 258 17 ./CppStatUtilities.cc:263 (set (reg:DF 89)
        (mem:DF (plus:DI (mult:DI (reg:DI 80)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 381 (nil))
    (nil))

(insn:HI 258 257 259 17 ./CppStatUtilities.cc:263 (set (reg:DF 89)
        (minus:DF (reg:DF 89)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 257 (nil))
    (nil))

(insn:HI 259 258 260 17 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 89)
                (abs:DF (reg:DF 89)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 258 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 260 259 261 17 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 80)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 89)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 259 (nil))
    (expr_list:REG_DEAD (reg:DF 89)
        (expr_list:REG_DEAD (reg:DI 80)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 90))
                (nil)))))

(note:HI 261 260 263 17 ("./CppStatUtilities.cc") 262)

(insn:HI 263 261 273 17 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 93 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 273 263 274 17 ("./CppStatUtilities.cc") 257)

(note:HI 274 273 275 17 ("./CppStatUtilities.cc") 263)

(insn:HI 275 274 276 17 ./CppStatUtilities.cc:263 (set (reg:DF 94)
        (mem:DF (plus:DI (mult:DI (reg:DI 93 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 263 (nil))
    (nil))

(insn:HI 276 275 277 17 ./CppStatUtilities.cc:263 (set (reg:DF 94)
        (minus:DF (reg:DF 94)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 275 (nil))
    (nil))

(insn:HI 277 276 278 17 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 94)
                (abs:DF (reg:DF 94)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 276 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 278 277 279 17 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 93 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 94)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 277 (nil))
    (expr_list:REG_DEAD (reg:DF 94)
        (expr_list:REG_DEAD (reg:DI 93 [ ivtmp.921 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 95))
                (nil)))))

(note:HI 279 278 281 17 ("./CppStatUtilities.cc") 262)

(insn:HI 281 279 291 17 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 98 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 291 281 292 17 ("./CppStatUtilities.cc") 257)

(note:HI 292 291 293 17 ("./CppStatUtilities.cc") 263)

(insn:HI 293 292 294 17 ./CppStatUtilities.cc:263 (set (reg:DF 99)
        (mem:DF (plus:DI (mult:DI (reg:DI 98 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 281 (nil))
    (nil))

(insn:HI 294 293 295 17 ./CppStatUtilities.cc:263 (set (reg:DF 99)
        (minus:DF (reg:DF 99)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 293 (nil))
    (nil))

(insn:HI 295 294 296 17 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 99)
                (abs:DF (reg:DF 99)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 294 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 296 295 297 17 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 98 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 99)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 295 (nil))
    (expr_list:REG_DEAD (reg:DF 99)
        (expr_list:REG_DEAD (reg:DI 98 [ ivtmp.921 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 100))
                (nil)))))

(note:HI 297 296 299 17 ("./CppStatUtilities.cc") 262)

(insn:HI 299 297 309 17 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 103 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 309 299 310 17 ("./CppStatUtilities.cc") 257)

(note:HI 310 309 311 17 ("./CppStatUtilities.cc") 263)

(insn:HI 311 310 312 17 ./CppStatUtilities.cc:263 (set (reg:DF 104)
        (mem:DF (plus:DI (mult:DI (reg:DI 103 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 299 (nil))
    (nil))

(insn:HI 312 311 313 17 ./CppStatUtilities.cc:263 (set (reg:DF 104)
        (minus:DF (reg:DF 104)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 311 (nil))
    (nil))

(insn:HI 313 312 314 17 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 104)
                (abs:DF (reg:DF 104)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 312 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 314 313 315 17 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 103 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 104)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 313 (nil))
    (expr_list:REG_DEAD (reg:DF 104)
        (expr_list:REG_DEAD (reg:DI 103 [ ivtmp.921 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 105))
                (nil)))))

(note:HI 315 314 317 17 ("./CppStatUtilities.cc") 262)

(insn:HI 317 315 327 17 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 108 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 327 317 328 17 ("./CppStatUtilities.cc") 257)

(note:HI 328 327 329 17 ("./CppStatUtilities.cc") 263)

(insn:HI 329 328 330 17 ./CppStatUtilities.cc:263 (set (reg:DF 109)
        (mem:DF (plus:DI (mult:DI (reg:DI 108 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 317 (nil))
    (nil))

(insn:HI 330 329 331 17 ./CppStatUtilities.cc:263 (set (reg:DF 109)
        (minus:DF (reg:DF 109)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 329 (nil))
    (nil))

(insn:HI 331 330 332 17 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 109)
                (abs:DF (reg:DF 109)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 330 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 332 331 333 17 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 108 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 109)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 331 (nil))
    (expr_list:REG_DEAD (reg:DF 109)
        (expr_list:REG_DEAD (reg:DI 108 [ ivtmp.921 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 110))
                (nil)))))

(note:HI 333 332 335 17 ("./CppStatUtilities.cc") 262)

(insn:HI 335 333 345 17 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 113 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 345 335 346 17 ("./CppStatUtilities.cc") 257)

(note:HI 346 345 347 17 ("./CppStatUtilities.cc") 263)

(insn:HI 347 346 348 17 ./CppStatUtilities.cc:263 (set (reg:DF 114)
        (mem:DF (plus:DI (mult:DI (reg:DI 113 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 335 (nil))
    (nil))

(insn:HI 348 347 349 17 ./CppStatUtilities.cc:263 (set (reg:DF 114)
        (minus:DF (reg:DF 114)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 347 (nil))
    (nil))

(insn:HI 349 348 350 17 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 114)
                (abs:DF (reg:DF 114)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 348 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 350 349 351 17 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 113 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 114)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 349 (nil))
    (expr_list:REG_DEAD (reg:DF 114)
        (expr_list:REG_DEAD (reg:DI 113 [ ivtmp.921 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 115))
                (nil)))))

(note:HI 351 350 353 17 ("./CppStatUtilities.cc") 262)

(insn:HI 353 351 363 17 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 118 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 363 353 364 17 ("./CppStatUtilities.cc") 257)

(note:HI 364 363 365 17 ("./CppStatUtilities.cc") 263)

(insn:HI 365 364 366 17 ./CppStatUtilities.cc:263 (set (reg:DF 119)
        (mem:DF (plus:DI (mult:DI (reg:DI 118 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 63 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 353 (nil))
    (nil))

(insn:HI 366 365 367 17 ./CppStatUtilities.cc:263 (set (reg:DF 119)
        (minus:DF (reg:DF 119)
            (mem:DF (reg/v/f:DI 66 [ median ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 365 (nil))
    (nil))

(insn:HI 367 366 368 17 ./CppStatUtilities.cc:263 (parallel [
            (set (reg:DF 119)
                (abs:DF (reg:DF 119)))
            (use (reg:V2DF 74))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 366 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 368 367 369 17 ./CppStatUtilities.cc:263 (set (mem:DF (plus:DI (mult:DI (reg:DI 118 [ ivtmp.921 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ res ])) [3 S8 A64])
        (reg:DF 119)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 367 (nil))
    (expr_list:REG_DEAD (reg:DF 119)
        (expr_list:REG_DEAD (reg:DI 118 [ ivtmp.921 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 120))
                (nil)))))

(note:HI 369 368 370 17 ("./CppStatUtilities.cc") 262)

(insn:HI 370 369 371 17 ./CppStatUtilities.cc:262 (parallel [
            (set (reg/v:SI 82 [ i ])
                (plus:SI (reg/v:SI 82 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 371 370 372 17 ./CppStatUtilities.cc:262 (parallel [
            (set (reg:DI 83 [ ivtmp.921 ])
                (plus:DI (reg:DI 83 [ ivtmp.921 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 372 371 373 17 ./CppStatUtilities.cc:262 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 82 [ i ])
            (reg/v:SI 64 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 370 (nil))
    (nil))

(jump_insn:HI 373 372 378 17 ./CppStatUtilities.cc:262 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 41)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 372 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83
(note:HI 378 373 408 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 408 378 409 18 (set (pc)
        (label_ref 26)) 548 {jump} (nil)
    (nil))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64 65 66 67 68 74 82 83

(barrier:HI 409 408 50)

(note:HI 50 409 51 NOTE_INSN_FUNCTION_END)

(note:HI 51 50 0 ("./CppStatUtilities.cc") 266)


;; Function double madInPlace(double*, int, double*, double) (_Z10madInPlacePdiS_d)



Pass 0

  Register 62 costs: AREG:19994 DREG:19994 CREG:19994 BREG:19994 SIREG:19994 DIREG:19994 AD_REGS:19994 Q_REGS:19994 NON_Q_REGS:21881 INDEX_REGS:19994 LEGACY_REGS:21881 GENERAL_REGS:21881 FP_TOP_REG:32298 FP_SECOND_REG:32298 FLOAT_REGS:32298 SSE_REGS:0 FP_TOP_SSE_REGS:32298 FP_SECOND_SSE_REGS:32298 FLOAT_SSE_REGS:32298 FLOAT_INT_REGS:32298 INT_SSE_REGS:19994 FLOAT_INT_SSE_REGS:32298 ALL_REGS:34629 MEM:11210
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22880 MMX_REGS:22880 FP_TOP_SSE_REGS:22880 FP_SECOND_SSE_REGS:22880 FLOAT_SSE_REGS:22880 FLOAT_INT_REGS:15840 INT_SSE_REGS:22880 FLOAT_INT_SSE_REGS:22880 ALL_REGS:22880 MEM:6929
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-222 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10855 MMX_REGS:10855 FP_TOP_SSE_REGS:10855 FP_SECOND_SSE_REGS:10855 FLOAT_SSE_REGS:10855 FLOAT_INT_REGS:7515 INT_SSE_REGS:10855 FLOAT_INT_SSE_REGS:10855 ALL_REGS:10855 MEM:2827
  Register 66 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22880 MMX_REGS:22880 FP_TOP_SSE_REGS:22880 FP_SECOND_SSE_REGS:22880 FLOAT_SSE_REGS:22880 FLOAT_INT_REGS:15840 INT_SSE_REGS:22880 FLOAT_INT_SSE_REGS:22880 ALL_REGS:22880 MEM:6929
  Register 67 costs: AREG:1443 DREG:1443 CREG:1443 BREG:1443 SIREG:1443 DIREG:1443 AD_REGS:1443 Q_REGS:1443 NON_Q_REGS:3330 INDEX_REGS:1443 LEGACY_REGS:3330 GENERAL_REGS:3330 FP_TOP_REG:2331 FP_SECOND_REG:2331 FLOAT_REGS:2331 SSE_REGS:0 FP_TOP_SSE_REGS:2331 FP_SECOND_SSE_REGS:2331 FLOAT_SSE_REGS:2331 FLOAT_INT_REGS:2331 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:2331 ALL_REGS:4662 MEM:1221
  Register 69 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:8600 INDEX_REGS:5200 LEGACY_REGS:8600 GENERAL_REGS:8600 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:12600 MEM:4000
  Register 73 costs: SSE_REGS:0 FP_TOP_SSE_REGS:27846 FP_SECOND_SSE_REGS:27846 FLOAT_SSE_REGS:27846 INT_SSE_REGS:58606 FLOAT_INT_SSE_REGS:58606 ALL_REGS:58606 MEM:11566
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2564 INDEX_REGS:0 LEGACY_REGS:2564 GENERAL_REGS:2564 SSE_REGS:44993 MMX_REGS:44993 FP_TOP_SSE_REGS:44993 FP_SECOND_SSE_REGS:44993 FLOAT_SSE_REGS:44993 FLOAT_INT_REGS:31149 INT_SSE_REGS:44993 FLOAT_INT_SSE_REGS:44993 ALL_REGS:44993 MEM:12562
  Register 83 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 88 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 92 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 93 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 98 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 103 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 108 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 112 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 113 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 118 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 121 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 124 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 127 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 130 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 133 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 136 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 139 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600

  Register 62 pref SSE_REGS or none
  Register 64 pref DIREG, else GENERAL_REGS
  Register 65 pref SIREG, else GENERAL_REGS
  Register 66 pref DIREG, else GENERAL_REGS
  Register 67 pref SSE_REGS or none
  Register 69 pref SSE_REGS or none
  Register 73 pref SSE_REGS or none
  Register 78 pref GENERAL_REGS or none
  Register 79 pref INDEX_REGS, else GENERAL_REGS
  Register 81 pref GENERAL_REGS or none
  Register 82 pref INDEX_REGS, else GENERAL_REGS
  Register 83 pref SSE_REGS or none
  Register 88 pref SSE_REGS or none
  Register 92 pref INDEX_REGS, else GENERAL_REGS
  Register 93 pref SSE_REGS or none
  Register 97 pref INDEX_REGS, else GENERAL_REGS
  Register 98 pref SSE_REGS or none
  Register 102 pref INDEX_REGS, else GENERAL_REGS
  Register 103 pref SSE_REGS or none
  Register 107 pref INDEX_REGS, else GENERAL_REGS
  Register 108 pref SSE_REGS or none
  Register 112 pref INDEX_REGS, else GENERAL_REGS
  Register 113 pref SSE_REGS or none
  Register 117 pref INDEX_REGS, else GENERAL_REGS
  Register 118 pref SSE_REGS or none
  Register 121 pref SSE_REGS or none
  Register 124 pref SSE_REGS or none
  Register 127 pref SSE_REGS or none
  Register 130 pref SSE_REGS or none
  Register 133 pref SSE_REGS or none
  Register 136 pref SSE_REGS or none
  Register 139 pref SSE_REGS or none


Pass 1

  Register 62 costs: AREG:19994 DREG:19994 CREG:19994 BREG:19994 SIREG:19994 DIREG:19994 AD_REGS:19994 Q_REGS:19994 NON_Q_REGS:21881 INDEX_REGS:19994 LEGACY_REGS:21881 GENERAL_REGS:21881 FP_TOP_REG:32298 FP_SECOND_REG:32298 FLOAT_REGS:32298 SSE_REGS:0 FP_TOP_SSE_REGS:32298 FP_SECOND_SSE_REGS:32298 FLOAT_SSE_REGS:32298 FLOAT_INT_REGS:32298 INT_SSE_REGS:19994 FLOAT_INT_SSE_REGS:32298 ALL_REGS:34629 MEM:11210
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22880 MMX_REGS:22880 FP_TOP_SSE_REGS:22880 FP_SECOND_SSE_REGS:22880 FLOAT_SSE_REGS:22880 FLOAT_INT_REGS:15840 INT_SSE_REGS:22880 FLOAT_INT_SSE_REGS:22880 ALL_REGS:22880 MEM:6929
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-222 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10855 MMX_REGS:10855 FP_TOP_SSE_REGS:10855 FP_SECOND_SSE_REGS:10855 FLOAT_SSE_REGS:10855 FLOAT_INT_REGS:7515 INT_SSE_REGS:10855 FLOAT_INT_SSE_REGS:10855 ALL_REGS:10855 MEM:2827
  Register 66 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22880 MMX_REGS:22880 FP_TOP_SSE_REGS:22880 FP_SECOND_SSE_REGS:22880 FLOAT_SSE_REGS:22880 FLOAT_INT_REGS:15840 INT_SSE_REGS:22880 FLOAT_INT_SSE_REGS:22880 ALL_REGS:22880 MEM:6929
  Register 67 costs: AREG:1443 DREG:1443 CREG:1443 BREG:1443 SIREG:1443 DIREG:1443 AD_REGS:1443 Q_REGS:1443 NON_Q_REGS:3330 INDEX_REGS:1443 LEGACY_REGS:3330 GENERAL_REGS:3330 FP_TOP_REG:2331 FP_SECOND_REG:2331 FLOAT_REGS:2331 SSE_REGS:0 FP_TOP_SSE_REGS:2331 FP_SECOND_SSE_REGS:2331 FLOAT_SSE_REGS:2331 FLOAT_INT_REGS:2331 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:2331 ALL_REGS:4662 MEM:1221
  Register 69 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:8600 INDEX_REGS:5200 LEGACY_REGS:8600 GENERAL_REGS:8600 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:12600 MEM:4000
  Register 73 costs: SSE_REGS:0 FP_TOP_SSE_REGS:27846 FP_SECOND_SSE_REGS:27846 FLOAT_SSE_REGS:27846 INT_SSE_REGS:58606 FLOAT_INT_SSE_REGS:58606 ALL_REGS:58606 MEM:11566
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2564 INDEX_REGS:0 LEGACY_REGS:2564 GENERAL_REGS:2564 SSE_REGS:44993 MMX_REGS:44993 FP_TOP_SSE_REGS:44993 FP_SECOND_SSE_REGS:44993 FLOAT_SSE_REGS:44993 FLOAT_INT_REGS:31149 INT_SSE_REGS:44993 FLOAT_INT_SSE_REGS:44993 ALL_REGS:44993 MEM:12562
  Register 83 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 88 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 92 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 93 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 98 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 103 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 108 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 112 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 113 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 118 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 121 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 124 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 127 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 130 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 133 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 136 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 139 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600

142 registers.

Register 62 used 17 times across 116 insns; set 1 time; user var; dies in 0 places; SSE_REGS or none.

Register 64 used 18 times across 123 insns; set 1 time; user var; dies in 0 places; crosses 1 call; pref DIREG, else GENERAL_REGS; pointer.

Register 65 used 8 times across 123 insns; set 1 time; user var; crosses 1 call; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 66 used 18 times across 123 insns; set 1 time; user var; crosses 1 call; pref DIREG, else GENERAL_REGS; pointer.

Register 67 used 2 times across 124 insns; set 1 time; user var; crosses 2 calls; SSE_REGS or none.

Register 69 used 6 times across 6 insns in block 2; set 3 times; SSE_REGS or none.

Register 73 used 17 times across 226 insns; set 1 time; dies in 0 places; 16 bytes; SSE_REGS or none.

Register 78 used 10 times across 24 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 79 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 81 used 19 times across 218 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 82 used 37 times across 214 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 83 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 88 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 92 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 93 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 97 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 98 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 102 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 103 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 107 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 108 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 112 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 113 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 117 used 3 times across 5 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 118 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 121 used 6 times across 6 insns in block 10; set 3 times; SSE_REGS or none.

Register 124 used 6 times across 6 insns in block 11; set 3 times; SSE_REGS or none.

Register 127 used 6 times across 6 insns in block 12; set 3 times; SSE_REGS or none.

Register 130 used 6 times across 6 insns in block 13; set 3 times; SSE_REGS or none.

Register 133 used 6 times across 6 insns in block 14; set 3 times; SSE_REGS or none.

Register 136 used 6 times across 6 insns in block 15; set 3 times; SSE_REGS or none.

Register 139 used 6 times across 6 insns in block 16; set 3 times; SSE_REGS or none.

19 basic blocks, 31 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  1 [10.0%]  (fallthru) 2 [90.0%] 
Registers live at start: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  16 [10.0%]  17 [10.0%]  (loop_exit) 2 [10.0%]  0 [10.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  3 [90.0%]  (fallthru,dfs_back) 1 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  2 [90.0%]  (fallthru,dfs_back)
Successors:  4 [87.5%]  (fallthru) 17 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
Invalid sum of incoming frequencies 900, should be 771

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  3 [87.5%]  (fallthru)
Successors:  5 [85.7%]  (fallthru) 16 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  4 [85.7%]  (fallthru)
Successors:  6 [83.3%]  (fallthru) 15 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  5 [83.3%]  (fallthru)
Successors:  7 [80.0%]  (fallthru) 14 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  6 [80.0%]  (fallthru)
Successors:  8 [75.0%]  (fallthru) 13 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  7 [75.0%]  (fallthru)
Successors:  9 [66.7%]  (fallthru) 12 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  8 [66.7%]  (fallthru)
Successors:  10 [50.0%]  (fallthru) 11 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Invalid sum of incoming frequencies 300, should be 900

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
Successors:  11 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Invalid sum of incoming frequencies 450, should be 900

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 9 [50.0%] 
Successors:  12 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Invalid sum of incoming frequencies 1350, should be 900

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 8 [33.3%] 
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Invalid sum of incoming frequencies 1050, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 7 [25.0%] 
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Invalid sum of incoming frequencies 1050, should be 900

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 6 [20.0%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Invalid sum of incoming frequencies 1035, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 5 [16.7%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Invalid sum of incoming frequencies 1020, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 4 [14.3%] 
Successors:  17 [90.0%]  (fallthru,dfs_back) 1 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Invalid sum of incoming frequencies 1007, should be 900

Basic block 17 prev 16, next 18, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  16 [90.0%]  (fallthru,dfs_back) 18 [100.0%]  3 [12.5%] 
Successors:  18 [90.0%]  (fallthru,dfs_back) 1 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 18 prev 17, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  17 [90.0%]  (fallthru,dfs_back)
Successors:  17 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

;; Register 69 in 21.
;; Register 79 in 0.
;; Register 83 in 21.
;; Register 88 in 21.
;; Register 92 in 0.
;; Register 93 in 21.
;; Register 97 in 0.
;; Register 98 in 21.
;; Register 102 in 0.
;; Register 103 in 21.
;; Register 107 in 0.
;; Register 108 in 21.
;; Register 112 in 0.
;; Register 113 in 21.
;; Register 117 in 0.
;; Register 118 in 21.
;; Register 121 in 21.
;; Register 124 in 21.
;; Register 127 in 21.
;; Register 130 in 21.
;; Register 133 in 21.
;; Register 136 in 21.
;; Register 139 in 21.
(note:HI 1 0 9 ("./CppStatUtilities.cc") 239)

;; Start of basic block 0, registers live: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
(note:HI 9 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 9 4 0 ./CppStatUtilities.cc:239 (set (reg/v/f:DI 64 [ a ])
        (reg:DI 5 di [ a ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:239 (set (reg/v:SI 65 [ n ])
        (reg:SI 4 si [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:239 (set (reg/v/f:DI 66 [ res ])
        (reg:DI 1 dx [ res ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 1 dx [ res ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:239 (set (reg/v:DF 67 [ constant ])
        (reg:DF 21 xmm0 [ constant ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ constant ])
        (nil)))

(note:HI 7 6 11 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 11 7 12 0 ("./CppStatUtilities.cc") 241)

(insn:HI 12 11 13 0 ./CppStatUtilities.cc:241 (set (reg:SI 4 si [ n ])
        (reg/v:SI 65 [ n ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(insn:HI 13 12 14 0 ./CppStatUtilities.cc:241 (set (reg:DI 5 di [ a ])
        (reg/v/f:DI 64 [ a ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(call_insn:HI 14 13 15 0 ./CppStatUtilities.cc:241 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x41] <function_decl 0x2b5eb631e600 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 12 (insn_list:REG_DEP_TRUE 13 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (expr_list:REG_DEAD (reg:DI 5 di [ a ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ a ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ n ]))
            (nil))))

(insn:HI 15 14 16 0 ./CppStatUtilities.cc:241 (set (reg/v:DF 62 [ med ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 16 15 17 0 ("./CppStatUtilities.cc") 245)

(insn:HI 17 16 18 0 ./CppStatUtilities.cc:245 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 65 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 18 17 62 0 ./CppStatUtilities.cc:245 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 414)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 17 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67

(note:HI 62 18 63 NOTE_INSN_LOOP_BEG)

(note:HI 63 62 38 NOTE_INSN_LOOP_END)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 67
(code_label:HI 38 63 39 1 819 "" [3 uses])

(note:HI 39 38 40 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(note:HI 40 39 41 1 ("./CppStatUtilities.cc") 248)

(insn:HI 41 40 42 1 ./CppStatUtilities.cc:248 (set (reg:SI 4 si [ n ])
        (reg/v:SI 65 [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 65 [ n ])
        (nil)))

(insn:HI 42 41 43 1 ./CppStatUtilities.cc:248 (set (reg:DI 5 di [ res ])
        (reg/v/f:DI 66 [ res ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 66 [ res ])
        (nil)))

(call_insn:HI 43 42 44 1 ./CppStatUtilities.cc:248 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x41] <function_decl 0x2b5eb631e600 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 41 (insn_list:REG_DEP_TRUE 42 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (expr_list:REG_DEAD (reg:DI 5 di [ res ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ n ]))
            (nil))))

(note:HI 44 43 45 1 NOTE_INSN_DELETED)

(note:HI 45 44 49 1 NOTE_INSN_DELETED)

(note:HI 49 45 50 1 NOTE_INSN_FUNCTION_END)

(note:HI 50 49 52 1 ("./CppStatUtilities.cc") 251)

(insn:HI 52 50 58 1 ./CppStatUtilities.cc:251 (set (reg/i:DF 21 xmm0 [ <result> ])
        (mult:DF (reg:DF 21 xmm0)
            (reg/v:DF 67 [ constant ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 43 (nil))
    (expr_list:REG_DEAD (reg/v:DF 67 [ constant ])
        (nil)))

(insn:HI 58 52 414 1 ./CppStatUtilities.cc:251 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 52 (nil))
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67
(code_label:HI 414 58 20 2 849 "" [1 uses])

(note:HI 20 414 65 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 65 20 73 2 (set (reg:V2DF 73)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC29") [flags 0x2]) [3 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(note:HI 73 65 74 2 NOTE_INSN_DELETED)

(insn:HI 74 73 75 2 (parallel [
            (set (reg:SI 78)
                (plus:SI (reg/v:SI 65 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 75 74 78 2 (parallel [
            (set (reg:SI 78)
                (and:SI (reg:SI 78)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 74 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 78 75 79 2 ("./CppStatUtilities.cc") 239)

(note:HI 79 78 80 2 ("./CppStatUtilities.cc") 246)

(insn:HI 80 79 81 2 ./CppStatUtilities.cc:246 (set (reg:DF 69)
        (mem:DF (reg/v/f:DI 64 [ a ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 81 80 82 2 ./CppStatUtilities.cc:246 (set (reg:DF 69)
        (minus:DF (reg:DF 69)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 80 (nil))
    (nil))

(insn:HI 82 81 83 2 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 69)
                (abs:DF (reg:DF 69)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 65 (insn_list:REG_DEP_TRUE 81 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 83 82 84 2 ./CppStatUtilities.cc:246 (set (mem:DF (reg/v/f:DI 66 [ res ]) [3 S8 A64])
        (reg:DF 69)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 82 (nil))
    (expr_list:REG_DEAD (reg:DF 69)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 68))
            (nil))))

(note:HI 84 83 85 2 ("./CppStatUtilities.cc") 245)

(insn:HI 85 84 86 2 ./CppStatUtilities.cc:245 (set (reg/v:SI 81 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 86 85 87 2 ./CppStatUtilities.cc:245 (set (reg:DI 82 [ ivtmp.957 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 87 86 88 2 ./CppStatUtilities.cc:245 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 81 [ i ])
            (reg/v:SI 65 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 85 (nil))
    (nil))

(jump_insn:HI 88 87 256 2 ./CppStatUtilities.cc:245 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 38)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 87 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
(note:HI 256 88 254 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 254 256 255 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 255 254 233 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 23)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 254 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
(note:HI 233 255 231 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 231 233 232 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 232 231 210 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 417)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 231 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
(note:HI 210 232 208 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 208 210 209 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 209 208 187 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 418)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 208 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
(note:HI 187 209 185 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 185 187 186 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 186 185 164 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 419)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 185 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
(note:HI 164 186 162 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 162 164 163 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 163 162 141 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 420)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 162 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
(note:HI 141 163 139 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 139 141 140 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 140 139 118 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 421)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 139 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 78 81 82
(note:HI 118 140 116 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 116 118 117 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 78)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 78)
        (nil)))

(jump_insn:HI 117 116 108 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 422)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 116 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73
(note:HI 108 117 97 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 97 108 98 10 ("./CppStatUtilities.cc") 239)

(note:HI 98 97 99 10 ("./CppStatUtilities.cc") 246)

(insn:HI 99 98 100 10 ./CppStatUtilities.cc:246 (set (reg:DF 121)
        (mem:DF (plus:DI (reg/v/f:DI 64 [ a ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 100 99 101 10 ./CppStatUtilities.cc:246 (set (reg:DF 121)
        (minus:DF (reg:DF 121)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 99 (nil))
    (nil))

(insn:HI 101 100 102 10 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 121)
                (abs:DF (reg:DF 121)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 100 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 102 101 103 10 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (reg/v/f:DI 66 [ res ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 121)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 101 (nil))
    (expr_list:REG_DEAD (reg:DF 121)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 122))
            (nil))))

(note:HI 103 102 104 10 ("./CppStatUtilities.cc") 245)

(insn:HI 104 103 105 10 ./CppStatUtilities.cc:245 (set (reg/v:SI 81 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 105 104 422 10 ./CppStatUtilities.cc:245 (set (reg:DI 82 [ ivtmp.957 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
(code_label:HI 422 105 131 11 855 "" [1 uses])

(note:HI 131 422 120 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note:HI 120 131 121 11 ("./CppStatUtilities.cc") 239)

(note:HI 121 120 122 11 ("./CppStatUtilities.cc") 246)

(insn:HI 122 121 123 11 ./CppStatUtilities.cc:246 (set (reg:DF 124)
        (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 123 122 124 11 ./CppStatUtilities.cc:246 (set (reg:DF 124)
        (minus:DF (reg:DF 124)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 122 (nil))
    (nil))

(insn:HI 124 123 125 11 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 124)
                (abs:DF (reg:DF 124)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 123 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 125 124 126 11 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 124)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 124 (nil))
    (expr_list:REG_DEAD (reg:DF 124)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 125))
            (nil))))

(note:HI 126 125 127 11 ("./CppStatUtilities.cc") 245)

(insn:HI 127 126 128 11 ./CppStatUtilities.cc:245 (parallel [
            (set (reg/v:SI 81 [ i ])
                (plus:SI (reg/v:SI 81 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 128 127 421 11 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 82 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
(code_label:HI 421 128 154 12 854 "" [1 uses])

(note:HI 154 421 143 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 143 154 144 12 ("./CppStatUtilities.cc") 239)

(note:HI 144 143 145 12 ("./CppStatUtilities.cc") 246)

(insn:HI 145 144 146 12 ./CppStatUtilities.cc:246 (set (reg:DF 127)
        (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 146 145 147 12 ./CppStatUtilities.cc:246 (set (reg:DF 127)
        (minus:DF (reg:DF 127)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 145 (nil))
    (nil))

(insn:HI 147 146 148 12 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 127)
                (abs:DF (reg:DF 127)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 146 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 148 147 149 12 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 127)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 147 (nil))
    (expr_list:REG_DEAD (reg:DF 127)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 128))
            (nil))))

(note:HI 149 148 150 12 ("./CppStatUtilities.cc") 245)

(insn:HI 150 149 151 12 ./CppStatUtilities.cc:245 (parallel [
            (set (reg/v:SI 81 [ i ])
                (plus:SI (reg/v:SI 81 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 151 150 420 12 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 82 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
(code_label:HI 420 151 177 13 853 "" [1 uses])

(note:HI 177 420 166 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 166 177 167 13 ("./CppStatUtilities.cc") 239)

(note:HI 167 166 168 13 ("./CppStatUtilities.cc") 246)

(insn:HI 168 167 169 13 ./CppStatUtilities.cc:246 (set (reg:DF 130)
        (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 169 168 170 13 ./CppStatUtilities.cc:246 (set (reg:DF 130)
        (minus:DF (reg:DF 130)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 168 (nil))
    (nil))

(insn:HI 170 169 171 13 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 130)
                (abs:DF (reg:DF 130)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 169 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 171 170 172 13 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 130)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 170 (nil))
    (expr_list:REG_DEAD (reg:DF 130)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 131))
            (nil))))

(note:HI 172 171 173 13 ("./CppStatUtilities.cc") 245)

(insn:HI 173 172 174 13 ./CppStatUtilities.cc:245 (parallel [
            (set (reg/v:SI 81 [ i ])
                (plus:SI (reg/v:SI 81 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 174 173 419 13 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 82 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
(code_label:HI 419 174 200 14 852 "" [1 uses])

(note:HI 200 419 189 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 189 200 190 14 ("./CppStatUtilities.cc") 239)

(note:HI 190 189 191 14 ("./CppStatUtilities.cc") 246)

(insn:HI 191 190 192 14 ./CppStatUtilities.cc:246 (set (reg:DF 133)
        (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 192 191 193 14 ./CppStatUtilities.cc:246 (set (reg:DF 133)
        (minus:DF (reg:DF 133)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 191 (nil))
    (nil))

(insn:HI 193 192 194 14 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 133)
                (abs:DF (reg:DF 133)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 192 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 194 193 195 14 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 133)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 193 (nil))
    (expr_list:REG_DEAD (reg:DF 133)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 134))
            (nil))))

(note:HI 195 194 196 14 ("./CppStatUtilities.cc") 245)

(insn:HI 196 195 197 14 ./CppStatUtilities.cc:245 (parallel [
            (set (reg/v:SI 81 [ i ])
                (plus:SI (reg/v:SI 81 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 197 196 418 14 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 82 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
(code_label:HI 418 197 223 15 851 "" [1 uses])

(note:HI 223 418 212 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 212 223 213 15 ("./CppStatUtilities.cc") 239)

(note:HI 213 212 214 15 ("./CppStatUtilities.cc") 246)

(insn:HI 214 213 215 15 ./CppStatUtilities.cc:246 (set (reg:DF 136)
        (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 215 214 216 15 ./CppStatUtilities.cc:246 (set (reg:DF 136)
        (minus:DF (reg:DF 136)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 214 (nil))
    (nil))

(insn:HI 216 215 217 15 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 136)
                (abs:DF (reg:DF 136)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 215 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 217 216 218 15 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 136)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 216 (nil))
    (expr_list:REG_DEAD (reg:DF 136)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 137))
            (nil))))

(note:HI 218 217 219 15 ("./CppStatUtilities.cc") 245)

(insn:HI 219 218 220 15 ./CppStatUtilities.cc:245 (parallel [
            (set (reg/v:SI 81 [ i ])
                (plus:SI (reg/v:SI 81 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 220 219 417 15 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 82 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
(code_label:HI 417 220 246 16 850 "" [1 uses])

(note:HI 246 417 235 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 235 246 236 16 ("./CppStatUtilities.cc") 239)

(note:HI 236 235 237 16 ("./CppStatUtilities.cc") 246)

(insn:HI 237 236 238 16 ./CppStatUtilities.cc:246 (set (reg:DF 139)
        (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 238 237 239 16 ./CppStatUtilities.cc:246 (set (reg:DF 139)
        (minus:DF (reg:DF 139)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 237 (nil))
    (nil))

(insn:HI 239 238 240 16 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 139)
                (abs:DF (reg:DF 139)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 238 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 240 239 241 16 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 139)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 239 (nil))
    (expr_list:REG_DEAD (reg:DF 139)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 140))
            (nil))))

(note:HI 241 240 242 16 ("./CppStatUtilities.cc") 245)

(insn:HI 242 241 243 16 ./CppStatUtilities.cc:245 (parallel [
            (set (reg/v:SI 81 [ i ])
                (plus:SI (reg/v:SI 81 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 243 242 244 16 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 82 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 244 243 245 16 ./CppStatUtilities.cc:245 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 81 [ i ])
            (reg/v:SI 65 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 242 (nil))
    (nil))

(jump_insn:HI 245 244 23 16 ./CppStatUtilities.cc:245 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 38)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 244 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
(code_label:HI 23 245 24 17 821 "" [2 uses])

(note:HI 24 23 25 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 25 24 27 17 ("./CppStatUtilities.cc") 239)

(note:HI 27 25 28 17 ("./CppStatUtilities.cc") 246)

(insn:HI 28 27 29 17 ./CppStatUtilities.cc:246 (set (reg:DF 83)
        (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 29 28 31 17 ./CppStatUtilities.cc:246 (set (reg:DF 83)
        (minus:DF (reg:DF 83)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 28 (nil))
    (nil))

(insn:HI 31 29 32 17 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 83)
                (abs:DF (reg:DF 83)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 29 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 32 31 33 17 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 83)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_DEAD (reg:DF 83)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 84))
            (nil))))

(note:HI 33 32 384 17 ("./CppStatUtilities.cc") 245)

(insn:HI 384 33 258 17 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 79)
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 258 384 259 17 ("./CppStatUtilities.cc") 239)

(note:HI 259 258 260 17 ("./CppStatUtilities.cc") 246)

(insn:HI 260 259 261 17 ./CppStatUtilities.cc:246 (set (reg:DF 88)
        (mem:DF (plus:DI (mult:DI (reg:DI 79)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 384 (nil))
    (nil))

(insn:HI 261 260 262 17 ./CppStatUtilities.cc:246 (set (reg:DF 88)
        (minus:DF (reg:DF 88)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 260 (nil))
    (nil))

(insn:HI 262 261 263 17 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 88)
                (abs:DF (reg:DF 88)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 261 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 263 262 264 17 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 79)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 88)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 262 (nil))
    (expr_list:REG_DEAD (reg:DF 88)
        (expr_list:REG_DEAD (reg:DI 79)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 89))
                (nil)))))

(note:HI 264 263 266 17 ("./CppStatUtilities.cc") 245)

(insn:HI 266 264 276 17 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 92 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 276 266 277 17 ("./CppStatUtilities.cc") 239)

(note:HI 277 276 278 17 ("./CppStatUtilities.cc") 246)

(insn:HI 278 277 279 17 ./CppStatUtilities.cc:246 (set (reg:DF 93)
        (mem:DF (plus:DI (mult:DI (reg:DI 92 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 266 (nil))
    (nil))

(insn:HI 279 278 280 17 ./CppStatUtilities.cc:246 (set (reg:DF 93)
        (minus:DF (reg:DF 93)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 278 (nil))
    (nil))

(insn:HI 280 279 281 17 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 93)
                (abs:DF (reg:DF 93)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 279 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 281 280 282 17 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 92 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 93)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 280 (nil))
    (expr_list:REG_DEAD (reg:DF 93)
        (expr_list:REG_DEAD (reg:DI 92 [ ivtmp.957 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 94))
                (nil)))))

(note:HI 282 281 284 17 ("./CppStatUtilities.cc") 245)

(insn:HI 284 282 294 17 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 97 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 294 284 295 17 ("./CppStatUtilities.cc") 239)

(note:HI 295 294 296 17 ("./CppStatUtilities.cc") 246)

(insn:HI 296 295 297 17 ./CppStatUtilities.cc:246 (set (reg:DF 98)
        (mem:DF (plus:DI (mult:DI (reg:DI 97 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 284 (nil))
    (nil))

(insn:HI 297 296 298 17 ./CppStatUtilities.cc:246 (set (reg:DF 98)
        (minus:DF (reg:DF 98)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 296 (nil))
    (nil))

(insn:HI 298 297 299 17 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 98)
                (abs:DF (reg:DF 98)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 297 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 299 298 300 17 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 97 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 98)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 298 (nil))
    (expr_list:REG_DEAD (reg:DF 98)
        (expr_list:REG_DEAD (reg:DI 97 [ ivtmp.957 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 99))
                (nil)))))

(note:HI 300 299 302 17 ("./CppStatUtilities.cc") 245)

(insn:HI 302 300 312 17 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 102 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 312 302 313 17 ("./CppStatUtilities.cc") 239)

(note:HI 313 312 314 17 ("./CppStatUtilities.cc") 246)

(insn:HI 314 313 315 17 ./CppStatUtilities.cc:246 (set (reg:DF 103)
        (mem:DF (plus:DI (mult:DI (reg:DI 102 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 302 (nil))
    (nil))

(insn:HI 315 314 316 17 ./CppStatUtilities.cc:246 (set (reg:DF 103)
        (minus:DF (reg:DF 103)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 314 (nil))
    (nil))

(insn:HI 316 315 317 17 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 103)
                (abs:DF (reg:DF 103)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 315 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 317 316 318 17 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 102 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 103)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 316 (nil))
    (expr_list:REG_DEAD (reg:DF 103)
        (expr_list:REG_DEAD (reg:DI 102 [ ivtmp.957 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 104))
                (nil)))))

(note:HI 318 317 320 17 ("./CppStatUtilities.cc") 245)

(insn:HI 320 318 330 17 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 107 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 330 320 331 17 ("./CppStatUtilities.cc") 239)

(note:HI 331 330 332 17 ("./CppStatUtilities.cc") 246)

(insn:HI 332 331 333 17 ./CppStatUtilities.cc:246 (set (reg:DF 108)
        (mem:DF (plus:DI (mult:DI (reg:DI 107 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 320 (nil))
    (nil))

(insn:HI 333 332 334 17 ./CppStatUtilities.cc:246 (set (reg:DF 108)
        (minus:DF (reg:DF 108)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 332 (nil))
    (nil))

(insn:HI 334 333 335 17 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 108)
                (abs:DF (reg:DF 108)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 333 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 335 334 336 17 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 107 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 108)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 334 (nil))
    (expr_list:REG_DEAD (reg:DF 108)
        (expr_list:REG_DEAD (reg:DI 107 [ ivtmp.957 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 109))
                (nil)))))

(note:HI 336 335 338 17 ("./CppStatUtilities.cc") 245)

(insn:HI 338 336 348 17 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 112 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 348 338 349 17 ("./CppStatUtilities.cc") 239)

(note:HI 349 348 350 17 ("./CppStatUtilities.cc") 246)

(insn:HI 350 349 351 17 ./CppStatUtilities.cc:246 (set (reg:DF 113)
        (mem:DF (plus:DI (mult:DI (reg:DI 112 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 338 (nil))
    (nil))

(insn:HI 351 350 352 17 ./CppStatUtilities.cc:246 (set (reg:DF 113)
        (minus:DF (reg:DF 113)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 350 (nil))
    (nil))

(insn:HI 352 351 353 17 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 113)
                (abs:DF (reg:DF 113)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 351 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 353 352 354 17 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 112 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 113)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 352 (nil))
    (expr_list:REG_DEAD (reg:DF 113)
        (expr_list:REG_DEAD (reg:DI 112 [ ivtmp.957 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 114))
                (nil)))))

(note:HI 354 353 356 17 ("./CppStatUtilities.cc") 245)

(insn:HI 356 354 366 17 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 117 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 366 356 367 17 ("./CppStatUtilities.cc") 239)

(note:HI 367 366 368 17 ("./CppStatUtilities.cc") 246)

(insn:HI 368 367 369 17 ./CppStatUtilities.cc:246 (set (reg:DF 118)
        (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 64 [ a ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 356 (nil))
    (nil))

(insn:HI 369 368 370 17 ./CppStatUtilities.cc:246 (set (reg:DF 118)
        (minus:DF (reg:DF 118)
            (reg/v:DF 62 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 368 (nil))
    (nil))

(insn:HI 370 369 371 17 ./CppStatUtilities.cc:246 (parallel [
            (set (reg:DF 118)
                (abs:DF (reg:DF 118)))
            (use (reg:V2DF 73))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 369 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 371 370 372 17 ./CppStatUtilities.cc:246 (set (mem:DF (plus:DI (mult:DI (reg:DI 117 [ ivtmp.957 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ res ])) [3 S8 A64])
        (reg:DF 118)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 370 (nil))
    (expr_list:REG_DEAD (reg:DF 118)
        (expr_list:REG_DEAD (reg:DI 117 [ ivtmp.957 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 119))
                (nil)))))

(note:HI 372 371 373 17 ("./CppStatUtilities.cc") 245)

(insn:HI 373 372 374 17 ./CppStatUtilities.cc:245 (parallel [
            (set (reg/v:SI 81 [ i ])
                (plus:SI (reg/v:SI 81 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 374 373 375 17 ./CppStatUtilities.cc:245 (parallel [
            (set (reg:DI 82 [ ivtmp.957 ])
                (plus:DI (reg:DI 82 [ ivtmp.957 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 375 374 376 17 ./CppStatUtilities.cc:245 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 81 [ i ])
            (reg/v:SI 65 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 373 (nil))
    (nil))

(jump_insn:HI 376 375 381 17 ./CppStatUtilities.cc:245 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 38)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 375 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82
(note:HI 381 376 411 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 411 381 412 18 (set (pc)
        (label_ref 23)) 548 {jump} (nil)
    (nil))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65 66 67 73 81 82

(barrier:HI 412 411 0)


;; Function double mad(double*, double*, int, int, double&, double) (_Z3madPdS_iiRdd)



Pass 0

  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7969 MMX_REGS:7969 FP_TOP_SSE_REGS:7969 FP_SECOND_SSE_REGS:7969 FLOAT_SSE_REGS:7969 FLOAT_INT_REGS:5517 INT_SSE_REGS:7969 FLOAT_INT_SSE_REGS:7969 ALL_REGS:7969 MEM:1839
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25116 MMX_REGS:25116 FP_TOP_SSE_REGS:25116 FP_SECOND_SSE_REGS:25116 FLOAT_SSE_REGS:25116 FLOAT_INT_REGS:17388 INT_SSE_REGS:25116 FLOAT_INT_SSE_REGS:25116 ALL_REGS:25116 MEM:6367
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:900
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5070 MMX_REGS:5070 FP_TOP_SSE_REGS:5070 FP_SECOND_SSE_REGS:5070 FLOAT_SSE_REGS:5070 FLOAT_INT_REGS:3510 INT_SSE_REGS:5070 FLOAT_INT_SSE_REGS:5070 ALL_REGS:5070 MEM:1460
  Register 63 costs: AREG:200 DREG:200 CREG:200 BREG:200 SIREG:200 DIREG:200 AD_REGS:200 Q_REGS:200 NON_Q_REGS:200 INDEX_REGS:200 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:4100 MMX_REGS:4100 FP_TOP_SSE_REGS:4100 FP_SECOND_SSE_REGS:4100 FLOAT_SSE_REGS:4100 FLOAT_INT_REGS:2900 INT_SSE_REGS:4100 FLOAT_INT_SSE_REGS:4100 ALL_REGS:4100 MEM:1200
  Register 64 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3552 INDEX_REGS:1665 LEGACY_REGS:3552 GENERAL_REGS:3552 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4884 MEM:1443
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:32721 MMX_REGS:32721 INT_SSE_REGS:32721 MEM:7812
  Register 67 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:7750 INDEX_REGS:5200 LEGACY_REGS:7750 GENERAL_REGS:7750 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:11550 MEM:3800
  Register 69 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15743 MMX_REGS:15743 FP_TOP_SSE_REGS:15743 FP_SECOND_SSE_REGS:15743 FLOAT_SSE_REGS:15743 FLOAT_INT_REGS:10899 INT_SSE_REGS:15743 FLOAT_INT_SSE_REGS:15743 ALL_REGS:15743 MEM:4622
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4199 MMX_REGS:4199 FP_TOP_SSE_REGS:4199 FP_SECOND_SSE_REGS:4199 FLOAT_SSE_REGS:4199 FLOAT_INT_REGS:2907 INT_SSE_REGS:4199 FLOAT_INT_SSE_REGS:4199 ALL_REGS:4199 MEM:1081
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-112 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4199 MMX_REGS:4199 FP_TOP_SSE_REGS:4199 FP_SECOND_SSE_REGS:4199 FLOAT_SSE_REGS:4199 FLOAT_INT_REGS:2907 INT_SSE_REGS:4199 FLOAT_INT_SSE_REGS:4199 ALL_REGS:4199 MEM:1081
  Register 73 costs: AREG:224 DREG:112 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:8622 MMX_REGS:8622 INT_SSE_REGS:8622 MEM:2274
  Register 74 costs: AREG:224 DREG:224 CREG:112 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:6022 MMX_REGS:6022 FP_TOP_SSE_REGS:6022 FP_SECOND_SSE_REGS:6022 FLOAT_SSE_REGS:6022 FLOAT_INT_REGS:4238 INT_SSE_REGS:6022 FLOAT_INT_SSE_REGS:6022 ALL_REGS:6022 MEM:1674
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:12844 MMX_REGS:12844 FP_TOP_SSE_REGS:12844 FP_SECOND_SSE_REGS:12844 FLOAT_SSE_REGS:12844 FLOAT_INT_REGS:8892 INT_SSE_REGS:12844 FLOAT_INT_SSE_REGS:12844 ALL_REGS:12844 MEM:3952
  Register 76 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3569 INDEX_REGS:1665 LEGACY_REGS:3569 GENERAL_REGS:3569 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4905 MEM:1447
  Register 77 costs: AREG:224 DREG:224 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:3136 MMX_REGS:3136 INT_SSE_REGS:3136 MEM:896
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 INT_SSE_REGS:2912 MEM:672
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 FP_TOP_SSE_REGS:2912 FP_SECOND_SSE_REGS:2912 FLOAT_SSE_REGS:2912 FLOAT_INT_REGS:2016 INT_SSE_REGS:2912 FLOAT_INT_SSE_REGS:2912 ALL_REGS:2912 MEM:784
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 FP_TOP_SSE_REGS:2912 FP_SECOND_SSE_REGS:2912 FLOAT_SSE_REGS:2912 FLOAT_INT_REGS:2016 INT_SSE_REGS:2912 FLOAT_INT_SSE_REGS:2912 ALL_REGS:2912 MEM:672
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 84 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 87 costs: SSE_REGS:0 FP_TOP_SSE_REGS:14705 FP_SECOND_SSE_REGS:14705 FLOAT_SSE_REGS:14705 INT_SSE_REGS:30005 FLOAT_INT_SSE_REGS:30005 ALL_REGS:30005 MEM:6155
  Register 90 costs: AREG:19994 DREG:19994 CREG:19994 BREG:19994 SIREG:19994 DIREG:19994 AD_REGS:19994 Q_REGS:19994 NON_Q_REGS:21694 INDEX_REGS:19994 LEGACY_REGS:21694 GENERAL_REGS:21694 FP_TOP_REG:32298 FP_SECOND_REG:32298 FLOAT_REGS:32298 SSE_REGS:0 FP_TOP_SSE_REGS:32298 FP_SECOND_SSE_REGS:32298 FLOAT_SSE_REGS:32298 FLOAT_INT_REGS:32298 INT_SSE_REGS:19994 FLOAT_INT_SSE_REGS:32298 ALL_REGS:34398 MEM:11166
  Register 95 costs: AREG:200 DREG:200 CREG:200 BREG:200 SIREG:200 DIREG:200 AD_REGS:200 Q_REGS:200 NON_Q_REGS:200 INDEX_REGS:200 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2800 MMX_REGS:2800 FP_TOP_SSE_REGS:2800 FP_SECOND_SSE_REGS:2800 FLOAT_SSE_REGS:2800 FLOAT_INT_REGS:2000 INT_SSE_REGS:2800 FLOAT_INT_SSE_REGS:2800 ALL_REGS:2800 MEM:800
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2435
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10504 MMX_REGS:10504 FP_TOP_SSE_REGS:10504 FP_SECOND_SSE_REGS:10504 FLOAT_SSE_REGS:10504 FLOAT_INT_REGS:7272 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:10504 ALL_REGS:10504 MEM:3131
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6526 MMX_REGS:6526 FP_TOP_SSE_REGS:6526 FP_SECOND_SSE_REGS:6526 FLOAT_SSE_REGS:6526 FLOAT_INT_REGS:4518 INT_SSE_REGS:6526 FLOAT_INT_SSE_REGS:6526 ALL_REGS:6526 MEM:1907
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:606
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:29952 MMX_REGS:29952 FP_TOP_SSE_REGS:29952 FP_SECOND_SSE_REGS:29952 FLOAT_SSE_REGS:29952 FLOAT_INT_REGS:20736 INT_SSE_REGS:29952 FLOAT_INT_SSE_REGS:29952 ALL_REGS:29952 MEM:7855
  Register 101 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24089 MMX_REGS:24089 FP_TOP_SSE_REGS:24089 FP_SECOND_SSE_REGS:24089 FLOAT_SSE_REGS:24089 FLOAT_INT_REGS:16677 INT_SSE_REGS:24089 FLOAT_INT_SSE_REGS:24089 ALL_REGS:24089 MEM:5559
  Register 105 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 106 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3835 MMX_REGS:3835 FP_TOP_SSE_REGS:3835 FP_SECOND_SSE_REGS:3835 FLOAT_SSE_REGS:3835 FLOAT_INT_REGS:2655 INT_SSE_REGS:3835 FLOAT_INT_SSE_REGS:3835 ALL_REGS:3835 MEM:1080
  Register 111 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 115 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 116 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 120 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 121 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 125 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 126 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 130 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 131 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 136 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 140 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 141 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 153 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 158 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 161 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 166 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 169 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 174 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 177 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 182 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 185 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 190 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 193 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 198 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400

  Register 59 pref GENERAL_REGS or none
  Register 60 pref GENERAL_REGS or none
  Register 61 pref GENERAL_REGS or none
  Register 62 pref GENERAL_REGS or none
  Register 63 pref GENERAL_REGS or none
  Register 64 pref SSE_REGS or none
  Register 65 pref SIREG, else GENERAL_REGS
  Register 67 pref SSE_REGS or none
  Register 69 pref AREG, else GENERAL_REGS
  Register 71 pref DIREG, else GENERAL_REGS
  Register 72 pref SIREG, else GENERAL_REGS
  Register 73 pref DREG, else GENERAL_REGS
  Register 74 pref CREG, else GENERAL_REGS
  Register 75 pref GENERAL_REGS or none
  Register 76 pref SSE_REGS or none
  Register 77 pref GENERAL_REGS or none
  Register 78 pref GENERAL_REGS or none
  Register 79 pref GENERAL_REGS or none
  Register 80 pref DIREG, else GENERAL_REGS
  Register 82 pref GENERAL_REGS or none
  Register 84 pref INDEX_REGS, else GENERAL_REGS
  Register 87 pref SSE_REGS or none
  Register 90 pref SSE_REGS or none
  Register 95 pref GENERAL_REGS or none
  Register 96 pref GENERAL_REGS or none
  Register 97 pref GENERAL_REGS or none
  Register 98 pref GENERAL_REGS or none
  Register 99 pref GENERAL_REGS or none
  Register 100 pref GENERAL_REGS or none
  Register 101 pref SSE_REGS or none
  Register 102 pref GENERAL_REGS or none
  Register 105 pref SSE_REGS or none
  Register 106 pref GENERAL_REGS or none
  Register 111 pref SSE_REGS or none
  Register 115 pref INDEX_REGS, else GENERAL_REGS
  Register 116 pref SSE_REGS or none
  Register 120 pref INDEX_REGS, else GENERAL_REGS
  Register 121 pref SSE_REGS or none
  Register 125 pref INDEX_REGS, else GENERAL_REGS
  Register 126 pref SSE_REGS or none
  Register 130 pref INDEX_REGS, else GENERAL_REGS
  Register 131 pref SSE_REGS or none
  Register 135 pref INDEX_REGS, else GENERAL_REGS
  Register 136 pref SSE_REGS or none
  Register 140 pref INDEX_REGS, else GENERAL_REGS
  Register 141 pref SSE_REGS or none
  Register 145 pref INDEX_REGS, else GENERAL_REGS
  Register 150 pref INDEX_REGS, else GENERAL_REGS
  Register 153 pref SSE_REGS or none
  Register 158 pref INDEX_REGS, else GENERAL_REGS
  Register 161 pref SSE_REGS or none
  Register 166 pref INDEX_REGS, else GENERAL_REGS
  Register 169 pref SSE_REGS or none
  Register 174 pref INDEX_REGS, else GENERAL_REGS
  Register 177 pref SSE_REGS or none
  Register 182 pref INDEX_REGS, else GENERAL_REGS
  Register 185 pref SSE_REGS or none
  Register 190 pref INDEX_REGS, else GENERAL_REGS
  Register 193 pref SSE_REGS or none
  Register 198 pref INDEX_REGS, else GENERAL_REGS


Pass 1

  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7969 MMX_REGS:7969 FP_TOP_SSE_REGS:7969 FP_SECOND_SSE_REGS:7969 FLOAT_SSE_REGS:7969 FLOAT_INT_REGS:5517 INT_SSE_REGS:7969 FLOAT_INT_SSE_REGS:7969 ALL_REGS:7969 MEM:1839
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25116 MMX_REGS:25116 FP_TOP_SSE_REGS:25116 FP_SECOND_SSE_REGS:25116 FLOAT_SSE_REGS:25116 FLOAT_INT_REGS:17388 INT_SSE_REGS:25116 FLOAT_INT_SSE_REGS:25116 ALL_REGS:25116 MEM:6367
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:900
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5070 MMX_REGS:5070 FP_TOP_SSE_REGS:5070 FP_SECOND_SSE_REGS:5070 FLOAT_SSE_REGS:5070 FLOAT_INT_REGS:3510 INT_SSE_REGS:5070 FLOAT_INT_SSE_REGS:5070 ALL_REGS:5070 MEM:1460
  Register 63 costs: AREG:200 DREG:100 CREG:200 BREG:200 SIREG:200 DIREG:200 AD_REGS:200 Q_REGS:200 NON_Q_REGS:200 INDEX_REGS:200 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:4100 MMX_REGS:4100 FP_TOP_SSE_REGS:4100 FP_SECOND_SSE_REGS:4100 FLOAT_SSE_REGS:4100 FLOAT_INT_REGS:2900 INT_SSE_REGS:4100 FLOAT_INT_SSE_REGS:4100 ALL_REGS:4100 MEM:1200
  Register 64 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3552 INDEX_REGS:1665 LEGACY_REGS:3552 GENERAL_REGS:3552 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4884 MEM:1443
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:32721 MMX_REGS:32721 INT_SSE_REGS:32721 MEM:7812
  Register 67 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:7750 INDEX_REGS:5200 LEGACY_REGS:7750 GENERAL_REGS:7750 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:11550 MEM:3800
  Register 69 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15743 MMX_REGS:15743 FP_TOP_SSE_REGS:15743 FP_SECOND_SSE_REGS:15743 FLOAT_SSE_REGS:15743 FLOAT_INT_REGS:10899 INT_SSE_REGS:15743 FLOAT_INT_SSE_REGS:15743 ALL_REGS:15743 MEM:4622
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4199 MMX_REGS:4199 FP_TOP_SSE_REGS:4199 FP_SECOND_SSE_REGS:4199 FLOAT_SSE_REGS:4199 FLOAT_INT_REGS:2907 INT_SSE_REGS:4199 FLOAT_INT_SSE_REGS:4199 ALL_REGS:4199 MEM:1081
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-112 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4199 MMX_REGS:4199 FP_TOP_SSE_REGS:4199 FP_SECOND_SSE_REGS:4199 FLOAT_SSE_REGS:4199 FLOAT_INT_REGS:2907 INT_SSE_REGS:4199 FLOAT_INT_SSE_REGS:4199 ALL_REGS:4199 MEM:1081
  Register 73 costs: AREG:224 DREG:112 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:8622 MMX_REGS:8622 INT_SSE_REGS:8622 MEM:2274
  Register 74 costs: AREG:224 DREG:224 CREG:112 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:6022 MMX_REGS:6022 FP_TOP_SSE_REGS:6022 FP_SECOND_SSE_REGS:6022 FLOAT_SSE_REGS:6022 FLOAT_INT_REGS:4238 INT_SSE_REGS:6022 FLOAT_INT_SSE_REGS:6022 ALL_REGS:6022 MEM:1674
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:12844 MMX_REGS:12844 FP_TOP_SSE_REGS:12844 FP_SECOND_SSE_REGS:12844 FLOAT_SSE_REGS:12844 FLOAT_INT_REGS:8892 INT_SSE_REGS:12844 FLOAT_INT_SSE_REGS:12844 ALL_REGS:12844 MEM:3952
  Register 76 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3569 INDEX_REGS:1665 LEGACY_REGS:3569 GENERAL_REGS:3569 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4905 MEM:1447
  Register 77 costs: AREG:224 DREG:224 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:3136 MMX_REGS:3136 INT_SSE_REGS:3136 MEM:896
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 INT_SSE_REGS:2912 MEM:672
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 FP_TOP_SSE_REGS:2912 FP_SECOND_SSE_REGS:2912 FLOAT_SSE_REGS:2912 FLOAT_INT_REGS:2016 INT_SSE_REGS:2912 FLOAT_INT_SSE_REGS:2912 ALL_REGS:2912 MEM:784
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 FP_TOP_SSE_REGS:2912 FP_SECOND_SSE_REGS:2912 FLOAT_SSE_REGS:2912 FLOAT_INT_REGS:2016 INT_SSE_REGS:2912 FLOAT_INT_SSE_REGS:2912 ALL_REGS:2912 MEM:672
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 84 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 87 costs: SSE_REGS:0 FP_TOP_SSE_REGS:14705 FP_SECOND_SSE_REGS:14705 FLOAT_SSE_REGS:14705 INT_SSE_REGS:30005 FLOAT_INT_SSE_REGS:30005 ALL_REGS:30005 MEM:6155
  Register 90 costs: AREG:19994 DREG:19994 CREG:19994 BREG:19994 SIREG:19994 DIREG:19994 AD_REGS:19994 Q_REGS:19994 NON_Q_REGS:21694 INDEX_REGS:19994 LEGACY_REGS:21694 GENERAL_REGS:21694 FP_TOP_REG:32298 FP_SECOND_REG:32298 FLOAT_REGS:32298 SSE_REGS:0 FP_TOP_SSE_REGS:32298 FP_SECOND_SSE_REGS:32298 FLOAT_SSE_REGS:32298 FLOAT_INT_REGS:32298 INT_SSE_REGS:19994 FLOAT_INT_SSE_REGS:32298 ALL_REGS:34398 MEM:11166
  Register 95 costs: AREG:200 DREG:200 CREG:200 BREG:200 SIREG:200 DIREG:200 AD_REGS:200 Q_REGS:200 NON_Q_REGS:200 INDEX_REGS:200 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2800 MMX_REGS:2800 FP_TOP_SSE_REGS:2800 FP_SECOND_SSE_REGS:2800 FLOAT_SSE_REGS:2800 FLOAT_INT_REGS:2000 INT_SSE_REGS:2800 FLOAT_INT_SSE_REGS:2800 ALL_REGS:2800 MEM:800
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2435
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10504 MMX_REGS:10504 FP_TOP_SSE_REGS:10504 FP_SECOND_SSE_REGS:10504 FLOAT_SSE_REGS:10504 FLOAT_INT_REGS:7272 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:10504 ALL_REGS:10504 MEM:3131
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6526 MMX_REGS:6526 FP_TOP_SSE_REGS:6526 FP_SECOND_SSE_REGS:6526 FLOAT_SSE_REGS:6526 FLOAT_INT_REGS:4518 INT_SSE_REGS:6526 FLOAT_INT_SSE_REGS:6526 ALL_REGS:6526 MEM:1907
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:606
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:29952 MMX_REGS:29952 FP_TOP_SSE_REGS:29952 FP_SECOND_SSE_REGS:29952 FLOAT_SSE_REGS:29952 FLOAT_INT_REGS:20736 INT_SSE_REGS:29952 FLOAT_INT_SSE_REGS:29952 ALL_REGS:29952 MEM:7855
  Register 101 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24089 MMX_REGS:24089 FP_TOP_SSE_REGS:24089 FP_SECOND_SSE_REGS:24089 FLOAT_SSE_REGS:24089 FLOAT_INT_REGS:16677 INT_SSE_REGS:24089 FLOAT_INT_SSE_REGS:24089 ALL_REGS:24089 MEM:5559
  Register 105 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 106 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3835 MMX_REGS:3835 FP_TOP_SSE_REGS:3835 FP_SECOND_SSE_REGS:3835 FLOAT_SSE_REGS:3835 FLOAT_INT_REGS:2655 INT_SSE_REGS:3835 FLOAT_INT_SSE_REGS:3835 ALL_REGS:3835 MEM:1080
  Register 111 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 115 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 116 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 120 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 121 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 125 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 126 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 130 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 131 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 136 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 140 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 141 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:6975 INDEX_REGS:4680 LEGACY_REGS:6975 GENERAL_REGS:6975 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:10395 MEM:3420
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:90 INDEX_REGS:0 LEGACY_REGS:90 GENERAL_REGS:90 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:360
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 153 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 158 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 161 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 166 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 169 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 174 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 177 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 182 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 185 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 190 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 193 costs: AREG:5213 DREG:5213 CREG:5213 BREG:5213 SIREG:5213 DIREG:5213 AD_REGS:5213 Q_REGS:5213 NON_Q_REGS:7780 INDEX_REGS:5213 LEGACY_REGS:7780 GENERAL_REGS:7780 FP_TOP_REG:8421 FP_SECOND_REG:8421 FLOAT_REGS:8421 SSE_REGS:0 FP_TOP_SSE_REGS:8421 FP_SECOND_SSE_REGS:8421 FLOAT_SSE_REGS:8421 FLOAT_INT_REGS:8421 INT_SSE_REGS:5213 FLOAT_INT_SSE_REGS:8421 ALL_REGS:11592 MEM:3812
  Register 198 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400

  Register 63 pref DREG, else GENERAL_REGS
199 registers.

Register 59 used 6 times across 196 insns; set 1 time; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 60 used 25 times across 124 insns; set 9 times; GENERAL_REGS or none.

Register 61 used 3 times across 3 insns in block 7; set 1 time; GENERAL_REGS or none.

Register 62 used 4 times across 36 insns; set 1 time; GENERAL_REGS or none.

Register 63 used 3 times across 15 insns; set 1 time; user var; 4 bytes; pref DREG, else GENERAL_REGS.

Register 64 used 2 times across 4 insns in block 6; set 1 time; user var; crosses 1 call; SSE_REGS or none.

Register 65 used 49 times across 402 insns; set 18 times; user var; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 67 used 9 times across 9 insns; set 4 times; SSE_REGS or none.

Register 69 used 20 times across 210 insns; set 1 time; crosses 2 calls; pref AREG, else GENERAL_REGS; pointer.

Register 71 used 3 times across 30 insns; set 1 time; user var; crosses 2 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 72 used 3 times across 28 insns; set 1 time; user var; crosses 2 calls; pref SIREG, else GENERAL_REGS; pointer.

Register 73 used 6 times across 29 insns; set 1 time; user var; crosses 2 calls; 4 bytes; pref DREG, else GENERAL_REGS.

Register 74 used 4 times across 19 insns; set 1 time; user var; crosses 2 calls; 4 bytes; pref CREG, else GENERAL_REGS.

Register 75 used 18 times across 213 insns; set 1 time; user var; dies in 0 places; crosses 2 calls; GENERAL_REGS or none; pointer.

Register 76 used 2 times across 219 insns; set 1 time; user var; crosses 4 calls; SSE_REGS or none.

Register 77 used 2 times across 2 insns in block 0; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 78 used 2 times across 2 insns in block 0; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 79 used 2 times across 2 insns in block 0; set 1 time; GENERAL_REGS or none.

Register 80 used 2 times across 2 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 82 used 2 times across 2 insns in block 7; set 1 time; GENERAL_REGS or none.

Register 84 used 2 times across 5 insns in block 5; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 87 used 17 times across 368 insns; set 1 time; dies in 0 places; 16 bytes; SSE_REGS or none.

Register 90 used 17 times across 370 insns; set 1 time; dies in 0 places; SSE_REGS or none.

Register 95 used 2 times across 2 insns in block 7; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 96 used 10 times across 28 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 97 used 8 times across 60 insns; set 1 time; GENERAL_REGS or none.

Register 98 used 8 times across 60 insns; set 1 time; GENERAL_REGS or none.

Register 99 used 2 times across 60 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 100 used 25 times across 123 insns; set 9 times; GENERAL_REGS or none.

Register 101 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 102 used 20 times across 122 insns; set 9 times; user var; 4 bytes; GENERAL_REGS or none.

Register 105 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 106 used 4 times across 38 insns; set 1 time; GENERAL_REGS or none.

Register 111 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 115 used 2 times across 5 insns in block 18; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 116 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 120 used 2 times across 5 insns in block 21; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 121 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 125 used 2 times across 5 insns in block 24; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 126 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 130 used 2 times across 5 insns in block 27; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 131 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 135 used 2 times across 5 insns in block 30; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 136 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 140 used 2 times across 5 insns in block 33; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 141 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 145 used 2 times across 5 insns in block 36; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 150 used 2 times across 5 insns in block 40; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 153 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 158 used 2 times across 5 insns in block 42; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 161 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 166 used 2 times across 5 insns in block 44; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 169 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 174 used 2 times across 5 insns in block 46; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 177 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 182 used 2 times across 5 insns in block 48; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 185 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 190 used 2 times across 5 insns in block 50; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 193 used 9 times across 10 insns; set 4 times; SSE_REGS or none.

Register 198 used 2 times across 5 insns in block 52; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

55 basic blocks, 83 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1122, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [99.0%]  1 [1.0%]  (fallthru)
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 72 73 74 75 76

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  0 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  0 [99.0%] 
Successors:  6 [10.0%]  3 [90.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 72 73 74 75 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 71 72 73 75 76

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  2 [90.0%]  (fallthru)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 69 71 72 73 75 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 69 71 72 73 75 76

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  38 [100.0%]  54 [100.0%]  10 [12.5%] 
Successors:  39 [50.0%]  5 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 101 102
Invalid sum of incoming frequencies 1721, should be 1013

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
Successors:  39 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 101 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  2 [10.0%]  53 [10.0%]  (loop_exit) 9 [10.0%]  37 [10.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 69 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  3 [100.0%] 
Successors:  9 [50.0%]  8 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 69 71 72 73 75 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63 65 67 69 75 76 87 90 96 106

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
Successors:  9 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63 67 69 75 76 87 90 96 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63 65 69 75 76 87 90 96 106

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
Successors:  10 [90.0%]  (fallthru,dfs_back) 6 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63 65 69 75 76 87 90 96 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  9 [90.0%]  (fallthru,dfs_back)
Successors:  11 [87.5%]  (fallthru) 4 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
Invalid sum of incoming frequencies 900, should be 771

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  10 [87.5%]  (fallthru)
Successors:  12 [85.7%]  (fallthru) 35 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  11 [85.7%]  (fallthru)
Successors:  13 [83.3%]  (fallthru) 32 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  12 [83.3%]  (fallthru)
Successors:  14 [80.0%]  (fallthru) 29 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  13 [80.0%]  (fallthru)
Successors:  15 [75.0%]  (fallthru) 26 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  14 [75.0%]  (fallthru)
Successors:  16 [66.7%]  (fallthru) 23 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [66.7%]  (fallthru)
Successors:  17 [50.0%]  (fallthru) 20 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 100 102 106
Invalid sum of incoming frequencies 300, should be 900

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  16 [50.0%]  (fallthru)
Successors:  19 [50.0%]  18 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 100 102 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 106 111
Invalid sum of incoming frequencies 450, should be 900

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  17 [50.0%]  (fallthru)
Successors:  19 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 106 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  17 [50.0%]  18 [100.0%]  (fallthru)
Successors:  20 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  19 [100.0%]  (fallthru) 16 [50.0%] 
Successors:  22 [50.0%]  21 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 116
Invalid sum of incoming frequencies 1350, should be 900

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  20 [50.0%]  (fallthru)
Successors:  22 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 116
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  20 [50.0%]  21 [100.0%]  (fallthru)
Successors:  23 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  22 [100.0%]  (fallthru) 15 [33.3%] 
Successors:  25 [50.0%]  24 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 121
Invalid sum of incoming frequencies 1050, should be 900

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  23 [50.0%]  (fallthru)
Successors:  25 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 121
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  23 [50.0%]  24 [100.0%]  (fallthru)
Successors:  26 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  25 [100.0%]  (fallthru) 14 [25.0%] 
Successors:  28 [50.0%]  27 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 126
Invalid sum of incoming frequencies 1050, should be 900

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  26 [50.0%]  (fallthru)
Successors:  28 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  26 [50.0%]  27 [100.0%]  (fallthru)
Successors:  29 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 29 prev 28, next 30, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  28 [100.0%]  (fallthru) 13 [20.0%] 
Successors:  31 [50.0%]  30 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 131
Invalid sum of incoming frequencies 1035, should be 900

Basic block 30 prev 29, next 31, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  29 [50.0%]  (fallthru)
Successors:  31 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 131
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  29 [50.0%]  30 [100.0%]  (fallthru)
Successors:  32 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  31 [100.0%]  (fallthru) 12 [16.7%] 
Successors:  34 [50.0%]  33 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 136
Invalid sum of incoming frequencies 1020, should be 900

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  32 [50.0%]  (fallthru)
Successors:  34 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 136
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  32 [50.0%]  33 [100.0%]  (fallthru)
Successors:  35 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  34 [100.0%]  (fallthru) 11 [14.3%] 
Successors:  37 [50.0%]  36 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 141
Invalid sum of incoming frequencies 1007, should be 900

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  35 [50.0%]  (fallthru)
Successors:  37 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 141
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 37 prev 36, next 38, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  35 [50.0%]  36 [100.0%]  (fallthru)
Successors:  38 [90.0%]  (fallthru,dfs_back) 6 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 38 prev 37, next 39, loop_depth 0, count 0, freq 714, maybe hot.
Predecessors:  37 [90.0%]  (fallthru,dfs_back)
Successors:  4 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 39 prev 38, next 40, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  4 [50.0%]  5 [100.0%] 
Successors:  41 [50.0%]  40 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 97 98 99 105

Basic block 40 prev 39, next 41, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  39 [50.0%]  (fallthru)
Successors:  41 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 97 98 99 105
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

Basic block 41 prev 40, next 42, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  39 [50.0%]  40 [100.0%]  (fallthru)
Successors:  43 [50.0%]  42 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 153

Basic block 42 prev 41, next 43, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  41 [50.0%]  (fallthru)
Successors:  43 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 153
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

Basic block 43 prev 42, next 44, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  41 [50.0%]  42 [100.0%]  (fallthru)
Successors:  45 [50.0%]  44 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 161

Basic block 44 prev 43, next 45, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  43 [50.0%]  (fallthru)
Successors:  45 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 161
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

Basic block 45 prev 44, next 46, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  43 [50.0%]  44 [100.0%]  (fallthru)
Successors:  47 [50.0%]  46 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 169

Basic block 46 prev 45, next 47, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  45 [50.0%]  (fallthru)
Successors:  47 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 169
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

Basic block 47 prev 46, next 48, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  45 [50.0%]  46 [100.0%]  (fallthru)
Successors:  49 [50.0%]  48 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 177

Basic block 48 prev 47, next 49, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  47 [50.0%]  (fallthru)
Successors:  49 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 177
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

Basic block 49 prev 48, next 50, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  47 [50.0%]  48 [100.0%]  (fallthru)
Successors:  51 [50.0%]  50 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 185

Basic block 50 prev 49, next 51, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  49 [50.0%]  (fallthru)
Successors:  51 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 185
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

Basic block 51 prev 50, next 52, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  49 [50.0%]  50 [100.0%]  (fallthru)
Successors:  53 [50.0%]  52 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 193

Basic block 52 prev 51, next 53, loop_depth 1, count 0, freq 506, maybe hot.
Predecessors:  51 [50.0%]  (fallthru)
Successors:  53 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 193
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

Basic block 53 prev 52, next 54, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  51 [50.0%]  52 [100.0%]  (fallthru)
Successors:  54 [90.0%]  (fallthru,dfs_back) 6 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

Basic block 54 prev 53, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  53 [90.0%]  (fallthru,dfs_back)
Successors:  4 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Register 61 in 0.
;; Register 77 in 5.
;; Register 78 in 5.
;; Register 79 in 5.
;; Register 80 in 5.
;; Register 82 in 0.
;; Register 84 in 0.
;; Register 95 in 0.
;; Register 115 in 0.
;; Register 120 in 0.
;; Register 125 in 0.
;; Register 130 in 0.
;; Register 135 in 0.
;; Register 140 in 0.
;; Register 145 in 0.
;; Register 150 in 0.
;; Register 158 in 0.
;; Register 166 in 0.
;; Register 174 in 0.
;; Register 182 in 0.
;; Register 190 in 0.
;; Register 198 in 0.
(note:HI 1 0 12 ("./CppStatUtilities.cc") 215)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 37 [r8]
(note:HI 12 1 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 4 12 5 0 ./CppStatUtilities.cc:215 (set (reg/v/f:DI 71 [ a ])
        (reg:DI 5 di [ a ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:215 (set (reg/v/f:DI 72 [ w ])
        (reg:DI 4 si [ w ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 4 si [ w ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:215 (set (reg/v:SI 73 [ start ])
        (reg:SI 1 dx [ start ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 1 dx [ start ])
        (nil)))

(insn:HI 7 6 8 0 ./CppStatUtilities.cc:215 (set (reg/v:SI 74 [ end ])
        (reg:SI 2 cx [ end ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 2 cx [ end ])
        (nil)))

(insn:HI 8 7 9 0 ./CppStatUtilities.cc:215 (set (reg/v/f:DI 75 [ medianVal ])
        (reg:DI 37 r8 [ medianVal ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 37 r8 [ medianVal ])
        (nil)))

(insn:HI 9 8 10 0 ./CppStatUtilities.cc:215 (set (reg/v:DF 76 [ constant ])
        (reg:DF 21 xmm0 [ constant ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ constant ])
        (nil)))

(note:HI 10 9 14 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 14 10 15 0 ("./CppStatUtilities.cc") 218)

(insn:HI 15 14 16 0 ./CppStatUtilities.cc:218 (parallel [
            (set (reg:SI 77)
                (minus:SI (reg/v:SI 74 [ end ])
                    (reg/v:SI 73 [ start ])))
            (clobber (reg:CC 17 flags))
        ]) 242 {*subsi_1} (insn_list:REG_DEP_TRUE 6 (insn_list:REG_DEP_TRUE 7 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 16 15 17 0 ./CppStatUtilities.cc:218 (parallel [
            (set (reg:SI 78)
                (plus:SI (reg:SI 77)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 77)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 17 16 18 0 ./CppStatUtilities.cc:218 (set (reg:DI 79)
        (sign_extend:DI (reg:SI 78))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 16 (nil))
    (expr_list:REG_DEAD (reg:SI 78)
        (nil)))

(insn:HI 18 17 19 0 ./CppStatUtilities.cc:218 (parallel [
            (set (reg:DI 80)
                (ashift:DI (reg:DI 79)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 17 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 79)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 19 18 20 0 ./CppStatUtilities.cc:218 (set (reg:DI 5 di)
        (reg:DI 80)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_DEAD (reg:DI 80)
        (nil)))

(call_insn:HI 20 19 21 0 ./CppStatUtilities.cc:218 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 19 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 21 20 23 0 ./CppStatUtilities.cc:218 (set (reg/f:DI 69 [ D.34700 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 81)
            (nil))))

(note:HI 23 21 24 0 ("./CppStatUtilities.cc") 219)

(insn:HI 24 23 25 0 ./CppStatUtilities.cc:219 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 69 [ D.34700 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 21 (nil))
    (nil))

(jump_insn:HI 25 24 27 0 ./CppStatUtilities.cc:219 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 24 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 72 73 74 75 76

;; Start of basic block 1, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 27 25 28 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 28 27 29 1 ./CppStatUtilities.cc:219 (set (reg:SI 2 cx)
        (const_int 219 [0xdb])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 29 28 30 1 ./CppStatUtilities.cc:219 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 30 29 31 1 ./CppStatUtilities.cc:219 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 31 30 32 1 ./CppStatUtilities.cc:219 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 32 31 33 1 ./CppStatUtilities.cc:219 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 33 32 34 1 ./CppStatUtilities.cc:219 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 28 (insn_list:REG_DEP_TRUE 29 (insn_list:REG_DEP_TRUE 30 (insn_list:REG_DEP_TRUE 31 (insn_list:REG_DEP_TRUE 32 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 34 33 35 1 ./CppStatUtilities.cc:219 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 35 34 36 1 ./CppStatUtilities.cc:219 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 34 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 1, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 36 35 37)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 72 73 74 75 76
(code_label:HI 37 36 38 2 857 "" [1 uses])

(note:HI 38 37 39 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 39 38 41 2 ("./CppStatUtilities.cc") 218)

(note:HI 41 39 42 2 ("./CppStatUtilities.cc") 221)

(insn:HI 42 41 43 2 ./CppStatUtilities.cc:221 (set (reg:SI 2 cx [ end ])
        (reg/v:SI 74 [ end ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 43 42 44 2 ./CppStatUtilities.cc:221 (set (reg:SI 1 dx [ start ])
        (reg/v:SI 73 [ start ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 44 43 45 2 ./CppStatUtilities.cc:221 (set (reg:DI 4 si [ w ])
        (reg/v/f:DI 72 [ w ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 45 44 46 2 ./CppStatUtilities.cc:221 (set (reg:DI 5 di [ a ])
        (reg/v/f:DI 71 [ a ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 46 45 47 2 ./CppStatUtilities.cc:221 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("_Z6medianPdS_ii") [flags 0x3] <function_decl 0x2b5eb6361d00 median>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 42 (insn_list:REG_DEP_TRUE 43 (insn_list:REG_DEP_TRUE 44 (insn_list:REG_DEP_TRUE 45 (nil)))))
    (expr_list:REG_DEAD (reg:SI 2 cx [ end ])
        (expr_list:REG_DEAD (reg:SI 1 dx [ start ])
            (expr_list:REG_DEAD (reg:DI 4 si [ w ])
                (expr_list:REG_DEAD (reg:DI 5 di [ a ])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ a ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si [ w ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx [ start ]))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx [ end ]))
                    (nil))))))

(note:HI 47 46 48 2 NOTE_INSN_DELETED)

(insn:HI 48 47 49 2 ./CppStatUtilities.cc:221 (set (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 49 48 50 2 ("./CppStatUtilities.cc") 224)

(insn:HI 50 49 51 2 ./CppStatUtilities.cc:224 (parallel [
            (set (reg/v:SI 59 [ end.998 ])
                (plus:SI (reg/v:SI 74 [ end ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 74 [ end ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 51 50 56 2 ("./CppStatUtilities.cc") 225)

(insn:HI 56 51 52 2 ./CppStatUtilities.cc:225 (set (reg/v:SI 65 [ k ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 52 56 53 2 ./CppStatUtilities.cc:225 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 73 [ start ])
            (reg/v:SI 59 [ end.998 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 50 (nil))
    (nil))

(jump_insn:HI 53 52 653 2 ./CppStatUtilities.cc:225 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 95)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 52 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 71 72 73 75 76

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 69 71 72 73 75 76
(note:HI 653 53 654 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 654 653 655 3 (set (pc)
        (label_ref 59)) 548 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 69 71 72 73 75 76

(barrier:HI 655 654 124)

(note:HI 124 655 68 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 68 124 69 4 862 "" [3 uses])

(note:HI 69 68 70 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 70 69 71 4 ("./CppStatUtilities.cc") 226)

(insn:HI 71 70 73 4 ./CppStatUtilities.cc:226 (set (reg:DF 101 [ D.34713 ])
        (mem:DF (reg:DI 100 [ ivtmp.995 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 73 71 79 4 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 101 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 87)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 71 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 101 [ D.34713 ])
                                (const_double:DF 0.0 [0x0.0p+0]))
                            (label_ref:DI 87)
                            (pc))
                        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                            (nil))))))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 101 102

(note:HI 79 73 78 ("./CppStatUtilities.cc") 227)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 101 102
(note:HI 78 79 80 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 80 78 81 5 ./CppStatUtilities.cc:227 (set (reg:DI 84 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 81 80 82 5 ./CppStatUtilities.cc:227 (set (reg:DF 101 [ D.34713 ])
        (mult:DF (reg:DF 101 [ D.34713 ])
            (mem:DF (reg:DI 60 [ ivtmp.997 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 82 81 84 5 ./CppStatUtilities.cc:227 (set (reg:DF 101 [ D.34713 ])
        (minus:DF (reg:DF 101 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 81 (nil))
    (nil))

(insn:HI 84 82 85 5 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 101 [ D.34713 ])
                (abs:DF (reg:DF 101 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 82 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 85 84 86 5 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 84 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 101 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 80 (insn_list:REG_DEP_TRUE 84 (nil)))
    (expr_list:REG_DEAD (reg:DF 101 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 84 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 86))
                (nil)))))

(insn:HI 86 85 651 5 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(jump_insn:HI 651 86 652 5 (set (pc)
        (label_ref 87)) 548 {jump} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

(barrier:HI 652 651 125)

(note:HI 125 652 95 NOTE_INSN_LOOP_END)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 69 76
(code_label:HI 95 125 96 6 861 "" [4 uses])

(note:HI 96 95 97 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note:HI 97 96 98 6 ("./CppStatUtilities.cc") 229)

(insn:HI 98 97 99 6 ./CppStatUtilities.cc:229 (set (reg:SI 4 si [ k ])
        (reg/v:SI 65 [ k ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 65 [ k ])
        (nil)))

(insn:HI 99 98 100 6 ./CppStatUtilities.cc:229 (set (reg:DI 5 di [ res ])
        (reg/f:DI 69 [ D.34700 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 100 99 101 6 ./CppStatUtilities.cc:229 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x41] <function_decl 0x2b5eb631e600 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 98 (insn_list:REG_DEP_TRUE 99 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ k ])
        (expr_list:REG_DEAD (reg:DI 5 di [ res ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ k ]))
            (nil))))

(insn:HI 101 100 102 6 ./CppStatUtilities.cc:229 (set (reg/v:DF 64 [ mad ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 100 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 102 101 103 6 ("./CppStatUtilities.cc") 231)

(insn:HI 103 102 104 6 ./CppStatUtilities.cc:231 (set (reg:DI 5 di [ res ])
        (reg/f:DI 69 [ D.34700 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 69 [ D.34700 ])
        (nil)))

(call_insn:HI 104 103 105 6 ./CppStatUtilities.cc:231 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 103 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ res ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (nil)))

(note:HI 105 104 109 6 NOTE_INSN_DELETED)

(note:HI 109 105 110 6 NOTE_INSN_FUNCTION_END)

(note:HI 110 109 112 6 ("./CppStatUtilities.cc") 234)

(insn:HI 112 110 118 6 ./CppStatUtilities.cc:234 (set (reg/i:DF 21 xmm0 [ <result> ])
        (mult:DF (reg/v:DF 64 [ mad ])
            (reg/v:DF 76 [ constant ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 101 (nil))
    (expr_list:REG_DEAD (reg/v:DF 76 [ constant ])
        (expr_list:REG_DEAD (reg/v:DF 64 [ mad ])
            (nil))))

(insn:HI 118 112 59 6 ./CppStatUtilities.cc:234 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 112 (nil))
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 69 71 72 73 75 76
(code_label:HI 59 118 60 7 859 "" [1 uses])

(note:HI 60 59 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 61 60 62 7 ("./CppStatUtilities.cc") 215)

(insn:HI 62 61 63 7 ./CppStatUtilities.cc:215 (set (reg:DI 82 [ start ])
        (sign_extend:DI (reg/v:SI 73 [ start ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 63 62 64 7 ./CppStatUtilities.cc:215 (parallel [
            (set (reg:DI 61 [ D.37477 ])
                (ashift:DI (reg:DI 82 [ start ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 62 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 82 [ start ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 64 63 65 7 ./CppStatUtilities.cc:215 (parallel [
            (set (reg:DI 62 [ ivtmp.995 ])
                (plus:DI (reg:DI 61 [ D.37477 ])
                    (reg/v/f:DI 72 [ w ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 63 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 72 [ w ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 65 64 66 7 ./CppStatUtilities.cc:215 (parallel [
            (set (reg:DI 106 [ ivtmp.997 ])
                (plus:DI (reg/v/f:DI 71 [ a ])
                    (reg:DI 61 [ D.37477 ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 71 [ a ])
            (expr_list:REG_DEAD (reg:DI 61 [ D.37477 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(insn:HI 66 65 67 7 ./CppStatUtilities.cc:215 (set (reg/v:SI 63 [ i ])
        (reg/v:SI 73 [ start ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 73 [ start ])
        (nil)))

(insn:HI 67 66 127 7 ./CppStatUtilities.cc:215 (set (reg/v:SI 65 [ k ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 127 67 128 7 (set (reg:DF 90)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC30") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn:HI 128 127 137 7 (set (reg:V2DF 87)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC31") [flags 0x2]) [3 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn:HI 137 128 138 7 (set (reg:SI 95)
        (not:SI (reg/v:SI 63 [ i ]))) 398 {*one_cmplsi2_1} (insn_list:REG_DEP_TRUE 66 (nil))
    (nil))

(insn:HI 138 137 139 7 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg:SI 95)
                    (reg/v:SI 59 [ end.998 ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 137 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 95)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 139 138 142 7 (parallel [
            (set (reg:SI 96)
                (and:SI (reg:SI 96)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 138 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 142 139 143 7 ("./CppStatUtilities.cc") 226)

(insn:HI 143 142 144 7 ./CppStatUtilities.cc:226 (set (reg:DF 67 [ D.34713 ])
        (mem:DF (reg:DI 62 [ ivtmp.995 ]) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 64 (nil))
    (nil))

(jump_insn:HI 144 143 156 7 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 67 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 168)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 127 (insn_list:REG_DEP_TRUE 143 (nil)))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 67 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 168)
                                (pc))
                            (nil))))))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63 65 67 69 75 76 87 90 96 106

(note:HI 156 144 154 ("./CppStatUtilities.cc") 227)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63 67 69 75 76 87 90 96 106
(note:HI 154 156 149 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 149 154 150 8 ./CppStatUtilities.cc:227 (set (reg:DF 67 [ D.34713 ])
        (mult:DF (reg:DF 67 [ D.34713 ])
            (mem:DF (reg:DI 106 [ ivtmp.997 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 150 149 151 8 ./CppStatUtilities.cc:227 (set (reg:DF 67 [ D.34713 ])
        (minus:DF (reg:DF 67 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 149 (nil))
    (nil))

(insn:HI 151 150 152 8 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 67 [ D.34713 ])
                (abs:DF (reg:DF 67 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 150 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 152 151 153 8 ./CppStatUtilities.cc:227 (set (mem:DF (reg/f:DI 69 [ D.34700 ]) [3 S8 A64])
        (reg:DF 67 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 151 (nil))
    (expr_list:REG_DEAD (reg:DF 67 [ D.34713 ])
        (expr_list:REG_EQUAL (abs:DF (reg:DF 108))
            (nil))))

(insn:HI 153 152 168 8 ./CppStatUtilities.cc:227 (set (reg/v:SI 65 [ k ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63 65 69 75 76 87 90 96 106

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63 65 69 75 76 87 90 96 106
(code_label:HI 168 153 164 9 868 "" [1 uses])

(note:HI 164 168 158 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note:HI 158 164 159 9 ("./CppStatUtilities.cc") 225)

(insn:HI 159 158 160 9 ./CppStatUtilities.cc:225 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 63 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 63 [ i ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 160 159 161 9 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 100 [ ivtmp.995 ])
                (plus:DI (reg:DI 62 [ ivtmp.995 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 161 160 162 9 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 60 [ ivtmp.997 ])
                (plus:DI (reg:DI 106 [ ivtmp.997 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 162 161 163 9 ./CppStatUtilities.cc:225 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 59 [ end.998 ])
            (reg/v:SI 102 [ i ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 159 (nil))
    (nil))

(jump_insn:HI 163 162 408 9 ./CppStatUtilities.cc:225 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 95)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 162 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
(note:HI 408 163 406 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 406 408 407 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 407 406 374 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 68)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 406 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
(note:HI 374 407 372 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 372 374 373 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 373 372 340 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 645)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 372 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
(note:HI 340 373 338 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 338 340 339 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 339 338 306 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 646)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 338 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
(note:HI 306 339 304 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 304 306 305 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 305 304 272 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 647)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 304 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
(note:HI 272 305 270 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 270 272 271 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 271 270 238 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 648)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 270 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
(note:HI 238 271 236 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:HI 236 238 237 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 237 236 204 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 649)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 236 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 96 100 102 106
(note:HI 204 237 202 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 202 204 203 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 96)
        (nil)))

(jump_insn:HI 203 202 175 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 650)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 202 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 100 102 106

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 65 69 75 76 87 90 100 102 106
(note:HI 175 203 172 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 172 175 173 17 ("./CppStatUtilities.cc") 226)

(insn:HI 173 172 174 17 ./CppStatUtilities.cc:226 (set (reg:DF 111 [ D.34713 ])
        (mem:DF (plus:DI (reg:DI 62 [ ivtmp.995 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DI 62 [ ivtmp.995 ])
        (nil)))

(jump_insn:HI 174 173 186 17 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 111 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 198)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 173 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 111 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 198)
                                (pc))
                            (nil))))))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 106 111

(note:HI 186 174 184 ("./CppStatUtilities.cc") 227)

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 106 111
(note:HI 184 186 178 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:HI 178 184 179 18 ./CppStatUtilities.cc:227 (set (reg:DI 115 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 179 178 180 18 ./CppStatUtilities.cc:227 (set (reg:DF 111 [ D.34713 ])
        (mult:DF (reg:DF 111 [ D.34713 ])
            (mem:DF (plus:DI (reg:DI 106 [ ivtmp.997 ])
                    (const_int 8 [0x8])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg:DI 106 [ ivtmp.997 ])
        (nil)))

(insn:HI 180 179 181 18 ./CppStatUtilities.cc:227 (set (reg:DF 111 [ D.34713 ])
        (minus:DF (reg:DF 111 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 179 (nil))
    (nil))

(insn:HI 181 180 182 18 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 111 [ D.34713 ])
                (abs:DF (reg:DF 111 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 180 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 182 181 183 18 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 115 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 111 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 178 (insn_list:REG_DEP_TRUE 181 (nil)))
    (expr_list:REG_DEAD (reg:DF 111 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 115 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 113))
                (nil)))))

(insn:HI 183 182 198 18 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 198 183 194 19 870 "" [1 uses])

(note:HI 194 198 188 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 188 194 189 19 ("./CppStatUtilities.cc") 225)

(insn:HI 189 188 190 19 ./CppStatUtilities.cc:225 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 190 189 191 19 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 100 [ ivtmp.995 ])
                (plus:DI (reg:DI 100 [ ivtmp.995 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 191 190 650 19 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 60 [ ivtmp.997 ])
                (plus:DI (reg:DI 60 [ ivtmp.997 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 650 191 209 20 913 "" [1 uses])

(note:HI 209 650 206 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note:HI 206 209 207 20 ("./CppStatUtilities.cc") 226)

(insn:HI 207 206 208 20 ./CppStatUtilities.cc:226 (set (reg:DF 116 [ D.34713 ])
        (mem:DF (reg:DI 100 [ ivtmp.995 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 208 207 220 20 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 116 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 232)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 207 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 116 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 232)
                                (pc))
                            (nil))))))))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 116

(note:HI 220 208 218 ("./CppStatUtilities.cc") 227)

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 116
(note:HI 218 220 212 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:HI 212 218 213 21 ./CppStatUtilities.cc:227 (set (reg:DI 120 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 213 212 214 21 ./CppStatUtilities.cc:227 (set (reg:DF 116 [ D.34713 ])
        (mult:DF (reg:DF 116 [ D.34713 ])
            (mem:DF (reg:DI 60 [ ivtmp.997 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 214 213 215 21 ./CppStatUtilities.cc:227 (set (reg:DF 116 [ D.34713 ])
        (minus:DF (reg:DF 116 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 213 (nil))
    (nil))

(insn:HI 215 214 216 21 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 116 [ D.34713 ])
                (abs:DF (reg:DF 116 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 214 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 216 215 217 21 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 120 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 116 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 212 (insn_list:REG_DEP_TRUE 215 (nil)))
    (expr_list:REG_DEAD (reg:DF 116 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 120 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 118))
                (nil)))))

(insn:HI 217 216 232 21 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 232 217 228 22 873 "" [1 uses])

(note:HI 228 232 222 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note:HI 222 228 223 22 ("./CppStatUtilities.cc") 225)

(insn:HI 223 222 224 22 ./CppStatUtilities.cc:225 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 224 223 225 22 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 100 [ ivtmp.995 ])
                (plus:DI (reg:DI 100 [ ivtmp.995 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 225 224 649 22 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 60 [ ivtmp.997 ])
                (plus:DI (reg:DI 60 [ ivtmp.997 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 649 225 243 23 912 "" [1 uses])

(note:HI 243 649 240 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note:HI 240 243 241 23 ("./CppStatUtilities.cc") 226)

(insn:HI 241 240 242 23 ./CppStatUtilities.cc:226 (set (reg:DF 121 [ D.34713 ])
        (mem:DF (reg:DI 100 [ ivtmp.995 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 242 241 254 23 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 121 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 266)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 241 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 121 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 266)
                                (pc))
                            (nil))))))))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 121

(note:HI 254 242 252 ("./CppStatUtilities.cc") 227)

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 121
(note:HI 252 254 246 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:HI 246 252 247 24 ./CppStatUtilities.cc:227 (set (reg:DI 125 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 247 246 248 24 ./CppStatUtilities.cc:227 (set (reg:DF 121 [ D.34713 ])
        (mult:DF (reg:DF 121 [ D.34713 ])
            (mem:DF (reg:DI 60 [ ivtmp.997 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 248 247 249 24 ./CppStatUtilities.cc:227 (set (reg:DF 121 [ D.34713 ])
        (minus:DF (reg:DF 121 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 247 (nil))
    (nil))

(insn:HI 249 248 250 24 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 121 [ D.34713 ])
                (abs:DF (reg:DF 121 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 248 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 250 249 251 24 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 125 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 121 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 246 (insn_list:REG_DEP_TRUE 249 (nil)))
    (expr_list:REG_DEAD (reg:DF 121 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 125 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 123))
                (nil)))))

(insn:HI 251 250 266 24 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 266 251 262 25 876 "" [1 uses])

(note:HI 262 266 256 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note:HI 256 262 257 25 ("./CppStatUtilities.cc") 225)

(insn:HI 257 256 258 25 ./CppStatUtilities.cc:225 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 258 257 259 25 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 100 [ ivtmp.995 ])
                (plus:DI (reg:DI 100 [ ivtmp.995 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 259 258 648 25 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 60 [ ivtmp.997 ])
                (plus:DI (reg:DI 60 [ ivtmp.997 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 648 259 277 26 911 "" [1 uses])

(note:HI 277 648 274 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note:HI 274 277 275 26 ("./CppStatUtilities.cc") 226)

(insn:HI 275 274 276 26 ./CppStatUtilities.cc:226 (set (reg:DF 126 [ D.34713 ])
        (mem:DF (reg:DI 100 [ ivtmp.995 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 276 275 288 26 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 126 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 300)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 275 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 126 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 300)
                                (pc))
                            (nil))))))))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 126

(note:HI 288 276 286 ("./CppStatUtilities.cc") 227)

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 126
(note:HI 286 288 280 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:HI 280 286 281 27 ./CppStatUtilities.cc:227 (set (reg:DI 130 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 281 280 282 27 ./CppStatUtilities.cc:227 (set (reg:DF 126 [ D.34713 ])
        (mult:DF (reg:DF 126 [ D.34713 ])
            (mem:DF (reg:DI 60 [ ivtmp.997 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 282 281 283 27 ./CppStatUtilities.cc:227 (set (reg:DF 126 [ D.34713 ])
        (minus:DF (reg:DF 126 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 281 (nil))
    (nil))

(insn:HI 283 282 284 27 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 126 [ D.34713 ])
                (abs:DF (reg:DF 126 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 282 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 284 283 285 27 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 130 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 126 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 280 (insn_list:REG_DEP_TRUE 283 (nil)))
    (expr_list:REG_DEAD (reg:DF 126 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 130 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 128))
                (nil)))))

(insn:HI 285 284 300 27 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 300 285 296 28 879 "" [1 uses])

(note:HI 296 300 290 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note:HI 290 296 291 28 ("./CppStatUtilities.cc") 225)

(insn:HI 291 290 292 28 ./CppStatUtilities.cc:225 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 292 291 293 28 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 100 [ ivtmp.995 ])
                (plus:DI (reg:DI 100 [ ivtmp.995 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 293 292 647 28 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 60 [ ivtmp.997 ])
                (plus:DI (reg:DI 60 [ ivtmp.997 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 647 293 311 29 910 "" [1 uses])

(note:HI 311 647 308 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note:HI 308 311 309 29 ("./CppStatUtilities.cc") 226)

(insn:HI 309 308 310 29 ./CppStatUtilities.cc:226 (set (reg:DF 131 [ D.34713 ])
        (mem:DF (reg:DI 100 [ ivtmp.995 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 310 309 322 29 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 131 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 334)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 309 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 131 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 334)
                                (pc))
                            (nil))))))))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 131

(note:HI 322 310 320 ("./CppStatUtilities.cc") 227)

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 131
(note:HI 320 322 314 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn:HI 314 320 315 30 ./CppStatUtilities.cc:227 (set (reg:DI 135 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 315 314 316 30 ./CppStatUtilities.cc:227 (set (reg:DF 131 [ D.34713 ])
        (mult:DF (reg:DF 131 [ D.34713 ])
            (mem:DF (reg:DI 60 [ ivtmp.997 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 316 315 317 30 ./CppStatUtilities.cc:227 (set (reg:DF 131 [ D.34713 ])
        (minus:DF (reg:DF 131 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 315 (nil))
    (nil))

(insn:HI 317 316 318 30 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 131 [ D.34713 ])
                (abs:DF (reg:DF 131 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 316 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 318 317 319 30 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 135 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 131 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 314 (insn_list:REG_DEP_TRUE 317 (nil)))
    (expr_list:REG_DEAD (reg:DF 131 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 135 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 133))
                (nil)))))

(insn:HI 319 318 334 30 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 334 319 330 31 882 "" [1 uses])

(note:HI 330 334 324 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note:HI 324 330 325 31 ("./CppStatUtilities.cc") 225)

(insn:HI 325 324 326 31 ./CppStatUtilities.cc:225 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 326 325 327 31 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 100 [ ivtmp.995 ])
                (plus:DI (reg:DI 100 [ ivtmp.995 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 327 326 646 31 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 60 [ ivtmp.997 ])
                (plus:DI (reg:DI 60 [ ivtmp.997 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 646 327 345 32 909 "" [1 uses])

(note:HI 345 646 342 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note:HI 342 345 343 32 ("./CppStatUtilities.cc") 226)

(insn:HI 343 342 344 32 ./CppStatUtilities.cc:226 (set (reg:DF 136 [ D.34713 ])
        (mem:DF (reg:DI 100 [ ivtmp.995 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 344 343 356 32 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 136 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 368)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 343 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 136 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 368)
                                (pc))
                            (nil))))))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 136

(note:HI 356 344 354 ("./CppStatUtilities.cc") 227)

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 136
(note:HI 354 356 348 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:HI 348 354 349 33 ./CppStatUtilities.cc:227 (set (reg:DI 140 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 349 348 350 33 ./CppStatUtilities.cc:227 (set (reg:DF 136 [ D.34713 ])
        (mult:DF (reg:DF 136 [ D.34713 ])
            (mem:DF (reg:DI 60 [ ivtmp.997 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 350 349 351 33 ./CppStatUtilities.cc:227 (set (reg:DF 136 [ D.34713 ])
        (minus:DF (reg:DF 136 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 349 (nil))
    (nil))

(insn:HI 351 350 352 33 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 136 [ D.34713 ])
                (abs:DF (reg:DF 136 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 350 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 352 351 353 33 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 140 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 136 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 348 (insn_list:REG_DEP_TRUE 351 (nil)))
    (expr_list:REG_DEAD (reg:DF 136 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 140 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 138))
                (nil)))))

(insn:HI 353 352 368 33 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 368 353 364 34 885 "" [1 uses])

(note:HI 364 368 358 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note:HI 358 364 359 34 ("./CppStatUtilities.cc") 225)

(insn:HI 359 358 360 34 ./CppStatUtilities.cc:225 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 360 359 361 34 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 100 [ ivtmp.995 ])
                (plus:DI (reg:DI 100 [ ivtmp.995 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 361 360 645 34 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 60 [ ivtmp.997 ])
                (plus:DI (reg:DI 60 [ ivtmp.997 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 645 361 379 35 908 "" [1 uses])

(note:HI 379 645 376 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note:HI 376 379 377 35 ("./CppStatUtilities.cc") 226)

(insn:HI 377 376 378 35 ./CppStatUtilities.cc:226 (set (reg:DF 141 [ D.34713 ])
        (mem:DF (reg:DI 100 [ ivtmp.995 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 378 377 390 35 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 141 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 402)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 377 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 141 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 402)
                                (pc))
                            (nil))))))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 141

(note:HI 390 378 388 ("./CppStatUtilities.cc") 227)

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102 141
(note:HI 388 390 382 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn:HI 382 388 383 36 ./CppStatUtilities.cc:227 (set (reg:DI 145 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 383 382 384 36 ./CppStatUtilities.cc:227 (set (reg:DF 141 [ D.34713 ])
        (mult:DF (reg:DF 141 [ D.34713 ])
            (mem:DF (reg:DI 60 [ ivtmp.997 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 384 383 385 36 ./CppStatUtilities.cc:227 (set (reg:DF 141 [ D.34713 ])
        (minus:DF (reg:DF 141 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 383 (nil))
    (nil))

(insn:HI 385 384 386 36 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 141 [ D.34713 ])
                (abs:DF (reg:DF 141 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 384 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 386 385 387 36 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 145 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 141 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 382 (insn_list:REG_DEP_TRUE 385 (nil)))
    (expr_list:REG_DEAD (reg:DF 141 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 145 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 143))
                (nil)))))

(insn:HI 387 386 402 36 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 402 387 398 37 888 "" [1 uses])

(note:HI 398 402 392 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note:HI 392 398 393 37 ("./CppStatUtilities.cc") 225)

(insn:HI 393 392 394 37 ./CppStatUtilities.cc:225 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 394 393 395 37 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 100 [ ivtmp.995 ])
                (plus:DI (reg:DI 100 [ ivtmp.995 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 395 394 396 37 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 60 [ ivtmp.997 ])
                (plus:DI (reg:DI 60 [ ivtmp.997 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 396 395 397 37 ./CppStatUtilities.cc:225 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 59 [ end.998 ])
            (reg/v:SI 102 [ i ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 393 (nil))
    (nil))

(jump_insn:HI 397 396 404 37 ./CppStatUtilities.cc:225 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 95)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 396 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(note:HI 404 397 641 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 641 404 642 38 (set (pc)
        (label_ref 68)) 548 {jump} (nil)
    (nil))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

(barrier:HI 642 641 87)

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(code_label:HI 87 642 88 39 863 "" [2 uses])

(note:HI 88 87 89 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note:HI 89 88 612 39 ("./CppStatUtilities.cc") 225)

(insn:HI 612 89 613 39 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:SI 99)
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 102 [ i ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 613 612 614 39 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg:DI 100 [ ivtmp.995 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 614 613 410 39 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg:DI 60 [ ivtmp.997 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 410 614 411 39 ("./CppStatUtilities.cc") 226)

(insn:HI 411 410 412 39 ./CppStatUtilities.cc:226 (set (reg:DF 105 [ D.34713 ])
        (mem:DF (plus:DI (reg:DI 100 [ ivtmp.995 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DI 100 [ ivtmp.995 ])
        (nil)))

(jump_insn:HI 412 411 424 39 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 105 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 436)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 411 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 105 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 436)
                                (pc))
                            (nil))))))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 97 98 99 105

(note:HI 424 412 422 ("./CppStatUtilities.cc") 227)

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 97 98 99 105
(note:HI 422 424 416 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn:HI 416 422 417 40 ./CppStatUtilities.cc:227 (set (reg:DI 150 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 417 416 418 40 ./CppStatUtilities.cc:227 (set (reg:DF 105 [ D.34713 ])
        (mult:DF (reg:DF 105 [ D.34713 ])
            (mem:DF (plus:DI (reg:DI 60 [ ivtmp.997 ])
                    (const_int 8 [0x8])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg:DI 60 [ ivtmp.997 ])
        (nil)))

(insn:HI 418 417 419 40 ./CppStatUtilities.cc:227 (set (reg:DF 105 [ D.34713 ])
        (minus:DF (reg:DF 105 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 417 (nil))
    (nil))

(insn:HI 419 418 420 40 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 105 [ D.34713 ])
                (abs:DF (reg:DF 105 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 418 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 420 419 421 40 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 150 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 105 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 416 (insn_list:REG_DEP_TRUE 419 (nil)))
    (expr_list:REG_DEAD (reg:DF 105 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 150 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 148))
                (nil)))))

(insn:HI 421 420 436 40 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
(code_label:HI 436 421 432 41 891 "" [1 uses])

(note:HI 432 436 426 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note:HI 426 432 439 41 ("./CppStatUtilities.cc") 225)

(note:HI 439 426 440 41 ("./CppStatUtilities.cc") 226)

(insn:HI 440 439 441 41 ./CppStatUtilities.cc:226 (set (reg:DF 153 [ D.34713 ])
        (mem:DF (plus:DI (reg:DI 97)
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 441 440 453 41 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 153 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 465)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 440 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 153 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 465)
                                (pc))
                            (nil))))))))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 153

(note:HI 453 441 451 ("./CppStatUtilities.cc") 227)

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 153
(note:HI 451 453 445 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:HI 445 451 446 42 ./CppStatUtilities.cc:227 (set (reg:DI 158 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 446 445 447 42 ./CppStatUtilities.cc:227 (set (reg:DF 153 [ D.34713 ])
        (mult:DF (reg:DF 153 [ D.34713 ])
            (mem:DF (plus:DI (reg:DI 98)
                    (const_int 8 [0x8])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 447 446 448 42 ./CppStatUtilities.cc:227 (set (reg:DF 153 [ D.34713 ])
        (minus:DF (reg:DF 153 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 446 (nil))
    (nil))

(insn:HI 448 447 449 42 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 153 [ D.34713 ])
                (abs:DF (reg:DF 153 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 447 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 449 448 450 42 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 158 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 153 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 445 (insn_list:REG_DEP_TRUE 448 (nil)))
    (expr_list:REG_DEAD (reg:DF 153 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 158 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 156))
                (nil)))))

(insn:HI 450 449 465 42 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
(code_label:HI 465 450 461 43 893 "" [1 uses])

(note:HI 461 465 455 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(note:HI 455 461 468 43 ("./CppStatUtilities.cc") 225)

(note:HI 468 455 469 43 ("./CppStatUtilities.cc") 226)

(insn:HI 469 468 470 43 ./CppStatUtilities.cc:226 (set (reg:DF 161 [ D.34713 ])
        (mem:DF (plus:DI (reg:DI 97)
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 470 469 482 43 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 161 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 494)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 469 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 161 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 494)
                                (pc))
                            (nil))))))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 161

(note:HI 482 470 480 ("./CppStatUtilities.cc") 227)

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 161
(note:HI 480 482 474 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn:HI 474 480 475 44 ./CppStatUtilities.cc:227 (set (reg:DI 166 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 475 474 476 44 ./CppStatUtilities.cc:227 (set (reg:DF 161 [ D.34713 ])
        (mult:DF (reg:DF 161 [ D.34713 ])
            (mem:DF (plus:DI (reg:DI 98)
                    (const_int 16 [0x10])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 476 475 477 44 ./CppStatUtilities.cc:227 (set (reg:DF 161 [ D.34713 ])
        (minus:DF (reg:DF 161 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 475 (nil))
    (nil))

(insn:HI 477 476 478 44 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 161 [ D.34713 ])
                (abs:DF (reg:DF 161 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 476 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 478 477 479 44 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 166 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 161 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 474 (insn_list:REG_DEP_TRUE 477 (nil)))
    (expr_list:REG_DEAD (reg:DF 161 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 166 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 164))
                (nil)))))

(insn:HI 479 478 494 44 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
(code_label:HI 494 479 490 45 895 "" [1 uses])

(note:HI 490 494 484 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(note:HI 484 490 497 45 ("./CppStatUtilities.cc") 225)

(note:HI 497 484 498 45 ("./CppStatUtilities.cc") 226)

(insn:HI 498 497 499 45 ./CppStatUtilities.cc:226 (set (reg:DF 169 [ D.34713 ])
        (mem:DF (plus:DI (reg:DI 97)
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 499 498 511 45 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 169 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 523)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 498 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 169 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 523)
                                (pc))
                            (nil))))))))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 169

(note:HI 511 499 509 ("./CppStatUtilities.cc") 227)

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 169
(note:HI 509 511 503 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn:HI 503 509 504 46 ./CppStatUtilities.cc:227 (set (reg:DI 174 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 504 503 505 46 ./CppStatUtilities.cc:227 (set (reg:DF 169 [ D.34713 ])
        (mult:DF (reg:DF 169 [ D.34713 ])
            (mem:DF (plus:DI (reg:DI 98)
                    (const_int 24 [0x18])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 505 504 506 46 ./CppStatUtilities.cc:227 (set (reg:DF 169 [ D.34713 ])
        (minus:DF (reg:DF 169 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 504 (nil))
    (nil))

(insn:HI 506 505 507 46 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 169 [ D.34713 ])
                (abs:DF (reg:DF 169 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 505 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 507 506 508 46 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 174 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 169 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 503 (insn_list:REG_DEP_TRUE 506 (nil)))
    (expr_list:REG_DEAD (reg:DF 169 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 174 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 172))
                (nil)))))

(insn:HI 508 507 523 46 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
(code_label:HI 523 508 519 47 897 "" [1 uses])

(note:HI 519 523 513 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(note:HI 513 519 526 47 ("./CppStatUtilities.cc") 225)

(note:HI 526 513 527 47 ("./CppStatUtilities.cc") 226)

(insn:HI 527 526 528 47 ./CppStatUtilities.cc:226 (set (reg:DF 177 [ D.34713 ])
        (mem:DF (plus:DI (reg:DI 97)
                (const_int 32 [0x20])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 528 527 540 47 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 177 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 552)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 527 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 177 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 552)
                                (pc))
                            (nil))))))))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 177

(note:HI 540 528 538 ("./CppStatUtilities.cc") 227)

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 177
(note:HI 538 540 532 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn:HI 532 538 533 48 ./CppStatUtilities.cc:227 (set (reg:DI 182 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 533 532 534 48 ./CppStatUtilities.cc:227 (set (reg:DF 177 [ D.34713 ])
        (mult:DF (reg:DF 177 [ D.34713 ])
            (mem:DF (plus:DI (reg:DI 98)
                    (const_int 32 [0x20])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 534 533 535 48 ./CppStatUtilities.cc:227 (set (reg:DF 177 [ D.34713 ])
        (minus:DF (reg:DF 177 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 533 (nil))
    (nil))

(insn:HI 535 534 536 48 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 177 [ D.34713 ])
                (abs:DF (reg:DF 177 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 534 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 536 535 537 48 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 182 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 177 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 532 (insn_list:REG_DEP_TRUE 535 (nil)))
    (expr_list:REG_DEAD (reg:DF 177 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 182 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 180))
                (nil)))))

(insn:HI 537 536 552 48 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
(code_label:HI 552 537 548 49 899 "" [1 uses])

(note:HI 548 552 542 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note:HI 542 548 555 49 ("./CppStatUtilities.cc") 225)

(note:HI 555 542 556 49 ("./CppStatUtilities.cc") 226)

(insn:HI 556 555 557 49 ./CppStatUtilities.cc:226 (set (reg:DF 185 [ D.34713 ])
        (mem:DF (plus:DI (reg:DI 97)
                (const_int 40 [0x28])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 557 556 569 49 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 185 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 581)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 556 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 185 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 581)
                                (pc))
                            (nil))))))))
;; End of basic block 49, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 185

(note:HI 569 557 567 ("./CppStatUtilities.cc") 227)

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 185
(note:HI 567 569 561 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn:HI 561 567 562 50 ./CppStatUtilities.cc:227 (set (reg:DI 190 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 562 561 563 50 ./CppStatUtilities.cc:227 (set (reg:DF 185 [ D.34713 ])
        (mult:DF (reg:DF 185 [ D.34713 ])
            (mem:DF (plus:DI (reg:DI 98)
                    (const_int 40 [0x28])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 563 562 564 50 ./CppStatUtilities.cc:227 (set (reg:DF 185 [ D.34713 ])
        (minus:DF (reg:DF 185 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 562 (nil))
    (nil))

(insn:HI 564 563 565 50 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 185 [ D.34713 ])
                (abs:DF (reg:DF 185 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 563 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 565 564 566 50 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 190 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 185 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 561 (insn_list:REG_DEP_TRUE 564 (nil)))
    (expr_list:REG_DEAD (reg:DF 185 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 190 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 188))
                (nil)))))

(insn:HI 566 565 581 50 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 50, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
(code_label:HI 581 566 577 51 901 "" [1 uses])

(note:HI 577 581 571 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(note:HI 571 577 584 51 ("./CppStatUtilities.cc") 225)

(note:HI 584 571 585 51 ("./CppStatUtilities.cc") 226)

(insn:HI 585 584 586 51 ./CppStatUtilities.cc:226 (set (reg:DF 193 [ D.34713 ])
        (mem:DF (plus:DI (reg:DI 97)
                (const_int 48 [0x30])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 586 585 598 51 ./CppStatUtilities.cc:226 (parallel [
            (set (pc)
                (if_then_else (eq (reg:DF 193 [ D.34713 ])
                        (reg:DF 90))
                    (label_ref:DI 610)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 585 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (expr_list:REG_EQUAL (if_then_else (eq (reg:DF 193 [ D.34713 ])
                                    (const_double:DF 0.0 [0x0.0p+0]))
                                (label_ref:DI 610)
                                (pc))
                            (nil))))))))
;; End of basic block 51, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 193

(note:HI 598 586 596 ("./CppStatUtilities.cc") 227)

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99 193
(note:HI 596 598 590 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn:HI 590 596 591 52 ./CppStatUtilities.cc:227 (set (reg:DI 198 [ k ])
        (sign_extend:DI (reg/v:SI 65 [ k ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 591 590 592 52 ./CppStatUtilities.cc:227 (set (reg:DF 193 [ D.34713 ])
        (mult:DF (reg:DF 193 [ D.34713 ])
            (mem:DF (plus:DI (reg:DI 98)
                    (const_int 48 [0x30])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 592 591 593 52 ./CppStatUtilities.cc:227 (set (reg:DF 193 [ D.34713 ])
        (minus:DF (reg:DF 193 [ D.34713 ])
            (mem:DF (reg/v/f:DI 75 [ medianVal ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 591 (nil))
    (nil))

(insn:HI 593 592 594 52 ./CppStatUtilities.cc:227 (parallel [
            (set (reg:DF 193 [ D.34713 ])
                (abs:DF (reg:DF 193 [ D.34713 ])))
            (use (reg:V2DF 87))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 592 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 594 593 595 52 ./CppStatUtilities.cc:227 (set (mem:DF (plus:DI (mult:DI (reg:DI 198 [ k ])
                    (const_int 8 [0x8]))
                (reg/f:DI 69 [ D.34700 ])) [3 S8 A64])
        (reg:DF 193 [ D.34713 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 590 (insn_list:REG_DEP_TRUE 593 (nil)))
    (expr_list:REG_DEAD (reg:DF 193 [ D.34713 ])
        (expr_list:REG_DEAD (reg:DI 198 [ k ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 196))
                (nil)))))

(insn:HI 595 594 610 52 ./CppStatUtilities.cc:227 (parallel [
            (set (reg/v:SI 65 [ k ])
                (plus:SI (reg/v:SI 65 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 52, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99

;; Start of basic block 53, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 69 75 76 87 90 97 98 99
(code_label:HI 610 595 606 53 903 "" [1 uses])

(note:HI 606 610 600 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(note:HI 600 606 601 53 ("./CppStatUtilities.cc") 225)

(insn:HI 601 600 602 53 ./CppStatUtilities.cc:225 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg:SI 99)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 99)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 602 601 603 53 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 100 [ ivtmp.995 ])
                (plus:DI (reg:DI 97)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 97)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 603 602 604 53 ./CppStatUtilities.cc:225 (parallel [
            (set (reg:DI 60 [ ivtmp.997 ])
                (plus:DI (reg:DI 98)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 98)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 604 603 605 53 ./CppStatUtilities.cc:225 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 59 [ end.998 ])
            (reg/v:SI 102 [ i ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 601 (nil))
    (nil))

(jump_insn:HI 605 604 609 53 ./CppStatUtilities.cc:225 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 95)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 604 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 53, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

;; Start of basic block 54, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102
(note:HI 609 605 643 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 643 609 644 54 (set (pc)
        (label_ref 68)) 548 {jump} (nil)
    (nil))
;; End of basic block 54, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 65 69 75 76 87 90 100 102

(barrier:HI 644 643 0)


;; Function double mad(double*, int, int, double&, double) (_Z3madPdiiRdd)



Pass 0

  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7969 MMX_REGS:7969 INT_SSE_REGS:7969 MEM:1839
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6240 MMX_REGS:6240 FP_TOP_SSE_REGS:6240 FP_SECOND_SSE_REGS:6240 FLOAT_SSE_REGS:6240 FLOAT_INT_REGS:4320 INT_SSE_REGS:6240 FLOAT_INT_SSE_REGS:6240 ALL_REGS:6240 MEM:1830
  Register 62 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3552 INDEX_REGS:1665 LEGACY_REGS:3552 GENERAL_REGS:3552 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4884 MEM:1443
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4355 MMX_REGS:4355 INT_SSE_REGS:4355 MEM:1005
  Register 65 costs: AREG:19994 DREG:19994 CREG:19994 BREG:19994 SIREG:19994 DIREG:19994 AD_REGS:19994 Q_REGS:19994 NON_Q_REGS:23768 INDEX_REGS:19994 LEGACY_REGS:23768 GENERAL_REGS:23768 FP_TOP_REG:32298 FP_SECOND_REG:32298 FLOAT_REGS:32298 SSE_REGS:0 FP_TOP_SSE_REGS:32298 FP_SECOND_SSE_REGS:32298 FLOAT_SSE_REGS:32298 FLOAT_INT_REGS:32298 INT_SSE_REGS:19994 FLOAT_INT_SSE_REGS:32298 ALL_REGS:36960 MEM:11654
  Register 66 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25792 MMX_REGS:25792 FP_TOP_SSE_REGS:25792 FP_SECOND_SSE_REGS:25792 FLOAT_SSE_REGS:25792 FLOAT_INT_REGS:17856 INT_SSE_REGS:25792 FLOAT_INT_SSE_REGS:25792 ALL_REGS:25792 MEM:7714
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4199 MMX_REGS:4199 FP_TOP_SSE_REGS:4199 FP_SECOND_SSE_REGS:4199 FLOAT_SSE_REGS:4199 FLOAT_INT_REGS:2907 INT_SSE_REGS:4199 FLOAT_INT_SSE_REGS:4199 ALL_REGS:4199 MEM:1181
  Register 69 costs: AREG:424 DREG:424 CREG:424 BREG:424 SIREG:312 DIREG:424 AD_REGS:424 Q_REGS:424 NON_Q_REGS:424 INDEX_REGS:424 LEGACY_REGS:424 GENERAL_REGS:424 SSE_REGS:12605 MMX_REGS:12605 INT_SSE_REGS:12605 MEM:3638
  Register 70 costs: AREG:224 DREG:112 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:6022 MMX_REGS:6022 FP_TOP_SSE_REGS:6022 FP_SECOND_SSE_REGS:6022 FLOAT_SSE_REGS:6022 FLOAT_INT_REGS:4238 INT_SSE_REGS:6022 FLOAT_INT_SSE_REGS:6022 ALL_REGS:6022 MEM:1674
  Register 71 costs: AREG:0 DREG:0 CREG:-112 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2899 MMX_REGS:2899 FP_TOP_SSE_REGS:2899 FP_SECOND_SSE_REGS:2899 FLOAT_SSE_REGS:2899 FLOAT_INT_REGS:2007 INT_SSE_REGS:2899 FLOAT_INT_SSE_REGS:2899 ALL_REGS:2899 MEM:892
  Register 72 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3569 INDEX_REGS:1665 LEGACY_REGS:3569 GENERAL_REGS:3569 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4905 MEM:1447
  Register 73 costs: AREG:224 DREG:224 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:3136 MMX_REGS:3136 INT_SSE_REGS:3136 MEM:896
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 MEM:784
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 FP_TOP_SSE_REGS:2912 FP_SECOND_SSE_REGS:2912 FLOAT_SSE_REGS:2912 FLOAT_INT_REGS:2016 INT_SSE_REGS:2912 FLOAT_INT_SSE_REGS:2912 ALL_REGS:2912 MEM:672
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 80 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:8600 INDEX_REGS:5200 LEGACY_REGS:8600 GENERAL_REGS:8600 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:12600 MEM:4000
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 85 costs: SSE_REGS:0 FP_TOP_SSE_REGS:27846 FP_SECOND_SSE_REGS:27846 FLOAT_SSE_REGS:27846 INT_SSE_REGS:58606 FLOAT_INT_SSE_REGS:58606 ALL_REGS:58606 MEM:11566
  Register 91 costs: AREG:200 DREG:200 CREG:200 BREG:200 SIREG:200 DIREG:200 AD_REGS:200 Q_REGS:200 NON_Q_REGS:200 INDEX_REGS:200 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2800 MMX_REGS:2800 FP_TOP_SSE_REGS:2800 FP_SECOND_SSE_REGS:2800 FLOAT_SSE_REGS:2800 FLOAT_INT_REGS:2000 INT_SSE_REGS:2800 FLOAT_INT_SSE_REGS:2800 ALL_REGS:2800 MEM:800
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2435
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2696 INDEX_REGS:0 LEGACY_REGS:2696 GENERAL_REGS:2696 MEM:10762
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 100 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 106 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 112 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 118 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 124 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 130 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 136 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 142 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 146 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 150 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 154 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 158 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 162 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 166 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 170 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 173 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:630

  Register 59 pref GENERAL_REGS or none
  Register 60 pref GENERAL_REGS or none
  Register 62 pref SSE_REGS or none
  Register 64 pref SIREG, else GENERAL_REGS
  Register 65 pref SSE_REGS or none
  Register 66 pref AREG, else GENERAL_REGS
  Register 68 pref DIREG, else GENERAL_REGS
  Register 69 pref SIREG, else GENERAL_REGS
  Register 70 pref DREG, else GENERAL_REGS
  Register 71 pref CREG, else GENERAL_REGS
  Register 72 pref SSE_REGS or none
  Register 73 pref GENERAL_REGS or none
  Register 74 pref GENERAL_REGS or none
  Register 75 pref DIREG, else GENERAL_REGS
  Register 77 pref INDEX_REGS, else GENERAL_REGS
  Register 80 pref SSE_REGS or none
  Register 83 pref GENERAL_REGS or none
  Register 85 pref SSE_REGS or none
  Register 91 pref GENERAL_REGS or none
  Register 95 pref GENERAL_REGS or none
  Register 98 pref INDEX_REGS, else GENERAL_REGS
  Register 99 pref GENERAL_REGS or none
  Register 100 pref SSE_REGS or none
  Register 106 pref SSE_REGS or none
  Register 112 pref SSE_REGS or none
  Register 118 pref SSE_REGS or none
  Register 124 pref SSE_REGS or none
  Register 130 pref SSE_REGS or none
  Register 136 pref SSE_REGS or none
  Register 142 pref SSE_REGS or none
  Register 145 pref GENERAL_REGS or none
  Register 146 pref SSE_REGS or none
  Register 150 pref SSE_REGS or none
  Register 154 pref SSE_REGS or none
  Register 158 pref SSE_REGS or none
  Register 162 pref SSE_REGS or none
  Register 166 pref SSE_REGS or none
  Register 170 pref SSE_REGS or none
  Register 173 pref GENERAL_REGS or none


Pass 1

  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7969 MMX_REGS:7969 INT_SSE_REGS:7969 MEM:1839
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6240 MMX_REGS:6240 FP_TOP_SSE_REGS:6240 FP_SECOND_SSE_REGS:6240 FLOAT_SSE_REGS:6240 FLOAT_INT_REGS:4320 INT_SSE_REGS:6240 FLOAT_INT_SSE_REGS:6240 ALL_REGS:6240 MEM:1830
  Register 62 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3552 INDEX_REGS:1665 LEGACY_REGS:3552 GENERAL_REGS:3552 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4884 MEM:1443
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4355 MMX_REGS:4355 INT_SSE_REGS:4355 MEM:1005
  Register 65 costs: AREG:19994 DREG:19994 CREG:19994 BREG:19994 SIREG:19994 DIREG:19994 AD_REGS:19994 Q_REGS:19994 NON_Q_REGS:23768 INDEX_REGS:19994 LEGACY_REGS:23768 GENERAL_REGS:23768 FP_TOP_REG:32298 FP_SECOND_REG:32298 FLOAT_REGS:32298 SSE_REGS:0 FP_TOP_SSE_REGS:32298 FP_SECOND_SSE_REGS:32298 FLOAT_SSE_REGS:32298 FLOAT_INT_REGS:32298 INT_SSE_REGS:19994 FLOAT_INT_SSE_REGS:32298 ALL_REGS:36960 MEM:11654
  Register 66 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25792 MMX_REGS:25792 FP_TOP_SSE_REGS:25792 FP_SECOND_SSE_REGS:25792 FLOAT_SSE_REGS:25792 FLOAT_INT_REGS:17856 INT_SSE_REGS:25792 FLOAT_INT_SSE_REGS:25792 ALL_REGS:25792 MEM:7714
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4199 MMX_REGS:4199 FP_TOP_SSE_REGS:4199 FP_SECOND_SSE_REGS:4199 FLOAT_SSE_REGS:4199 FLOAT_INT_REGS:2907 INT_SSE_REGS:4199 FLOAT_INT_SSE_REGS:4199 ALL_REGS:4199 MEM:1181
  Register 69 costs: AREG:424 DREG:424 CREG:424 BREG:424 SIREG:312 DIREG:424 AD_REGS:424 Q_REGS:424 NON_Q_REGS:424 INDEX_REGS:424 LEGACY_REGS:424 GENERAL_REGS:424 SSE_REGS:12605 MMX_REGS:12605 INT_SSE_REGS:12605 MEM:3638
  Register 70 costs: AREG:224 DREG:112 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:6022 MMX_REGS:6022 FP_TOP_SSE_REGS:6022 FP_SECOND_SSE_REGS:6022 FLOAT_SSE_REGS:6022 FLOAT_INT_REGS:4238 INT_SSE_REGS:6022 FLOAT_INT_SSE_REGS:6022 ALL_REGS:6022 MEM:1674
  Register 71 costs: AREG:0 DREG:0 CREG:-112 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2899 MMX_REGS:2899 FP_TOP_SSE_REGS:2899 FP_SECOND_SSE_REGS:2899 FLOAT_SSE_REGS:2899 FLOAT_INT_REGS:2007 INT_SSE_REGS:2899 FLOAT_INT_SSE_REGS:2899 ALL_REGS:2899 MEM:892
  Register 72 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3569 INDEX_REGS:1665 LEGACY_REGS:3569 GENERAL_REGS:3569 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4905 MEM:1447
  Register 73 costs: AREG:224 DREG:224 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:3136 MMX_REGS:3136 INT_SSE_REGS:3136 MEM:896
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 MEM:784
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 FP_TOP_SSE_REGS:2912 FP_SECOND_SSE_REGS:2912 FLOAT_SSE_REGS:2912 FLOAT_INT_REGS:2016 INT_SSE_REGS:2912 FLOAT_INT_SSE_REGS:2912 ALL_REGS:2912 MEM:672
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 80 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:8600 INDEX_REGS:5200 LEGACY_REGS:8600 GENERAL_REGS:8600 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:12600 MEM:4000
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 85 costs: SSE_REGS:0 FP_TOP_SSE_REGS:27846 FP_SECOND_SSE_REGS:27846 FLOAT_SSE_REGS:27846 INT_SSE_REGS:58606 FLOAT_INT_SSE_REGS:58606 ALL_REGS:58606 MEM:11566
  Register 91 costs: AREG:200 DREG:200 CREG:200 BREG:200 SIREG:200 DIREG:200 AD_REGS:200 Q_REGS:200 NON_Q_REGS:200 INDEX_REGS:200 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2800 MMX_REGS:2800 FP_TOP_SSE_REGS:2800 FP_SECOND_SSE_REGS:2800 FLOAT_SSE_REGS:2800 FLOAT_INT_REGS:2000 INT_SSE_REGS:2800 FLOAT_INT_SSE_REGS:2800 ALL_REGS:2800 MEM:800
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2435
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2696 INDEX_REGS:0 LEGACY_REGS:2696 GENERAL_REGS:2696 MEM:10762
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 100 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 106 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 112 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 118 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 124 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 130 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 136 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 142 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 146 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 150 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 154 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 158 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 162 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 166 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 170 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 173 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:630

174 registers.

Register 59 used 6 times across 115 insns; set 1 time; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 60 used 5 times across 34 insns; set 1 time; GENERAL_REGS or none.

Register 62 used 2 times across 4 insns in block 3; set 1 time; user var; crosses 1 call; SSE_REGS or none.

Register 64 used 3 times across 130 insns; set 1 time; user var; crosses 2 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 65 used 18 times across 117 insns; set 1 time; dies in 0 places; SSE_REGS or none.

Register 66 used 20 times across 129 insns; set 1 time; crosses 2 calls; pref AREG, else GENERAL_REGS; pointer.

Register 68 used 3 times across 25 insns; set 1 time; user var; crosses 2 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 69 used 9 times across 134 insns; set 1 time; user var; dies in 0 places; crosses 2 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 70 used 4 times across 19 insns; set 1 time; user var; crosses 2 calls; 4 bytes; pref DREG, else GENERAL_REGS.

Register 71 used 2 times across 17 insns; set 1 time; user var; crosses 2 calls; pref CREG, else GENERAL_REGS; pointer.

Register 72 used 2 times across 138 insns; set 1 time; user var; crosses 4 calls; SSE_REGS or none.

Register 73 used 2 times across 2 insns in block 0; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 74 used 2 times across 2 insns in block 0; set 1 time; GENERAL_REGS or none.

Register 75 used 2 times across 2 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 77 used 2 times across 2 insns in block 4; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 80 used 6 times across 6 insns in block 4; set 3 times; SSE_REGS or none.

Register 83 used 2 times across 2 insns in block 4; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 85 used 17 times across 220 insns; set 1 time; dies in 0 places; 16 bytes; SSE_REGS or none.

Register 91 used 2 times across 2 insns in block 4; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 95 used 10 times across 25 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 98 used 32 times across 210 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 99 used 30 times across 103 insns; set 9 times; dies in 0 places; GENERAL_REGS or none.

Register 100 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 106 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 112 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 118 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 124 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 130 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 136 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 142 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 145 used 2 times across 2 insns in block 19; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 146 used 6 times across 6 insns in block 12; set 3 times; SSE_REGS or none.

Register 150 used 6 times across 6 insns in block 13; set 3 times; SSE_REGS or none.

Register 154 used 6 times across 6 insns in block 14; set 3 times; SSE_REGS or none.

Register 158 used 6 times across 6 insns in block 15; set 3 times; SSE_REGS or none.

Register 162 used 6 times across 6 insns in block 16; set 3 times; SSE_REGS or none.

Register 166 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 170 used 6 times across 6 insns in block 18; set 3 times; SSE_REGS or none.

Register 173 used 2 times across 2 insns in block 18; set 1 time; 4 bytes; GENERAL_REGS or none.

21 basic blocks, 33 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1122, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [99.0%]  1 [1.0%]  (fallthru)
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 68 69 70 71 72

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  0 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  0 [99.0%] 
Successors:  3 [10.0%]  (fallthru) 4 [90.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 68 69 70 71 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 68 69 72

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  18 [10.0%]  19 [10.0%]  (loop_exit) 4 [10.0%]  2 [10.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  2 [90.0%] 
Successors:  5 [90.0%]  (fallthru,dfs_back) 3 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 68 69 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  4 [90.0%]  (fallthru,dfs_back)
Successors:  6 [87.5%]  (fallthru) 19 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
Invalid sum of incoming frequencies 900, should be 771

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  5 [87.5%]  (fallthru)
Successors:  7 [85.7%]  (fallthru) 18 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  6 [85.7%]  (fallthru)
Successors:  8 [83.3%]  (fallthru) 17 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  7 [83.3%]  (fallthru)
Successors:  9 [80.0%]  (fallthru) 16 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  8 [80.0%]  (fallthru)
Successors:  10 [75.0%]  (fallthru) 15 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  9 [75.0%]  (fallthru)
Successors:  11 [66.7%]  (fallthru) 14 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  10 [66.7%]  (fallthru)
Successors:  12 [50.0%]  (fallthru) 13 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 98 99
Invalid sum of incoming frequencies 300, should be 900

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Invalid sum of incoming frequencies 450, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 11 [50.0%] 
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Invalid sum of incoming frequencies 1350, should be 900

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 10 [33.3%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Invalid sum of incoming frequencies 1050, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 9 [25.0%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Invalid sum of incoming frequencies 1050, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 8 [20.0%] 
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Invalid sum of incoming frequencies 1035, should be 900

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 7 [16.7%] 
Successors:  18 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Invalid sum of incoming frequencies 1020, should be 900

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 6 [14.3%] 
Successors:  19 [90.0%]  (fallthru,dfs_back) 3 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Invalid sum of incoming frequencies 1007, should be 900

Basic block 19 prev 18, next 20, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  18 [90.0%]  (fallthru,dfs_back) 20 [100.0%]  5 [12.5%] 
Successors:  20 [90.0%]  (fallthru,dfs_back) 3 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 20 prev 19, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  19 [90.0%]  (fallthru,dfs_back)
Successors:  19 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99

;; Register 73 in 0.
;; Register 74 in 5.
;; Register 75 in 5.
;; Register 77 in 0.
;; Register 80 in 21.
;; Register 83 in 0.
;; Register 91 in 0.
;; Register 100 in 21.
;; Register 106 in 21.
;; Register 112 in 21.
;; Register 118 in 21.
;; Register 124 in 21.
;; Register 130 in 21.
;; Register 136 in 21.
;; Register 142 in 21.
;; Register 145 in 0.
;; Register 146 in 21.
;; Register 150 in 21.
;; Register 154 in 21.
;; Register 158 in 21.
;; Register 162 in 21.
;; Register 166 in 21.
;; Register 170 in 21.
;; Register 173 in 0.
(note:HI 1 0 11 ("./CppStatUtilities.cc") 193)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
(note:HI 11 1 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 4 11 5 0 ./CppStatUtilities.cc:193 (set (reg/v/f:DI 68 [ a ])
        (reg:DI 5 di [ a ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:193 (set (reg/v:SI 69 [ start ])
        (reg:SI 4 si [ start ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ start ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:193 (set (reg/v:SI 70 [ end ])
        (reg:SI 1 dx [ end ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 1 dx [ end ])
        (nil)))

(insn:HI 7 6 8 0 ./CppStatUtilities.cc:193 (set (reg/v/f:DI 71 [ medianVal ])
        (reg:DI 2 cx [ medianVal ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 2 cx [ medianVal ])
        (nil)))

(insn:HI 8 7 9 0 ./CppStatUtilities.cc:193 (set (reg/v:DF 72 [ constant ])
        (reg:DF 21 xmm0 [ constant ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ constant ])
        (nil)))

(note:HI 9 8 13 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 13 9 14 0 ("./CppStatUtilities.cc") 195)

(insn:HI 14 13 15 0 ./CppStatUtilities.cc:195 (parallel [
            (set (reg:SI 73)
                (minus:SI (reg/v:SI 70 [ end ])
                    (reg/v:SI 69 [ start ])))
            (clobber (reg:CC 17 flags))
        ]) 242 {*subsi_1} (insn_list:REG_DEP_TRUE 5 (insn_list:REG_DEP_TRUE 6 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 15 14 16 0 ./CppStatUtilities.cc:195 (parallel [
            (set (reg/v:SI 64 [ len ])
                (plus:SI (reg:SI 73)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 73)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 16 15 17 0 ("./CppStatUtilities.cc") 196)

(insn:HI 17 16 18 0 ./CppStatUtilities.cc:196 (set (reg:DI 74 [ len ])
        (sign_extend:DI (reg/v:SI 64 [ len ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 15 (nil))
    (nil))

(insn:HI 18 17 19 0 ./CppStatUtilities.cc:196 (parallel [
            (set (reg:DI 75)
                (ashift:DI (reg:DI 74 [ len ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 17 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 74 [ len ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 19 18 20 0 ./CppStatUtilities.cc:196 (set (reg:DI 5 di)
        (reg:DI 75)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_DEAD (reg:DI 75)
        (nil)))

(call_insn:HI 20 19 21 0 ./CppStatUtilities.cc:196 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 19 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 21 20 23 0 ./CppStatUtilities.cc:196 (set (reg/f:DI 66 [ D.34660 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 76)
            (nil))))

(note:HI 23 21 24 0 ("./CppStatUtilities.cc") 197)

(insn:HI 24 23 25 0 ./CppStatUtilities.cc:197 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 66 [ D.34660 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 21 (nil))
    (nil))

(jump_insn:HI 25 24 27 0 ./CppStatUtilities.cc:197 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 24 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 68 69 70 71 72

;; Start of basic block 1, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 27 25 28 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 28 27 29 1 ./CppStatUtilities.cc:197 (set (reg:SI 2 cx)
        (const_int 197 [0xc5])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 29 28 30 1 ./CppStatUtilities.cc:197 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 30 29 31 1 ./CppStatUtilities.cc:197 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 31 30 32 1 ./CppStatUtilities.cc:197 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 32 31 33 1 ./CppStatUtilities.cc:197 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 33 32 34 1 ./CppStatUtilities.cc:197 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 28 (insn_list:REG_DEP_TRUE 29 (insn_list:REG_DEP_TRUE 30 (insn_list:REG_DEP_TRUE 31 (insn_list:REG_DEP_TRUE 32 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 34 33 35 1 ./CppStatUtilities.cc:197 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 35 34 36 1 ./CppStatUtilities.cc:197 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 34 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 1, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 36 35 37)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 68 69 70 71 72
(code_label:HI 37 36 38 2 948 "" [1 uses])

(note:HI 38 37 39 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 39 38 41 2 ("./CppStatUtilities.cc") 196)

(note:HI 41 39 42 2 ("./CppStatUtilities.cc") 199)

(insn:HI 42 41 43 2 ./CppStatUtilities.cc:199 (set (reg:SI 1 dx [ end ])
        (reg/v:SI 70 [ end ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 43 42 44 2 ./CppStatUtilities.cc:199 (set (reg:SI 4 si [ start ])
        (reg/v:SI 69 [ start ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 44 43 45 2 ./CppStatUtilities.cc:199 (set (reg:DI 5 di [ a ])
        (reg/v/f:DI 68 [ a ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 45 44 46 2 ./CppStatUtilities.cc:199 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("_Z6medianPdii") [flags 0x3] <function_decl 0x2b5eb6361e00 median>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 42 (insn_list:REG_DEP_TRUE 43 (insn_list:REG_DEP_TRUE 44 (nil))))
    (expr_list:REG_DEAD (reg:SI 1 dx [ end ])
        (expr_list:REG_DEAD (reg:SI 4 si [ start ])
            (expr_list:REG_DEAD (reg:DI 5 di [ a ])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ a ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ start ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx [ end ]))
                (nil)))))

(insn:HI 46 45 47 2 ./CppStatUtilities.cc:199 (set (reg:DF 65 [ D.34664 ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 45 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(insn:HI 47 46 48 2 ./CppStatUtilities.cc:199 (set (mem:DF (reg/v/f:DI 71 [ medianVal ]) [3 S8 A64])
        (reg:DF 65 [ D.34664 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg/v/f:DI 71 [ medianVal ])
        (nil)))

(note:HI 48 47 49 2 ("./CppStatUtilities.cc") 202)

(insn:HI 49 48 50 2 ./CppStatUtilities.cc:202 (parallel [
            (set (reg/v:SI 59 [ end.1039 ])
                (plus:SI (reg/v:SI 70 [ end ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 70 [ end ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 50 49 51 2 ("./CppStatUtilities.cc") 203)

(insn:HI 51 50 52 2 ./CppStatUtilities.cc:203 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 69 [ start ])
            (reg/v:SI 59 [ end.1039 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 49 (nil))
    (nil))

(jump_insn:HI 52 51 100 2 ./CppStatUtilities.cc:203 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 457)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 51 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 68 69 72

(note:HI 100 52 101 NOTE_INSN_LOOP_BEG)

(note:HI 101 100 73 NOTE_INSN_LOOP_END)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 72
(code_label:HI 73 101 74 3 950 "" [3 uses])

(note:HI 74 73 75 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 75 74 76 3 ("./CppStatUtilities.cc") 206)

(insn:HI 76 75 77 3 ./CppStatUtilities.cc:206 (set (reg:SI 4 si [ len ])
        (reg/v:SI 64 [ len ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 64 [ len ])
        (nil)))

(insn:HI 77 76 78 3 ./CppStatUtilities.cc:206 (set (reg:DI 5 di [ res ])
        (reg/f:DI 66 [ D.34660 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 78 77 79 3 ./CppStatUtilities.cc:206 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x41] <function_decl 0x2b5eb631e600 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 76 (insn_list:REG_DEP_TRUE 77 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ len ])
        (expr_list:REG_DEAD (reg:DI 5 di [ res ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ len ]))
            (nil))))

(insn:HI 79 78 80 3 ./CppStatUtilities.cc:206 (set (reg/v:DF 62 [ mad ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 78 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 80 79 81 3 ("./CppStatUtilities.cc") 208)

(insn:HI 81 80 82 3 ./CppStatUtilities.cc:208 (set (reg:DI 5 di [ res ])
        (reg/f:DI 66 [ D.34660 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 66 [ D.34660 ])
        (nil)))

(call_insn:HI 82 81 83 3 ./CppStatUtilities.cc:208 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 81 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ res ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (nil)))

(note:HI 83 82 87 3 NOTE_INSN_DELETED)

(note:HI 87 83 88 3 NOTE_INSN_FUNCTION_END)

(note:HI 88 87 90 3 ("./CppStatUtilities.cc") 211)

(insn:HI 90 88 96 3 ./CppStatUtilities.cc:211 (set (reg/i:DF 21 xmm0 [ <result> ])
        (mult:DF (reg/v:DF 62 [ mad ])
            (reg/v:DF 72 [ constant ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 79 (nil))
    (expr_list:REG_DEAD (reg/v:DF 72 [ constant ])
        (expr_list:REG_DEAD (reg/v:DF 62 [ mad ])
            (nil))))

(insn:HI 96 90 457 3 ./CppStatUtilities.cc:211 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 90 (nil))
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 68 69 72
(code_label:HI 457 96 54 4 980 "" [1 uses])

(note:HI 54 457 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 55 54 56 4 ./CppStatUtilities.cc:203 (set (reg:DI 77 [ start ])
        (sign_extend:DI (reg/v:SI 69 [ start ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(note:HI 56 55 57 4 NOTE_INSN_DELETED)

(insn:HI 57 56 103 4 ./CppStatUtilities.cc:203 (set (reg:DI 60 [ ivtmp.1036 ])
        (plus:DI (mult:DI (reg:DI 77 [ start ])
                (const_int 8 [0x8]))
            (reg/v/f:DI 68 [ a ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 55 (nil))
    (expr_list:REG_DEAD (reg:DI 77 [ start ])
        (expr_list:REG_DEAD (reg/v/f:DI 68 [ a ])
            (nil))))

(insn:HI 103 57 112 4 (set (reg:V2DF 85)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC32") [flags 0x2]) [3 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(note:HI 112 103 113 4 NOTE_INSN_DELETED)

(insn:HI 113 112 114 4 (set (reg:SI 91)
        (not:SI (reg/v:SI 69 [ start ]))) 398 {*one_cmplsi2_1} (nil)
    (nil))

(note:HI 114 113 115 4 NOTE_INSN_DELETED)

(note:HI 115 114 117 4 NOTE_INSN_DELETED)

(insn:HI 117 115 118 4 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg:SI 91)
                    (reg/v:SI 59 [ end.1039 ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 113 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_DEAD (reg:SI 91)
                (nil)))))

(insn:HI 118 117 121 4 (parallel [
            (set (reg:SI 95)
                (and:SI (reg:SI 95)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 117 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 121 118 122 4 ("./CppStatUtilities.cc") 204)

(insn:HI 122 121 123 4 ./CppStatUtilities.cc:204 (set (reg:DF 80)
        (mem:DF (reg:DI 60 [ ivtmp.1036 ]) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 57 (nil))
    (nil))

(insn:HI 123 122 124 4 ./CppStatUtilities.cc:204 (set (reg:DF 80)
        (minus:DF (reg:DF 80)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 122 (nil))
    (nil))

(insn:HI 124 123 125 4 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 80)
                (abs:DF (reg:DF 80)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 103 (insn_list:REG_DEP_TRUE 123 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 125 124 126 4 ./CppStatUtilities.cc:204 (set (mem:DF (reg/f:DI 66 [ D.34660 ]) [3 S8 A64])
        (reg:DF 80)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 124 (nil))
    (expr_list:REG_DEAD (reg:DF 80)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 79))
            (nil))))

(insn:HI 126 125 127 4 ./CppStatUtilities.cc:204 (set (reg:DI 98 [ ivtmp.1033 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 127 126 128 4 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 99 [ ivtmp.1036 ])
                (plus:DI (reg:DI 60 [ ivtmp.1036 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 128 127 129 4 ("./CppStatUtilities.cc") 203)

(insn:HI 129 128 130 4 ./CppStatUtilities.cc:203 (parallel [
            (set (reg:SI 83)
                (plus:SI (reg/v:SI 69 [ start ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 130 129 131 4 ./CppStatUtilities.cc:203 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 59 [ end.1039 ])
            (reg:SI 83))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 129 (nil))
    (expr_list:REG_DEAD (reg:SI 83)
        (nil)))

(jump_insn:HI 131 130 299 4 ./CppStatUtilities.cc:203 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 73)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 130 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
(note:HI 299 131 297 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 297 299 298 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 298 297 276 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 59)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 297 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
(note:HI 276 298 274 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 274 276 275 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 275 274 253 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 460)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 274 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
(note:HI 253 275 251 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 251 253 252 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 252 251 230 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 461)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 251 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
(note:HI 230 252 228 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 228 230 229 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 229 228 207 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 462)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 228 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
(note:HI 207 229 205 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 205 207 206 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 206 205 184 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 463)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 205 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
(note:HI 184 206 182 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 182 184 183 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 183 182 161 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 464)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 182 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 95 98 99
(note:HI 161 183 159 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 159 161 160 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 95)
        (nil)))

(jump_insn:HI 160 159 151 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 465)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 159 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85 98 99

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 64 65 66 69 72 85
(note:HI 151 160 140 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 140 151 141 12 ("./CppStatUtilities.cc") 204)

(insn:HI 141 140 142 12 ./CppStatUtilities.cc:204 (set (reg:DF 146)
        (mem:DF (plus:DI (reg:DI 60 [ ivtmp.1036 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 142 141 143 12 ./CppStatUtilities.cc:204 (set (reg:DF 146)
        (minus:DF (reg:DF 146)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 141 (nil))
    (nil))

(insn:HI 143 142 144 12 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 146)
                (abs:DF (reg:DF 146)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 142 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 144 143 145 12 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (reg/f:DI 66 [ D.34660 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 146)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 143 (nil))
    (expr_list:REG_DEAD (reg:DF 146)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 147))
            (nil))))

(insn:HI 145 144 146 12 ./CppStatUtilities.cc:204 (set (reg:DI 98 [ ivtmp.1033 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 146 145 147 12 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 99 [ ivtmp.1036 ])
                (plus:DI (reg:DI 60 [ ivtmp.1036 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 60 [ ivtmp.1036 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 147 146 465 12 ("./CppStatUtilities.cc") 203)
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
(code_label:HI 465 147 174 13 986 "" [1 uses])

(note:HI 174 465 163 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 163 174 164 13 ("./CppStatUtilities.cc") 204)

(insn:HI 164 163 165 13 ./CppStatUtilities.cc:204 (set (reg:DF 150)
        (mem:DF (reg:DI 99 [ ivtmp.1036 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 165 164 166 13 ./CppStatUtilities.cc:204 (set (reg:DF 150)
        (minus:DF (reg:DF 150)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 164 (nil))
    (nil))

(insn:HI 166 165 167 13 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 150)
                (abs:DF (reg:DF 150)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 165 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 167 166 168 13 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34660 ])) [3 S8 A64])
        (reg:DF 150)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 166 (nil))
    (expr_list:REG_DEAD (reg:DF 150)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 151))
            (nil))))

(insn:HI 168 167 169 13 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 98 [ ivtmp.1033 ])
                (plus:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 169 168 170 13 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 99 [ ivtmp.1036 ])
                (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 170 169 464 13 ("./CppStatUtilities.cc") 203)
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
(code_label:HI 464 170 197 14 985 "" [1 uses])

(note:HI 197 464 186 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 186 197 187 14 ("./CppStatUtilities.cc") 204)

(insn:HI 187 186 188 14 ./CppStatUtilities.cc:204 (set (reg:DF 154)
        (mem:DF (reg:DI 99 [ ivtmp.1036 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 188 187 189 14 ./CppStatUtilities.cc:204 (set (reg:DF 154)
        (minus:DF (reg:DF 154)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 187 (nil))
    (nil))

(insn:HI 189 188 190 14 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 154)
                (abs:DF (reg:DF 154)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 188 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 190 189 191 14 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34660 ])) [3 S8 A64])
        (reg:DF 154)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 189 (nil))
    (expr_list:REG_DEAD (reg:DF 154)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 155))
            (nil))))

(insn:HI 191 190 192 14 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 98 [ ivtmp.1033 ])
                (plus:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 192 191 193 14 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 99 [ ivtmp.1036 ])
                (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 193 192 463 14 ("./CppStatUtilities.cc") 203)
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
(code_label:HI 463 193 220 15 984 "" [1 uses])

(note:HI 220 463 209 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 209 220 210 15 ("./CppStatUtilities.cc") 204)

(insn:HI 210 209 211 15 ./CppStatUtilities.cc:204 (set (reg:DF 158)
        (mem:DF (reg:DI 99 [ ivtmp.1036 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 211 210 212 15 ./CppStatUtilities.cc:204 (set (reg:DF 158)
        (minus:DF (reg:DF 158)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 210 (nil))
    (nil))

(insn:HI 212 211 213 15 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 158)
                (abs:DF (reg:DF 158)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 211 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 213 212 214 15 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34660 ])) [3 S8 A64])
        (reg:DF 158)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 212 (nil))
    (expr_list:REG_DEAD (reg:DF 158)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 159))
            (nil))))

(insn:HI 214 213 215 15 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 98 [ ivtmp.1033 ])
                (plus:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 215 214 216 15 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 99 [ ivtmp.1036 ])
                (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 216 215 462 15 ("./CppStatUtilities.cc") 203)
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
(code_label:HI 462 216 243 16 983 "" [1 uses])

(note:HI 243 462 232 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 232 243 233 16 ("./CppStatUtilities.cc") 204)

(insn:HI 233 232 234 16 ./CppStatUtilities.cc:204 (set (reg:DF 162)
        (mem:DF (reg:DI 99 [ ivtmp.1036 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 234 233 235 16 ./CppStatUtilities.cc:204 (set (reg:DF 162)
        (minus:DF (reg:DF 162)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 233 (nil))
    (nil))

(insn:HI 235 234 236 16 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 162)
                (abs:DF (reg:DF 162)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 234 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 236 235 237 16 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34660 ])) [3 S8 A64])
        (reg:DF 162)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 235 (nil))
    (expr_list:REG_DEAD (reg:DF 162)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 163))
            (nil))))

(insn:HI 237 236 238 16 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 98 [ ivtmp.1033 ])
                (plus:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 238 237 239 16 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 99 [ ivtmp.1036 ])
                (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 239 238 461 16 ("./CppStatUtilities.cc") 203)
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
(code_label:HI 461 239 266 17 982 "" [1 uses])

(note:HI 266 461 255 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 255 266 256 17 ("./CppStatUtilities.cc") 204)

(insn:HI 256 255 257 17 ./CppStatUtilities.cc:204 (set (reg:DF 166)
        (mem:DF (reg:DI 99 [ ivtmp.1036 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 257 256 258 17 ./CppStatUtilities.cc:204 (set (reg:DF 166)
        (minus:DF (reg:DF 166)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 256 (nil))
    (nil))

(insn:HI 258 257 259 17 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 166)
                (abs:DF (reg:DF 166)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 257 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 259 258 260 17 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34660 ])) [3 S8 A64])
        (reg:DF 166)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 258 (nil))
    (expr_list:REG_DEAD (reg:DF 166)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 167))
            (nil))))

(insn:HI 260 259 261 17 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 98 [ ivtmp.1033 ])
                (plus:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 261 260 262 17 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 99 [ ivtmp.1036 ])
                (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 262 261 460 17 ("./CppStatUtilities.cc") 203)
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
(code_label:HI 460 262 289 18 981 "" [1 uses])

(note:HI 289 460 278 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 278 289 279 18 ("./CppStatUtilities.cc") 204)

(insn:HI 279 278 280 18 ./CppStatUtilities.cc:204 (set (reg:DF 170)
        (mem:DF (reg:DI 99 [ ivtmp.1036 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 280 279 281 18 ./CppStatUtilities.cc:204 (set (reg:DF 170)
        (minus:DF (reg:DF 170)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 279 (nil))
    (nil))

(insn:HI 281 280 282 18 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 170)
                (abs:DF (reg:DF 170)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 280 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 282 281 283 18 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34660 ])) [3 S8 A64])
        (reg:DF 170)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 281 (nil))
    (expr_list:REG_DEAD (reg:DF 170)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 171))
            (nil))))

(insn:HI 283 282 284 18 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 98 [ ivtmp.1033 ])
                (plus:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 284 283 285 18 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 99 [ ivtmp.1036 ])
                (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 285 284 286 18 ("./CppStatUtilities.cc") 203)

(insn:HI 286 285 287 18 ./CppStatUtilities.cc:203 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg/v:SI 69 [ start ])
                    (subreg:SI (reg:DI 98 [ ivtmp.1033 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 283 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 287 286 288 18 ./CppStatUtilities.cc:203 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 59 [ end.1039 ])
            (reg:SI 173))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 286 (nil))
    (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(jump_insn:HI 288 287 59 18 ./CppStatUtilities.cc:203 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 73)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 287 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
(code_label:HI 59 288 60 19 952 "" [2 uses])

(note:HI 60 59 61 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 61 60 62 19 ("./CppStatUtilities.cc") 204)

(insn:HI 62 61 63 19 ./CppStatUtilities.cc:204 (set (reg:DF 100)
        (mem:DF (reg:DI 99 [ ivtmp.1036 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 63 62 65 19 ./CppStatUtilities.cc:204 (set (reg:DF 100)
        (minus:DF (reg:DF 100)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 62 (nil))
    (nil))

(insn:HI 65 63 66 19 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 100)
                (abs:DF (reg:DF 100)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 63 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 66 65 426 19 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34660 ])) [3 S8 A64])
        (reg:DF 100)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 65 (nil))
    (expr_list:REG_DEAD (reg:DF 100)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 101))
            (nil))))

(note:HI 426 66 69 19 NOTE_INSN_DELETED)

(note:HI 69 426 301 19 ("./CppStatUtilities.cc") 203)

(note:HI 301 69 302 19 ("./CppStatUtilities.cc") 204)

(insn:HI 302 301 303 19 ./CppStatUtilities.cc:204 (set (reg:DF 106)
        (mem:DF (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 303 302 304 19 ./CppStatUtilities.cc:204 (set (reg:DF 106)
        (minus:DF (reg:DF 106)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 302 (nil))
    (nil))

(insn:HI 304 303 305 19 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 106)
                (abs:DF (reg:DF 106)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 303 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 305 304 306 19 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34660 ]))
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 106)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 304 (nil))
    (expr_list:REG_DEAD (reg:DF 106)
        (nil)))

(note:HI 306 305 308 19 NOTE_INSN_DELETED)

(note:HI 308 306 319 19 ("./CppStatUtilities.cc") 203)

(note:HI 319 308 320 19 ("./CppStatUtilities.cc") 204)

(insn:HI 320 319 321 19 ./CppStatUtilities.cc:204 (set (reg:DF 112)
        (mem:DF (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 321 320 322 19 ./CppStatUtilities.cc:204 (set (reg:DF 112)
        (minus:DF (reg:DF 112)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 320 (nil))
    (nil))

(insn:HI 322 321 323 19 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 112)
                (abs:DF (reg:DF 112)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 321 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 323 322 324 19 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34660 ]))
                (const_int 16 [0x10])) [3 S8 A64])
        (reg:DF 112)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 322 (nil))
    (expr_list:REG_DEAD (reg:DF 112)
        (nil)))

(note:HI 324 323 326 19 NOTE_INSN_DELETED)

(note:HI 326 324 337 19 ("./CppStatUtilities.cc") 203)

(note:HI 337 326 338 19 ("./CppStatUtilities.cc") 204)

(insn:HI 338 337 339 19 ./CppStatUtilities.cc:204 (set (reg:DF 118)
        (mem:DF (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 339 338 340 19 ./CppStatUtilities.cc:204 (set (reg:DF 118)
        (minus:DF (reg:DF 118)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 338 (nil))
    (nil))

(insn:HI 340 339 341 19 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 118)
                (abs:DF (reg:DF 118)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 339 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 341 340 342 19 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34660 ]))
                (const_int 24 [0x18])) [3 S8 A64])
        (reg:DF 118)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 340 (nil))
    (expr_list:REG_DEAD (reg:DF 118)
        (nil)))

(note:HI 342 341 344 19 NOTE_INSN_DELETED)

(note:HI 344 342 355 19 ("./CppStatUtilities.cc") 203)

(note:HI 355 344 356 19 ("./CppStatUtilities.cc") 204)

(insn:HI 356 355 357 19 ./CppStatUtilities.cc:204 (set (reg:DF 124)
        (mem:DF (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                (const_int 32 [0x20])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 357 356 358 19 ./CppStatUtilities.cc:204 (set (reg:DF 124)
        (minus:DF (reg:DF 124)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 356 (nil))
    (nil))

(insn:HI 358 357 359 19 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 124)
                (abs:DF (reg:DF 124)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 357 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 359 358 360 19 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34660 ]))
                (const_int 32 [0x20])) [3 S8 A64])
        (reg:DF 124)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 358 (nil))
    (expr_list:REG_DEAD (reg:DF 124)
        (nil)))

(note:HI 360 359 362 19 NOTE_INSN_DELETED)

(note:HI 362 360 373 19 ("./CppStatUtilities.cc") 203)

(note:HI 373 362 374 19 ("./CppStatUtilities.cc") 204)

(insn:HI 374 373 375 19 ./CppStatUtilities.cc:204 (set (reg:DF 130)
        (mem:DF (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                (const_int 40 [0x28])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 375 374 376 19 ./CppStatUtilities.cc:204 (set (reg:DF 130)
        (minus:DF (reg:DF 130)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 374 (nil))
    (nil))

(insn:HI 376 375 377 19 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 130)
                (abs:DF (reg:DF 130)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 375 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 377 376 378 19 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34660 ]))
                (const_int 40 [0x28])) [3 S8 A64])
        (reg:DF 130)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 376 (nil))
    (expr_list:REG_DEAD (reg:DF 130)
        (nil)))

(note:HI 378 377 380 19 NOTE_INSN_DELETED)

(note:HI 380 378 391 19 ("./CppStatUtilities.cc") 203)

(note:HI 391 380 392 19 ("./CppStatUtilities.cc") 204)

(insn:HI 392 391 393 19 ./CppStatUtilities.cc:204 (set (reg:DF 136)
        (mem:DF (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                (const_int 48 [0x30])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 393 392 394 19 ./CppStatUtilities.cc:204 (set (reg:DF 136)
        (minus:DF (reg:DF 136)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 392 (nil))
    (nil))

(insn:HI 394 393 395 19 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 136)
                (abs:DF (reg:DF 136)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 393 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 395 394 396 19 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34660 ]))
                (const_int 48 [0x30])) [3 S8 A64])
        (reg:DF 136)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 394 (nil))
    (expr_list:REG_DEAD (reg:DF 136)
        (nil)))

(note:HI 396 395 398 19 NOTE_INSN_DELETED)

(note:HI 398 396 409 19 ("./CppStatUtilities.cc") 203)

(note:HI 409 398 410 19 ("./CppStatUtilities.cc") 204)

(insn:HI 410 409 411 19 ./CppStatUtilities.cc:204 (set (reg:DF 142)
        (mem:DF (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                (const_int 56 [0x38])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 411 410 412 19 ./CppStatUtilities.cc:204 (set (reg:DF 142)
        (minus:DF (reg:DF 142)
            (reg:DF 65 [ D.34664 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 410 (nil))
    (nil))

(insn:HI 412 411 413 19 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DF 142)
                (abs:DF (reg:DF 142)))
            (use (reg:V2DF 85))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 411 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 413 412 414 19 ./CppStatUtilities.cc:204 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 98 [ ivtmp.1033 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34660 ]))
                (const_int 56 [0x38])) [3 S8 A64])
        (reg:DF 142)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 412 (nil))
    (expr_list:REG_DEAD (reg:DF 142)
        (nil)))

(insn:HI 414 413 415 19 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 98 [ ivtmp.1033 ])
                (plus:DI (reg:DI 98 [ ivtmp.1033 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 415 414 416 19 ./CppStatUtilities.cc:204 (parallel [
            (set (reg:DI 99 [ ivtmp.1036 ])
                (plus:DI (reg:DI 99 [ ivtmp.1036 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 416 415 417 19 ("./CppStatUtilities.cc") 203)

(insn:HI 417 416 418 19 ./CppStatUtilities.cc:203 (parallel [
            (set (reg:SI 145)
                (plus:SI (reg/v:SI 69 [ start ])
                    (subreg:SI (reg:DI 98 [ ivtmp.1033 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 414 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 418 417 419 19 ./CppStatUtilities.cc:203 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 59 [ end.1039 ])
            (reg:SI 145))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 417 (nil))
    (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(jump_insn:HI 419 418 424 19 ./CppStatUtilities.cc:203 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 73)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 418 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99
(note:HI 424 419 454 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 454 424 455 20 (set (pc)
        (label_ref 59)) 548 {jump} (nil)
    (nil))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 64 65 66 69 72 85 98 99

(barrier:HI 455 454 0)


;; Function double mad(double*, int, int, double) (_Z3madPdiid)



Pass 0

  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7969 MMX_REGS:7969 INT_SSE_REGS:7969 MEM:1839
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6240 MMX_REGS:6240 FP_TOP_SSE_REGS:6240 FP_SECOND_SSE_REGS:6240 FLOAT_SSE_REGS:6240 FLOAT_INT_REGS:4320 INT_SSE_REGS:6240 FLOAT_INT_SSE_REGS:6240 ALL_REGS:6240 MEM:1830
  Register 62 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3552 INDEX_REGS:1665 LEGACY_REGS:3552 GENERAL_REGS:3552 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4884 MEM:1443
  Register 63 costs: AREG:19994 DREG:19994 CREG:19994 BREG:19994 SIREG:19994 DIREG:19994 AD_REGS:19994 Q_REGS:19994 NON_Q_REGS:21881 INDEX_REGS:19994 LEGACY_REGS:21881 GENERAL_REGS:21881 FP_TOP_REG:32298 FP_SECOND_REG:32298 FLOAT_REGS:32298 SSE_REGS:0 FP_TOP_SSE_REGS:32298 FP_SECOND_SSE_REGS:32298 FLOAT_SSE_REGS:32298 FLOAT_INT_REGS:32298 INT_SSE_REGS:19994 FLOAT_INT_SSE_REGS:32298 ALL_REGS:34629 MEM:11210
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4355 MMX_REGS:4355 INT_SSE_REGS:4355 MEM:1005
  Register 66 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25792 MMX_REGS:25792 FP_TOP_SSE_REGS:25792 FP_SECOND_SSE_REGS:25792 FLOAT_SSE_REGS:25792 FLOAT_INT_REGS:17856 INT_SSE_REGS:25792 FLOAT_INT_SSE_REGS:25792 ALL_REGS:25792 MEM:7714
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4199 MMX_REGS:4199 FP_TOP_SSE_REGS:4199 FP_SECOND_SSE_REGS:4199 FLOAT_SSE_REGS:4199 FLOAT_INT_REGS:2907 INT_SSE_REGS:4199 FLOAT_INT_SSE_REGS:4199 ALL_REGS:4199 MEM:1181
  Register 69 costs: AREG:424 DREG:424 CREG:424 BREG:424 SIREG:312 DIREG:424 AD_REGS:424 Q_REGS:424 NON_Q_REGS:424 INDEX_REGS:424 LEGACY_REGS:424 GENERAL_REGS:424 SSE_REGS:12605 MMX_REGS:12605 INT_SSE_REGS:12605 MEM:3638
  Register 70 costs: AREG:224 DREG:112 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:6022 MMX_REGS:6022 FP_TOP_SSE_REGS:6022 FP_SECOND_SSE_REGS:6022 FLOAT_SSE_REGS:6022 FLOAT_INT_REGS:4238 INT_SSE_REGS:6022 FLOAT_INT_SSE_REGS:6022 ALL_REGS:6022 MEM:1674
  Register 71 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3569 INDEX_REGS:1665 LEGACY_REGS:3569 GENERAL_REGS:3569 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4905 MEM:1447
  Register 72 costs: AREG:224 DREG:224 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:3136 MMX_REGS:3136 INT_SSE_REGS:3136 MEM:896
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 MEM:784
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 FP_TOP_SSE_REGS:2912 FP_SECOND_SSE_REGS:2912 FLOAT_SSE_REGS:2912 FLOAT_INT_REGS:2016 INT_SSE_REGS:2912 FLOAT_INT_SSE_REGS:2912 ALL_REGS:2912 MEM:672
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 79 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:8600 INDEX_REGS:5200 LEGACY_REGS:8600 GENERAL_REGS:8600 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:12600 MEM:4000
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 84 costs: SSE_REGS:0 FP_TOP_SSE_REGS:27846 FP_SECOND_SSE_REGS:27846 FLOAT_SSE_REGS:27846 INT_SSE_REGS:58606 FLOAT_INT_SSE_REGS:58606 ALL_REGS:58606 MEM:11566
  Register 89 costs: AREG:200 DREG:200 CREG:200 BREG:200 SIREG:200 DIREG:200 AD_REGS:200 Q_REGS:200 NON_Q_REGS:200 INDEX_REGS:200 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2800 MMX_REGS:2800 FP_TOP_SSE_REGS:2800 FP_SECOND_SSE_REGS:2800 FLOAT_SSE_REGS:2800 FLOAT_INT_REGS:2000 INT_SSE_REGS:2800 FLOAT_INT_SSE_REGS:2800 ALL_REGS:2800 MEM:800
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2435
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2696 INDEX_REGS:0 LEGACY_REGS:2696 GENERAL_REGS:2696 MEM:10762
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 98 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 104 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 110 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 116 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 122 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 128 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 134 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 140 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 143 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 144 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 148 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 152 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 156 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 160 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 164 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 168 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 171 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:630

  Register 59 pref GENERAL_REGS or none
  Register 60 pref GENERAL_REGS or none
  Register 62 pref SSE_REGS or none
  Register 63 pref SSE_REGS or none
  Register 65 pref SIREG, else GENERAL_REGS
  Register 66 pref AREG, else GENERAL_REGS
  Register 68 pref DIREG, else GENERAL_REGS
  Register 69 pref SIREG, else GENERAL_REGS
  Register 70 pref DREG, else GENERAL_REGS
  Register 71 pref SSE_REGS or none
  Register 72 pref GENERAL_REGS or none
  Register 73 pref GENERAL_REGS or none
  Register 74 pref DIREG, else GENERAL_REGS
  Register 76 pref INDEX_REGS, else GENERAL_REGS
  Register 79 pref SSE_REGS or none
  Register 82 pref GENERAL_REGS or none
  Register 84 pref SSE_REGS or none
  Register 89 pref GENERAL_REGS or none
  Register 93 pref GENERAL_REGS or none
  Register 96 pref INDEX_REGS, else GENERAL_REGS
  Register 97 pref GENERAL_REGS or none
  Register 98 pref SSE_REGS or none
  Register 104 pref SSE_REGS or none
  Register 110 pref SSE_REGS or none
  Register 116 pref SSE_REGS or none
  Register 122 pref SSE_REGS or none
  Register 128 pref SSE_REGS or none
  Register 134 pref SSE_REGS or none
  Register 140 pref SSE_REGS or none
  Register 143 pref GENERAL_REGS or none
  Register 144 pref SSE_REGS or none
  Register 148 pref SSE_REGS or none
  Register 152 pref SSE_REGS or none
  Register 156 pref SSE_REGS or none
  Register 160 pref SSE_REGS or none
  Register 164 pref SSE_REGS or none
  Register 168 pref SSE_REGS or none
  Register 171 pref GENERAL_REGS or none


Pass 1

  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7969 MMX_REGS:7969 INT_SSE_REGS:7969 MEM:1839
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6240 MMX_REGS:6240 FP_TOP_SSE_REGS:6240 FP_SECOND_SSE_REGS:6240 FLOAT_SSE_REGS:6240 FLOAT_INT_REGS:4320 INT_SSE_REGS:6240 FLOAT_INT_SSE_REGS:6240 ALL_REGS:6240 MEM:1830
  Register 62 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3552 INDEX_REGS:1665 LEGACY_REGS:3552 GENERAL_REGS:3552 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4884 MEM:1443
  Register 63 costs: AREG:19994 DREG:19994 CREG:19994 BREG:19994 SIREG:19994 DIREG:19994 AD_REGS:19994 Q_REGS:19994 NON_Q_REGS:21881 INDEX_REGS:19994 LEGACY_REGS:21881 GENERAL_REGS:21881 FP_TOP_REG:32298 FP_SECOND_REG:32298 FLOAT_REGS:32298 SSE_REGS:0 FP_TOP_SSE_REGS:32298 FP_SECOND_SSE_REGS:32298 FLOAT_SSE_REGS:32298 FLOAT_INT_REGS:32298 INT_SSE_REGS:19994 FLOAT_INT_SSE_REGS:32298 ALL_REGS:34629 MEM:11210
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4355 MMX_REGS:4355 INT_SSE_REGS:4355 MEM:1005
  Register 66 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:25792 MMX_REGS:25792 FP_TOP_SSE_REGS:25792 FP_SECOND_SSE_REGS:25792 FLOAT_SSE_REGS:25792 FLOAT_INT_REGS:17856 INT_SSE_REGS:25792 FLOAT_INT_SSE_REGS:25792 ALL_REGS:25792 MEM:7714
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4199 MMX_REGS:4199 FP_TOP_SSE_REGS:4199 FP_SECOND_SSE_REGS:4199 FLOAT_SSE_REGS:4199 FLOAT_INT_REGS:2907 INT_SSE_REGS:4199 FLOAT_INT_SSE_REGS:4199 ALL_REGS:4199 MEM:1181
  Register 69 costs: AREG:424 DREG:424 CREG:424 BREG:424 SIREG:312 DIREG:424 AD_REGS:424 Q_REGS:424 NON_Q_REGS:424 INDEX_REGS:424 LEGACY_REGS:424 GENERAL_REGS:424 SSE_REGS:12605 MMX_REGS:12605 INT_SSE_REGS:12605 MEM:3638
  Register 70 costs: AREG:224 DREG:112 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:6022 MMX_REGS:6022 FP_TOP_SSE_REGS:6022 FP_SECOND_SSE_REGS:6022 FLOAT_SSE_REGS:6022 FLOAT_INT_REGS:4238 INT_SSE_REGS:6022 FLOAT_INT_SSE_REGS:6022 ALL_REGS:6022 MEM:1674
  Register 71 costs: AREG:1665 DREG:1665 CREG:1665 BREG:1665 SIREG:1665 DIREG:1665 AD_REGS:1665 Q_REGS:1665 NON_Q_REGS:3569 INDEX_REGS:1665 LEGACY_REGS:3569 GENERAL_REGS:3569 FP_TOP_REG:2553 FP_SECOND_REG:2553 FLOAT_REGS:2553 SSE_REGS:222 FP_TOP_SSE_REGS:2553 FP_SECOND_SSE_REGS:2553 FLOAT_SSE_REGS:2553 FLOAT_INT_REGS:2553 INT_SSE_REGS:1665 FLOAT_INT_SSE_REGS:2553 ALL_REGS:4905 MEM:1447
  Register 72 costs: AREG:224 DREG:224 CREG:224 BREG:224 SIREG:224 DIREG:224 AD_REGS:224 Q_REGS:224 NON_Q_REGS:224 INDEX_REGS:224 LEGACY_REGS:224 GENERAL_REGS:224 SSE_REGS:3136 MMX_REGS:3136 INT_SSE_REGS:3136 MEM:896
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 MEM:784
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2912 MMX_REGS:2912 FP_TOP_SSE_REGS:2912 FP_SECOND_SSE_REGS:2912 FLOAT_SSE_REGS:2912 FLOAT_INT_REGS:2016 INT_SSE_REGS:2912 FLOAT_INT_SSE_REGS:2912 ALL_REGS:2912 MEM:672
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 79 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:8600 INDEX_REGS:5200 LEGACY_REGS:8600 GENERAL_REGS:8600 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:12600 MEM:4000
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 84 costs: SSE_REGS:0 FP_TOP_SSE_REGS:27846 FP_SECOND_SSE_REGS:27846 FLOAT_SSE_REGS:27846 INT_SSE_REGS:58606 FLOAT_INT_SSE_REGS:58606 ALL_REGS:58606 MEM:11566
  Register 89 costs: AREG:200 DREG:200 CREG:200 BREG:200 SIREG:200 DIREG:200 AD_REGS:200 Q_REGS:200 NON_Q_REGS:200 INDEX_REGS:200 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2800 MMX_REGS:2800 FP_TOP_SSE_REGS:2800 FP_SECOND_SSE_REGS:2800 FLOAT_SSE_REGS:2800 FLOAT_INT_REGS:2000 INT_SSE_REGS:2800 FLOAT_INT_SSE_REGS:2800 ALL_REGS:2800 MEM:800
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2435
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2696 INDEX_REGS:0 LEGACY_REGS:2696 GENERAL_REGS:2696 MEM:10762
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 98 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 104 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 110 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 116 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 122 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 128 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 134 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 140 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 143 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:707
  Register 144 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 148 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 152 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 156 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 160 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 164 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 168 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 171 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:630

172 registers.

Register 59 used 6 times across 115 insns; set 1 time; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 60 used 5 times across 34 insns; set 1 time; GENERAL_REGS or none.

Register 62 used 2 times across 4 insns in block 3; set 1 time; user var; crosses 1 call; SSE_REGS or none.

Register 63 used 17 times across 116 insns; set 1 time; user var; dies in 0 places; SSE_REGS or none.

Register 65 used 3 times across 129 insns; set 1 time; user var; crosses 2 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 66 used 20 times across 128 insns; set 1 time; crosses 2 calls; pref AREG, else GENERAL_REGS; pointer.

Register 68 used 3 times across 23 insns; set 1 time; user var; crosses 2 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 69 used 9 times across 132 insns; set 1 time; user var; dies in 0 places; crosses 2 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 70 used 4 times across 17 insns; set 1 time; user var; crosses 2 calls; 4 bytes; pref DREG, else GENERAL_REGS.

Register 71 used 2 times across 137 insns; set 1 time; user var; crosses 4 calls; SSE_REGS or none.

Register 72 used 2 times across 2 insns in block 0; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 73 used 2 times across 2 insns in block 0; set 1 time; GENERAL_REGS or none.

Register 74 used 2 times across 2 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 76 used 2 times across 2 insns in block 4; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 79 used 6 times across 6 insns in block 4; set 3 times; SSE_REGS or none.

Register 82 used 2 times across 2 insns in block 4; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 84 used 17 times across 220 insns; set 1 time; dies in 0 places; 16 bytes; SSE_REGS or none.

Register 89 used 2 times across 2 insns in block 4; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 93 used 10 times across 25 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 96 used 32 times across 210 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 97 used 30 times across 103 insns; set 9 times; dies in 0 places; GENERAL_REGS or none.

Register 98 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 104 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 110 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 116 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 122 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 128 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 134 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 140 used 6 times across 6 insns in block 19; set 3 times; SSE_REGS or none.

Register 143 used 2 times across 2 insns in block 19; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 144 used 6 times across 6 insns in block 12; set 3 times; SSE_REGS or none.

Register 148 used 6 times across 6 insns in block 13; set 3 times; SSE_REGS or none.

Register 152 used 6 times across 6 insns in block 14; set 3 times; SSE_REGS or none.

Register 156 used 6 times across 6 insns in block 15; set 3 times; SSE_REGS or none.

Register 160 used 6 times across 6 insns in block 16; set 3 times; SSE_REGS or none.

Register 164 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

Register 168 used 6 times across 6 insns in block 18; set 3 times; SSE_REGS or none.

Register 171 used 2 times across 2 insns in block 18; set 1 time; 4 bytes; GENERAL_REGS or none.

21 basic blocks, 33 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1122, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [99.0%]  1 [1.0%]  (fallthru)
Registers live at start: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 68 69 70 71

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  0 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  0 [99.0%] 
Successors:  3 [10.0%]  (fallthru) 4 [90.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 68 69 70 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 68 69 71

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  18 [10.0%]  19 [10.0%]  (loop_exit) 4 [10.0%]  2 [10.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  2 [90.0%] 
Successors:  5 [90.0%]  (fallthru,dfs_back) 3 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 68 69 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  4 [90.0%]  (fallthru,dfs_back)
Successors:  6 [87.5%]  (fallthru) 19 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
Invalid sum of incoming frequencies 900, should be 771

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  5 [87.5%]  (fallthru)
Successors:  7 [85.7%]  (fallthru) 18 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  6 [85.7%]  (fallthru)
Successors:  8 [83.3%]  (fallthru) 17 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  7 [83.3%]  (fallthru)
Successors:  9 [80.0%]  (fallthru) 16 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  8 [80.0%]  (fallthru)
Successors:  10 [75.0%]  (fallthru) 15 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  9 [75.0%]  (fallthru)
Successors:  11 [66.7%]  (fallthru) 14 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  10 [66.7%]  (fallthru)
Successors:  12 [50.0%]  (fallthru) 13 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 96 97
Invalid sum of incoming frequencies 300, should be 900

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Invalid sum of incoming frequencies 450, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 11 [50.0%] 
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Invalid sum of incoming frequencies 1350, should be 900

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 10 [33.3%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Invalid sum of incoming frequencies 1050, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 9 [25.0%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Invalid sum of incoming frequencies 1050, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 8 [20.0%] 
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Invalid sum of incoming frequencies 1035, should be 900

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 7 [16.7%] 
Successors:  18 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Invalid sum of incoming frequencies 1020, should be 900

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 6 [14.3%] 
Successors:  19 [90.0%]  (fallthru,dfs_back) 3 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Invalid sum of incoming frequencies 1007, should be 900

Basic block 19 prev 18, next 20, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  18 [90.0%]  (fallthru,dfs_back) 20 [100.0%]  5 [12.5%] 
Successors:  20 [90.0%]  (fallthru,dfs_back) 3 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 20 prev 19, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  19 [90.0%]  (fallthru,dfs_back)
Successors:  19 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97

;; Register 72 in 0.
;; Register 73 in 5.
;; Register 74 in 5.
;; Register 76 in 0.
;; Register 79 in 21.
;; Register 82 in 0.
;; Register 89 in 0.
;; Register 98 in 21.
;; Register 104 in 21.
;; Register 110 in 21.
;; Register 116 in 21.
;; Register 122 in 21.
;; Register 128 in 21.
;; Register 134 in 21.
;; Register 140 in 21.
;; Register 143 in 0.
;; Register 144 in 21.
;; Register 148 in 21.
;; Register 152 in 21.
;; Register 156 in 21.
;; Register 160 in 21.
;; Register 164 in 21.
;; Register 168 in 21.
;; Register 171 in 0.
(note:HI 1 0 10 ("./CppStatUtilities.cc") 171)

;; Start of basic block 0, registers live: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
(note:HI 10 1 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 4 10 5 0 ./CppStatUtilities.cc:171 (set (reg/v/f:DI 68 [ a ])
        (reg:DI 5 di [ a ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:171 (set (reg/v:SI 69 [ start ])
        (reg:SI 4 si [ start ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ start ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:171 (set (reg/v:SI 70 [ end ])
        (reg:SI 1 dx [ end ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 1 dx [ end ])
        (nil)))

(insn:HI 7 6 8 0 ./CppStatUtilities.cc:171 (set (reg/v:DF 71 [ constant ])
        (reg:DF 21 xmm0 [ constant ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ constant ])
        (nil)))

(note:HI 8 7 12 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 12 8 13 0 ("./CppStatUtilities.cc") 173)

(insn:HI 13 12 14 0 ./CppStatUtilities.cc:173 (parallel [
            (set (reg:SI 72)
                (minus:SI (reg/v:SI 70 [ end ])
                    (reg/v:SI 69 [ start ])))
            (clobber (reg:CC 17 flags))
        ]) 242 {*subsi_1} (insn_list:REG_DEP_TRUE 5 (insn_list:REG_DEP_TRUE 6 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 14 13 15 0 ./CppStatUtilities.cc:173 (parallel [
            (set (reg/v:SI 65 [ len ])
                (plus:SI (reg:SI 72)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 72)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 15 14 16 0 ("./CppStatUtilities.cc") 174)

(insn:HI 16 15 17 0 ./CppStatUtilities.cc:174 (set (reg:DI 73 [ len ])
        (sign_extend:DI (reg/v:SI 65 [ len ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 14 (nil))
    (nil))

(insn:HI 17 16 18 0 ./CppStatUtilities.cc:174 (parallel [
            (set (reg:DI 74)
                (ashift:DI (reg:DI 73 [ len ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 16 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 73 [ len ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 18 17 19 0 ./CppStatUtilities.cc:174 (set (reg:DI 5 di)
        (reg:DI 74)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 17 (nil))
    (expr_list:REG_DEAD (reg:DI 74)
        (nil)))

(call_insn:HI 19 18 20 0 ./CppStatUtilities.cc:174 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 20 19 22 0 ./CppStatUtilities.cc:174 (set (reg/f:DI 66 [ D.34623 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 19 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 75)
            (nil))))

(note:HI 22 20 23 0 ("./CppStatUtilities.cc") 175)

(insn:HI 23 22 24 0 ./CppStatUtilities.cc:175 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 66 [ D.34623 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 20 (nil))
    (nil))

(jump_insn:HI 24 23 26 0 ./CppStatUtilities.cc:175 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 23 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 68 69 70 71

;; Start of basic block 1, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 26 24 27 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 27 26 28 1 ./CppStatUtilities.cc:175 (set (reg:SI 2 cx)
        (const_int 175 [0xaf])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 28 27 29 1 ./CppStatUtilities.cc:175 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 29 28 30 1 ./CppStatUtilities.cc:175 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 30 29 31 1 ./CppStatUtilities.cc:175 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 31 30 32 1 ./CppStatUtilities.cc:175 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 32 31 33 1 ./CppStatUtilities.cc:175 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 27 (insn_list:REG_DEP_TRUE 28 (insn_list:REG_DEP_TRUE 29 (insn_list:REG_DEP_TRUE 30 (insn_list:REG_DEP_TRUE 31 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 33 32 34 1 ./CppStatUtilities.cc:175 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 34 33 35 1 ./CppStatUtilities.cc:175 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 1, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 35 34 36)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 68 69 70 71
(code_label:HI 36 35 37 2 989 "" [1 uses])

(note:HI 37 36 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 38 37 40 2 ("./CppStatUtilities.cc") 174)

(note:HI 40 38 41 2 ("./CppStatUtilities.cc") 177)

(insn:HI 41 40 42 2 ./CppStatUtilities.cc:177 (set (reg:SI 1 dx [ end ])
        (reg/v:SI 70 [ end ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 42 41 43 2 ./CppStatUtilities.cc:177 (set (reg:SI 4 si [ start ])
        (reg/v:SI 69 [ start ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 43 42 44 2 ./CppStatUtilities.cc:177 (set (reg:DI 5 di [ a ])
        (reg/v/f:DI 68 [ a ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 44 43 45 2 ./CppStatUtilities.cc:177 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("_Z6medianPdii") [flags 0x3] <function_decl 0x2b5eb6361e00 median>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 41 (insn_list:REG_DEP_TRUE 42 (insn_list:REG_DEP_TRUE 43 (nil))))
    (expr_list:REG_DEAD (reg:SI 1 dx [ end ])
        (expr_list:REG_DEAD (reg:SI 4 si [ start ])
            (expr_list:REG_DEAD (reg:DI 5 di [ a ])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ a ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ start ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx [ end ]))
                (nil)))))

(insn:HI 45 44 46 2 ./CppStatUtilities.cc:177 (set (reg/v:DF 63 [ med ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 44 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 46 45 47 2 ("./CppStatUtilities.cc") 180)

(insn:HI 47 46 48 2 ./CppStatUtilities.cc:180 (parallel [
            (set (reg/v:SI 59 [ end.1080 ])
                (plus:SI (reg/v:SI 70 [ end ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 70 [ end ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 48 47 49 2 ("./CppStatUtilities.cc") 181)

(insn:HI 49 48 50 2 ./CppStatUtilities.cc:181 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 69 [ start ])
            (reg/v:SI 59 [ end.1080 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 47 (nil))
    (nil))

(jump_insn:HI 50 49 98 2 ./CppStatUtilities.cc:181 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 454)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 49 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 68 69 71

(note:HI 98 50 99 NOTE_INSN_LOOP_BEG)

(note:HI 99 98 71 NOTE_INSN_LOOP_END)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66 71
(code_label:HI 71 99 72 3 991 "" [3 uses])

(note:HI 72 71 73 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 73 72 74 3 ("./CppStatUtilities.cc") 184)

(insn:HI 74 73 75 3 ./CppStatUtilities.cc:184 (set (reg:SI 4 si [ len ])
        (reg/v:SI 65 [ len ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 65 [ len ])
        (nil)))

(insn:HI 75 74 76 3 ./CppStatUtilities.cc:184 (set (reg:DI 5 di [ res ])
        (reg/f:DI 66 [ D.34623 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 76 75 77 3 ./CppStatUtilities.cc:184 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x41] <function_decl 0x2b5eb631e600 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 74 (insn_list:REG_DEP_TRUE 75 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ len ])
        (expr_list:REG_DEAD (reg:DI 5 di [ res ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ len ]))
            (nil))))

(insn:HI 77 76 78 3 ./CppStatUtilities.cc:184 (set (reg/v:DF 62 [ mad ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 76 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 78 77 79 3 ("./CppStatUtilities.cc") 186)

(insn:HI 79 78 80 3 ./CppStatUtilities.cc:186 (set (reg:DI 5 di [ res ])
        (reg/f:DI 66 [ D.34623 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 66 [ D.34623 ])
        (nil)))

(call_insn:HI 80 79 81 3 ./CppStatUtilities.cc:186 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 79 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ res ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (nil)))

(note:HI 81 80 85 3 NOTE_INSN_DELETED)

(note:HI 85 81 86 3 NOTE_INSN_FUNCTION_END)

(note:HI 86 85 88 3 ("./CppStatUtilities.cc") 189)

(insn:HI 88 86 94 3 ./CppStatUtilities.cc:189 (set (reg/i:DF 21 xmm0 [ <result> ])
        (mult:DF (reg/v:DF 62 [ mad ])
            (reg/v:DF 71 [ constant ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 77 (nil))
    (expr_list:REG_DEAD (reg/v:DF 71 [ constant ])
        (expr_list:REG_DEAD (reg/v:DF 62 [ mad ])
            (nil))))

(insn:HI 94 88 454 3 ./CppStatUtilities.cc:189 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 88 (nil))
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 68 69 71
(code_label:HI 454 94 52 4 1021 "" [1 uses])

(note:HI 52 454 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 53 52 54 4 ./CppStatUtilities.cc:181 (set (reg:DI 76 [ start ])
        (sign_extend:DI (reg/v:SI 69 [ start ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(note:HI 54 53 55 4 NOTE_INSN_DELETED)

(insn:HI 55 54 101 4 ./CppStatUtilities.cc:181 (set (reg:DI 60 [ ivtmp.1077 ])
        (plus:DI (mult:DI (reg:DI 76 [ start ])
                (const_int 8 [0x8]))
            (reg/v/f:DI 68 [ a ]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 53 (nil))
    (expr_list:REG_DEAD (reg:DI 76 [ start ])
        (expr_list:REG_DEAD (reg/v/f:DI 68 [ a ])
            (nil))))

(insn:HI 101 55 109 4 (set (reg:V2DF 84)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC33") [flags 0x2]) [3 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(note:HI 109 101 110 4 NOTE_INSN_DELETED)

(insn:HI 110 109 111 4 (set (reg:SI 89)
        (not:SI (reg/v:SI 69 [ start ]))) 398 {*one_cmplsi2_1} (nil)
    (nil))

(note:HI 111 110 112 4 NOTE_INSN_DELETED)

(note:HI 112 111 114 4 NOTE_INSN_DELETED)

(insn:HI 114 112 115 4 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg:SI 89)
                    (reg/v:SI 59 [ end.1080 ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 110 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_DEAD (reg:SI 89)
                (nil)))))

(insn:HI 115 114 118 4 (parallel [
            (set (reg:SI 93)
                (and:SI (reg:SI 93)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 114 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 118 115 119 4 ("./CppStatUtilities.cc") 182)

(insn:HI 119 118 120 4 ./CppStatUtilities.cc:182 (set (reg:DF 79)
        (mem:DF (reg:DI 60 [ ivtmp.1077 ]) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 55 (nil))
    (nil))

(insn:HI 120 119 121 4 ./CppStatUtilities.cc:182 (set (reg:DF 79)
        (minus:DF (reg:DF 79)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 119 (nil))
    (nil))

(insn:HI 121 120 122 4 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 79)
                (abs:DF (reg:DF 79)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 101 (insn_list:REG_DEP_TRUE 120 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 122 121 123 4 ./CppStatUtilities.cc:182 (set (mem:DF (reg/f:DI 66 [ D.34623 ]) [3 S8 A64])
        (reg:DF 79)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 121 (nil))
    (expr_list:REG_DEAD (reg:DF 79)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 78))
            (nil))))

(insn:HI 123 122 124 4 ./CppStatUtilities.cc:182 (set (reg:DI 96 [ ivtmp.1074 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 124 123 125 4 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 97 [ ivtmp.1077 ])
                (plus:DI (reg:DI 60 [ ivtmp.1077 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 125 124 126 4 ("./CppStatUtilities.cc") 181)

(insn:HI 126 125 127 4 ./CppStatUtilities.cc:181 (parallel [
            (set (reg:SI 82)
                (plus:SI (reg/v:SI 69 [ start ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 127 126 128 4 ./CppStatUtilities.cc:181 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 59 [ end.1080 ])
            (reg:SI 82))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 126 (nil))
    (expr_list:REG_DEAD (reg:SI 82)
        (nil)))

(jump_insn:HI 128 127 296 4 ./CppStatUtilities.cc:181 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 127 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
(note:HI 296 128 294 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 294 296 295 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 295 294 273 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 57)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 294 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
(note:HI 273 295 271 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 271 273 272 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 272 271 250 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 457)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 271 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
(note:HI 250 272 248 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 248 250 249 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 249 248 227 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 458)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 248 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
(note:HI 227 249 225 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 225 227 226 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 226 225 204 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 459)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 225 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
(note:HI 204 226 202 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 202 204 203 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 203 202 181 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 460)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 202 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
(note:HI 181 203 179 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 179 181 180 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 180 179 158 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 461)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 179 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 93 96 97
(note:HI 158 180 156 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 156 158 157 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 93)
        (nil)))

(jump_insn:HI 157 156 148 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 462)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 156 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84 96 97

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 63 65 66 69 71 84
(note:HI 148 157 137 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 137 148 138 12 ("./CppStatUtilities.cc") 182)

(insn:HI 138 137 139 12 ./CppStatUtilities.cc:182 (set (reg:DF 144)
        (mem:DF (plus:DI (reg:DI 60 [ ivtmp.1077 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 139 138 140 12 ./CppStatUtilities.cc:182 (set (reg:DF 144)
        (minus:DF (reg:DF 144)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 138 (nil))
    (nil))

(insn:HI 140 139 141 12 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 144)
                (abs:DF (reg:DF 144)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 139 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 141 140 142 12 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (reg/f:DI 66 [ D.34623 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 144)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 140 (nil))
    (expr_list:REG_DEAD (reg:DF 144)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 145))
            (nil))))

(insn:HI 142 141 143 12 ./CppStatUtilities.cc:182 (set (reg:DI 96 [ ivtmp.1074 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 143 142 144 12 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 97 [ ivtmp.1077 ])
                (plus:DI (reg:DI 60 [ ivtmp.1077 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 60 [ ivtmp.1077 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 144 143 462 12 ("./CppStatUtilities.cc") 181)
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
(code_label:HI 462 144 171 13 1027 "" [1 uses])

(note:HI 171 462 160 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 160 171 161 13 ("./CppStatUtilities.cc") 182)

(insn:HI 161 160 162 13 ./CppStatUtilities.cc:182 (set (reg:DF 148)
        (mem:DF (reg:DI 97 [ ivtmp.1077 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 162 161 163 13 ./CppStatUtilities.cc:182 (set (reg:DF 148)
        (minus:DF (reg:DF 148)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 161 (nil))
    (nil))

(insn:HI 163 162 164 13 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 148)
                (abs:DF (reg:DF 148)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 162 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 164 163 165 13 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34623 ])) [3 S8 A64])
        (reg:DF 148)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 163 (nil))
    (expr_list:REG_DEAD (reg:DF 148)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 149))
            (nil))))

(insn:HI 165 164 166 13 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 96 [ ivtmp.1074 ])
                (plus:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 166 165 167 13 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 97 [ ivtmp.1077 ])
                (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 167 166 461 13 ("./CppStatUtilities.cc") 181)
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
(code_label:HI 461 167 194 14 1026 "" [1 uses])

(note:HI 194 461 183 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 183 194 184 14 ("./CppStatUtilities.cc") 182)

(insn:HI 184 183 185 14 ./CppStatUtilities.cc:182 (set (reg:DF 152)
        (mem:DF (reg:DI 97 [ ivtmp.1077 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 185 184 186 14 ./CppStatUtilities.cc:182 (set (reg:DF 152)
        (minus:DF (reg:DF 152)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 184 (nil))
    (nil))

(insn:HI 186 185 187 14 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 152)
                (abs:DF (reg:DF 152)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 185 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 187 186 188 14 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34623 ])) [3 S8 A64])
        (reg:DF 152)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 186 (nil))
    (expr_list:REG_DEAD (reg:DF 152)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 153))
            (nil))))

(insn:HI 188 187 189 14 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 96 [ ivtmp.1074 ])
                (plus:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 189 188 190 14 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 97 [ ivtmp.1077 ])
                (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 190 189 460 14 ("./CppStatUtilities.cc") 181)
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
(code_label:HI 460 190 217 15 1025 "" [1 uses])

(note:HI 217 460 206 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 206 217 207 15 ("./CppStatUtilities.cc") 182)

(insn:HI 207 206 208 15 ./CppStatUtilities.cc:182 (set (reg:DF 156)
        (mem:DF (reg:DI 97 [ ivtmp.1077 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 208 207 209 15 ./CppStatUtilities.cc:182 (set (reg:DF 156)
        (minus:DF (reg:DF 156)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 207 (nil))
    (nil))

(insn:HI 209 208 210 15 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 156)
                (abs:DF (reg:DF 156)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 208 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 210 209 211 15 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34623 ])) [3 S8 A64])
        (reg:DF 156)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 209 (nil))
    (expr_list:REG_DEAD (reg:DF 156)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 157))
            (nil))))

(insn:HI 211 210 212 15 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 96 [ ivtmp.1074 ])
                (plus:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 212 211 213 15 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 97 [ ivtmp.1077 ])
                (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 213 212 459 15 ("./CppStatUtilities.cc") 181)
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
(code_label:HI 459 213 240 16 1024 "" [1 uses])

(note:HI 240 459 229 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 229 240 230 16 ("./CppStatUtilities.cc") 182)

(insn:HI 230 229 231 16 ./CppStatUtilities.cc:182 (set (reg:DF 160)
        (mem:DF (reg:DI 97 [ ivtmp.1077 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 231 230 232 16 ./CppStatUtilities.cc:182 (set (reg:DF 160)
        (minus:DF (reg:DF 160)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 230 (nil))
    (nil))

(insn:HI 232 231 233 16 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 160)
                (abs:DF (reg:DF 160)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 231 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 233 232 234 16 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34623 ])) [3 S8 A64])
        (reg:DF 160)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 232 (nil))
    (expr_list:REG_DEAD (reg:DF 160)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 161))
            (nil))))

(insn:HI 234 233 235 16 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 96 [ ivtmp.1074 ])
                (plus:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 235 234 236 16 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 97 [ ivtmp.1077 ])
                (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 236 235 458 16 ("./CppStatUtilities.cc") 181)
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
(code_label:HI 458 236 263 17 1023 "" [1 uses])

(note:HI 263 458 252 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 252 263 253 17 ("./CppStatUtilities.cc") 182)

(insn:HI 253 252 254 17 ./CppStatUtilities.cc:182 (set (reg:DF 164)
        (mem:DF (reg:DI 97 [ ivtmp.1077 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 254 253 255 17 ./CppStatUtilities.cc:182 (set (reg:DF 164)
        (minus:DF (reg:DF 164)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 253 (nil))
    (nil))

(insn:HI 255 254 256 17 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 164)
                (abs:DF (reg:DF 164)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 254 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 256 255 257 17 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34623 ])) [3 S8 A64])
        (reg:DF 164)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 255 (nil))
    (expr_list:REG_DEAD (reg:DF 164)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 165))
            (nil))))

(insn:HI 257 256 258 17 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 96 [ ivtmp.1074 ])
                (plus:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 258 257 259 17 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 97 [ ivtmp.1077 ])
                (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 259 258 457 17 ("./CppStatUtilities.cc") 181)
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
(code_label:HI 457 259 286 18 1022 "" [1 uses])

(note:HI 286 457 275 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 275 286 276 18 ("./CppStatUtilities.cc") 182)

(insn:HI 276 275 277 18 ./CppStatUtilities.cc:182 (set (reg:DF 168)
        (mem:DF (reg:DI 97 [ ivtmp.1077 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 277 276 278 18 ./CppStatUtilities.cc:182 (set (reg:DF 168)
        (minus:DF (reg:DF 168)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 276 (nil))
    (nil))

(insn:HI 278 277 279 18 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 168)
                (abs:DF (reg:DF 168)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 277 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 279 278 280 18 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34623 ])) [3 S8 A64])
        (reg:DF 168)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 278 (nil))
    (expr_list:REG_DEAD (reg:DF 168)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 169))
            (nil))))

(insn:HI 280 279 281 18 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 96 [ ivtmp.1074 ])
                (plus:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 281 280 282 18 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 97 [ ivtmp.1077 ])
                (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 282 281 283 18 ("./CppStatUtilities.cc") 181)

(insn:HI 283 282 284 18 ./CppStatUtilities.cc:181 (parallel [
            (set (reg:SI 171)
                (plus:SI (reg/v:SI 69 [ start ])
                    (subreg:SI (reg:DI 96 [ ivtmp.1074 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 280 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 284 283 285 18 ./CppStatUtilities.cc:181 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 59 [ end.1080 ])
            (reg:SI 171))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 283 (nil))
    (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(jump_insn:HI 285 284 57 18 ./CppStatUtilities.cc:181 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 284 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
(code_label:HI 57 285 58 19 993 "" [2 uses])

(note:HI 58 57 59 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 59 58 60 19 ("./CppStatUtilities.cc") 182)

(insn:HI 60 59 61 19 ./CppStatUtilities.cc:182 (set (reg:DF 98)
        (mem:DF (reg:DI 97 [ ivtmp.1077 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 61 60 63 19 ./CppStatUtilities.cc:182 (set (reg:DF 98)
        (minus:DF (reg:DF 98)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 60 (nil))
    (nil))

(insn:HI 63 61 64 19 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 98)
                (abs:DF (reg:DF 98)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 61 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 64 63 423 19 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 66 [ D.34623 ])) [3 S8 A64])
        (reg:DF 98)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 63 (nil))
    (expr_list:REG_DEAD (reg:DF 98)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 99))
            (nil))))

(note:HI 423 64 67 19 NOTE_INSN_DELETED)

(note:HI 67 423 298 19 ("./CppStatUtilities.cc") 181)

(note:HI 298 67 299 19 ("./CppStatUtilities.cc") 182)

(insn:HI 299 298 300 19 ./CppStatUtilities.cc:182 (set (reg:DF 104)
        (mem:DF (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 300 299 301 19 ./CppStatUtilities.cc:182 (set (reg:DF 104)
        (minus:DF (reg:DF 104)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 299 (nil))
    (nil))

(insn:HI 301 300 302 19 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 104)
                (abs:DF (reg:DF 104)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 300 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 302 301 303 19 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34623 ]))
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 104)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 301 (nil))
    (expr_list:REG_DEAD (reg:DF 104)
        (nil)))

(note:HI 303 302 305 19 NOTE_INSN_DELETED)

(note:HI 305 303 316 19 ("./CppStatUtilities.cc") 181)

(note:HI 316 305 317 19 ("./CppStatUtilities.cc") 182)

(insn:HI 317 316 318 19 ./CppStatUtilities.cc:182 (set (reg:DF 110)
        (mem:DF (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                (const_int 16 [0x10])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 318 317 319 19 ./CppStatUtilities.cc:182 (set (reg:DF 110)
        (minus:DF (reg:DF 110)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 317 (nil))
    (nil))

(insn:HI 319 318 320 19 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 110)
                (abs:DF (reg:DF 110)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 318 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 320 319 321 19 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34623 ]))
                (const_int 16 [0x10])) [3 S8 A64])
        (reg:DF 110)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 319 (nil))
    (expr_list:REG_DEAD (reg:DF 110)
        (nil)))

(note:HI 321 320 323 19 NOTE_INSN_DELETED)

(note:HI 323 321 334 19 ("./CppStatUtilities.cc") 181)

(note:HI 334 323 335 19 ("./CppStatUtilities.cc") 182)

(insn:HI 335 334 336 19 ./CppStatUtilities.cc:182 (set (reg:DF 116)
        (mem:DF (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 336 335 337 19 ./CppStatUtilities.cc:182 (set (reg:DF 116)
        (minus:DF (reg:DF 116)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 335 (nil))
    (nil))

(insn:HI 337 336 338 19 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 116)
                (abs:DF (reg:DF 116)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 336 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 338 337 339 19 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34623 ]))
                (const_int 24 [0x18])) [3 S8 A64])
        (reg:DF 116)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 337 (nil))
    (expr_list:REG_DEAD (reg:DF 116)
        (nil)))

(note:HI 339 338 341 19 NOTE_INSN_DELETED)

(note:HI 341 339 352 19 ("./CppStatUtilities.cc") 181)

(note:HI 352 341 353 19 ("./CppStatUtilities.cc") 182)

(insn:HI 353 352 354 19 ./CppStatUtilities.cc:182 (set (reg:DF 122)
        (mem:DF (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                (const_int 32 [0x20])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 354 353 355 19 ./CppStatUtilities.cc:182 (set (reg:DF 122)
        (minus:DF (reg:DF 122)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 353 (nil))
    (nil))

(insn:HI 355 354 356 19 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 122)
                (abs:DF (reg:DF 122)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 354 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 356 355 357 19 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34623 ]))
                (const_int 32 [0x20])) [3 S8 A64])
        (reg:DF 122)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 355 (nil))
    (expr_list:REG_DEAD (reg:DF 122)
        (nil)))

(note:HI 357 356 359 19 NOTE_INSN_DELETED)

(note:HI 359 357 370 19 ("./CppStatUtilities.cc") 181)

(note:HI 370 359 371 19 ("./CppStatUtilities.cc") 182)

(insn:HI 371 370 372 19 ./CppStatUtilities.cc:182 (set (reg:DF 128)
        (mem:DF (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                (const_int 40 [0x28])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 372 371 373 19 ./CppStatUtilities.cc:182 (set (reg:DF 128)
        (minus:DF (reg:DF 128)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 371 (nil))
    (nil))

(insn:HI 373 372 374 19 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 128)
                (abs:DF (reg:DF 128)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 372 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 374 373 375 19 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34623 ]))
                (const_int 40 [0x28])) [3 S8 A64])
        (reg:DF 128)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 373 (nil))
    (expr_list:REG_DEAD (reg:DF 128)
        (nil)))

(note:HI 375 374 377 19 NOTE_INSN_DELETED)

(note:HI 377 375 388 19 ("./CppStatUtilities.cc") 181)

(note:HI 388 377 389 19 ("./CppStatUtilities.cc") 182)

(insn:HI 389 388 390 19 ./CppStatUtilities.cc:182 (set (reg:DF 134)
        (mem:DF (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                (const_int 48 [0x30])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 390 389 391 19 ./CppStatUtilities.cc:182 (set (reg:DF 134)
        (minus:DF (reg:DF 134)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 389 (nil))
    (nil))

(insn:HI 391 390 392 19 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 134)
                (abs:DF (reg:DF 134)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 390 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 392 391 393 19 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34623 ]))
                (const_int 48 [0x30])) [3 S8 A64])
        (reg:DF 134)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 391 (nil))
    (expr_list:REG_DEAD (reg:DF 134)
        (nil)))

(note:HI 393 392 395 19 NOTE_INSN_DELETED)

(note:HI 395 393 406 19 ("./CppStatUtilities.cc") 181)

(note:HI 406 395 407 19 ("./CppStatUtilities.cc") 182)

(insn:HI 407 406 408 19 ./CppStatUtilities.cc:182 (set (reg:DF 140)
        (mem:DF (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                (const_int 56 [0x38])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 408 407 409 19 ./CppStatUtilities.cc:182 (set (reg:DF 140)
        (minus:DF (reg:DF 140)
            (reg/v:DF 63 [ med ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 407 (nil))
    (nil))

(insn:HI 409 408 410 19 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DF 140)
                (abs:DF (reg:DF 140)))
            (use (reg:V2DF 84))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 408 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 410 409 411 19 ./CppStatUtilities.cc:182 (set (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 96 [ ivtmp.1074 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 66 [ D.34623 ]))
                (const_int 56 [0x38])) [3 S8 A64])
        (reg:DF 140)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 409 (nil))
    (expr_list:REG_DEAD (reg:DF 140)
        (nil)))

(insn:HI 411 410 412 19 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 96 [ ivtmp.1074 ])
                (plus:DI (reg:DI 96 [ ivtmp.1074 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 412 411 413 19 ./CppStatUtilities.cc:182 (parallel [
            (set (reg:DI 97 [ ivtmp.1077 ])
                (plus:DI (reg:DI 97 [ ivtmp.1077 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 413 412 414 19 ("./CppStatUtilities.cc") 181)

(insn:HI 414 413 415 19 ./CppStatUtilities.cc:181 (parallel [
            (set (reg:SI 143)
                (plus:SI (reg/v:SI 69 [ start ])
                    (subreg:SI (reg:DI 96 [ ivtmp.1074 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 411 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 415 414 416 19 ./CppStatUtilities.cc:181 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 59 [ end.1080 ])
            (reg:SI 143))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 414 (nil))
    (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn:HI 416 415 421 19 ./CppStatUtilities.cc:181 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 415 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97
(note:HI 421 416 451 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 451 421 452 20 (set (pc)
        (label_ref 57)) 548 {jump} (nil)
    (nil))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 65 66 69 71 84 96 97

(barrier:HI 452 451 0)


;; Function void summaryStats(double*, int, summaryStats_t&, int, double) (_Z12summaryStatsPdiR14summaryStats_tid)



Pass 0

  Register 59 costs: AREG:-28 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:668
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19045 MMX_REGS:19045 FP_TOP_SSE_REGS:19045 FP_SECOND_SSE_REGS:19045 FLOAT_SSE_REGS:19045 FLOAT_INT_REGS:13185 INT_SSE_REGS:19045 FLOAT_INT_SSE_REGS:19045 ALL_REGS:19045 MEM:5860
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-28 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5980 MMX_REGS:5980 FP_TOP_SSE_REGS:5980 FP_SECOND_SSE_REGS:5980 FLOAT_SSE_REGS:5980 FLOAT_INT_REGS:4140 INT_SSE_REGS:5980 FLOAT_INT_SSE_REGS:5980 ALL_REGS:5980 MEM:1787
  Register 73 costs: AREG:1430 DREG:1430 CREG:1430 BREG:1430 SIREG:1430 DIREG:1430 AD_REGS:1430 Q_REGS:1430 NON_Q_REGS:3317 INDEX_REGS:1430 LEGACY_REGS:3317 GENERAL_REGS:3317 FP_TOP_REG:2310 FP_SECOND_REG:2310 FLOAT_REGS:2310 SSE_REGS:0 FP_TOP_SSE_REGS:2310 FP_SECOND_SSE_REGS:2310 FLOAT_SSE_REGS:2310 FLOAT_INT_REGS:2310 INT_SSE_REGS:1430 FLOAT_INT_SSE_REGS:2310 ALL_REGS:4641 MEM:1324
  Register 74 costs: AREG:-110 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13663 MMX_REGS:13663 FP_TOP_SSE_REGS:13663 FP_SECOND_SSE_REGS:13663 FLOAT_SSE_REGS:13663 FLOAT_INT_REGS:9459 INT_SSE_REGS:13663 FLOAT_INT_SSE_REGS:13663 ALL_REGS:13663 MEM:4093
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-82 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9139 MMX_REGS:9139 INT_SSE_REGS:9139 MEM:2348
  Register 77 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-28 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1092 MMX_REGS:1092 FP_TOP_SSE_REGS:1092 FP_SECOND_SSE_REGS:1092 FLOAT_SSE_REGS:1092 FLOAT_INT_REGS:756 INT_SSE_REGS:1092 FLOAT_INT_SSE_REGS:1092 ALL_REGS:1092 MEM:252
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:27261 MMX_REGS:27261 FP_TOP_SSE_REGS:27261 FP_SECOND_SSE_REGS:27261 FLOAT_SSE_REGS:27261 FLOAT_INT_REGS:18873 INT_SSE_REGS:27261 FLOAT_INT_SSE_REGS:27261 ALL_REGS:27261 MEM:8215
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-112 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11609 MMX_REGS:11609 FP_TOP_SSE_REGS:11609 FP_SECOND_SSE_REGS:11609 FLOAT_SSE_REGS:11609 FLOAT_INT_REGS:8037 INT_SSE_REGS:11609 FLOAT_INT_SSE_REGS:11609 ALL_REGS:11609 MEM:3002
  Register 84 costs: AREG:0 DREG:-112 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11557 MMX_REGS:11557 FP_TOP_SSE_REGS:11557 FP_SECOND_SSE_REGS:11557 FLOAT_SSE_REGS:11557 FLOAT_INT_REGS:8001 INT_SSE_REGS:11557 FLOAT_INT_SSE_REGS:11557 ALL_REGS:11557 MEM:3556
  Register 85 costs: AREG:0 DREG:0 CREG:-112 BREG:0 SIREG:-28 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:12155 MMX_REGS:12155 INT_SSE_REGS:12155 MEM:2995
  Register 86 costs: AREG:1430 DREG:1430 CREG:1430 BREG:1430 SIREG:1430 DIREG:1430 AD_REGS:1430 Q_REGS:1430 NON_Q_REGS:3334 INDEX_REGS:1430 LEGACY_REGS:3334 GENERAL_REGS:3334 FP_TOP_REG:2310 FP_SECOND_REG:2310 FLOAT_REGS:2310 SSE_REGS:0 FP_TOP_SSE_REGS:2310 FP_SECOND_SSE_REGS:2310 FLOAT_SSE_REGS:2310 FLOAT_INT_REGS:2310 INT_SSE_REGS:1430 FLOAT_INT_SSE_REGS:2310 ALL_REGS:4662 MEM:1328
  Register 92 costs: AREG:0 DREG:-83 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2158 MMX_REGS:2158 FP_TOP_SSE_REGS:2158 FP_SECOND_SSE_REGS:2158 FLOAT_SSE_REGS:2158 FLOAT_INT_REGS:1494 INT_SSE_REGS:2158 FLOAT_INT_SSE_REGS:2158 ALL_REGS:2158 MEM:581
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2158 MMX_REGS:2158 FP_TOP_SSE_REGS:2158 FP_SECOND_SSE_REGS:2158 FLOAT_SSE_REGS:2158 FLOAT_INT_REGS:1494 INT_SSE_REGS:2158 FLOAT_INT_SSE_REGS:2158 ALL_REGS:2158 MEM:581
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-83 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2158 MMX_REGS:2158 FP_TOP_SSE_REGS:2158 FP_SECOND_SSE_REGS:2158 FLOAT_SSE_REGS:2158 FLOAT_INT_REGS:1494 INT_SSE_REGS:2158 FLOAT_INT_SSE_REGS:2158 ALL_REGS:2158 MEM:498
  Register 95 costs: AREG:-83 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-82 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19149 MMX_REGS:19149 FP_TOP_SSE_REGS:19149 FP_SECOND_SSE_REGS:19149 FLOAT_SSE_REGS:19149 FLOAT_INT_REGS:13257 INT_SSE_REGS:19149 FLOAT_INT_SSE_REGS:19149 ALL_REGS:19149 MEM:5728
  Register 97 costs: AREG:3848 DREG:3848 CREG:3848 BREG:3848 SIREG:3848 DIREG:3848 AD_REGS:3848 Q_REGS:3848 NON_Q_REGS:6364 INDEX_REGS:3848 LEGACY_REGS:6364 GENERAL_REGS:6364 FP_TOP_REG:6216 FP_SECOND_REG:6216 FLOAT_REGS:6216 SSE_REGS:0 FP_TOP_SSE_REGS:6216 FP_SECOND_SSE_REGS:6216 FLOAT_SSE_REGS:6216 FLOAT_INT_REGS:6216 INT_SSE_REGS:3848 FLOAT_INT_SSE_REGS:6216 ALL_REGS:9324 MEM:2960
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:196
  Register 102 costs: AREG:-28 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-28 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6383 MMX_REGS:6383 FP_TOP_SSE_REGS:6383 FP_SECOND_SSE_REGS:6383 FLOAT_SSE_REGS:6383 FLOAT_INT_REGS:4419 INT_SSE_REGS:6383 FLOAT_INT_SSE_REGS:6383 ALL_REGS:6383 MEM:1908
  Register 104 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 105 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 106 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 108 costs: AREG:0 DREG:-25 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:175
  Register 110 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 113 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 114 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 115 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 118 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:2886 INDEX_REGS:2886 LEGACY_REGS:2886 GENERAL_REGS:2886 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:4662 MEM:1665
  Register 125 costs: AREG:0 DREG:-2 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:52 MMX_REGS:52 FP_TOP_SSE_REGS:52 FP_SECOND_SSE_REGS:52 FLOAT_SSE_REGS:52 FLOAT_INT_REGS:36 INT_SSE_REGS:52 FLOAT_INT_SSE_REGS:52 ALL_REGS:52 MEM:14
  Register 126 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5295 INDEX_REGS:1300 LEGACY_REGS:5295 GENERAL_REGS:5295 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:7035 MEM:1729
  Register 127 costs: SSE_REGS:0 FP_TOP_SSE_REGS:20689 FP_SECOND_SSE_REGS:20689 FLOAT_SSE_REGS:20689 INT_SSE_REGS:43549 FLOAT_INT_SSE_REGS:43549 ALL_REGS:43549 MEM:8593
  Register 138 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 143 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7553 MMX_REGS:7553 FP_TOP_SSE_REGS:7553 FP_SECOND_SSE_REGS:7553 FLOAT_SSE_REGS:7553 FLOAT_INT_REGS:5229 INT_SSE_REGS:7553 FLOAT_INT_SSE_REGS:7553 ALL_REGS:7553 MEM:1874
  Register 144 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 148 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2548 MMX_REGS:2548 FP_TOP_SSE_REGS:2548 FP_SECOND_SSE_REGS:2548 FLOAT_SSE_REGS:2548 FLOAT_INT_REGS:1764 INT_SSE_REGS:2548 FLOAT_INT_SSE_REGS:2548 ALL_REGS:2548 MEM:632
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 153 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2548 MMX_REGS:2548 FP_TOP_SSE_REGS:2548 FP_SECOND_SSE_REGS:2548 FLOAT_SSE_REGS:2548 FLOAT_INT_REGS:1764 INT_SSE_REGS:2548 FLOAT_INT_SSE_REGS:2548 ALL_REGS:2548 MEM:632
  Register 156 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17043 MMX_REGS:17043 FP_TOP_SSE_REGS:17043 FP_SECOND_SSE_REGS:17043 FLOAT_SSE_REGS:17043 FLOAT_INT_REGS:11799 INT_SSE_REGS:17043 FLOAT_INT_SSE_REGS:17043 ALL_REGS:17043 MEM:4074
  Register 157 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1908 INDEX_REGS:0 LEGACY_REGS:1908 GENERAL_REGS:1908 SSE_REGS:33462 MMX_REGS:33462 FP_TOP_SSE_REGS:33462 FP_SECOND_SSE_REGS:33462 FLOAT_SSE_REGS:33462 FLOAT_INT_REGS:23166 INT_SSE_REGS:33462 FLOAT_INT_SSE_REGS:33462 ALL_REGS:33462 MEM:9342
  Register 158 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 163 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 167 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 168 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 172 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 173 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 177 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 178 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 182 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 183 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 187 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 188 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 192 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 193 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 196 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5629 MMX_REGS:5629 FP_TOP_SSE_REGS:5629 FP_SECOND_SSE_REGS:5629 FLOAT_SSE_REGS:5629 FLOAT_INT_REGS:3897 INT_SSE_REGS:5629 FLOAT_INT_SSE_REGS:5629 ALL_REGS:5629 MEM:1346
  Register 197 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 198 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 199 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 200 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 201 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9009 MMX_REGS:9009 FP_TOP_SSE_REGS:9009 FP_SECOND_SSE_REGS:9009 FLOAT_SSE_REGS:9009 FLOAT_INT_REGS:6237 INT_SSE_REGS:9009 FLOAT_INT_SSE_REGS:9009 ALL_REGS:9009 MEM:2436
  Register 203 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 204 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 205 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 206 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 209 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 210 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 211 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 212 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 215 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 216 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 217 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 218 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 221 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 222 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 223 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 224 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 227 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 228 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 229 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 230 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 233 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 234 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 235 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 236 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 239 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 240 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 241 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 242 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 244 costs: SSE_REGS:0 FP_TOP_SSE_REGS:6868 FP_SECOND_SSE_REGS:6868 FLOAT_SSE_REGS:6868 INT_SSE_REGS:14448 FLOAT_INT_SSE_REGS:14448 ALL_REGS:14448 MEM:2853
  Register 245 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5629 MMX_REGS:5629 FP_TOP_SSE_REGS:5629 FP_SECOND_SSE_REGS:5629 FLOAT_SSE_REGS:5629 FLOAT_INT_REGS:3897 INT_SSE_REGS:5629 FLOAT_INT_SSE_REGS:5629 ALL_REGS:5629 MEM:1346
  Register 246 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:628 INDEX_REGS:0 LEGACY_REGS:628 GENERAL_REGS:628 SSE_REGS:11050 MMX_REGS:11050 FP_TOP_SSE_REGS:11050 FP_SECOND_SSE_REGS:11050 FLOAT_SSE_REGS:11050 FLOAT_INT_REGS:7650 INT_SSE_REGS:11050 FLOAT_INT_SSE_REGS:11050 ALL_REGS:11050 MEM:3086
  Register 247 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 252 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 256 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 257 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 261 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 262 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 266 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 267 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 271 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 272 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 276 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 277 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 281 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 282 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 285 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 286 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 287 costs: AREG:41574 DREG:41574 CREG:41574 BREG:41574 SIREG:41574 DIREG:41574 AD_REGS:41574 Q_REGS:41574 NON_Q_REGS:43648 INDEX_REGS:41574 LEGACY_REGS:43648 GENERAL_REGS:43648 FP_TOP_REG:67158 FP_SECOND_REG:67158 FLOAT_REGS:67158 SSE_REGS:0 FP_TOP_SSE_REGS:67158 FP_SECOND_SSE_REGS:67158 FLOAT_SSE_REGS:67158 FLOAT_INT_REGS:67158 INT_SSE_REGS:41574 FLOAT_INT_SSE_REGS:67158 ALL_REGS:69720 MEM:26072
  Register 309 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 312 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 315 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 318 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 321 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 324 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 327 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 330 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 333 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 336 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 339 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 342 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 345 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 348 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 351 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 352 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 353 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 354 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 355 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 356 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 357 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 358 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 359 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 360 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 361 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 362 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 363 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 364 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 365 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 366 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 367 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 368 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 369 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 370 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 371 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 372 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 373 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 374 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 375 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 376 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 377 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 378 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 379 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 380 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 381 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 382 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 383 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 384 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 385 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 386 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 387 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 388 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 389 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 390 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 391 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 392 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 393 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88

  Register 59 pref AREG, else GENERAL_REGS
  Register 65 pref GENERAL_REGS or none
  Register 70 pref DIREG, else GENERAL_REGS
  Register 73 pref SSE_REGS or none
  Register 74 pref DIREG, else GENERAL_REGS
  Register 75 pref SIREG, else GENERAL_REGS
  Register 77 pref DREG, else GENERAL_REGS
  Register 81 pref DIREG, else GENERAL_REGS
  Register 82 pref DIREG, else GENERAL_REGS
  Register 83 pref SIREG, else GENERAL_REGS
  Register 84 pref DREG, else GENERAL_REGS
  Register 85 pref CREG, else GENERAL_REGS
  Register 86 pref SSE_REGS or none
  Register 92 pref DREG, else GENERAL_REGS
  Register 93 pref GENERAL_REGS or none
  Register 94 pref DIREG, else GENERAL_REGS
  Register 95 pref AREG, else GENERAL_REGS
  Register 97 pref SSE_REGS or none
  Register 100 pref GENERAL_REGS or none
  Register 102 pref DIREG, else GENERAL_REGS
  Register 104 pref DREG, else GENERAL_REGS
  Register 105 pref AREG, else GENERAL_REGS
  Register 106 pref INDEX_REGS, else GENERAL_REGS
  Register 107 pref FLOAT_INT_SSE_REGS or none
  Register 108 pref DREG, else GENERAL_REGS
  Register 110 pref SSE_REGS or none
  Register 113 pref FLOAT_INT_SSE_REGS or none
  Register 114 pref FLOAT_INT_SSE_REGS or none
  Register 115 pref FLOAT_INT_SSE_REGS or none
  Register 116 pref FLOAT_INT_SSE_REGS or none
  Register 117 pref FLOAT_INT_SSE_REGS or none
  Register 118 pref SSE_REGS or none
  Register 125 pref DREG, else GENERAL_REGS
  Register 126 pref SSE_REGS, else INT_SSE_REGS
  Register 127 pref SSE_REGS or none
  Register 138 pref GENERAL_REGS or none
  Register 143 pref GENERAL_REGS or none
  Register 144 pref INDEX_REGS, else GENERAL_REGS
  Register 148 pref GENERAL_REGS or none
  Register 150 pref INDEX_REGS, else GENERAL_REGS
  Register 153 pref GENERAL_REGS or none
  Register 156 pref GENERAL_REGS or none
  Register 157 pref INDEX_REGS, else GENERAL_REGS
  Register 158 pref SSE_REGS or none
  Register 163 pref SSE_REGS or none
  Register 167 pref INDEX_REGS, else GENERAL_REGS
  Register 168 pref SSE_REGS or none
  Register 172 pref INDEX_REGS, else GENERAL_REGS
  Register 173 pref SSE_REGS or none
  Register 177 pref INDEX_REGS, else GENERAL_REGS
  Register 178 pref SSE_REGS or none
  Register 182 pref INDEX_REGS, else GENERAL_REGS
  Register 183 pref SSE_REGS or none
  Register 187 pref INDEX_REGS, else GENERAL_REGS
  Register 188 pref SSE_REGS or none
  Register 192 pref INDEX_REGS, else GENERAL_REGS
  Register 193 pref SSE_REGS or none
  Register 196 pref GENERAL_REGS or none
  Register 197 pref DREG, else GENERAL_REGS
  Register 198 pref DREG, else GENERAL_REGS
  Register 199 pref INDEX_REGS, else GENERAL_REGS
  Register 200 pref FLOAT_INT_SSE_REGS or none
  Register 201 pref GENERAL_REGS or none
  Register 203 pref DREG, else GENERAL_REGS
  Register 204 pref DREG, else GENERAL_REGS
  Register 205 pref INDEX_REGS, else GENERAL_REGS
  Register 206 pref FLOAT_INT_SSE_REGS or none
  Register 209 pref DREG, else GENERAL_REGS
  Register 210 pref DREG, else GENERAL_REGS
  Register 211 pref INDEX_REGS, else GENERAL_REGS
  Register 212 pref FLOAT_INT_SSE_REGS or none
  Register 215 pref DREG, else GENERAL_REGS
  Register 216 pref DREG, else GENERAL_REGS
  Register 217 pref INDEX_REGS, else GENERAL_REGS
  Register 218 pref FLOAT_INT_SSE_REGS or none
  Register 221 pref DREG, else GENERAL_REGS
  Register 222 pref DREG, else GENERAL_REGS
  Register 223 pref INDEX_REGS, else GENERAL_REGS
  Register 224 pref FLOAT_INT_SSE_REGS or none
  Register 227 pref DREG, else GENERAL_REGS
  Register 228 pref DREG, else GENERAL_REGS
  Register 229 pref INDEX_REGS, else GENERAL_REGS
  Register 230 pref FLOAT_INT_SSE_REGS or none
  Register 233 pref DREG, else GENERAL_REGS
  Register 234 pref DREG, else GENERAL_REGS
  Register 235 pref INDEX_REGS, else GENERAL_REGS
  Register 236 pref FLOAT_INT_SSE_REGS or none
  Register 239 pref DREG, else GENERAL_REGS
  Register 240 pref DREG, else GENERAL_REGS
  Register 241 pref INDEX_REGS, else GENERAL_REGS
  Register 242 pref FLOAT_INT_SSE_REGS or none
  Register 244 pref SSE_REGS or none
  Register 245 pref GENERAL_REGS or none
  Register 246 pref INDEX_REGS, else GENERAL_REGS
  Register 247 pref SSE_REGS or none
  Register 252 pref SSE_REGS or none
  Register 256 pref INDEX_REGS, else GENERAL_REGS
  Register 257 pref SSE_REGS or none
  Register 261 pref INDEX_REGS, else GENERAL_REGS
  Register 262 pref SSE_REGS or none
  Register 266 pref INDEX_REGS, else GENERAL_REGS
  Register 267 pref SSE_REGS or none
  Register 271 pref INDEX_REGS, else GENERAL_REGS
  Register 272 pref SSE_REGS or none
  Register 276 pref INDEX_REGS, else GENERAL_REGS
  Register 277 pref SSE_REGS or none
  Register 281 pref INDEX_REGS, else GENERAL_REGS
  Register 282 pref SSE_REGS or none
  Register 285 pref GENERAL_REGS or none
  Register 286 pref GENERAL_REGS or none
  Register 287 pref SSE_REGS or none
  Register 309 pref SSE_REGS or none
  Register 312 pref SSE_REGS or none
  Register 315 pref SSE_REGS or none
  Register 318 pref SSE_REGS or none
  Register 321 pref SSE_REGS or none
  Register 324 pref SSE_REGS or none
  Register 327 pref SSE_REGS or none
  Register 330 pref SSE_REGS or none
  Register 333 pref SSE_REGS or none
  Register 336 pref SSE_REGS or none
  Register 339 pref SSE_REGS or none
  Register 342 pref SSE_REGS or none
  Register 345 pref SSE_REGS or none
  Register 348 pref SSE_REGS or none
  Register 351 pref DREG, else GENERAL_REGS
  Register 352 pref DREG, else GENERAL_REGS
  Register 353 pref INDEX_REGS, else GENERAL_REGS
  Register 354 pref FLOAT_INT_SSE_REGS or none
  Register 355 pref DREG, else GENERAL_REGS
  Register 356 pref DREG, else GENERAL_REGS
  Register 357 pref INDEX_REGS, else GENERAL_REGS
  Register 358 pref FLOAT_INT_SSE_REGS or none
  Register 359 pref DREG, else GENERAL_REGS
  Register 360 pref DREG, else GENERAL_REGS
  Register 361 pref INDEX_REGS, else GENERAL_REGS
  Register 362 pref FLOAT_INT_SSE_REGS or none
  Register 363 pref DREG, else GENERAL_REGS
  Register 364 pref DREG, else GENERAL_REGS
  Register 365 pref INDEX_REGS, else GENERAL_REGS
  Register 366 pref FLOAT_INT_SSE_REGS or none
  Register 367 pref DREG, else GENERAL_REGS
  Register 368 pref DREG, else GENERAL_REGS
  Register 369 pref INDEX_REGS, else GENERAL_REGS
  Register 370 pref FLOAT_INT_SSE_REGS or none
  Register 371 pref DREG, else GENERAL_REGS
  Register 372 pref DREG, else GENERAL_REGS
  Register 373 pref INDEX_REGS, else GENERAL_REGS
  Register 374 pref FLOAT_INT_SSE_REGS or none
  Register 375 pref DREG, else GENERAL_REGS
  Register 376 pref DREG, else GENERAL_REGS
  Register 377 pref INDEX_REGS, else GENERAL_REGS
  Register 378 pref FLOAT_INT_SSE_REGS or none
  Register 379 pref AREG, else GENERAL_REGS
  Register 380 pref AREG, else GENERAL_REGS
  Register 381 pref AREG, else GENERAL_REGS
  Register 382 pref AREG, else GENERAL_REGS
  Register 383 pref AREG, else GENERAL_REGS
  Register 384 pref AREG, else GENERAL_REGS
  Register 385 pref AREG, else GENERAL_REGS
  Register 386 pref AREG, else GENERAL_REGS
  Register 387 pref AREG, else GENERAL_REGS
  Register 388 pref AREG, else GENERAL_REGS
  Register 389 pref AREG, else GENERAL_REGS
  Register 390 pref AREG, else GENERAL_REGS
  Register 391 pref AREG, else GENERAL_REGS
  Register 392 pref AREG, else GENERAL_REGS
  Register 393 pref AREG, else GENERAL_REGS


Pass 1

  Register 59 costs: AREG:-28 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2340 MMX_REGS:2340 FP_TOP_SSE_REGS:2340 FP_SECOND_SSE_REGS:2340 FLOAT_SSE_REGS:2340 FLOAT_INT_REGS:1620 INT_SSE_REGS:2340 FLOAT_INT_SSE_REGS:2340 ALL_REGS:2340 MEM:668
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19045 MMX_REGS:19045 FP_TOP_SSE_REGS:19045 FP_SECOND_SSE_REGS:19045 FLOAT_SSE_REGS:19045 FLOAT_INT_REGS:13185 INT_SSE_REGS:19045 FLOAT_INT_SSE_REGS:19045 ALL_REGS:19045 MEM:5860
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-28 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5980 MMX_REGS:5980 FP_TOP_SSE_REGS:5980 FP_SECOND_SSE_REGS:5980 FLOAT_SSE_REGS:5980 FLOAT_INT_REGS:4140 INT_SSE_REGS:5980 FLOAT_INT_SSE_REGS:5980 ALL_REGS:5980 MEM:1787
  Register 73 costs: AREG:1430 DREG:1430 CREG:1430 BREG:1430 SIREG:1430 DIREG:1430 AD_REGS:1430 Q_REGS:1430 NON_Q_REGS:3317 INDEX_REGS:1430 LEGACY_REGS:3317 GENERAL_REGS:3317 FP_TOP_REG:2310 FP_SECOND_REG:2310 FLOAT_REGS:2310 SSE_REGS:0 FP_TOP_SSE_REGS:2310 FP_SECOND_SSE_REGS:2310 FLOAT_SSE_REGS:2310 FLOAT_INT_REGS:2310 INT_SSE_REGS:1430 FLOAT_INT_SSE_REGS:2310 ALL_REGS:4641 MEM:1324
  Register 74 costs: AREG:-110 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13663 MMX_REGS:13663 FP_TOP_SSE_REGS:13663 FP_SECOND_SSE_REGS:13663 FLOAT_SSE_REGS:13663 FLOAT_INT_REGS:9459 INT_SSE_REGS:13663 FLOAT_INT_SSE_REGS:13663 ALL_REGS:13663 MEM:4093
  Register 75 costs: AREG:0 DREG:0 CREG:-27 BREG:0 SIREG:-82 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9139 MMX_REGS:9139 INT_SSE_REGS:9139 MEM:2348
  Register 77 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-28 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1092 MMX_REGS:1092 FP_TOP_SSE_REGS:1092 FP_SECOND_SSE_REGS:1092 FLOAT_SSE_REGS:1092 FLOAT_INT_REGS:756 INT_SSE_REGS:1092 FLOAT_INT_SSE_REGS:1092 ALL_REGS:1092 MEM:252
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-112 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:27261 MMX_REGS:27261 FP_TOP_SSE_REGS:27261 FP_SECOND_SSE_REGS:27261 FLOAT_SSE_REGS:27261 FLOAT_INT_REGS:18873 INT_SSE_REGS:27261 FLOAT_INT_SSE_REGS:27261 ALL_REGS:27261 MEM:8215
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-112 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11609 MMX_REGS:11609 FP_TOP_SSE_REGS:11609 FP_SECOND_SSE_REGS:11609 FLOAT_SSE_REGS:11609 FLOAT_INT_REGS:8037 INT_SSE_REGS:11609 FLOAT_INT_SSE_REGS:11609 ALL_REGS:11609 MEM:3002
  Register 84 costs: AREG:0 DREG:-112 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11557 MMX_REGS:11557 FP_TOP_SSE_REGS:11557 FP_SECOND_SSE_REGS:11557 FLOAT_SSE_REGS:11557 FLOAT_INT_REGS:8001 INT_SSE_REGS:11557 FLOAT_INT_SSE_REGS:11557 ALL_REGS:11557 MEM:3556
  Register 85 costs: AREG:0 DREG:0 CREG:-112 BREG:0 SIREG:-55 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:12155 MMX_REGS:12155 INT_SSE_REGS:12155 MEM:2995
  Register 86 costs: AREG:1430 DREG:1430 CREG:1430 BREG:1430 SIREG:1430 DIREG:1430 AD_REGS:1430 Q_REGS:1430 NON_Q_REGS:3334 INDEX_REGS:1430 LEGACY_REGS:3334 GENERAL_REGS:3334 FP_TOP_REG:2310 FP_SECOND_REG:2310 FLOAT_REGS:2310 SSE_REGS:0 FP_TOP_SSE_REGS:2310 FP_SECOND_SSE_REGS:2310 FLOAT_SSE_REGS:2310 FLOAT_INT_REGS:2310 INT_SSE_REGS:1430 FLOAT_INT_SSE_REGS:2310 ALL_REGS:4662 MEM:1328
  Register 92 costs: AREG:0 DREG:-83 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2158 MMX_REGS:2158 FP_TOP_SSE_REGS:2158 FP_SECOND_SSE_REGS:2158 FLOAT_SSE_REGS:2158 FLOAT_INT_REGS:1494 INT_SSE_REGS:2158 FLOAT_INT_SSE_REGS:2158 ALL_REGS:2158 MEM:581
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2158 MMX_REGS:2158 FP_TOP_SSE_REGS:2158 FP_SECOND_SSE_REGS:2158 FLOAT_SSE_REGS:2158 FLOAT_INT_REGS:1494 INT_SSE_REGS:2158 FLOAT_INT_SSE_REGS:2158 ALL_REGS:2158 MEM:581
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-83 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2158 MMX_REGS:2158 FP_TOP_SSE_REGS:2158 FP_SECOND_SSE_REGS:2158 FLOAT_SSE_REGS:2158 FLOAT_INT_REGS:1494 INT_SSE_REGS:2158 FLOAT_INT_SSE_REGS:2158 ALL_REGS:2158 MEM:498
  Register 95 costs: AREG:-83 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-82 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19149 MMX_REGS:19149 FP_TOP_SSE_REGS:19149 FP_SECOND_SSE_REGS:19149 FLOAT_SSE_REGS:19149 FLOAT_INT_REGS:13257 INT_SSE_REGS:19149 FLOAT_INT_SSE_REGS:19149 ALL_REGS:19149 MEM:5728
  Register 97 costs: AREG:3848 DREG:3848 CREG:3848 BREG:3848 SIREG:3848 DIREG:3848 AD_REGS:3848 Q_REGS:3848 NON_Q_REGS:6364 INDEX_REGS:3848 LEGACY_REGS:6364 GENERAL_REGS:6364 FP_TOP_REG:6216 FP_SECOND_REG:6216 FLOAT_REGS:6216 SSE_REGS:0 FP_TOP_SSE_REGS:6216 FP_SECOND_SSE_REGS:6216 FLOAT_SSE_REGS:6216 FLOAT_INT_REGS:6216 INT_SSE_REGS:3848 FLOAT_INT_SSE_REGS:6216 ALL_REGS:9324 MEM:2960
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:196
  Register 102 costs: AREG:-28 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-28 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6383 MMX_REGS:6383 FP_TOP_SSE_REGS:6383 FP_SECOND_SSE_REGS:6383 FLOAT_SSE_REGS:6383 FLOAT_INT_REGS:4419 INT_SSE_REGS:6383 FLOAT_INT_SSE_REGS:6383 ALL_REGS:6383 MEM:1908
  Register 104 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 105 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 106 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 108 costs: AREG:0 DREG:-25 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:175
  Register 110 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 113 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 114 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 115 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3774 INDEX_REGS:0 LEGACY_REGS:3774 GENERAL_REGS:3774 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4662 MEM:888
  Register 118 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:2886 INDEX_REGS:2886 LEGACY_REGS:2886 GENERAL_REGS:2886 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:4662 MEM:1665
  Register 125 costs: AREG:0 DREG:-2 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:52 MMX_REGS:52 FP_TOP_SSE_REGS:52 FP_SECOND_SSE_REGS:52 FLOAT_SSE_REGS:52 FLOAT_INT_REGS:36 INT_SSE_REGS:52 FLOAT_INT_SSE_REGS:52 ALL_REGS:52 MEM:14
  Register 126 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5295 INDEX_REGS:1300 LEGACY_REGS:5295 GENERAL_REGS:5295 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:7035 MEM:1729
  Register 127 costs: SSE_REGS:0 FP_TOP_SSE_REGS:20689 FP_SECOND_SSE_REGS:20689 FLOAT_SSE_REGS:20689 INT_SSE_REGS:43549 FLOAT_INT_SSE_REGS:43549 ALL_REGS:43549 MEM:8593
  Register 138 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 143 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7553 MMX_REGS:7553 FP_TOP_SSE_REGS:7553 FP_SECOND_SSE_REGS:7553 FLOAT_SSE_REGS:7553 FLOAT_INT_REGS:5229 INT_SSE_REGS:7553 FLOAT_INT_SSE_REGS:7553 ALL_REGS:7553 MEM:1874
  Register 144 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 148 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2548 MMX_REGS:2548 FP_TOP_SSE_REGS:2548 FP_SECOND_SSE_REGS:2548 FLOAT_SSE_REGS:2548 FLOAT_INT_REGS:1764 INT_SSE_REGS:2548 FLOAT_INT_SSE_REGS:2548 ALL_REGS:2548 MEM:632
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 153 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2548 MMX_REGS:2548 FP_TOP_SSE_REGS:2548 FP_SECOND_SSE_REGS:2548 FLOAT_SSE_REGS:2548 FLOAT_INT_REGS:1764 INT_SSE_REGS:2548 FLOAT_INT_SSE_REGS:2548 ALL_REGS:2548 MEM:632
  Register 156 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17043 MMX_REGS:17043 FP_TOP_SSE_REGS:17043 FP_SECOND_SSE_REGS:17043 FLOAT_SSE_REGS:17043 FLOAT_INT_REGS:11799 INT_SSE_REGS:17043 FLOAT_INT_SSE_REGS:17043 ALL_REGS:17043 MEM:4074
  Register 157 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1908 INDEX_REGS:0 LEGACY_REGS:1908 GENERAL_REGS:1908 SSE_REGS:33462 MMX_REGS:33462 FP_TOP_SSE_REGS:33462 FP_SECOND_SSE_REGS:33462 FLOAT_SSE_REGS:33462 FLOAT_INT_REGS:23166 INT_SSE_REGS:33462 FLOAT_INT_SSE_REGS:33462 ALL_REGS:33462 MEM:9342
  Register 158 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 163 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 167 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 168 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 172 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 173 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 177 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 178 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 182 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 183 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 187 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 188 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 192 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:300 INDEX_REGS:0 LEGACY_REGS:300 GENERAL_REGS:300 SSE_REGS:2925 MMX_REGS:2925 FP_TOP_SSE_REGS:2925 FP_SECOND_SSE_REGS:2925 FLOAT_SSE_REGS:2925 FLOAT_INT_REGS:2025 INT_SSE_REGS:2925 FLOAT_INT_SSE_REGS:2925 ALL_REGS:2925 MEM:900
  Register 193 costs: AREG:3900 DREG:3900 CREG:3900 BREG:3900 SIREG:3900 DIREG:3900 AD_REGS:3900 Q_REGS:3900 NON_Q_REGS:6450 INDEX_REGS:3900 LEGACY_REGS:6450 GENERAL_REGS:6450 FP_TOP_REG:6300 FP_SECOND_REG:6300 FLOAT_REGS:6300 SSE_REGS:0 FP_TOP_SSE_REGS:6300 FP_SECOND_SSE_REGS:6300 FLOAT_SSE_REGS:6300 FLOAT_INT_REGS:6300 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:6300 ALL_REGS:9450 MEM:3000
  Register 196 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5629 MMX_REGS:5629 FP_TOP_SSE_REGS:5629 FP_SECOND_SSE_REGS:5629 FLOAT_SSE_REGS:5629 FLOAT_INT_REGS:3897 INT_SSE_REGS:5629 FLOAT_INT_SSE_REGS:5629 ALL_REGS:5629 MEM:1346
  Register 197 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 198 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 199 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 200 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 201 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9009 MMX_REGS:9009 FP_TOP_SSE_REGS:9009 FP_SECOND_SSE_REGS:9009 FLOAT_SSE_REGS:9009 FLOAT_INT_REGS:6237 INT_SSE_REGS:9009 FLOAT_INT_SSE_REGS:9009 ALL_REGS:9009 MEM:2436
  Register 203 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 204 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 205 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 206 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 209 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 210 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 211 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 212 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 215 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 216 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 217 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 218 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 221 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 222 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 223 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 224 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 227 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 228 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 229 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 230 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 233 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 234 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 235 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 236 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 239 costs: AREG:25 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 240 costs: AREG:50 DREG:0 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 INT_SSE_REGS:650 MEM:175
  Register 241 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:50 INDEX_REGS:0 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 242 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:850 INDEX_REGS:0 LEGACY_REGS:850 GENERAL_REGS:850 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1050 MEM:200
  Register 244 costs: SSE_REGS:0 FP_TOP_SSE_REGS:6868 FP_SECOND_SSE_REGS:6868 FLOAT_SSE_REGS:6868 INT_SSE_REGS:14448 FLOAT_INT_SSE_REGS:14448 ALL_REGS:14448 MEM:2853
  Register 245 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5629 MMX_REGS:5629 FP_TOP_SSE_REGS:5629 FP_SECOND_SSE_REGS:5629 FLOAT_SSE_REGS:5629 FLOAT_INT_REGS:3897 INT_SSE_REGS:5629 FLOAT_INT_SSE_REGS:5629 ALL_REGS:5629 MEM:1346
  Register 246 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:628 INDEX_REGS:0 LEGACY_REGS:628 GENERAL_REGS:628 SSE_REGS:11050 MMX_REGS:11050 FP_TOP_SSE_REGS:11050 FP_SECOND_SSE_REGS:11050 FLOAT_SSE_REGS:11050 FLOAT_INT_REGS:7650 INT_SSE_REGS:11050 FLOAT_INT_SSE_REGS:11050 ALL_REGS:11050 MEM:3086
  Register 247 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 252 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 256 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 257 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 261 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 262 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 266 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 267 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 271 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 272 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 276 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 277 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 281 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:300
  Register 282 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:1000
  Register 285 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 286 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 287 costs: AREG:41574 DREG:41574 CREG:41574 BREG:41574 SIREG:41574 DIREG:41574 AD_REGS:41574 Q_REGS:41574 NON_Q_REGS:43648 INDEX_REGS:41574 LEGACY_REGS:43648 GENERAL_REGS:43648 FP_TOP_REG:67158 FP_SECOND_REG:67158 FLOAT_REGS:67158 SSE_REGS:0 FP_TOP_SSE_REGS:67158 FP_SECOND_SSE_REGS:67158 FLOAT_SSE_REGS:67158 FLOAT_INT_REGS:67158 INT_SSE_REGS:41574 FLOAT_INT_SSE_REGS:67158 ALL_REGS:69720 MEM:26072
  Register 309 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 312 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 315 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 318 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 321 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 324 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 327 costs: AREG:3484 DREG:3484 CREG:3484 BREG:3484 SIREG:3484 DIREG:3484 AD_REGS:3484 Q_REGS:3484 NON_Q_REGS:5762 INDEX_REGS:3484 LEGACY_REGS:5762 GENERAL_REGS:5762 FP_TOP_REG:5628 FP_SECOND_REG:5628 FLOAT_REGS:5628 SSE_REGS:0 FP_TOP_SSE_REGS:5628 FP_SECOND_SSE_REGS:5628 FLOAT_SSE_REGS:5628 FLOAT_INT_REGS:5628 INT_SSE_REGS:3484 FLOAT_INT_SSE_REGS:5628 ALL_REGS:8442 MEM:2680
  Register 330 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 333 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 336 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 339 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 342 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 345 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 348 costs: AREG:1144 DREG:1144 CREG:1144 BREG:1144 SIREG:1144 DIREG:1144 AD_REGS:1144 Q_REGS:1144 NON_Q_REGS:1892 INDEX_REGS:1144 LEGACY_REGS:1892 GENERAL_REGS:1892 FP_TOP_REG:1848 FP_SECOND_REG:1848 FLOAT_REGS:1848 SSE_REGS:0 FP_TOP_SSE_REGS:1848 FP_SECOND_SSE_REGS:1848 FLOAT_SSE_REGS:1848 FLOAT_INT_REGS:1848 INT_SSE_REGS:1144 FLOAT_INT_SSE_REGS:1848 ALL_REGS:2772 MEM:880
  Register 351 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 352 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 353 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 354 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 355 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 356 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 357 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 358 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 359 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 360 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 361 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 362 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 363 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 364 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 365 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 366 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 367 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 368 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 369 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 370 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 371 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 372 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 373 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 374 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 375 costs: AREG:22 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 376 costs: AREG:44 DREG:0 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 INT_SSE_REGS:572 MEM:154
  Register 377 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:44 INDEX_REGS:0 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:572 MMX_REGS:572 FP_TOP_SSE_REGS:572 FP_SECOND_SSE_REGS:572 FLOAT_SSE_REGS:572 FLOAT_INT_REGS:396 INT_SSE_REGS:572 FLOAT_INT_SSE_REGS:572 ALL_REGS:572 MEM:176
  Register 378 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:748 INDEX_REGS:0 LEGACY_REGS:748 GENERAL_REGS:748 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:924 MEM:176
  Register 379 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 380 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 381 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 382 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 383 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 384 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 385 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 386 costs: AREG:0 DREG:50 CREG:50 BREG:50 SIREG:50 DIREG:50 AD_REGS:50 Q_REGS:50 NON_Q_REGS:50 INDEX_REGS:50 LEGACY_REGS:50 GENERAL_REGS:50 SSE_REGS:325 MMX_REGS:325 FP_TOP_SSE_REGS:325 FP_SECOND_SSE_REGS:325 FLOAT_SSE_REGS:325 FLOAT_INT_REGS:225 INT_SSE_REGS:325 FLOAT_INT_SSE_REGS:325 ALL_REGS:325 MEM:100
  Register 387 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 388 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 389 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 390 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 391 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 392 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88
  Register 393 costs: AREG:0 DREG:44 CREG:44 BREG:44 SIREG:44 DIREG:44 AD_REGS:44 Q_REGS:44 NON_Q_REGS:44 INDEX_REGS:44 LEGACY_REGS:44 GENERAL_REGS:44 SSE_REGS:286 MMX_REGS:286 FP_TOP_SSE_REGS:286 FP_SECOND_SSE_REGS:286 FLOAT_SSE_REGS:286 FLOAT_INT_REGS:198 INT_SSE_REGS:286 FLOAT_INT_SSE_REGS:286 ALL_REGS:286 MEM:88

394 registers.

Register 59 used 8 times across 52 insns; set 1 time; dies in 2 places; crosses 3 calls; pref AREG, else GENERAL_REGS; pointer.

Register 65 used 31 times across 252 insns; set 4 times; crosses 5 calls; GENERAL_REGS or none; pointer.

Register 70 used 19 times across 280 insns; set 1 time; user var; crosses 20 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 73 used 3 times across 16 insns; set 2 times; user var; crosses 3 calls; SSE_REGS or none.

Register 74 used 18 times across 334 insns; set 3 times; user var; crosses 6 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 75 used 10 times across 137 insns; set 2 times; user var; crosses 2 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 77 used 3 times across 2 insns in block 71; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 81 used 3 times across 7 insns; set 1 time; crosses 1 call; pref DIREG, else GENERAL_REGS.

Register 82 used 38 times across 493 insns; set 1 time; user var; crosses 27 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 83 used 9 times across 527 insns; set 1 time; user var; crosses 27 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 84 used 8 times across 528 insns; set 1 time; user var; crosses 27 calls; pref DREG, else GENERAL_REGS; pointer.

Register 85 used 48 times across 298 insns; set 1 time; user var; dies in 2 places; crosses 20 calls; 4 bytes; pref CREG, else GENERAL_REGS.

Register 86 used 3 times across 445 insns; set 1 time; user var; dies in 2 places; crosses 24 calls; SSE_REGS or none.

Register 92 used 2 times across 8 insns in block 3; set 1 time; pref DREG, else GENERAL_REGS; pointer.

Register 93 used 2 times across 2 insns in block 3; set 1 time; GENERAL_REGS or none.

Register 94 used 2 times across 2 insns in block 3; set 1 time; pref DIREG, else GENERAL_REGS.

Register 95 used 20 times across 126 insns; set 1 time; crosses 1 call; pref AREG, else GENERAL_REGS; pointer.

Register 97 used 6 times across 6 insns in block 37; set 3 times; SSE_REGS or none.

Register 100 used 2 times across 2 insns in block 8; set 1 time; GENERAL_REGS or none.

Register 102 used 20 times across 281 insns; set 1 time; crosses 19 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 104 used 2 times across 2 insns in block 71; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 105 used 1 times across 1 insns in block 71; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 106 used 2 times across 2 insns in block 71; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 107 used 2 times across 2 insns in block 71; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 108 used 2 times across 8 insns in block 54; set 1 time; pref DREG, else GENERAL_REGS; pointer.

Register 110 used 6 times across 6 insns in block 54; set 3 times; SSE_REGS or none.

Register 113 used 2 times across 4 insns in block 15; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 114 used 2 times across 4 insns in block 15; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 115 used 2 times across 2 insns in block 15; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 116 used 2 times across 4 insns in block 15; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 117 used 2 times across 4 insns in block 15; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 118 used 2 times across 2 insns in block 17; set 1 time; SSE_REGS or none.

Register 125 used 2 times across 8 insns in block 19; set 1 time; pref DREG, else GENERAL_REGS; pointer.

Register 126 used 6 times across 1864 insns; set 2 times; dies in 2 places; crosses 27 calls; pref SSE_REGS, else INT_SSE_REGS.

Register 127 used 17 times across 226 insns; set 1 time; dies in 0 places; 16 bytes; SSE_REGS or none.

Register 138 used 10 times across 21 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 143 used 10 times across 24 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 144 used 3 times across 5 insns in block 52; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 148 used 10 times across 24 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 150 used 3 times across 5 insns in block 69; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 153 used 10 times across 26 insns; set 2 times; crosses 1 call; 4 bytes; GENERAL_REGS or none.

Register 156 used 19 times across 218 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 157 used 37 times across 214 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 158 used 6 times across 6 insns in block 52; set 3 times; SSE_REGS or none.

Register 163 used 6 times across 6 insns in block 52; set 3 times; SSE_REGS or none.

Register 167 used 3 times across 5 insns in block 52; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 168 used 6 times across 6 insns in block 52; set 3 times; SSE_REGS or none.

Register 172 used 3 times across 5 insns in block 52; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 173 used 6 times across 6 insns in block 52; set 3 times; SSE_REGS or none.

Register 177 used 3 times across 5 insns in block 52; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 178 used 6 times across 6 insns in block 52; set 3 times; SSE_REGS or none.

Register 182 used 3 times across 5 insns in block 52; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 183 used 6 times across 6 insns in block 52; set 3 times; SSE_REGS or none.

Register 187 used 3 times across 5 insns in block 52; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 188 used 6 times across 6 insns in block 52; set 3 times; SSE_REGS or none.

Register 192 used 3 times across 5 insns in block 52; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 193 used 6 times across 6 insns in block 52; set 3 times; SSE_REGS or none.

Register 196 used 19 times across 260 insns; set 9 times; user var; dies in 0 places; crosses 14 calls; 4 bytes; GENERAL_REGS or none.

Register 197 used 3 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 198 used 2 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 199 used 2 times across 2 insns in block 86; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 200 used 2 times across 2 insns in block 86; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 201 used 30 times across 128 insns; set 9 times; dies in 0 places; crosses 14 calls; GENERAL_REGS or none; pointer.

Register 203 used 3 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 204 used 2 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 205 used 2 times across 2 insns in block 86; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 206 used 2 times across 2 insns in block 86; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 209 used 3 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 210 used 2 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 211 used 2 times across 2 insns in block 86; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 212 used 2 times across 2 insns in block 86; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 215 used 3 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 216 used 2 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 217 used 2 times across 2 insns in block 86; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 218 used 2 times across 2 insns in block 86; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 221 used 3 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 222 used 2 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 223 used 2 times across 2 insns in block 86; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 224 used 2 times across 2 insns in block 86; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 227 used 3 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 228 used 2 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 229 used 2 times across 2 insns in block 86; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 230 used 2 times across 2 insns in block 86; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 233 used 3 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 234 used 2 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 235 used 2 times across 2 insns in block 86; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 236 used 2 times across 2 insns in block 86; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 239 used 3 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 240 used 2 times across 2 insns in block 86; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 241 used 2 times across 2 insns in block 86; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 242 used 2 times across 2 insns in block 86; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 244 used 17 times across 226 insns; set 1 time; dies in 0 places; 16 bytes; SSE_REGS or none.

Register 245 used 19 times across 218 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 246 used 37 times across 214 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 247 used 6 times across 6 insns in block 69; set 3 times; SSE_REGS or none.

Register 252 used 6 times across 6 insns in block 69; set 3 times; SSE_REGS or none.

Register 256 used 3 times across 5 insns in block 69; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 257 used 6 times across 6 insns in block 69; set 3 times; SSE_REGS or none.

Register 261 used 3 times across 5 insns in block 69; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 262 used 6 times across 6 insns in block 69; set 3 times; SSE_REGS or none.

Register 266 used 3 times across 5 insns in block 69; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 267 used 6 times across 6 insns in block 69; set 3 times; SSE_REGS or none.

Register 271 used 3 times across 5 insns in block 69; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 272 used 6 times across 6 insns in block 69; set 3 times; SSE_REGS or none.

Register 276 used 3 times across 5 insns in block 69; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 277 used 6 times across 6 insns in block 69; set 3 times; SSE_REGS or none.

Register 281 used 3 times across 5 insns in block 69; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 282 used 6 times across 6 insns in block 69; set 3 times; SSE_REGS or none.

Register 285 used 19 times across 120 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 286 used 30 times across 58 insns; set 9 times; dies in 0 places; GENERAL_REGS or none; pointer.

Register 287 used 35 times across 150 insns; set 18 times; user var; SSE_REGS or none.

Register 309 used 6 times across 6 insns in block 45; set 3 times; SSE_REGS or none.

Register 312 used 6 times across 6 insns in block 46; set 3 times; SSE_REGS or none.

Register 315 used 6 times across 6 insns in block 47; set 3 times; SSE_REGS or none.

Register 318 used 6 times across 6 insns in block 48; set 3 times; SSE_REGS or none.

Register 321 used 6 times across 6 insns in block 49; set 3 times; SSE_REGS or none.

Register 324 used 6 times across 6 insns in block 50; set 3 times; SSE_REGS or none.

Register 327 used 6 times across 6 insns in block 51; set 3 times; SSE_REGS or none.

Register 330 used 6 times across 6 insns in block 62; set 3 times; SSE_REGS or none.

Register 333 used 6 times across 6 insns in block 63; set 3 times; SSE_REGS or none.

Register 336 used 6 times across 6 insns in block 64; set 3 times; SSE_REGS or none.

Register 339 used 6 times across 6 insns in block 65; set 3 times; SSE_REGS or none.

Register 342 used 6 times across 6 insns in block 66; set 3 times; SSE_REGS or none.

Register 345 used 6 times across 6 insns in block 67; set 3 times; SSE_REGS or none.

Register 348 used 6 times across 6 insns in block 68; set 3 times; SSE_REGS or none.

Register 351 used 3 times across 2 insns in block 79; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 352 used 2 times across 2 insns in block 79; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 353 used 2 times across 2 insns in block 79; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 354 used 2 times across 2 insns in block 79; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 355 used 3 times across 2 insns in block 80; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 356 used 2 times across 2 insns in block 80; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 357 used 2 times across 2 insns in block 80; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 358 used 2 times across 2 insns in block 80; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 359 used 3 times across 2 insns in block 81; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 360 used 2 times across 2 insns in block 81; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 361 used 2 times across 2 insns in block 81; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 362 used 2 times across 2 insns in block 81; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 363 used 3 times across 2 insns in block 82; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 364 used 2 times across 2 insns in block 82; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 365 used 2 times across 2 insns in block 82; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 366 used 2 times across 2 insns in block 82; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 367 used 3 times across 2 insns in block 83; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 368 used 2 times across 2 insns in block 83; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 369 used 2 times across 2 insns in block 83; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 370 used 2 times across 2 insns in block 83; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 371 used 3 times across 2 insns in block 84; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 372 used 2 times across 2 insns in block 84; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 373 used 2 times across 2 insns in block 84; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 374 used 2 times across 2 insns in block 84; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 375 used 3 times across 2 insns in block 85; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 376 used 2 times across 2 insns in block 85; set 1 time; 4 bytes; pref DREG, else GENERAL_REGS.

Register 377 used 2 times across 2 insns in block 85; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 378 used 2 times across 2 insns in block 85; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 379 used 1 times across 1 insns in block 86; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 380 used 1 times across 1 insns in block 86; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 381 used 1 times across 1 insns in block 86; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 382 used 1 times across 1 insns in block 86; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 383 used 1 times across 1 insns in block 86; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 384 used 1 times across 1 insns in block 86; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 385 used 1 times across 1 insns in block 86; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 386 used 1 times across 1 insns in block 86; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 387 used 1 times across 1 insns in block 79; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 388 used 1 times across 1 insns in block 80; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 389 used 1 times across 1 insns in block 81; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 390 used 1 times across 1 insns in block 82; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 391 used 1 times across 1 insns in block 83; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 392 used 1 times across 1 insns in block 84; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 393 used 1 times across 1 insns in block 85; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

88 basic blocks, 134 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1125, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  18 [50.0%]  1 [50.0%]  (fallthru)
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 17 [flags] 20 [frame] 82 83 84 85 86

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 563, maybe hot.
Predecessors:  0 [50.0%]  (fallthru)
Successors:  8 [51.2%]  2 [48.8%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 17 [flags] 20 [frame] 82 83 84 85 86
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 84 85 86 126

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 275, maybe hot.
Predecessors:  1 [48.8%]  (fallthru)
Successors:  3 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 84 85 86 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 82 83 84 86 126

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 837, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 18 [100.0%] 
Successors:  6 [1.0%]  4 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 82 83 84 86 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 75 82 83 84 86 95 126

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 829, maybe hot.
Predecessors:  3 [99.0%]  (fallthru)
Successors:  37 [90.0%]  5 [10.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 75 82 83 84 86 95 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 75 82 83 84 86 95 126

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 83, maybe hot.
Predecessors:  4 [10.0%]  (fallthru)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 75 82 83 84 86 95 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 8.
Predecessors:  3 [1.0%] 
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 829, maybe hot.
Predecessors:  5 [100.0%]  52 [10.0%]  (loop_exit) 37 [10.0%]  51 [10.0%] 
Successors:  15 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 73 74 82 83 84 126
Invalid sum of incoming frequencies 301, should be 829

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 288, maybe hot.
Predecessors:  1 [51.2%] 
Successors:  10 [99.0%]  9 [1.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 84 85 86 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 81 82 83 84 85 86 126

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 3.
Predecessors:  8 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 285, maybe hot.
Predecessors:  8 [99.0%] 
Successors:  13 [1.0%]  11 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 81 82 83 84 85 86 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 82 83 84 85 86 102 126

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 282, maybe hot.
Predecessors:  10 [99.0%]  (fallthru)
Successors:  71 [90.0%]  12 [10.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 82 83 84 85 86 102 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 28, maybe hot.
Predecessors:  11 [10.0%]  (fallthru)
Successors:  19 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 3.
Predecessors:  10 [1.0%] 
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 282, maybe hot.
Predecessors:  69 [10.0%]  (loop_exit) 19 [100.0%]  54 [10.0%]  68 [10.0%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 73 74 82 83 84 126
Invalid sum of incoming frequencies 102, should be 282

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 7 [100.0%] 
Successors:  20 [90.0%]  16 [10.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 73 74 82 83 84 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 126

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  15 [10.0%]  (fallthru)
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 287

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 35 [10.0%]  (loop_exit) 20 [10.0%]  34 [10.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 563, maybe hot.
Predecessors:  0 [50.0%] 
Successors:  3 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 84 86
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 82 83 84 86 126

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 28, maybe hot.
Predecessors:  12 [100.0%] 
Successors:  14 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  15 [90.0%] 
Successors:  21 [90.0%]  (fallthru,dfs_back) 17 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  20 [90.0%]  (fallthru,dfs_back)
Successors:  22 [87.5%]  (fallthru) 35 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
Invalid sum of incoming frequencies 900, should be 771

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  21 [87.5%]  (fallthru)
Successors:  23 [85.7%]  (fallthru) 34 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  22 [85.7%]  (fallthru)
Successors:  24 [83.3%]  (fallthru) 33 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  23 [83.3%]  (fallthru)
Successors:  25 [80.0%]  (fallthru) 32 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  24 [80.0%]  (fallthru)
Successors:  26 [75.0%]  (fallthru) 31 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  25 [75.0%]  (fallthru)
Successors:  27 [66.7%]  (fallthru) 30 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  26 [66.7%]  (fallthru)
Successors:  28 [50.0%]  (fallthru) 29 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 285 286 287
Invalid sum of incoming frequencies 300, should be 900

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  27 [50.0%]  (fallthru)
Successors:  29 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Invalid sum of incoming frequencies 450, should be 900

Basic block 29 prev 28, next 30, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  28 [100.0%]  (fallthru) 27 [50.0%] 
Successors:  30 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Invalid sum of incoming frequencies 1350, should be 900

Basic block 30 prev 29, next 31, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  29 [100.0%]  (fallthru) 26 [33.3%] 
Successors:  31 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Invalid sum of incoming frequencies 1050, should be 900

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  30 [100.0%]  (fallthru) 25 [25.0%] 
Successors:  32 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Invalid sum of incoming frequencies 1050, should be 900

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  31 [100.0%]  (fallthru) 24 [20.0%] 
Successors:  33 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Invalid sum of incoming frequencies 1035, should be 900

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  32 [100.0%]  (fallthru) 23 [16.7%] 
Successors:  34 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Invalid sum of incoming frequencies 1020, should be 900

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 22 [14.3%] 
Successors:  35 [90.0%]  (fallthru,dfs_back) 17 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Invalid sum of incoming frequencies 1007, should be 900

Basic block 35 prev 34, next 36, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  34 [90.0%]  (fallthru,dfs_back) 36 [100.0%]  21 [12.5%] 
Successors:  36 [90.0%]  (fallthru,dfs_back) 17 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 36 prev 35, next 37, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  35 [90.0%]  (fallthru,dfs_back)
Successors:  35 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287

Basic block 37 prev 36, next 38, loop_depth 0, count 0, freq 746, maybe hot.
Predecessors:  4 [90.0%] 
Successors:  38 [90.0%]  (fallthru,dfs_back) 7 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 75 82 83 84 86 95 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

Basic block 38 prev 37, next 39, loop_depth 0, count 0, freq 575, maybe hot.
Predecessors:  37 [90.0%]  (fallthru,dfs_back)
Successors:  39 [87.5%]  (fallthru) 52 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

Basic block 39 prev 38, next 40, loop_depth 0, count 0, freq 559, maybe hot.
Predecessors:  38 [87.5%]  (fallthru)
Successors:  40 [85.7%]  (fallthru) 51 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

Basic block 40 prev 39, next 41, loop_depth 0, count 0, freq 537, maybe hot.
Predecessors:  39 [85.7%]  (fallthru)
Successors:  41 [83.3%]  (fallthru) 50 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

Basic block 41 prev 40, next 42, loop_depth 0, count 0, freq 503, maybe hot.
Predecessors:  40 [83.3%]  (fallthru)
Successors:  42 [80.0%]  (fallthru) 49 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

Basic block 42 prev 41, next 43, loop_depth 0, count 0, freq 447, maybe hot.
Predecessors:  41 [80.0%]  (fallthru)
Successors:  43 [75.0%]  (fallthru) 48 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

Basic block 43 prev 42, next 44, loop_depth 0, count 0, freq 336, maybe hot.
Predecessors:  42 [75.0%]  (fallthru)
Successors:  44 [66.7%]  (fallthru) 47 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

Basic block 44 prev 43, next 45, loop_depth 0, count 0, freq 671, maybe hot.
Predecessors:  43 [66.7%]  (fallthru)
Successors:  45 [50.0%]  (fallthru) 46 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Invalid sum of incoming frequencies 224, should be 671

Basic block 45 prev 44, next 46, loop_depth 0, count 0, freq 671, maybe hot.
Predecessors:  44 [50.0%]  (fallthru)
Successors:  46 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Invalid sum of incoming frequencies 336, should be 671

Basic block 46 prev 45, next 47, loop_depth 0, count 0, freq 671, maybe hot.
Predecessors:  45 [100.0%]  (fallthru) 44 [50.0%] 
Successors:  47 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Invalid sum of incoming frequencies 1007, should be 671

Basic block 47 prev 46, next 48, loop_depth 0, count 0, freq 671, maybe hot.
Predecessors:  46 [100.0%]  (fallthru) 43 [33.3%] 
Successors:  48 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Invalid sum of incoming frequencies 783, should be 671

Basic block 48 prev 47, next 49, loop_depth 0, count 0, freq 671, maybe hot.
Predecessors:  47 [100.0%]  (fallthru) 42 [25.0%] 
Successors:  49 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Invalid sum of incoming frequencies 783, should be 671

Basic block 49 prev 48, next 50, loop_depth 0, count 0, freq 671, maybe hot.
Predecessors:  48 [100.0%]  (fallthru) 41 [20.0%] 
Successors:  50 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Invalid sum of incoming frequencies 772, should be 671

Basic block 50 prev 49, next 51, loop_depth 0, count 0, freq 671, maybe hot.
Predecessors:  49 [100.0%]  (fallthru) 40 [16.7%] 
Successors:  51 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

Basic block 51 prev 50, next 52, loop_depth 0, count 0, freq 671, maybe hot.
Predecessors:  50 [100.0%]  (fallthru) 39 [14.3%] 
Successors:  52 [90.0%]  (fallthru,dfs_back) 7 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

Basic block 52 prev 51, next 53, loop_depth 1, count 0, freq 755, maybe hot.
Predecessors:  51 [90.0%]  (fallthru,dfs_back) 53 [100.0%]  38 [12.5%] 
Successors:  53 [90.0%]  (fallthru,dfs_back) 7 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Invalid sum of incoming frequencies 1356, should be 755

Basic block 53 prev 52, next 54, loop_depth 1, count 0, freq 680, maybe hot.
Predecessors:  52 [90.0%]  (fallthru,dfs_back)
Successors:  52 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

Basic block 54 prev 53, next 55, loop_depth 0, count 0, freq 254, maybe hot.
Predecessors:  85 [10.0%]  71 [10.0%]  86 [10.0%]  (loop_exit)
Successors:  55 [90.0%]  (fallthru,dfs_back) 14 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
Invalid sum of incoming frequencies 74, should be 254

Basic block 55 prev 54, next 56, loop_depth 0, count 0, freq 196, maybe hot.
Predecessors:  54 [90.0%]  (fallthru,dfs_back)
Successors:  56 [87.5%]  (fallthru) 69 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

Basic block 56 prev 55, next 57, loop_depth 0, count 0, freq 191, maybe hot.
Predecessors:  55 [87.5%]  (fallthru)
Successors:  57 [85.7%]  (fallthru) 68 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

Basic block 57 prev 56, next 58, loop_depth 0, count 0, freq 183, maybe hot.
Predecessors:  56 [85.7%]  (fallthru)
Successors:  58 [83.3%]  (fallthru) 67 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

Basic block 58 prev 57, next 59, loop_depth 0, count 0, freq 172, maybe hot.
Predecessors:  57 [83.3%]  (fallthru)
Successors:  59 [80.0%]  (fallthru) 66 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

Basic block 59 prev 58, next 60, loop_depth 0, count 0, freq 153, maybe hot.
Predecessors:  58 [80.0%]  (fallthru)
Successors:  60 [75.0%]  (fallthru) 65 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

Basic block 60 prev 59, next 61, loop_depth 0, count 0, freq 115, maybe hot.
Predecessors:  59 [75.0%]  (fallthru)
Successors:  61 [66.7%]  (fallthru) 64 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

Basic block 61 prev 60, next 62, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  60 [66.7%]  (fallthru)
Successors:  62 [50.0%]  (fallthru) 63 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Invalid sum of incoming frequencies 77, should be 229

Basic block 62 prev 61, next 63, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  61 [50.0%]  (fallthru)
Successors:  63 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Invalid sum of incoming frequencies 115, should be 229

Basic block 63 prev 62, next 64, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  62 [100.0%]  (fallthru) 61 [50.0%] 
Successors:  64 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Invalid sum of incoming frequencies 344, should be 229

Basic block 64 prev 63, next 65, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  63 [100.0%]  (fallthru) 60 [33.3%] 
Successors:  65 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

Basic block 65 prev 64, next 66, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  64 [100.0%]  (fallthru) 59 [25.0%] 
Successors:  66 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

Basic block 66 prev 65, next 67, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  65 [100.0%]  (fallthru) 58 [20.0%] 
Successors:  67 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

Basic block 67 prev 66, next 68, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  66 [100.0%]  (fallthru) 57 [16.7%] 
Successors:  68 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

Basic block 68 prev 67, next 69, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  67 [100.0%]  (fallthru) 56 [14.3%] 
Successors:  69 [90.0%]  (fallthru,dfs_back) 14 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

Basic block 69 prev 68, next 70, loop_depth 1, count 0, freq 257, maybe hot.
Predecessors:  68 [90.0%]  (fallthru,dfs_back) 70 [100.0%]  55 [12.5%] 
Successors:  70 [90.0%]  (fallthru,dfs_back) 14 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Invalid sum of incoming frequencies 463, should be 257

Basic block 70 prev 69, next 71, loop_depth 1, count 0, freq 232, maybe hot.
Predecessors:  69 [90.0%]  (fallthru,dfs_back)
Successors:  69 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

Basic block 71 prev 70, next 72, loop_depth 0, count 0, freq 254, maybe hot.
Predecessors:  11 [90.0%] 
Successors:  72 [90.0%]  (fallthru,dfs_back) 54 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

Basic block 72 prev 71, next 73, loop_depth 0, count 0, freq 196, maybe hot.
Predecessors:  71 [90.0%]  (fallthru,dfs_back)
Successors:  73 [87.5%]  (fallthru) 86 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

Basic block 73 prev 72, next 74, loop_depth 0, count 0, freq 191, maybe hot.
Predecessors:  72 [87.5%]  (fallthru)
Successors:  74 [85.7%]  (fallthru) 85 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

Basic block 74 prev 73, next 75, loop_depth 0, count 0, freq 183, maybe hot.
Predecessors:  73 [85.7%]  (fallthru)
Successors:  75 [83.3%]  (fallthru) 84 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

Basic block 75 prev 74, next 76, loop_depth 0, count 0, freq 172, maybe hot.
Predecessors:  74 [83.3%]  (fallthru)
Successors:  76 [80.0%]  (fallthru) 83 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

Basic block 76 prev 75, next 77, loop_depth 0, count 0, freq 153, maybe hot.
Predecessors:  75 [80.0%]  (fallthru)
Successors:  77 [75.0%]  (fallthru) 82 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

Basic block 77 prev 76, next 78, loop_depth 0, count 0, freq 115, maybe hot.
Predecessors:  76 [75.0%]  (fallthru)
Successors:  78 [66.7%]  (fallthru) 81 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

Basic block 78 prev 77, next 79, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  77 [66.7%]  (fallthru)
Successors:  79 [50.0%]  (fallthru) 80 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 196 201
Invalid sum of incoming frequencies 77, should be 229

Basic block 79 prev 78, next 80, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  78 [50.0%]  (fallthru)
Successors:  80 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Invalid sum of incoming frequencies 115, should be 229

Basic block 80 prev 79, next 81, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  79 [100.0%]  (fallthru) 78 [50.0%] 
Successors:  81 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Invalid sum of incoming frequencies 344, should be 229

Basic block 81 prev 80, next 82, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  80 [100.0%]  (fallthru) 77 [33.3%] 
Successors:  82 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

Basic block 82 prev 81, next 83, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  81 [100.0%]  (fallthru) 76 [25.0%] 
Successors:  83 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

Basic block 83 prev 82, next 84, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  82 [100.0%]  (fallthru) 75 [20.0%] 
Successors:  84 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

Basic block 84 prev 83, next 85, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  83 [100.0%]  (fallthru) 74 [16.7%] 
Successors:  85 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

Basic block 85 prev 84, next 86, loop_depth 0, count 0, freq 229, maybe hot.
Predecessors:  84 [100.0%]  (fallthru) 73 [14.3%] 
Successors:  86 [90.0%]  (fallthru,dfs_back) 54 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

Basic block 86 prev 85, next 87, loop_depth 1, count 0, freq 257, maybe hot.
Predecessors:  85 [90.0%]  (fallthru,dfs_back) 87 [100.0%]  72 [12.5%] 
Successors:  87 [90.0%]  (fallthru,dfs_back) 54 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Invalid sum of incoming frequencies 463, should be 257

Basic block 87 prev 86, next -2, loop_depth 1, count 0, freq 232, maybe hot.
Predecessors:  86 [90.0%]  (fallthru,dfs_back)
Successors:  86 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

;; Register 77 in 1.
;; Register 92 in 1.
;; Register 93 in 5.
;; Register 94 in 5.
;; Register 97 in 21.
;; Register 100 in 0.
;; Register 104 in 1.
;; Register 105 in 0.
;; Register 106 in 1.
;; Register 107 in 0.
;; Register 108 in 1.
;; Register 110 in 21.
;; Register 113 in 0.
;; Register 114 in 0.
;; Register 115 in 0.
;; Register 116 in 0.
;; Register 117 in 0.
;; Register 118 in 21.
;; Register 125 in 1.
;; Register 144 in 0.
;; Register 150 in 0.
;; Register 158 in 21.
;; Register 163 in 21.
;; Register 167 in 0.
;; Register 168 in 21.
;; Register 172 in 0.
;; Register 173 in 21.
;; Register 177 in 0.
;; Register 178 in 21.
;; Register 182 in 0.
;; Register 183 in 21.
;; Register 187 in 0.
;; Register 188 in 21.
;; Register 192 in 0.
;; Register 193 in 21.
;; Register 197 in 1.
;; Register 198 in 1.
;; Register 199 in 1.
;; Register 200 in 0.
;; Register 203 in 1.
;; Register 204 in 1.
;; Register 205 in 1.
;; Register 206 in 0.
;; Register 209 in 1.
;; Register 210 in 1.
;; Register 211 in 1.
;; Register 212 in 0.
;; Register 215 in 1.
;; Register 216 in 1.
;; Register 217 in 1.
;; Register 218 in 0.
;; Register 221 in 1.
;; Register 222 in 1.
;; Register 223 in 1.
;; Register 224 in 0.
;; Register 227 in 1.
;; Register 228 in 1.
;; Register 229 in 1.
;; Register 230 in 0.
;; Register 233 in 1.
;; Register 234 in 1.
;; Register 235 in 1.
;; Register 236 in 0.
;; Register 239 in 1.
;; Register 240 in 1.
;; Register 241 in 1.
;; Register 242 in 0.
;; Register 247 in 21.
;; Register 252 in 21.
;; Register 256 in 0.
;; Register 257 in 21.
;; Register 261 in 0.
;; Register 262 in 21.
;; Register 266 in 0.
;; Register 267 in 21.
;; Register 271 in 0.
;; Register 272 in 21.
;; Register 276 in 0.
;; Register 277 in 21.
;; Register 281 in 0.
;; Register 282 in 21.
;; Register 309 in 21.
;; Register 312 in 21.
;; Register 315 in 21.
;; Register 318 in 21.
;; Register 321 in 21.
;; Register 324 in 21.
;; Register 327 in 21.
;; Register 330 in 21.
;; Register 333 in 21.
;; Register 336 in 21.
;; Register 339 in 21.
;; Register 342 in 21.
;; Register 345 in 21.
;; Register 348 in 21.
;; Register 351 in 1.
;; Register 352 in 1.
;; Register 353 in 1.
;; Register 354 in 0.
;; Register 355 in 1.
;; Register 356 in 1.
;; Register 357 in 1.
;; Register 358 in 0.
;; Register 359 in 1.
;; Register 360 in 1.
;; Register 361 in 1.
;; Register 362 in 0.
;; Register 363 in 1.
;; Register 364 in 1.
;; Register 365 in 1.
;; Register 366 in 0.
;; Register 367 in 1.
;; Register 368 in 1.
;; Register 369 in 1.
;; Register 370 in 0.
;; Register 371 in 1.
;; Register 372 in 1.
;; Register 373 in 1.
;; Register 374 in 0.
;; Register 375 in 1.
;; Register 376 in 1.
;; Register 377 in 1.
;; Register 378 in 0.
;; Register 379 in 0.
;; Register 380 in 0.
;; Register 381 in 0.
;; Register 382 in 0.
;; Register 383 in 0.
;; Register 384 in 0.
;; Register 385 in 0.
;; Register 386 in 0.
;; Register 387 in 0.
;; Register 388 in 0.
;; Register 389 in 0.
;; Register 390 in 0.
;; Register 391 in 0.
;; Register 392 in 0.
;; Register 393 in 0.
(note:HI 1 0 10 ("./CppStatUtilities.cc") 69)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
(note:HI 10 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 10 4 0 ./CppStatUtilities.cc:69 (set (reg/v/f:DI 82 [ data ])
        (reg:DI 5 di [ data ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))

(insn:HI 4 3 5 0 ./CppStatUtilities.cc:69 (set (reg/v:SI 83 [ dataSize ])
        (reg:SI 4 si [ dataSize ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ dataSize ])
        (nil)))

(insn:HI 5 4 6 0 ./CppStatUtilities.cc:69 (set (reg/v/f:DI 84 [ summary ])
        (reg:DI 1 dx [ summary ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 1 dx [ summary ])
        (nil)))

(insn:HI 6 5 7 0 ./CppStatUtilities.cc:69 (set (reg/v:SI 85 [ sample ])
        (reg:SI 2 cx [ sample ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 2 cx [ sample ])
        (nil)))

(insn:HI 7 6 8 0 ./CppStatUtilities.cc:69 (set (reg/v:DF 86 [ constant ])
        (reg:DF 21 xmm0 [ constant ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ constant ])
        (nil)))

(note:HI 8 7 12 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 12 8 13 0 ("./CppStatUtilities.cc") 72)

(insn:HI 13 12 14 0 ./CppStatUtilities.cc:72 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 85 [ sample ])
            (reg/v:SI 83 [ dataSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 4 (insn_list:REG_DEP_TRUE 6 (nil)))
    (nil))

(jump_insn:HI 14 13 17 0 ./CppStatUtilities.cc:72 (set (pc)
        (if_then_else (gt (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 282)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 17 [flags] 20 [frame] 82 83 84 85 86

(note:HI 17 14 16 ("./CppStatUtilities.cc") 74)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 17 [flags] 20 [frame] 82 83 84 85 86
(note:HI 16 17 18 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 18 16 19 1 ./CppStatUtilities.cc:74 (set (reg:DF 126)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC34") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn:HI 19 18 20 1 ./CppStatUtilities.cc:74 (set (mem/s:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 prob+0 S8 A64])
        (reg:DF 126)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 18 (nil))
    (nil))

(note:HI 20 19 21 1 NOTE_INSN_DELETED)

(insn:HI 21 20 22 1 ./CppStatUtilities.cc:74 (set (mem/s:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 prob+8 S8 A64])
        (const_double:DF 1.0e+0 [0x0.8p+1])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 22 21 23 1 NOTE_INSN_DELETED)

(insn:HI 23 22 24 1 ./CppStatUtilities.cc:74 (set (mem/s:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 prob+16 S8 A64])
        (const_double:DF 5.0e-1 [0x0.8p+0])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 24 23 25 1 NOTE_INSN_DELETED)

(insn:HI 25 24 26 1 ./CppStatUtilities.cc:74 (set (mem/s:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 prob+24 S8 A64])
        (const_double:DF 2.5e-1 [0x0.8p-1])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 26 25 27 1 NOTE_INSN_DELETED)

(insn:HI 27 26 28 1 ./CppStatUtilities.cc:74 (set (mem/s:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 prob+32 S8 A64])
        (const_double:DF 7.5e-1 [0x0.cp+0])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 28 27 30 1 ("./CppStatUtilities.cc") 77)

(jump_insn:HI 30 28 32 1 ./CppStatUtilities.cc:77 (set (pc)
        (if_then_else (ne (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5120 [0x1400])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 84 85 86 126

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 84 85 86 126
(note:HI 32 30 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 33 32 34 2 ./CppStatUtilities.cc:77 (set (reg/v:SI 75 [ xLen ])
        (reg/v:SI 85 [ sample ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 85 [ sample ])
        (nil)))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 82 83 84 86 126

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 82 83 84 86 126
(code_label:HI 34 33 35 3 1034 "" [1 uses])

(note:HI 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 36 35 37 3 ("./CppStatUtilities.cc") 79)

(insn:HI 37 36 38 3 ./CppStatUtilities.cc:79 (parallel [
            (set (reg/f:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 38 37 39 3 ./CppStatUtilities.cc:79 (set (reg:SI 37 r8)
        (const_int 100 [0x64])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 39 38 40 3 ./CppStatUtilities.cc:79 (set (reg:SI 2 cx)
        (const_int 5 [0x5])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 40 39 41 3 ./CppStatUtilities.cc:79 (set (reg:DI 1 dx)
        (reg/f:DI 92)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 37 (nil))
    (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn:HI 41 40 42 3 ./CppStatUtilities.cc:79 (set (reg:SI 4 si [ xLen ])
        (reg/v:SI 75 [ xLen ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 42 41 43 3 ./CppStatUtilities.cc:79 (set (reg:DI 5 di [ data ])
        (reg/v/f:DI 82 [ data ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 43 42 44 3 ./CppStatUtilities.cc:79 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z11percentilesPKdiS0_ii") [flags 0x3] <function_decl 0x2b5eb636a000 percentiles>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 38 (insn_list:REG_DEP_TRUE 39 (insn_list:REG_DEP_TRUE 40 (insn_list:REG_DEP_TRUE 41 (insn_list:REG_DEP_TRUE 42 (nil))))))
    (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:SI 4 si [ xLen ])
                    (expr_list:REG_DEAD (reg:DI 5 di [ data ])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ data ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ xLen ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 37 r8))
                        (nil)))))))

(insn:HI 44 43 45 3 ./CppStatUtilities.cc:79 (set (reg/v/f:DI 74 [ perc ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 43 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(note:HI 45 44 46 3 ("./CppStatUtilities.cc") 81)

(insn:HI 46 45 47 3 ./CppStatUtilities.cc:81 (set (reg:DI 93 [ xLen ])
        (sign_extend:DI (reg/v:SI 75 [ xLen ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 47 46 48 3 ./CppStatUtilities.cc:81 (parallel [
            (set (reg:DI 94)
                (ashift:DI (reg:DI 93 [ xLen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 93 [ xLen ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 48 47 49 3 ./CppStatUtilities.cc:81 (set (reg:DI 5 di)
        (reg:DI 94)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 47 (nil))
    (expr_list:REG_DEAD (reg:DI 94)
        (nil)))

(call_insn:HI 49 48 50 3 ./CppStatUtilities.cc:81 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 48 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 50 49 52 3 ./CppStatUtilities.cc:81 (set (reg/f:DI 95)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 49 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 95)
            (nil))))

(note:HI 52 50 53 3 ("./CppStatUtilities.cc") 82)

(insn:HI 53 52 54 3 ./CppStatUtilities.cc:82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95)
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 50 (nil))
    (nil))

(jump_insn:HI 54 53 57 3 ./CppStatUtilities.cc:82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 53 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 75 82 83 84 86 95 126

(note:HI 57 54 59 ("./CppStatUtilities.cc") 81)

(note:HI 59 57 56 ("./CppStatUtilities.cc") 84)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 75 82 83 84 86 95 126
(note:HI 56 59 60 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 56 61 4 ./CppStatUtilities.cc:84 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 75 [ xLen ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 61 60 63 4 ./CppStatUtilities.cc:84 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 60 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 75 82 83 84 86 95 126

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 75 82 83 84 86 95 126
(note:HI 63 61 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 64 63 1616 5 ./CppStatUtilities.cc:84 (parallel [
            (set (reg/f:DI 65 [ prephitmp.1125 ])
                (plus:DI (reg/v/f:DI 74 [ perc ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(jump_insn:HI 1616 64 1617 5 (set (pc)
        (label_ref 99)) 548 {jump} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126

(barrier:HI 1617 1616 67)

;; Start of basic block 6, registers live: 7 [sp] 16 [argp] 20 [frame]
(code_label:HI 67 1617 68 6 1035 "" [1 uses])

(note:HI 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note:HI 69 68 70 6 ("./CppStatUtilities.cc") 82)

(insn:HI 70 69 71 6 ./CppStatUtilities.cc:82 (set (reg:SI 2 cx)
        (const_int 82 [0x52])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 71 70 72 6 ./CppStatUtilities.cc:82 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 72 71 73 6 ./CppStatUtilities.cc:82 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 73 72 74 6 ./CppStatUtilities.cc:82 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 74 73 75 6 ./CppStatUtilities.cc:82 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 75 74 76 6 ./CppStatUtilities.cc:82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 70 (insn_list:REG_DEP_TRUE 71 (insn_list:REG_DEP_TRUE 72 (insn_list:REG_DEP_TRUE 73 (insn_list:REG_DEP_TRUE 74 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 76 75 77 6 ./CppStatUtilities.cc:82 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 77 76 78 6 ./CppStatUtilities.cc:82 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 76 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 6, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 78 77 321)

(note:HI 321 78 322 NOTE_INSN_LOOP_BEG)

(note:HI 322 321 99 NOTE_INSN_LOOP_END)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126
(code_label:HI 99 322 100 7 1039 "" [4 uses])

(note:HI 100 99 101 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 101 100 102 7 ("./CppStatUtilities.cc") 87)

(insn:HI 102 101 103 7 ./CppStatUtilities.cc:87 (set (reg:SI 4 si [ xLen ])
        (reg/v:SI 75 [ xLen ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 75 [ xLen ])
        (nil)))

(insn:HI 103 102 104 7 ./CppStatUtilities.cc:87 (set (reg:DI 5 di [ res ])
        (reg/f:DI 95)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 104 103 105 7 ./CppStatUtilities.cc:87 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x41] <function_decl 0x2b5eb631e600 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 102 (insn_list:REG_DEP_TRUE 103 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ xLen ])
        (expr_list:REG_DEAD (reg:DI 5 di [ res ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ xLen ]))
            (nil))))

(note:HI 105 104 106 7 NOTE_INSN_DELETED)

(insn:HI 106 105 107 7 ./CppStatUtilities.cc:87 (set (reg/v:DF 73 [ mad ])
        (mult:DF (reg:DF 21 xmm0)
            (reg/v:DF 86 [ constant ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 104 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg/v:DF 86 [ constant ])
            (nil))))

(note:HI 107 106 108 7 ("./CppStatUtilities.cc") 89)

(insn:HI 108 107 109 7 ./CppStatUtilities.cc:89 (set (reg:DI 5 di [ res ])
        (reg/f:DI 95)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))

(call_insn:HI 109 108 1628 7 ./CppStatUtilities.cc:89 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 108 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ res ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (nil)))

(jump_insn:HI 1628 109 1629 7 (set (pc)
        (label_ref 229)) 548 {jump} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 73 74 82 83 84 126

(barrier:HI 1629 1628 112)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 84 85 86 126
(code_label:HI 112 1629 113 8 1032 "" [1 uses])

(note:HI 113 112 114 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note:HI 114 113 115 8 ("./CppStatUtilities.cc") 93)

(insn:HI 115 114 116 8 ./CppStatUtilities.cc:93 (set (reg:DI 100 [ sample ])
        (sign_extend:DI (reg/v:SI 85 [ sample ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 116 115 117 8 ./CppStatUtilities.cc:93 (parallel [
            (set (reg:DI 81 [ D.34501 ])
                (ashift:DI (reg:DI 100 [ sample ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 115 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 100 [ sample ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 117 116 118 8 ./CppStatUtilities.cc:93 (set (reg:DI 5 di [ D.34501 ])
        (reg:DI 81 [ D.34501 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 116 (nil))
    (nil))

(call_insn:HI 118 117 119 8 ./CppStatUtilities.cc:93 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 117 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ D.34501 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34501 ]))
        (nil)))

(insn:HI 119 118 121 8 ./CppStatUtilities.cc:93 (set (reg/f:DI 59 [ ivtmp.1158 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 118 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 101)
            (nil))))

(note:HI 121 119 122 8 ("./CppStatUtilities.cc") 94)

(insn:HI 122 121 123 8 ./CppStatUtilities.cc:94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 59 [ ivtmp.1158 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 119 (nil))
    (nil))

(jump_insn:HI 123 122 125 8 ./CppStatUtilities.cc:94 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 135)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 122 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 81 82 83 84 85 86 126

;; Start of basic block 9, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 125 123 126 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 126 125 127 9 ./CppStatUtilities.cc:94 (set (reg:SI 2 cx)
        (const_int 94 [0x5e])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 127 126 128 9 ./CppStatUtilities.cc:94 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 128 127 129 9 ./CppStatUtilities.cc:94 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 129 128 130 9 ./CppStatUtilities.cc:94 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 130 129 131 9 ./CppStatUtilities.cc:94 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 131 130 132 9 ./CppStatUtilities.cc:94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 126 (insn_list:REG_DEP_TRUE 127 (insn_list:REG_DEP_TRUE 128 (insn_list:REG_DEP_TRUE 129 (insn_list:REG_DEP_TRUE 130 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 132 131 133 9 ./CppStatUtilities.cc:94 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 133 132 134 9 ./CppStatUtilities.cc:94 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 132 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 9, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 134 133 135)

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 81 82 83 84 85 86 126
(code_label:HI 135 134 136 10 1042 "" [1 uses])

(note:HI 136 135 137 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 137 136 138 10 ("./CppStatUtilities.cc") 96)

(insn:HI 138 137 139 10 ./CppStatUtilities.cc:96 (set (reg:DI 5 di [ D.34501 ])
        (reg:DI 81 [ D.34501 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 81 [ D.34501 ])
        (nil)))

(call_insn:HI 139 138 140 10 ./CppStatUtilities.cc:96 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b5eb3cce100 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 138 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ D.34501 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.34501 ]))
        (nil)))

(insn:HI 140 139 142 10 ./CppStatUtilities.cc:96 (set (reg/f:DI 102)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 139 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 102)
            (nil))))

(note:HI 142 140 143 10 ("./CppStatUtilities.cc") 97)

(insn:HI 143 142 144 10 ./CppStatUtilities.cc:97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 102)
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 140 (nil))
    (nil))

(jump_insn:HI 144 143 147 10 ./CppStatUtilities.cc:97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 143 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 82 83 84 85 86 102 126

(note:HI 147 144 146 ("./CppStatUtilities.cc") 93)

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 82 83 84 85 86 102 126
(note:HI 146 147 148 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 148 146 149 11 ./CppStatUtilities.cc:93 (set (reg/v/f:DI 70 [ x ])
        (reg/f:DI 59 [ ivtmp.1158 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 149 148 151 11 ("./CppStatUtilities.cc") 96)

(note:HI 151 149 152 11 ("./CppStatUtilities.cc") 100)

(insn:HI 152 151 153 11 ./CppStatUtilities.cc:100 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 85 [ sample ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 153 152 1630 11 ./CppStatUtilities.cc:100 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 169)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 152 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126
(note:HI 1630 153 1632 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1632 1630 1633 12 (set (pc)
        (label_ref 1631)) 548 {jump} (nil)
    (nil))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126

(barrier:HI 1633 1632 157)

;; Start of basic block 13, registers live: 7 [sp] 16 [argp] 20 [frame]
(code_label:HI 157 1633 158 13 1044 "" [1 uses])

(note:HI 158 157 159 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 159 158 160 13 ("./CppStatUtilities.cc") 97)

(insn:HI 160 159 161 13 ./CppStatUtilities.cc:97 (set (reg:SI 2 cx)
        (const_int 97 [0x61])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 161 160 162 13 ./CppStatUtilities.cc:97 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2] <string_cst 0x2b5eb671c300>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 162 161 163 13 ./CppStatUtilities.cc:97 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2] <string_cst 0x2b5eb66c6f50>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 163 162 164 13 ./CppStatUtilities.cc:97 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b5eb42da790 stderr>) [11 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 164 163 165 13 ./CppStatUtilities.cc:97 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 165 164 166 13 ./CppStatUtilities.cc:97 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b5eb3c9fd00 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 160 (insn_list:REG_DEP_TRUE 161 (insn_list:REG_DEP_TRUE 162 (insn_list:REG_DEP_TRUE 163 (insn_list:REG_DEP_TRUE 164 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 166 165 167 13 ./CppStatUtilities.cc:97 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 167 166 168 13 ./CppStatUtilities.cc:97 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b5eb3cc3b00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 166 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 13, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 168 167 323)

(note:HI 323 168 324 NOTE_INSN_LOOP_BEG)

(note:HI 324 323 325 NOTE_INSN_LOOP_END)

(note:HI 325 324 326 NOTE_INSN_LOOP_BEG)

(note:HI 326 325 215 NOTE_INSN_LOOP_END)

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126
(code_label:HI 215 326 216 14 1051 "" [4 uses])

(note:HI 216 215 217 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 217 216 218 14 ("./CppStatUtilities.cc") 108)

(insn:HI 218 217 219 14 ./CppStatUtilities.cc:108 (set (reg:SI 4 si [ sample ])
        (reg/v:SI 85 [ sample ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 85 [ sample ])
        (nil)))

(insn:HI 219 218 220 14 ./CppStatUtilities.cc:108 (set (reg:DI 5 di [ res ])
        (reg/f:DI 102)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 220 219 221 14 ./CppStatUtilities.cc:108 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x41] <function_decl 0x2b5eb631e600 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 218 (insn_list:REG_DEP_TRUE 219 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ sample ])
        (expr_list:REG_DEAD (reg:DI 5 di [ res ])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ sample ]))
            (nil))))

(note:HI 221 220 222 14 NOTE_INSN_DELETED)

(insn:HI 222 221 223 14 ./CppStatUtilities.cc:108 (set (reg/v:DF 73 [ mad ])
        (mult:DF (reg:DF 21 xmm0)
            (reg/v:DF 86 [ constant ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 220 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg/v:DF 86 [ constant ])
            (nil))))

(note:HI 223 222 224 14 ("./CppStatUtilities.cc") 110)

(insn:HI 224 223 225 14 ./CppStatUtilities.cc:110 (set (reg:DI 5 di [ res ])
        (reg/f:DI 102)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))

(call_insn:HI 225 224 226 14 ./CppStatUtilities.cc:110 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 224 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ res ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (nil)))

(note:HI 226 225 227 14 ("./CppStatUtilities.cc") 111)

(insn:HI 227 226 228 14 ./CppStatUtilities.cc:111 (set (reg:DI 5 di [ x ])
        (reg/v/f:DI 70 [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 70 [ x ])
        (nil)))

(call_insn:HI 228 227 229 14 ./CppStatUtilities.cc:111 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 227 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ x ]))
        (nil)))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 73 74 82 83 84 126

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 73 74 82 83 84 126
(code_label:HI 229 228 230 15 1041 "" [1 uses])

(note:HI 230 229 231 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 231 230 232 15 ("./CppStatUtilities.cc") 114)

(insn:HI 232 231 233 15 ./CppStatUtilities.cc:114 (set (reg:DF 113)
        (mem:DF (reg/v/f:DI 74 [ perc ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 74 [ perc ]) [3 S8 A64])
        (nil)))

(insn:HI 233 232 234 15 ./CppStatUtilities.cc:114 (set (mem/s:DF (reg/v/f:DI 84 [ summary ]) [3 <variable>.min+0 S8 A64])
        (reg:DF 113)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 232 (nil))
    (expr_list:REG_DEAD (reg:DF 113)
        (nil)))

(note:HI 234 233 235 15 ("./CppStatUtilities.cc") 115)

(insn:HI 235 234 236 15 ./CppStatUtilities.cc:115 (set (reg:DF 114)
        (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                (const_int 8 [0x8])) [3 S8 A64])
        (nil)))

(insn:HI 236 235 237 15 ./CppStatUtilities.cc:115 (set (mem/s:DF (plus:DI (reg/v/f:DI 84 [ summary ])
                (const_int 8 [0x8])) [3 <variable>.max+0 S8 A64])
        (reg:DF 114)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 235 (nil))
    (expr_list:REG_DEAD (reg:DF 114)
        (nil)))

(note:HI 237 236 238 15 ("./CppStatUtilities.cc") 116)

(insn:HI 238 237 239 15 ./CppStatUtilities.cc:116 (set (reg:DF 115)
        (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg/v/f:DI 84 [ summary ])
                (const_int 16 [0x10])) [3 <variable>.med+0 S8 A64])
        (expr_list:REG_DEAD (reg/f:DI 65 [ prephitmp.1125 ])
            (nil))))

(insn:HI 239 238 240 15 ./CppStatUtilities.cc:116 (set (mem/s:DF (plus:DI (reg/v/f:DI 84 [ summary ])
                (const_int 16 [0x10])) [3 <variable>.med+0 S8 A64])
        (reg:DF 115)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 238 (nil))
    (expr_list:REG_DEAD (reg:DF 115)
        (nil)))

(note:HI 240 239 241 15 ("./CppStatUtilities.cc") 117)

(insn:HI 241 240 242 15 ./CppStatUtilities.cc:117 (set (mem/s:DF (plus:DI (reg/v/f:DI 84 [ summary ])
                (const_int 32 [0x20])) [3 <variable>.mad+0 S8 A64])
        (reg/v:DF 73 [ mad ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 73 [ mad ])
        (nil)))

(note:HI 242 241 243 15 ("./CppStatUtilities.cc") 118)

(insn:HI 243 242 244 15 ./CppStatUtilities.cc:118 (set (reg:DF 116)
        (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                (const_int 24 [0x18])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                (const_int 24 [0x18])) [3 S8 A64])
        (nil)))

(insn:HI 244 243 245 15 ./CppStatUtilities.cc:118 (set (mem/s:DF (plus:DI (reg/v/f:DI 84 [ summary ])
                (const_int 40 [0x28])) [3 <variable>.q1+0 S8 A64])
        (reg:DF 116)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 243 (nil))
    (expr_list:REG_DEAD (reg:DF 116)
        (nil)))

(note:HI 245 244 246 15 ("./CppStatUtilities.cc") 119)

(insn:HI 246 245 247 15 ./CppStatUtilities.cc:119 (set (reg:DF 117)
        (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                (const_int 32 [0x20])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                (const_int 32 [0x20])) [3 S8 A64])
        (nil)))

(insn:HI 247 246 248 15 ./CppStatUtilities.cc:119 (set (mem/s:DF (plus:DI (reg/v/f:DI 84 [ summary ])
                (const_int 48 [0x30])) [3 <variable>.q3+0 S8 A64])
        (reg:DF 117)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 246 (nil))
    (expr_list:REG_DEAD (reg:DF 117)
        (nil)))

(note:HI 248 247 249 15 ("./CppStatUtilities.cc") 123)

(insn:HI 249 248 250 15 ./CppStatUtilities.cc:123 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 83 [ dataSize ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 250 249 252 15 ./CppStatUtilities.cc:123 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 256)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 249 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 126

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 126
(note:HI 252 250 330 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 330 252 327 16 ./CppStatUtilities.cc:123 (set (reg/v:DF 287 [ mean.1166 ])
        (reg:DF 126)) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 126)
        (nil)))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 287

(note:HI 327 330 328 NOTE_INSN_LOOP_BEG)

(note:HI 328 327 270 NOTE_INSN_LOOP_END)

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 287
(code_label:HI 270 328 271 17 1054 "" [3 uses])

(note:HI 271 270 272 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 272 271 273 17 ("./CppStatUtilities.cc") 127)

(insn:HI 273 272 274 17 ./CppStatUtilities.cc:127 (set (reg:DF 118)
        (float:DF (reg/v:SI 83 [ dataSize ]))) 175 {*floatsidf2_sse} (nil)
    (expr_list:REG_DEAD (reg/v:SI 83 [ dataSize ])
        (nil)))

(insn:HI 274 273 275 17 ./CppStatUtilities.cc:127 (set (reg/v:DF 287 [ mean.1166 ])
        (div:DF (reg/v:DF 287 [ mean.1166 ])
            (reg:DF 118))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 273 (nil))
    (expr_list:REG_DEAD (reg:DF 118)
        (nil)))

(insn:HI 275 274 276 17 ./CppStatUtilities.cc:127 (set (mem/s:DF (plus:DI (reg/v/f:DI 84 [ summary ])
                (const_int 24 [0x18])) [3 <variable>.mean+0 S8 A64])
        (reg/v:DF 287 [ mean.1166 ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 274 (nil))
    (expr_list:REG_DEAD (reg/v:DF 287 [ mean.1166 ])
        (expr_list:REG_DEAD (reg/v/f:DI 84 [ summary ])
            (nil))))

(note:HI 276 275 277 17 ("./CppStatUtilities.cc") 129)

(insn:HI 277 276 278 17 ./CppStatUtilities.cc:129 (set (reg:DI 5 di [ perc ])
        (reg/v/f:DI 74 [ perc ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 74 [ perc ])
        (nil)))

(call_insn:HI 278 277 312 17 ./CppStatUtilities.cc:129 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b5eb5102400 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 277 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ perc ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ perc ]))
        (nil)))

(note:HI 312 278 313 17 NOTE_INSN_FUNCTION_END)

(note:HI 313 312 282 17 ("./CppStatUtilities.cc") 130)
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 82 83 84 86
(code_label:HI 282 313 283 18 1030 "" [1 uses])

(note:HI 283 282 284 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 284 283 285 18 ("./CppStatUtilities.cc") 74)

(insn:HI 285 284 286 18 ./CppStatUtilities.cc:74 (set (reg:DF 126)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC34") [flags 0x2]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn:HI 286 285 287 18 ./CppStatUtilities.cc:74 (set (mem/s:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 prob+0 S8 A64])
        (reg:DF 126)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 285 (nil))
    (nil))

(note:HI 287 286 288 18 NOTE_INSN_DELETED)

(insn:HI 288 287 289 18 ./CppStatUtilities.cc:74 (set (mem/s:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 prob+8 S8 A64])
        (const_double:DF 1.0e+0 [0x0.8p+1])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 289 288 290 18 NOTE_INSN_DELETED)

(insn:HI 290 289 291 18 ./CppStatUtilities.cc:74 (set (mem/s:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 prob+16 S8 A64])
        (const_double:DF 5.0e-1 [0x0.8p+0])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 291 290 292 18 NOTE_INSN_DELETED)

(insn:HI 292 291 293 18 ./CppStatUtilities.cc:74 (set (mem/s:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 prob+24 S8 A64])
        (const_double:DF 2.5e-1 [0x0.8p-1])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 293 292 294 18 NOTE_INSN_DELETED)

(insn:HI 294 293 295 18 ./CppStatUtilities.cc:74 (set (mem/s:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 prob+32 S8 A64])
        (const_double:DF 7.5e-1 [0x0.cp+0])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 295 294 1667 18 ./CppStatUtilities.cc:74 (set (reg/v:SI 75 [ xLen ])
        (reg/v:SI 83 [ dataSize ])) 40 {*movsi_1} (nil)
    (nil))

(jump_insn:HI 1667 295 1668 18 (set (pc)
        (label_ref 34)) 548 {jump} (nil)
    (nil))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 75 82 83 84 86 126

(barrier:HI 1668 1667 1631)

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126
(code_label:HI 1631 1668 299 19 1151 "" [1 uses])

(note:HI 299 1631 300 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 300 299 301 19 ("./CppStatUtilities.cc") 103)

(insn:HI 301 300 302 19 ./CppStatUtilities.cc:103 (parallel [
            (set (reg/f:DI 125)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 302 301 303 19 ./CppStatUtilities.cc:103 (set (reg:SI 37 r8)
        (const_int 100 [0x64])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 303 302 304 19 ./CppStatUtilities.cc:103 (set (reg:SI 2 cx)
        (const_int 5 [0x5])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 304 303 305 19 ./CppStatUtilities.cc:103 (set (reg:DI 1 dx)
        (reg/f:DI 125)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 301 (nil))
    (expr_list:REG_DEAD (reg/f:DI 125)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn:HI 305 304 306 19 ./CppStatUtilities.cc:103 (set (reg:SI 4 si [ sample ])
        (reg/v:SI 85 [ sample ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 306 305 307 19 ./CppStatUtilities.cc:103 (set (reg:DI 5 di [ x ])
        (reg/f:DI 59 [ ivtmp.1158 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 59 [ ivtmp.1158 ])
        (nil)))

(call_insn:HI 307 306 308 19 ./CppStatUtilities.cc:103 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z11percentilesPKdiS0_ii") [flags 0x3] <function_decl 0x2b5eb636a000 percentiles>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 302 (insn_list:REG_DEP_TRUE 303 (insn_list:REG_DEP_TRUE 304 (insn_list:REG_DEP_TRUE 305 (insn_list:REG_DEP_TRUE 306 (nil))))))
    (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:SI 4 si [ sample ])
                    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ x ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ sample ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 37 r8))
                        (nil)))))))

(insn:HI 308 307 309 19 ./CppStatUtilities.cc:103 (set (reg/v/f:DI 74 [ perc ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 307 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 309 308 1669 19 ./CppStatUtilities.cc:103 (parallel [
            (set (reg/f:DI 65 [ prephitmp.1125 ])
                (plus:DI (reg/v/f:DI 74 [ perc ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 308 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(jump_insn:HI 1669 309 1670 19 (set (pc)
        (label_ref 215)) 548 {jump} (nil)
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126

(barrier:HI 1670 1669 256)

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 126
(code_label:HI 256 1670 257 20 1052 "" [1 uses])

(note:HI 257 256 358 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note:HI 358 257 359 20 NOTE_INSN_DELETED)

(insn:HI 359 358 360 20 (parallel [
            (set (reg:SI 138)
                (plus:SI (reg/v:SI 83 [ dataSize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 360 359 363 20 (parallel [
            (set (reg:SI 138)
                (and:SI (reg:SI 138)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 359 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 363 360 364 20 ("./CppStatUtilities.cc") 124)

(insn:HI 364 363 365 20 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (mem:DF (reg/v/f:DI 82 [ data ]) [3 S8 A64])
            (reg:DF 126))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 126)
        (nil)))

(note:HI 365 364 366 20 ("./CppStatUtilities.cc") 123)

(insn:HI 366 365 367 20 ./CppStatUtilities.cc:123 (set (reg/v:SI 285 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 367 366 368 20 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/f:DI 286 [ ivtmp.1141 ])
                (plus:DI (reg/v/f:DI 82 [ data ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 368 367 369 20 ./CppStatUtilities.cc:123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 285 [ i ])
            (reg/v:SI 83 [ dataSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 366 (nil))
    (nil))

(jump_insn:HI 369 368 509 20 ./CppStatUtilities.cc:123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 270)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 368 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
(note:HI 509 369 507 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:HI 507 509 508 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 508 507 490 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 261)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 507 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
(note:HI 490 508 488 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 488 490 489 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 489 488 471 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1691)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 488 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
(note:HI 471 489 469 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:HI 469 471 470 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 470 469 452 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1692)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 469 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
(note:HI 452 470 450 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:HI 450 452 451 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 451 450 433 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1693)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 450 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
(note:HI 433 451 431 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:HI 431 433 432 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 432 431 414 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1694)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 431 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
(note:HI 414 432 412 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:HI 412 414 413 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 413 412 395 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1695)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 412 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 138 285 286 287
(note:HI 395 413 393 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:HI 393 395 394 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(jump_insn:HI 394 393 385 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1696)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 393 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 285 286 287

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 82 83 84 287
(note:HI 385 394 378 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note:HI 378 385 379 28 ("./CppStatUtilities.cc") 124)

(insn:HI 379 378 380 28 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (plus:DI (reg/v/f:DI 82 [ data ])
                    (const_int 8 [0x8])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 380 379 381 28 ("./CppStatUtilities.cc") 123)

(insn:HI 381 380 382 28 ./CppStatUtilities.cc:123 (set (reg/v:SI 285 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 382 381 1696 28 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/f:DI 286 [ ivtmp.1141 ])
                (plus:DI (reg/v/f:DI 82 [ data ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 82 [ data ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
(code_label:HI 1696 382 404 29 1168 "" [1 uses])

(note:HI 404 1696 397 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note:HI 397 404 398 29 ("./CppStatUtilities.cc") 124)

(insn:HI 398 397 399 29 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (reg/f:DI 286 [ ivtmp.1141 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 399 398 400 29 ("./CppStatUtilities.cc") 123)

(insn:HI 400 399 401 29 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/v:SI 285 [ i ])
                (plus:SI (reg/v:SI 285 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 401 400 1695 29 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/f:DI 286 [ ivtmp.1141 ])
                (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
(code_label:HI 1695 401 423 30 1167 "" [1 uses])

(note:HI 423 1695 416 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note:HI 416 423 417 30 ("./CppStatUtilities.cc") 124)

(insn:HI 417 416 418 30 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (reg/f:DI 286 [ ivtmp.1141 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 418 417 419 30 ("./CppStatUtilities.cc") 123)

(insn:HI 419 418 420 30 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/v:SI 285 [ i ])
                (plus:SI (reg/v:SI 285 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 420 419 1694 30 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/f:DI 286 [ ivtmp.1141 ])
                (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
(code_label:HI 1694 420 442 31 1166 "" [1 uses])

(note:HI 442 1694 435 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note:HI 435 442 436 31 ("./CppStatUtilities.cc") 124)

(insn:HI 436 435 437 31 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (reg/f:DI 286 [ ivtmp.1141 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 437 436 438 31 ("./CppStatUtilities.cc") 123)

(insn:HI 438 437 439 31 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/v:SI 285 [ i ])
                (plus:SI (reg/v:SI 285 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 439 438 1693 31 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/f:DI 286 [ ivtmp.1141 ])
                (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
(code_label:HI 1693 439 461 32 1165 "" [1 uses])

(note:HI 461 1693 454 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note:HI 454 461 455 32 ("./CppStatUtilities.cc") 124)

(insn:HI 455 454 456 32 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (reg/f:DI 286 [ ivtmp.1141 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 456 455 457 32 ("./CppStatUtilities.cc") 123)

(insn:HI 457 456 458 32 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/v:SI 285 [ i ])
                (plus:SI (reg/v:SI 285 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 458 457 1692 32 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/f:DI 286 [ ivtmp.1141 ])
                (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
(code_label:HI 1692 458 480 33 1164 "" [1 uses])

(note:HI 480 1692 473 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note:HI 473 480 474 33 ("./CppStatUtilities.cc") 124)

(insn:HI 474 473 475 33 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (reg/f:DI 286 [ ivtmp.1141 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 475 474 476 33 ("./CppStatUtilities.cc") 123)

(insn:HI 476 475 477 33 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/v:SI 285 [ i ])
                (plus:SI (reg/v:SI 285 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 477 476 1691 33 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/f:DI 286 [ ivtmp.1141 ])
                (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
(code_label:HI 1691 477 499 34 1163 "" [1 uses])

(note:HI 499 1691 492 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note:HI 492 499 493 34 ("./CppStatUtilities.cc") 124)

(insn:HI 493 492 494 34 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (reg/f:DI 286 [ ivtmp.1141 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 494 493 495 34 ("./CppStatUtilities.cc") 123)

(insn:HI 495 494 496 34 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/v:SI 285 [ i ])
                (plus:SI (reg/v:SI 285 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 496 495 497 34 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/f:DI 286 [ ivtmp.1141 ])
                (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 497 496 498 34 ./CppStatUtilities.cc:123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 285 [ i ])
            (reg/v:SI 83 [ dataSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 495 (nil))
    (nil))

(jump_insn:HI 498 497 261 34 ./CppStatUtilities.cc:123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 270)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 497 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
(code_label:HI 261 498 262 35 1055 "" [2 uses])

(note:HI 262 261 263 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note:HI 263 262 264 35 ("./CppStatUtilities.cc") 124)

(insn:HI 264 263 265 35 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (reg/f:DI 286 [ ivtmp.1141 ]) [3 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 265 264 511 35 ("./CppStatUtilities.cc") 123)

(note:HI 511 265 512 35 ("./CppStatUtilities.cc") 124)

(insn:HI 512 511 513 35 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 8 [0x8])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 264 (nil))
    (nil))

(note:HI 513 512 525 35 ("./CppStatUtilities.cc") 123)

(note:HI 525 513 526 35 ("./CppStatUtilities.cc") 124)

(insn:HI 526 525 527 35 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 16 [0x10])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 512 (nil))
    (nil))

(note:HI 527 526 539 35 ("./CppStatUtilities.cc") 123)

(note:HI 539 527 540 35 ("./CppStatUtilities.cc") 124)

(insn:HI 540 539 541 35 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 24 [0x18])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 526 (nil))
    (nil))

(note:HI 541 540 553 35 ("./CppStatUtilities.cc") 123)

(note:HI 553 541 554 35 ("./CppStatUtilities.cc") 124)

(insn:HI 554 553 555 35 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 32 [0x20])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 540 (nil))
    (nil))

(note:HI 555 554 567 35 ("./CppStatUtilities.cc") 123)

(note:HI 567 555 568 35 ("./CppStatUtilities.cc") 124)

(insn:HI 568 567 569 35 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 40 [0x28])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 554 (nil))
    (nil))

(note:HI 569 568 581 35 ("./CppStatUtilities.cc") 123)

(note:HI 581 569 582 35 ("./CppStatUtilities.cc") 124)

(insn:HI 582 581 583 35 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 48 [0x30])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 568 (nil))
    (nil))

(note:HI 583 582 595 35 ("./CppStatUtilities.cc") 123)

(note:HI 595 583 596 35 ("./CppStatUtilities.cc") 124)

(insn:HI 596 595 597 35 ./CppStatUtilities.cc:124 (set (reg/v:DF 287 [ mean.1166 ])
        (plus:DF (reg/v:DF 287 [ mean.1166 ])
            (mem:DF (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 56 [0x38])) [3 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 582 (nil))
    (nil))

(note:HI 597 596 598 35 ("./CppStatUtilities.cc") 123)

(insn:HI 598 597 599 35 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/v:SI 285 [ i ])
                (plus:SI (reg/v:SI 285 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 599 598 600 35 ./CppStatUtilities.cc:123 (parallel [
            (set (reg/f:DI 286 [ ivtmp.1141 ])
                (plus:DI (reg/f:DI 286 [ ivtmp.1141 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 600 599 601 35 ./CppStatUtilities.cc:123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 285 [ i ])
            (reg/v:SI 83 [ dataSize ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 598 (nil))
    (nil))

(jump_insn:HI 601 600 606 35 ./CppStatUtilities.cc:123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 270)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 600 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287
(note:HI 606 601 1674 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1674 606 1675 36 (set (pc)
        (label_ref 261)) 548 {jump} (nil)
    (nil))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 83 84 285 286 287

(barrier:HI 1675 1674 79)

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 75 82 83 84 86 95 126
(code_label:HI 79 1675 80 37 1037 "" [1 uses])

(note:HI 80 79 81 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn:HI 81 80 333 37 ./CppStatUtilities.cc:82 (parallel [
            (set (reg/f:DI 65 [ prephitmp.1125 ])
                (plus:DI (reg/v/f:DI 74 [ perc ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 333 81 624 37 (set (reg:V2DF 127)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC39") [flags 0x2]) [3 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(note:HI 624 333 625 37 NOTE_INSN_DELETED)

(insn:HI 625 624 626 37 (parallel [
            (set (reg:SI 143)
                (plus:SI (reg/v:SI 75 [ xLen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 626 625 629 37 (parallel [
            (set (reg:SI 143)
                (and:SI (reg:SI 143)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 625 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 629 626 630 37 ("./CppStatUtilities.cc") 69)

(note:HI 630 629 631 37 ("./CppStatUtilities.cc") 85)

(insn:HI 631 630 632 37 ./CppStatUtilities.cc:85 (set (reg:DF 97)
        (mem:DF (reg/v/f:DI 82 [ data ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 632 631 633 37 ./CppStatUtilities.cc:85 (set (reg:DF 97)
        (minus:DF (reg:DF 97)
            (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                    (const_int 16 [0x10])) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 631 (nil))
    (nil))

(insn:HI 633 632 634 37 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 97)
                (abs:DF (reg:DF 97)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 333 (insn_list:REG_DEP_TRUE 632 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 634 633 635 37 ./CppStatUtilities.cc:85 (set (mem:DF (reg/f:DI 95) [3 S8 A64])
        (reg:DF 97)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 633 (nil))
    (expr_list:REG_DEAD (reg:DF 97)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 96))
            (nil))))

(note:HI 635 634 636 37 ("./CppStatUtilities.cc") 84)

(insn:HI 636 635 637 37 ./CppStatUtilities.cc:84 (set (reg/v:SI 156 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 637 636 638 37 ./CppStatUtilities.cc:84 (set (reg:DI 157 [ ivtmp.1144 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 638 637 639 37 ./CppStatUtilities.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ i ])
            (reg/v:SI 75 [ xLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 636 (nil))
    (nil))

(jump_insn:HI 639 638 807 37 ./CppStatUtilities.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 99)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 638 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
(note:HI 807 639 805 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:HI 805 807 806 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 806 805 784 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 84)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 805 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
(note:HI 784 806 782 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn:HI 782 784 783 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 783 782 761 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1697)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 782 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
(note:HI 761 783 759 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn:HI 759 761 760 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 760 759 738 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1698)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 759 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
(note:HI 738 760 736 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn:HI 736 738 737 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 737 736 715 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1699)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 736 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
(note:HI 715 737 713 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:HI 713 715 714 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 714 713 692 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1700)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 713 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
(note:HI 692 714 690 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn:HI 690 692 691 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 691 690 669 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1701)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 690 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 143 156 157
(note:HI 669 691 667 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn:HI 667 669 668 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn:HI 668 667 659 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1702)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 667 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127
(note:HI 659 668 648 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(note:HI 648 659 649 45 ("./CppStatUtilities.cc") 69)

(note:HI 649 648 650 45 ("./CppStatUtilities.cc") 85)

(insn:HI 650 649 651 45 ./CppStatUtilities.cc:85 (set (reg:DF 309)
        (mem:DF (plus:DI (reg/v/f:DI 82 [ data ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 651 650 652 45 ./CppStatUtilities.cc:85 (set (reg:DF 309)
        (minus:DF (reg:DF 309)
            (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                    (const_int 16 [0x10])) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 650 (nil))
    (nil))

(insn:HI 652 651 653 45 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 309)
                (abs:DF (reg:DF 309)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 651 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 653 652 654 45 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (reg/f:DI 95)
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 309)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 652 (nil))
    (expr_list:REG_DEAD (reg:DF 309)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 310))
            (nil))))

(note:HI 654 653 655 45 ("./CppStatUtilities.cc") 84)

(insn:HI 655 654 656 45 ./CppStatUtilities.cc:84 (set (reg/v:SI 156 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 656 655 1702 45 ./CppStatUtilities.cc:84 (set (reg:DI 157 [ ivtmp.1144 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
(code_label:HI 1702 656 682 46 1174 "" [1 uses])

(note:HI 682 1702 671 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(note:HI 671 682 672 46 ("./CppStatUtilities.cc") 69)

(note:HI 672 671 673 46 ("./CppStatUtilities.cc") 85)

(insn:HI 673 672 674 46 ./CppStatUtilities.cc:85 (set (reg:DF 312)
        (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 674 673 675 46 ./CppStatUtilities.cc:85 (set (reg:DF 312)
        (minus:DF (reg:DF 312)
            (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                    (const_int 16 [0x10])) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 673 (nil))
    (nil))

(insn:HI 675 674 676 46 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 312)
                (abs:DF (reg:DF 312)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 674 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 676 675 677 46 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 312)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 675 (nil))
    (expr_list:REG_DEAD (reg:DF 312)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 313))
            (nil))))

(note:HI 677 676 678 46 ("./CppStatUtilities.cc") 84)

(insn:HI 678 677 679 46 ./CppStatUtilities.cc:84 (parallel [
            (set (reg/v:SI 156 [ i ])
                (plus:SI (reg/v:SI 156 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 679 678 1701 46 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 157 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
(code_label:HI 1701 679 705 47 1173 "" [1 uses])

(note:HI 705 1701 694 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(note:HI 694 705 695 47 ("./CppStatUtilities.cc") 69)

(note:HI 695 694 696 47 ("./CppStatUtilities.cc") 85)

(insn:HI 696 695 697 47 ./CppStatUtilities.cc:85 (set (reg:DF 315)
        (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 697 696 698 47 ./CppStatUtilities.cc:85 (set (reg:DF 315)
        (minus:DF (reg:DF 315)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 696 (nil))
    (nil))

(insn:HI 698 697 699 47 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 315)
                (abs:DF (reg:DF 315)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 697 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 699 698 700 47 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 315)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 698 (nil))
    (expr_list:REG_DEAD (reg:DF 315)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 316))
            (nil))))

(note:HI 700 699 701 47 ("./CppStatUtilities.cc") 84)

(insn:HI 701 700 702 47 ./CppStatUtilities.cc:84 (parallel [
            (set (reg/v:SI 156 [ i ])
                (plus:SI (reg/v:SI 156 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 702 701 1700 47 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 157 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
(code_label:HI 1700 702 728 48 1172 "" [1 uses])

(note:HI 728 1700 717 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(note:HI 717 728 718 48 ("./CppStatUtilities.cc") 69)

(note:HI 718 717 719 48 ("./CppStatUtilities.cc") 85)

(insn:HI 719 718 720 48 ./CppStatUtilities.cc:85 (set (reg:DF 318)
        (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 720 719 721 48 ./CppStatUtilities.cc:85 (set (reg:DF 318)
        (minus:DF (reg:DF 318)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 719 (nil))
    (nil))

(insn:HI 721 720 722 48 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 318)
                (abs:DF (reg:DF 318)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 720 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 722 721 723 48 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 318)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 721 (nil))
    (expr_list:REG_DEAD (reg:DF 318)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 319))
            (nil))))

(note:HI 723 722 724 48 ("./CppStatUtilities.cc") 84)

(insn:HI 724 723 725 48 ./CppStatUtilities.cc:84 (parallel [
            (set (reg/v:SI 156 [ i ])
                (plus:SI (reg/v:SI 156 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 725 724 1699 48 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 157 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
(code_label:HI 1699 725 751 49 1171 "" [1 uses])

(note:HI 751 1699 740 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note:HI 740 751 741 49 ("./CppStatUtilities.cc") 69)

(note:HI 741 740 742 49 ("./CppStatUtilities.cc") 85)

(insn:HI 742 741 743 49 ./CppStatUtilities.cc:85 (set (reg:DF 321)
        (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 743 742 744 49 ./CppStatUtilities.cc:85 (set (reg:DF 321)
        (minus:DF (reg:DF 321)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 742 (nil))
    (nil))

(insn:HI 744 743 745 49 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 321)
                (abs:DF (reg:DF 321)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 743 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 745 744 746 49 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 321)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 744 (nil))
    (expr_list:REG_DEAD (reg:DF 321)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 322))
            (nil))))

(note:HI 746 745 747 49 ("./CppStatUtilities.cc") 84)

(insn:HI 747 746 748 49 ./CppStatUtilities.cc:84 (parallel [
            (set (reg/v:SI 156 [ i ])
                (plus:SI (reg/v:SI 156 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 748 747 1698 49 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 157 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 49, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
(code_label:HI 1698 748 774 50 1170 "" [1 uses])

(note:HI 774 1698 763 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(note:HI 763 774 764 50 ("./CppStatUtilities.cc") 69)

(note:HI 764 763 765 50 ("./CppStatUtilities.cc") 85)

(insn:HI 765 764 766 50 ./CppStatUtilities.cc:85 (set (reg:DF 324)
        (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 766 765 767 50 ./CppStatUtilities.cc:85 (set (reg:DF 324)
        (minus:DF (reg:DF 324)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 765 (nil))
    (nil))

(insn:HI 767 766 768 50 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 324)
                (abs:DF (reg:DF 324)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 766 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 768 767 769 50 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 324)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 767 (nil))
    (expr_list:REG_DEAD (reg:DF 324)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 325))
            (nil))))

(note:HI 769 768 770 50 ("./CppStatUtilities.cc") 84)

(insn:HI 770 769 771 50 ./CppStatUtilities.cc:84 (parallel [
            (set (reg/v:SI 156 [ i ])
                (plus:SI (reg/v:SI 156 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 771 770 1697 50 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 157 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 50, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
(code_label:HI 1697 771 797 51 1169 "" [1 uses])

(note:HI 797 1697 786 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(note:HI 786 797 787 51 ("./CppStatUtilities.cc") 69)

(note:HI 787 786 788 51 ("./CppStatUtilities.cc") 85)

(insn:HI 788 787 789 51 ./CppStatUtilities.cc:85 (set (reg:DF 327)
        (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 789 788 790 51 ./CppStatUtilities.cc:85 (set (reg:DF 327)
        (minus:DF (reg:DF 327)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 788 (nil))
    (nil))

(insn:HI 790 789 791 51 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 327)
                (abs:DF (reg:DF 327)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 789 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 791 790 792 51 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 327)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 790 (nil))
    (expr_list:REG_DEAD (reg:DF 327)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 328))
            (nil))))

(note:HI 792 791 793 51 ("./CppStatUtilities.cc") 84)

(insn:HI 793 792 794 51 ./CppStatUtilities.cc:84 (parallel [
            (set (reg/v:SI 156 [ i ])
                (plus:SI (reg/v:SI 156 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 794 793 795 51 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 157 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 795 794 796 51 ./CppStatUtilities.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ i ])
            (reg/v:SI 75 [ xLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 793 (nil))
    (nil))

(jump_insn:HI 796 795 84 51 ./CppStatUtilities.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 99)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 795 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 51, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
(code_label:HI 84 796 85 52 1040 "" [2 uses])

(note:HI 85 84 86 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(note:HI 86 85 88 52 ("./CppStatUtilities.cc") 69)

(note:HI 88 86 89 52 ("./CppStatUtilities.cc") 85)

(insn:HI 89 88 90 52 ./CppStatUtilities.cc:85 (set (reg:DF 158)
        (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 90 89 92 52 ./CppStatUtilities.cc:85 (set (reg:DF 158)
        (minus:DF (reg:DF 158)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 89 (nil))
    (nil))

(insn:HI 92 90 93 52 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 158)
                (abs:DF (reg:DF 158)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 90 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 93 92 94 52 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 158)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 92 (nil))
    (expr_list:REG_DEAD (reg:DF 158)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 159))
            (nil))))

(note:HI 94 93 935 52 ("./CppStatUtilities.cc") 84)

(insn:HI 935 94 809 52 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 809 935 810 52 ("./CppStatUtilities.cc") 69)

(note:HI 810 809 811 52 ("./CppStatUtilities.cc") 85)

(insn:HI 811 810 812 52 ./CppStatUtilities.cc:85 (set (reg:DF 163)
        (mem:DF (plus:DI (mult:DI (reg:DI 144)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 935 (nil))
    (nil))

(insn:HI 812 811 813 52 ./CppStatUtilities.cc:85 (set (reg:DF 163)
        (minus:DF (reg:DF 163)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 811 (nil))
    (nil))

(insn:HI 813 812 814 52 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 163)
                (abs:DF (reg:DF 163)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 812 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 814 813 815 52 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 144)
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 163)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 813 (nil))
    (expr_list:REG_DEAD (reg:DF 163)
        (expr_list:REG_DEAD (reg:DI 144)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 164))
                (nil)))))

(note:HI 815 814 817 52 ("./CppStatUtilities.cc") 84)

(insn:HI 817 815 827 52 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 167 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 827 817 828 52 ("./CppStatUtilities.cc") 69)

(note:HI 828 827 829 52 ("./CppStatUtilities.cc") 85)

(insn:HI 829 828 830 52 ./CppStatUtilities.cc:85 (set (reg:DF 168)
        (mem:DF (plus:DI (mult:DI (reg:DI 167 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 817 (nil))
    (nil))

(insn:HI 830 829 831 52 ./CppStatUtilities.cc:85 (set (reg:DF 168)
        (minus:DF (reg:DF 168)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 829 (nil))
    (nil))

(insn:HI 831 830 832 52 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 168)
                (abs:DF (reg:DF 168)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 830 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 832 831 833 52 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 167 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 168)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 831 (nil))
    (expr_list:REG_DEAD (reg:DF 168)
        (expr_list:REG_DEAD (reg:DI 167 [ ivtmp.1144 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 169))
                (nil)))))

(note:HI 833 832 835 52 ("./CppStatUtilities.cc") 84)

(insn:HI 835 833 845 52 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 172 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 845 835 846 52 ("./CppStatUtilities.cc") 69)

(note:HI 846 845 847 52 ("./CppStatUtilities.cc") 85)

(insn:HI 847 846 848 52 ./CppStatUtilities.cc:85 (set (reg:DF 173)
        (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 835 (nil))
    (nil))

(insn:HI 848 847 849 52 ./CppStatUtilities.cc:85 (set (reg:DF 173)
        (minus:DF (reg:DF 173)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 847 (nil))
    (nil))

(insn:HI 849 848 850 52 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 173)
                (abs:DF (reg:DF 173)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 848 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 850 849 851 52 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 172 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 173)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 849 (nil))
    (expr_list:REG_DEAD (reg:DF 173)
        (expr_list:REG_DEAD (reg:DI 172 [ ivtmp.1144 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 174))
                (nil)))))

(note:HI 851 850 853 52 ("./CppStatUtilities.cc") 84)

(insn:HI 853 851 863 52 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 177 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 863 853 864 52 ("./CppStatUtilities.cc") 69)

(note:HI 864 863 865 52 ("./CppStatUtilities.cc") 85)

(insn:HI 865 864 866 52 ./CppStatUtilities.cc:85 (set (reg:DF 178)
        (mem:DF (plus:DI (mult:DI (reg:DI 177 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 853 (nil))
    (nil))

(insn:HI 866 865 867 52 ./CppStatUtilities.cc:85 (set (reg:DF 178)
        (minus:DF (reg:DF 178)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 865 (nil))
    (nil))

(insn:HI 867 866 868 52 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 178)
                (abs:DF (reg:DF 178)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 866 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 868 867 869 52 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 177 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 178)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 867 (nil))
    (expr_list:REG_DEAD (reg:DF 178)
        (expr_list:REG_DEAD (reg:DI 177 [ ivtmp.1144 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 179))
                (nil)))))

(note:HI 869 868 871 52 ("./CppStatUtilities.cc") 84)

(insn:HI 871 869 881 52 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 182 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 881 871 882 52 ("./CppStatUtilities.cc") 69)

(note:HI 882 881 883 52 ("./CppStatUtilities.cc") 85)

(insn:HI 883 882 884 52 ./CppStatUtilities.cc:85 (set (reg:DF 183)
        (mem:DF (plus:DI (mult:DI (reg:DI 182 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 871 (nil))
    (nil))

(insn:HI 884 883 885 52 ./CppStatUtilities.cc:85 (set (reg:DF 183)
        (minus:DF (reg:DF 183)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 883 (nil))
    (nil))

(insn:HI 885 884 886 52 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 183)
                (abs:DF (reg:DF 183)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 884 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 886 885 887 52 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 182 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 183)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 885 (nil))
    (expr_list:REG_DEAD (reg:DF 183)
        (expr_list:REG_DEAD (reg:DI 182 [ ivtmp.1144 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 184))
                (nil)))))

(note:HI 887 886 889 52 ("./CppStatUtilities.cc") 84)

(insn:HI 889 887 899 52 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 187 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 899 889 900 52 ("./CppStatUtilities.cc") 69)

(note:HI 900 899 901 52 ("./CppStatUtilities.cc") 85)

(insn:HI 901 900 902 52 ./CppStatUtilities.cc:85 (set (reg:DF 188)
        (mem:DF (plus:DI (mult:DI (reg:DI 187 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 889 (nil))
    (nil))

(insn:HI 902 901 903 52 ./CppStatUtilities.cc:85 (set (reg:DF 188)
        (minus:DF (reg:DF 188)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 901 (nil))
    (nil))

(insn:HI 903 902 904 52 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 188)
                (abs:DF (reg:DF 188)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 902 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 904 903 905 52 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 187 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 188)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 903 (nil))
    (expr_list:REG_DEAD (reg:DF 188)
        (expr_list:REG_DEAD (reg:DI 187 [ ivtmp.1144 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 189))
                (nil)))))

(note:HI 905 904 907 52 ("./CppStatUtilities.cc") 84)

(insn:HI 907 905 917 52 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 192 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 917 907 918 52 ("./CppStatUtilities.cc") 69)

(note:HI 918 917 919 52 ("./CppStatUtilities.cc") 85)

(insn:HI 919 918 920 52 ./CppStatUtilities.cc:85 (set (reg:DF 193)
        (mem:DF (plus:DI (mult:DI (reg:DI 192 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 907 (nil))
    (nil))

(insn:HI 920 919 921 52 ./CppStatUtilities.cc:85 (set (reg:DF 193)
        (minus:DF (reg:DF 193)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 919 (nil))
    (nil))

(insn:HI 921 920 922 52 ./CppStatUtilities.cc:85 (parallel [
            (set (reg:DF 193)
                (abs:DF (reg:DF 193)))
            (use (reg:V2DF 127))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 920 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 922 921 923 52 ./CppStatUtilities.cc:85 (set (mem:DF (plus:DI (mult:DI (reg:DI 192 [ ivtmp.1144 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 95)) [3 S8 A64])
        (reg:DF 193)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 921 (nil))
    (expr_list:REG_DEAD (reg:DF 193)
        (expr_list:REG_DEAD (reg:DI 192 [ ivtmp.1144 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 194))
                (nil)))))

(note:HI 923 922 924 52 ("./CppStatUtilities.cc") 84)

(insn:HI 924 923 925 52 ./CppStatUtilities.cc:84 (parallel [
            (set (reg/v:SI 156 [ i ])
                (plus:SI (reg/v:SI 156 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 925 924 926 52 ./CppStatUtilities.cc:84 (parallel [
            (set (reg:DI 157 [ ivtmp.1144 ])
                (plus:DI (reg:DI 157 [ ivtmp.1144 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 926 925 927 52 ./CppStatUtilities.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ i ])
            (reg/v:SI 75 [ xLen ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 924 (nil))
    (nil))

(jump_insn:HI 927 926 932 52 ./CppStatUtilities.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 99)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 926 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 52, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

;; Start of basic block 53, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157
(note:HI 932 927 1679 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1679 932 1680 53 (set (pc)
        (label_ref 84)) 548 {jump} (nil)
    (nil))
;; End of basic block 53, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 74 75 82 83 84 86 95 126 127 156 157

(barrier:HI 1680 1679 1686)

;; Start of basic block 54, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126
(code_label:HI 1686 1680 1275 54 1162 "" [3 uses])

(note:HI 1275 1686 188 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(note:HI 188 1275 189 54 ("./CppStatUtilities.cc") 103)

(insn:HI 189 188 190 54 ./CppStatUtilities.cc:103 (parallel [
            (set (reg/f:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 190 189 191 54 ./CppStatUtilities.cc:103 (set (reg:SI 37 r8)
        (const_int 100 [0x64])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 191 190 192 54 ./CppStatUtilities.cc:103 (set (reg:SI 2 cx)
        (const_int 5 [0x5])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 192 191 193 54 ./CppStatUtilities.cc:103 (set (reg:DI 1 dx)
        (reg/f:DI 108)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 189 (nil))
    (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))

(insn:HI 193 192 194 54 ./CppStatUtilities.cc:103 (set (reg:SI 4 si [ sample ])
        (reg/v:SI 85 [ sample ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 194 193 195 54 ./CppStatUtilities.cc:103 (set (reg:DI 5 di [ x ])
        (reg/v/f:DI 70 [ x ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 195 194 196 54 ./CppStatUtilities.cc:103 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z11percentilesPKdiS0_ii") [flags 0x3] <function_decl 0x2b5eb636a000 percentiles>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 190 (insn_list:REG_DEP_TRUE 191 (insn_list:REG_DEP_TRUE 192 (insn_list:REG_DEP_TRUE 193 (insn_list:REG_DEP_TRUE 194 (nil))))))
    (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:SI 4 si [ sample ])
                    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ x ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ sample ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 37 r8))
                        (nil)))))))

(insn:HI 196 195 197 54 ./CppStatUtilities.cc:103 (set (reg/v/f:DI 74 [ perc ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 195 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn:HI 197 196 334 54 ./CppStatUtilities.cc:103 (parallel [
            (set (reg/f:DI 65 [ prephitmp.1125 ])
                (plus:DI (reg/v/f:DI 74 [ perc ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 196 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 334 197 950 54 (set (reg:V2DF 244)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC39") [flags 0x2]) [3 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(note:HI 950 334 951 54 NOTE_INSN_DELETED)

(insn:HI 951 950 952 54 (parallel [
            (set (reg:SI 148)
                (plus:SI (reg/v:SI 85 [ sample ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 952 951 955 54 (parallel [
            (set (reg:SI 148)
                (and:SI (reg:SI 148)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 951 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 955 952 956 54 ("./CppStatUtilities.cc") 69)

(note:HI 956 955 957 54 ("./CppStatUtilities.cc") 106)

(insn:HI 957 956 958 54 ./CppStatUtilities.cc:106 (set (reg:DF 110)
        (mem:DF (reg/v/f:DI 70 [ x ]) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 958 957 959 54 ./CppStatUtilities.cc:106 (set (reg:DF 110)
        (minus:DF (reg:DF 110)
            (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                    (const_int 16 [0x10])) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 957 (nil))
    (nil))

(insn:HI 959 958 960 54 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 110)
                (abs:DF (reg:DF 110)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 334 (insn_list:REG_DEP_TRUE 958 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 960 959 961 54 ./CppStatUtilities.cc:106 (set (mem:DF (reg/f:DI 102) [3 S8 A64])
        (reg:DF 110)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 959 (nil))
    (expr_list:REG_DEAD (reg:DF 110)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 109))
            (nil))))

(note:HI 961 960 962 54 ("./CppStatUtilities.cc") 105)

(insn:HI 962 961 963 54 ./CppStatUtilities.cc:105 (set (reg/v:SI 245 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 963 962 964 54 ./CppStatUtilities.cc:105 (set (reg:DI 246 [ ivtmp.1150 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 964 963 965 54 ./CppStatUtilities.cc:105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 245 [ i ])
            (reg/v:SI 85 [ sample ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 962 (nil))
    (nil))

(jump_insn:HI 965 964 1133 54 ./CppStatUtilities.cc:105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 215)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 964 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 54, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

;; Start of basic block 55, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
(note:HI 1133 965 1131 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1131 1133 1132 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 148)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 1132 1131 1110 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 200)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1131 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 55, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

;; Start of basic block 56, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
(note:HI 1110 1132 1108 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1108 1110 1109 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 148)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1109 1108 1087 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1703)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1108 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 56, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

;; Start of basic block 57, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
(note:HI 1087 1109 1085 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1085 1087 1086 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 148)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1086 1085 1064 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1704)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1085 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 57, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

;; Start of basic block 58, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
(note:HI 1064 1086 1062 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1062 1064 1063 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 148)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1063 1062 1041 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1705)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1062 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 58, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

;; Start of basic block 59, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
(note:HI 1041 1063 1039 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1039 1041 1040 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 148)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1040 1039 1018 59 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1706)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1039 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 59, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

;; Start of basic block 60, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
(note:HI 1018 1040 1016 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1016 1018 1017 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 148)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1017 1016 995 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1707)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1016 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 60, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246

;; Start of basic block 61, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 148 244 245 246
(note:HI 995 1017 993 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn:HI 993 995 994 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 148)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(jump_insn:HI 994 993 985 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1708)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 993 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 61, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

;; Start of basic block 62, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244
(note:HI 985 994 974 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(note:HI 974 985 975 62 ("./CppStatUtilities.cc") 69)

(note:HI 975 974 976 62 ("./CppStatUtilities.cc") 106)

(insn:HI 976 975 977 62 ./CppStatUtilities.cc:106 (set (reg:DF 330)
        (mem:DF (plus:DI (reg/v/f:DI 70 [ x ])
                (const_int 8 [0x8])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 977 976 978 62 ./CppStatUtilities.cc:106 (set (reg:DF 330)
        (minus:DF (reg:DF 330)
            (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                    (const_int 16 [0x10])) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 976 (nil))
    (nil))

(insn:HI 978 977 979 62 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 330)
                (abs:DF (reg:DF 330)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 977 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 979 978 980 62 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (reg/f:DI 102)
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 330)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 978 (nil))
    (expr_list:REG_DEAD (reg:DF 330)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 331))
            (nil))))

(note:HI 980 979 981 62 ("./CppStatUtilities.cc") 105)

(insn:HI 981 980 982 62 ./CppStatUtilities.cc:105 (set (reg/v:SI 245 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 982 981 1708 62 ./CppStatUtilities.cc:105 (set (reg:DI 246 [ ivtmp.1150 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
;; End of basic block 62, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

;; Start of basic block 63, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
(code_label:HI 1708 982 1008 63 1180 "" [1 uses])

(note:HI 1008 1708 997 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(note:HI 997 1008 998 63 ("./CppStatUtilities.cc") 69)

(note:HI 998 997 999 63 ("./CppStatUtilities.cc") 106)

(insn:HI 999 998 1000 63 ./CppStatUtilities.cc:106 (set (reg:DF 333)
        (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1000 999 1001 63 ./CppStatUtilities.cc:106 (set (reg:DF 333)
        (minus:DF (reg:DF 333)
            (mem:DF (plus:DI (reg/v/f:DI 74 [ perc ])
                    (const_int 16 [0x10])) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 999 (nil))
    (nil))

(insn:HI 1001 1000 1002 63 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 333)
                (abs:DF (reg:DF 333)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1000 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1002 1001 1003 63 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 333)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1001 (nil))
    (expr_list:REG_DEAD (reg:DF 333)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 334))
            (nil))))

(note:HI 1003 1002 1004 63 ("./CppStatUtilities.cc") 105)

(insn:HI 1004 1003 1005 63 ./CppStatUtilities.cc:105 (parallel [
            (set (reg/v:SI 245 [ i ])
                (plus:SI (reg/v:SI 245 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1005 1004 1707 63 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 246 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 63, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

;; Start of basic block 64, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
(code_label:HI 1707 1005 1031 64 1179 "" [1 uses])

(note:HI 1031 1707 1020 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(note:HI 1020 1031 1021 64 ("./CppStatUtilities.cc") 69)

(note:HI 1021 1020 1022 64 ("./CppStatUtilities.cc") 106)

(insn:HI 1022 1021 1023 64 ./CppStatUtilities.cc:106 (set (reg:DF 336)
        (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1023 1022 1024 64 ./CppStatUtilities.cc:106 (set (reg:DF 336)
        (minus:DF (reg:DF 336)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1022 (nil))
    (nil))

(insn:HI 1024 1023 1025 64 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 336)
                (abs:DF (reg:DF 336)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1023 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1025 1024 1026 64 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 336)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1024 (nil))
    (expr_list:REG_DEAD (reg:DF 336)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 337))
            (nil))))

(note:HI 1026 1025 1027 64 ("./CppStatUtilities.cc") 105)

(insn:HI 1027 1026 1028 64 ./CppStatUtilities.cc:105 (parallel [
            (set (reg/v:SI 245 [ i ])
                (plus:SI (reg/v:SI 245 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1028 1027 1706 64 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 246 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 64, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

;; Start of basic block 65, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
(code_label:HI 1706 1028 1054 65 1178 "" [1 uses])

(note:HI 1054 1706 1043 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(note:HI 1043 1054 1044 65 ("./CppStatUtilities.cc") 69)

(note:HI 1044 1043 1045 65 ("./CppStatUtilities.cc") 106)

(insn:HI 1045 1044 1046 65 ./CppStatUtilities.cc:106 (set (reg:DF 339)
        (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1046 1045 1047 65 ./CppStatUtilities.cc:106 (set (reg:DF 339)
        (minus:DF (reg:DF 339)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1045 (nil))
    (nil))

(insn:HI 1047 1046 1048 65 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 339)
                (abs:DF (reg:DF 339)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1046 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1048 1047 1049 65 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 339)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1047 (nil))
    (expr_list:REG_DEAD (reg:DF 339)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 340))
            (nil))))

(note:HI 1049 1048 1050 65 ("./CppStatUtilities.cc") 105)

(insn:HI 1050 1049 1051 65 ./CppStatUtilities.cc:105 (parallel [
            (set (reg/v:SI 245 [ i ])
                (plus:SI (reg/v:SI 245 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1051 1050 1705 65 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 246 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 65, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

;; Start of basic block 66, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
(code_label:HI 1705 1051 1077 66 1177 "" [1 uses])

(note:HI 1077 1705 1066 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(note:HI 1066 1077 1067 66 ("./CppStatUtilities.cc") 69)

(note:HI 1067 1066 1068 66 ("./CppStatUtilities.cc") 106)

(insn:HI 1068 1067 1069 66 ./CppStatUtilities.cc:106 (set (reg:DF 342)
        (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1069 1068 1070 66 ./CppStatUtilities.cc:106 (set (reg:DF 342)
        (minus:DF (reg:DF 342)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1068 (nil))
    (nil))

(insn:HI 1070 1069 1071 66 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 342)
                (abs:DF (reg:DF 342)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1069 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1071 1070 1072 66 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 342)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1070 (nil))
    (expr_list:REG_DEAD (reg:DF 342)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 343))
            (nil))))

(note:HI 1072 1071 1073 66 ("./CppStatUtilities.cc") 105)

(insn:HI 1073 1072 1074 66 ./CppStatUtilities.cc:105 (parallel [
            (set (reg/v:SI 245 [ i ])
                (plus:SI (reg/v:SI 245 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1074 1073 1704 66 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 246 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 66, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

;; Start of basic block 67, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
(code_label:HI 1704 1074 1100 67 1176 "" [1 uses])

(note:HI 1100 1704 1089 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(note:HI 1089 1100 1090 67 ("./CppStatUtilities.cc") 69)

(note:HI 1090 1089 1091 67 ("./CppStatUtilities.cc") 106)

(insn:HI 1091 1090 1092 67 ./CppStatUtilities.cc:106 (set (reg:DF 345)
        (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1092 1091 1093 67 ./CppStatUtilities.cc:106 (set (reg:DF 345)
        (minus:DF (reg:DF 345)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1091 (nil))
    (nil))

(insn:HI 1093 1092 1094 67 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 345)
                (abs:DF (reg:DF 345)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1092 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1094 1093 1095 67 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 345)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1093 (nil))
    (expr_list:REG_DEAD (reg:DF 345)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 346))
            (nil))))

(note:HI 1095 1094 1096 67 ("./CppStatUtilities.cc") 105)

(insn:HI 1096 1095 1097 67 ./CppStatUtilities.cc:105 (parallel [
            (set (reg/v:SI 245 [ i ])
                (plus:SI (reg/v:SI 245 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1097 1096 1703 67 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 246 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 67, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

;; Start of basic block 68, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
(code_label:HI 1703 1097 1123 68 1175 "" [1 uses])

(note:HI 1123 1703 1112 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(note:HI 1112 1123 1113 68 ("./CppStatUtilities.cc") 69)

(note:HI 1113 1112 1114 68 ("./CppStatUtilities.cc") 106)

(insn:HI 1114 1113 1115 68 ./CppStatUtilities.cc:106 (set (reg:DF 348)
        (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 1115 1114 1116 68 ./CppStatUtilities.cc:106 (set (reg:DF 348)
        (minus:DF (reg:DF 348)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1114 (nil))
    (nil))

(insn:HI 1116 1115 1117 68 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 348)
                (abs:DF (reg:DF 348)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1115 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1117 1116 1118 68 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 348)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1116 (nil))
    (expr_list:REG_DEAD (reg:DF 348)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 349))
            (nil))))

(note:HI 1118 1117 1119 68 ("./CppStatUtilities.cc") 105)

(insn:HI 1119 1118 1120 68 ./CppStatUtilities.cc:105 (parallel [
            (set (reg/v:SI 245 [ i ])
                (plus:SI (reg/v:SI 245 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1120 1119 1121 68 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 246 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1121 1120 1122 68 ./CppStatUtilities.cc:105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 245 [ i ])
            (reg/v:SI 85 [ sample ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1119 (nil))
    (nil))

(jump_insn:HI 1122 1121 200 68 ./CppStatUtilities.cc:105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 215)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1121 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 68, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

;; Start of basic block 69, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
(code_label:HI 200 1122 201 69 1050 "" [2 uses])

(note:HI 201 200 202 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(note:HI 202 201 204 69 ("./CppStatUtilities.cc") 69)

(note:HI 204 202 205 69 ("./CppStatUtilities.cc") 106)

(insn:HI 205 204 206 69 ./CppStatUtilities.cc:106 (set (reg:DF 247)
        (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 206 205 208 69 ./CppStatUtilities.cc:106 (set (reg:DF 247)
        (minus:DF (reg:DF 247)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 205 (nil))
    (nil))

(insn:HI 208 206 209 69 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 247)
                (abs:DF (reg:DF 247)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 206 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 209 208 210 69 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 247)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 208 (nil))
    (expr_list:REG_DEAD (reg:DF 247)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 248))
            (nil))))

(note:HI 210 209 1261 69 ("./CppStatUtilities.cc") 105)

(insn:HI 1261 210 1135 69 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 150)
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1135 1261 1136 69 ("./CppStatUtilities.cc") 69)

(note:HI 1136 1135 1137 69 ("./CppStatUtilities.cc") 106)

(insn:HI 1137 1136 1138 69 ./CppStatUtilities.cc:106 (set (reg:DF 252)
        (mem:DF (plus:DI (mult:DI (reg:DI 150)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1261 (nil))
    (nil))

(insn:HI 1138 1137 1139 69 ./CppStatUtilities.cc:106 (set (reg:DF 252)
        (minus:DF (reg:DF 252)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1137 (nil))
    (nil))

(insn:HI 1139 1138 1140 69 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 252)
                (abs:DF (reg:DF 252)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1138 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1140 1139 1141 69 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 150)
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 252)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1139 (nil))
    (expr_list:REG_DEAD (reg:DF 252)
        (expr_list:REG_DEAD (reg:DI 150)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 253))
                (nil)))))

(note:HI 1141 1140 1143 69 ("./CppStatUtilities.cc") 105)

(insn:HI 1143 1141 1153 69 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 256 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1153 1143 1154 69 ("./CppStatUtilities.cc") 69)

(note:HI 1154 1153 1155 69 ("./CppStatUtilities.cc") 106)

(insn:HI 1155 1154 1156 69 ./CppStatUtilities.cc:106 (set (reg:DF 257)
        (mem:DF (plus:DI (mult:DI (reg:DI 256 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1143 (nil))
    (nil))

(insn:HI 1156 1155 1157 69 ./CppStatUtilities.cc:106 (set (reg:DF 257)
        (minus:DF (reg:DF 257)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1155 (nil))
    (nil))

(insn:HI 1157 1156 1158 69 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 257)
                (abs:DF (reg:DF 257)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1156 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1158 1157 1159 69 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 256 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 257)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1157 (nil))
    (expr_list:REG_DEAD (reg:DF 257)
        (expr_list:REG_DEAD (reg:DI 256 [ ivtmp.1150 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 258))
                (nil)))))

(note:HI 1159 1158 1161 69 ("./CppStatUtilities.cc") 105)

(insn:HI 1161 1159 1171 69 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 261 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1171 1161 1172 69 ("./CppStatUtilities.cc") 69)

(note:HI 1172 1171 1173 69 ("./CppStatUtilities.cc") 106)

(insn:HI 1173 1172 1174 69 ./CppStatUtilities.cc:106 (set (reg:DF 262)
        (mem:DF (plus:DI (mult:DI (reg:DI 261 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1161 (nil))
    (nil))

(insn:HI 1174 1173 1175 69 ./CppStatUtilities.cc:106 (set (reg:DF 262)
        (minus:DF (reg:DF 262)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1173 (nil))
    (nil))

(insn:HI 1175 1174 1176 69 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 262)
                (abs:DF (reg:DF 262)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1174 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1176 1175 1177 69 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 261 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 262)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1175 (nil))
    (expr_list:REG_DEAD (reg:DF 262)
        (expr_list:REG_DEAD (reg:DI 261 [ ivtmp.1150 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 263))
                (nil)))))

(note:HI 1177 1176 1179 69 ("./CppStatUtilities.cc") 105)

(insn:HI 1179 1177 1189 69 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 266 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1189 1179 1190 69 ("./CppStatUtilities.cc") 69)

(note:HI 1190 1189 1191 69 ("./CppStatUtilities.cc") 106)

(insn:HI 1191 1190 1192 69 ./CppStatUtilities.cc:106 (set (reg:DF 267)
        (mem:DF (plus:DI (mult:DI (reg:DI 266 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1179 (nil))
    (nil))

(insn:HI 1192 1191 1193 69 ./CppStatUtilities.cc:106 (set (reg:DF 267)
        (minus:DF (reg:DF 267)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1191 (nil))
    (nil))

(insn:HI 1193 1192 1194 69 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 267)
                (abs:DF (reg:DF 267)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1192 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1194 1193 1195 69 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 266 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 267)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1193 (nil))
    (expr_list:REG_DEAD (reg:DF 267)
        (expr_list:REG_DEAD (reg:DI 266 [ ivtmp.1150 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 268))
                (nil)))))

(note:HI 1195 1194 1197 69 ("./CppStatUtilities.cc") 105)

(insn:HI 1197 1195 1207 69 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 271 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1207 1197 1208 69 ("./CppStatUtilities.cc") 69)

(note:HI 1208 1207 1209 69 ("./CppStatUtilities.cc") 106)

(insn:HI 1209 1208 1210 69 ./CppStatUtilities.cc:106 (set (reg:DF 272)
        (mem:DF (plus:DI (mult:DI (reg:DI 271 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1197 (nil))
    (nil))

(insn:HI 1210 1209 1211 69 ./CppStatUtilities.cc:106 (set (reg:DF 272)
        (minus:DF (reg:DF 272)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1209 (nil))
    (nil))

(insn:HI 1211 1210 1212 69 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 272)
                (abs:DF (reg:DF 272)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1210 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1212 1211 1213 69 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 271 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 272)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1211 (nil))
    (expr_list:REG_DEAD (reg:DF 272)
        (expr_list:REG_DEAD (reg:DI 271 [ ivtmp.1150 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 273))
                (nil)))))

(note:HI 1213 1212 1215 69 ("./CppStatUtilities.cc") 105)

(insn:HI 1215 1213 1225 69 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 276 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1225 1215 1226 69 ("./CppStatUtilities.cc") 69)

(note:HI 1226 1225 1227 69 ("./CppStatUtilities.cc") 106)

(insn:HI 1227 1226 1228 69 ./CppStatUtilities.cc:106 (set (reg:DF 277)
        (mem:DF (plus:DI (mult:DI (reg:DI 276 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1215 (nil))
    (nil))

(insn:HI 1228 1227 1229 69 ./CppStatUtilities.cc:106 (set (reg:DF 277)
        (minus:DF (reg:DF 277)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1227 (nil))
    (nil))

(insn:HI 1229 1228 1230 69 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 277)
                (abs:DF (reg:DF 277)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1228 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1230 1229 1231 69 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 276 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 277)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1229 (nil))
    (expr_list:REG_DEAD (reg:DF 277)
        (expr_list:REG_DEAD (reg:DI 276 [ ivtmp.1150 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 278))
                (nil)))))

(note:HI 1231 1230 1233 69 ("./CppStatUtilities.cc") 105)

(insn:HI 1233 1231 1243 69 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 281 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1243 1233 1244 69 ("./CppStatUtilities.cc") 69)

(note:HI 1244 1243 1245 69 ("./CppStatUtilities.cc") 106)

(insn:HI 1245 1244 1246 69 ./CppStatUtilities.cc:106 (set (reg:DF 282)
        (mem:DF (plus:DI (mult:DI (reg:DI 281 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1233 (nil))
    (nil))

(insn:HI 1246 1245 1247 69 ./CppStatUtilities.cc:106 (set (reg:DF 282)
        (minus:DF (reg:DF 282)
            (mem:DF (reg/f:DI 65 [ prephitmp.1125 ]) [3 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 1245 (nil))
    (nil))

(insn:HI 1247 1246 1248 69 ./CppStatUtilities.cc:106 (parallel [
            (set (reg:DF 282)
                (abs:DF (reg:DF 282)))
            (use (reg:V2DF 244))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 1246 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1248 1247 1249 69 ./CppStatUtilities.cc:106 (set (mem:DF (plus:DI (mult:DI (reg:DI 281 [ ivtmp.1150 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 102)) [3 S8 A64])
        (reg:DF 282)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1247 (nil))
    (expr_list:REG_DEAD (reg:DF 282)
        (expr_list:REG_DEAD (reg:DI 281 [ ivtmp.1150 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 283))
                (nil)))))

(note:HI 1249 1248 1250 69 ("./CppStatUtilities.cc") 105)

(insn:HI 1250 1249 1251 69 ./CppStatUtilities.cc:105 (parallel [
            (set (reg/v:SI 245 [ i ])
                (plus:SI (reg/v:SI 245 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1251 1250 1252 69 ./CppStatUtilities.cc:105 (parallel [
            (set (reg:DI 246 [ ivtmp.1150 ])
                (plus:DI (reg:DI 246 [ ivtmp.1150 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1252 1251 1253 69 ./CppStatUtilities.cc:105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 245 [ i ])
            (reg/v:SI 85 [ sample ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1250 (nil))
    (nil))

(jump_insn:HI 1253 1252 1258 69 ./CppStatUtilities.cc:105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 215)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1252 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 69, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

;; Start of basic block 70, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246
(note:HI 1258 1253 1684 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1684 1258 1685 70 (set (pc)
        (label_ref 200)) 548 {jump} (nil)
    (nil))
;; End of basic block 70, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 70 74 82 83 84 85 86 102 126 244 245 246

(barrier:HI 1685 1684 169)

;; Start of basic block 71, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126
(code_label:HI 169 1685 170 71 1046 "" [1 uses])

(note:HI 170 169 1276 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(note:HI 1276 170 1277 71 NOTE_INSN_DELETED)

(insn:HI 1277 1276 1278 71 (parallel [
            (set (reg:SI 153)
                (plus:SI (reg/v:SI 85 [ sample ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1278 1277 1281 71 (parallel [
            (set (reg:SI 153)
                (and:SI (reg:SI 153)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 1277 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1281 1278 1282 71 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1282 1281 1283 71 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1283 1282 1284 71 ./CppStatUtilities.cc:101 (set (reg:SI 77 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1282 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1284 1283 1285 71 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 105)
                (div:SI (reg:SI 77 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 104)
                (mod:SI (reg:SI 77 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1283 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 105)
            (expr_list:REG_DEAD (reg:SI 77 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 105)
                        (nil)))))))

(insn:HI 1285 1284 1286 71 ./CppStatUtilities.cc:101 (set (reg:DI 106)
        (sign_extend:DI (reg:SI 104))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1284 (nil))
    (expr_list:REG_DEAD (reg:SI 104)
        (nil)))

(insn:HI 1286 1285 1287 71 ./CppStatUtilities.cc:101 (set (reg:DF 107)
        (mem:DF (plus:DI (mult:DI (reg:DI 106)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1285 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 59 [ ivtmp.1158 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 106)
            (nil))))

(insn:HI 1287 1286 1288 71 ./CppStatUtilities.cc:101 (set (mem:DF (reg/f:DI 59 [ ivtmp.1158 ]) [3 S8 A64])
        (reg:DF 107)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1286 (nil))
    (expr_list:REG_DEAD (reg:DF 107)
        (nil)))

(note:HI 1288 1287 1289 71 ("./CppStatUtilities.cc") 100)

(insn:HI 1289 1288 1290 71 ./CppStatUtilities.cc:100 (set (reg/v:SI 196 [ k ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 1290 1289 1291 71 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/f:DI 201 [ ivtmp.1158 ])
                (plus:DI (reg/f:DI 59 [ ivtmp.1158 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1291 1290 1292 71 ./CppStatUtilities.cc:100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 196 [ k ])
            (reg/v:SI 85 [ sample ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1289 (nil))
    (nil))

(jump_insn:HI 1292 1291 1467 71 ./CppStatUtilities.cc:100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1686)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1291 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 71, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

;; Start of basic block 72, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
(note:HI 1467 1292 1465 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1465 1467 1466 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 1466 1465 1443 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 172)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1465 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 72, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

;; Start of basic block 73, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
(note:HI 1443 1466 1441 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1441 1443 1442 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1442 1441 1419 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1709)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1441 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 73, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

;; Start of basic block 74, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
(note:HI 1419 1442 1417 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1417 1419 1418 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1418 1417 1395 74 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1710)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1417 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 74, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

;; Start of basic block 75, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
(note:HI 1395 1418 1393 75 [bb 75] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1393 1395 1394 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1394 1393 1371 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1711)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1393 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 75, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

;; Start of basic block 76, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
(note:HI 1371 1394 1369 76 [bb 76] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1369 1371 1370 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1370 1369 1347 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1712)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1369 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 76, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

;; Start of basic block 77, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
(note:HI 1347 1370 1345 77 [bb 77] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1345 1347 1346 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1346 1345 1323 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1713)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1345 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 77, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201

;; Start of basic block 78, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 153 196 201
(note:HI 1323 1346 1321 78 [bb 78] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1321 1323 1322 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(jump_insn:HI 1322 1321 1313 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1714)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1321 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 78, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126 196 201

;; Start of basic block 79, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 70 82 83 84 85 86 102 126
(note:HI 1313 1322 1301 79 [bb 79] NOTE_INSN_BASIC_BLOCK)

(note:HI 1301 1313 1302 79 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1302 1301 1303 79 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1303 1302 1304 79 ./CppStatUtilities.cc:101 (set (reg:SI 351 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1302 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1304 1303 1305 79 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 387)
                (div:SI (reg:SI 351 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 352)
                (mod:SI (reg:SI 351 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1303 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 387)
            (expr_list:REG_DEAD (reg:SI 351 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 387)
                        (nil)))))))

(insn:HI 1305 1304 1306 79 ./CppStatUtilities.cc:101 (set (reg:DI 353)
        (sign_extend:DI (reg:SI 352))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1304 (nil))
    (expr_list:REG_DEAD (reg:SI 352)
        (nil)))

(insn:HI 1306 1305 1307 79 ./CppStatUtilities.cc:101 (set (reg:DF 354)
        (mem:DF (plus:DI (mult:DI (reg:DI 353)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1305 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 59 [ ivtmp.1158 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 353)
            (nil))))

(insn:HI 1307 1306 1308 79 ./CppStatUtilities.cc:101 (set (mem:DF (plus:DI (reg/f:DI 59 [ ivtmp.1158 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 354)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1306 (nil))
    (expr_list:REG_DEAD (reg:DF 354)
        (nil)))

(note:HI 1308 1307 1309 79 ("./CppStatUtilities.cc") 100)

(insn:HI 1309 1308 1310 79 ./CppStatUtilities.cc:100 (set (reg/v:SI 196 [ k ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 1310 1309 1714 79 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/f:DI 201 [ ivtmp.1158 ])
                (plus:DI (reg/f:DI 59 [ ivtmp.1158 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 59 [ ivtmp.1158 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 79, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

;; Start of basic block 80, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
(code_label:HI 1714 1310 1337 80 1186 "" [1 uses])

(note:HI 1337 1714 1325 80 [bb 80] NOTE_INSN_BASIC_BLOCK)

(note:HI 1325 1337 1326 80 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1326 1325 1327 80 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1327 1326 1328 80 ./CppStatUtilities.cc:101 (set (reg:SI 355 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1326 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1328 1327 1329 80 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 388)
                (div:SI (reg:SI 355 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 356)
                (mod:SI (reg:SI 355 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1327 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 388)
            (expr_list:REG_DEAD (reg:SI 355 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 388)
                        (nil)))))))

(insn:HI 1329 1328 1330 80 ./CppStatUtilities.cc:101 (set (reg:DI 357)
        (sign_extend:DI (reg:SI 356))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1328 (nil))
    (expr_list:REG_DEAD (reg:SI 356)
        (nil)))

(insn:HI 1330 1329 1331 80 ./CppStatUtilities.cc:101 (set (reg:DF 358)
        (mem:DF (plus:DI (mult:DI (reg:DI 357)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1329 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 357)
            (nil))))

(insn:HI 1331 1330 1332 80 ./CppStatUtilities.cc:101 (set (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (reg:DF 358)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1330 (nil))
    (expr_list:REG_DEAD (reg:DF 358)
        (nil)))

(note:HI 1332 1331 1333 80 ("./CppStatUtilities.cc") 100)

(insn:HI 1333 1332 1334 80 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/v:SI 196 [ k ])
                (plus:SI (reg/v:SI 196 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1334 1333 1713 80 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/f:DI 201 [ ivtmp.1158 ])
                (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 80, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

;; Start of basic block 81, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
(code_label:HI 1713 1334 1361 81 1185 "" [1 uses])

(note:HI 1361 1713 1349 81 [bb 81] NOTE_INSN_BASIC_BLOCK)

(note:HI 1349 1361 1350 81 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1350 1349 1351 81 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1351 1350 1352 81 ./CppStatUtilities.cc:101 (set (reg:SI 359 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1350 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1352 1351 1353 81 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 389)
                (div:SI (reg:SI 359 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 360)
                (mod:SI (reg:SI 359 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1351 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 389)
            (expr_list:REG_DEAD (reg:SI 359 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 389)
                        (nil)))))))

(insn:HI 1353 1352 1354 81 ./CppStatUtilities.cc:101 (set (reg:DI 361)
        (sign_extend:DI (reg:SI 360))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1352 (nil))
    (expr_list:REG_DEAD (reg:SI 360)
        (nil)))

(insn:HI 1354 1353 1355 81 ./CppStatUtilities.cc:101 (set (reg:DF 362)
        (mem:DF (plus:DI (mult:DI (reg:DI 361)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1353 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 361)
            (nil))))

(insn:HI 1355 1354 1356 81 ./CppStatUtilities.cc:101 (set (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (reg:DF 362)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1354 (nil))
    (expr_list:REG_DEAD (reg:DF 362)
        (nil)))

(note:HI 1356 1355 1357 81 ("./CppStatUtilities.cc") 100)

(insn:HI 1357 1356 1358 81 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/v:SI 196 [ k ])
                (plus:SI (reg/v:SI 196 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1358 1357 1712 81 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/f:DI 201 [ ivtmp.1158 ])
                (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 81, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

;; Start of basic block 82, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
(code_label:HI 1712 1358 1385 82 1184 "" [1 uses])

(note:HI 1385 1712 1373 82 [bb 82] NOTE_INSN_BASIC_BLOCK)

(note:HI 1373 1385 1374 82 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1374 1373 1375 82 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1375 1374 1376 82 ./CppStatUtilities.cc:101 (set (reg:SI 363 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1374 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1376 1375 1377 82 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 390)
                (div:SI (reg:SI 363 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 364)
                (mod:SI (reg:SI 363 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1375 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 390)
            (expr_list:REG_DEAD (reg:SI 363 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 390)
                        (nil)))))))

(insn:HI 1377 1376 1378 82 ./CppStatUtilities.cc:101 (set (reg:DI 365)
        (sign_extend:DI (reg:SI 364))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1376 (nil))
    (expr_list:REG_DEAD (reg:SI 364)
        (nil)))

(insn:HI 1378 1377 1379 82 ./CppStatUtilities.cc:101 (set (reg:DF 366)
        (mem:DF (plus:DI (mult:DI (reg:DI 365)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1377 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 365)
            (nil))))

(insn:HI 1379 1378 1380 82 ./CppStatUtilities.cc:101 (set (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (reg:DF 366)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1378 (nil))
    (expr_list:REG_DEAD (reg:DF 366)
        (nil)))

(note:HI 1380 1379 1381 82 ("./CppStatUtilities.cc") 100)

(insn:HI 1381 1380 1382 82 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/v:SI 196 [ k ])
                (plus:SI (reg/v:SI 196 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1382 1381 1711 82 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/f:DI 201 [ ivtmp.1158 ])
                (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 82, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

;; Start of basic block 83, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
(code_label:HI 1711 1382 1409 83 1183 "" [1 uses])

(note:HI 1409 1711 1397 83 [bb 83] NOTE_INSN_BASIC_BLOCK)

(note:HI 1397 1409 1398 83 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1398 1397 1399 83 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1399 1398 1400 83 ./CppStatUtilities.cc:101 (set (reg:SI 367 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1398 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1400 1399 1401 83 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 391)
                (div:SI (reg:SI 367 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 368)
                (mod:SI (reg:SI 367 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1399 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 391)
            (expr_list:REG_DEAD (reg:SI 367 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 391)
                        (nil)))))))

(insn:HI 1401 1400 1402 83 ./CppStatUtilities.cc:101 (set (reg:DI 369)
        (sign_extend:DI (reg:SI 368))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1400 (nil))
    (expr_list:REG_DEAD (reg:SI 368)
        (nil)))

(insn:HI 1402 1401 1403 83 ./CppStatUtilities.cc:101 (set (reg:DF 370)
        (mem:DF (plus:DI (mult:DI (reg:DI 369)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1401 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 369)
            (nil))))

(insn:HI 1403 1402 1404 83 ./CppStatUtilities.cc:101 (set (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (reg:DF 370)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1402 (nil))
    (expr_list:REG_DEAD (reg:DF 370)
        (nil)))

(note:HI 1404 1403 1405 83 ("./CppStatUtilities.cc") 100)

(insn:HI 1405 1404 1406 83 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/v:SI 196 [ k ])
                (plus:SI (reg/v:SI 196 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1406 1405 1710 83 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/f:DI 201 [ ivtmp.1158 ])
                (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 83, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

;; Start of basic block 84, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
(code_label:HI 1710 1406 1433 84 1182 "" [1 uses])

(note:HI 1433 1710 1421 84 [bb 84] NOTE_INSN_BASIC_BLOCK)

(note:HI 1421 1433 1422 84 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1422 1421 1423 84 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1423 1422 1424 84 ./CppStatUtilities.cc:101 (set (reg:SI 371 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1422 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1424 1423 1425 84 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 392)
                (div:SI (reg:SI 371 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 372)
                (mod:SI (reg:SI 371 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1423 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 392)
            (expr_list:REG_DEAD (reg:SI 371 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 392)
                        (nil)))))))

(insn:HI 1425 1424 1426 84 ./CppStatUtilities.cc:101 (set (reg:DI 373)
        (sign_extend:DI (reg:SI 372))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1424 (nil))
    (expr_list:REG_DEAD (reg:SI 372)
        (nil)))

(insn:HI 1426 1425 1427 84 ./CppStatUtilities.cc:101 (set (reg:DF 374)
        (mem:DF (plus:DI (mult:DI (reg:DI 373)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1425 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 373)
            (nil))))

(insn:HI 1427 1426 1428 84 ./CppStatUtilities.cc:101 (set (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (reg:DF 374)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1426 (nil))
    (expr_list:REG_DEAD (reg:DF 374)
        (nil)))

(note:HI 1428 1427 1429 84 ("./CppStatUtilities.cc") 100)

(insn:HI 1429 1428 1430 84 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/v:SI 196 [ k ])
                (plus:SI (reg/v:SI 196 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1430 1429 1709 84 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/f:DI 201 [ ivtmp.1158 ])
                (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 84, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

;; Start of basic block 85, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
(code_label:HI 1709 1430 1457 85 1181 "" [1 uses])

(note:HI 1457 1709 1445 85 [bb 85] NOTE_INSN_BASIC_BLOCK)

(note:HI 1445 1457 1446 85 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1446 1445 1447 85 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1447 1446 1448 85 ./CppStatUtilities.cc:101 (set (reg:SI 375 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1446 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1448 1447 1449 85 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 393)
                (div:SI (reg:SI 375 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 376)
                (mod:SI (reg:SI 375 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1447 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 393)
            (expr_list:REG_DEAD (reg:SI 375 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 393)
                        (nil)))))))

(insn:HI 1449 1448 1450 85 ./CppStatUtilities.cc:101 (set (reg:DI 377)
        (sign_extend:DI (reg:SI 376))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1448 (nil))
    (expr_list:REG_DEAD (reg:SI 376)
        (nil)))

(insn:HI 1450 1449 1451 85 ./CppStatUtilities.cc:101 (set (reg:DF 378)
        (mem:DF (plus:DI (mult:DI (reg:DI 377)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1449 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 377)
            (nil))))

(insn:HI 1451 1450 1452 85 ./CppStatUtilities.cc:101 (set (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (reg:DF 378)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1450 (nil))
    (expr_list:REG_DEAD (reg:DF 378)
        (nil)))

(note:HI 1452 1451 1453 85 ("./CppStatUtilities.cc") 100)

(insn:HI 1453 1452 1454 85 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/v:SI 196 [ k ])
                (plus:SI (reg/v:SI 196 [ k ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1454 1453 1455 85 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/f:DI 201 [ ivtmp.1158 ])
                (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1455 1454 1456 85 ./CppStatUtilities.cc:100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 196 [ k ])
            (reg/v:SI 85 [ sample ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1453 (nil))
    (nil))

(jump_insn:HI 1456 1455 172 85 ./CppStatUtilities.cc:100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1686)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1455 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 85, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

;; Start of basic block 86, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
(code_label:HI 172 1456 173 86 1048 "" [2 uses])

(note:HI 173 172 174 86 [bb 86] NOTE_INSN_BASIC_BLOCK)

(note:HI 174 173 175 86 ("./CppStatUtilities.cc") 101)

(call_insn:HI 175 174 176 86 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 176 175 177 86 ./CppStatUtilities.cc:101 (set (reg:SI 197 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 175 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 177 176 178 86 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 379)
                (div:SI (reg:SI 197 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 198)
                (mod:SI (reg:SI 197 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 176 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 379)
            (expr_list:REG_DEAD (reg:SI 197 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 379)
                        (nil)))))))

(insn:HI 178 177 179 86 ./CppStatUtilities.cc:101 (set (reg:DI 199)
        (sign_extend:DI (reg:SI 198))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 177 (nil))
    (expr_list:REG_DEAD (reg:SI 198)
        (nil)))

(insn:HI 179 178 180 86 ./CppStatUtilities.cc:101 (set (reg:DF 200)
        (mem:DF (plus:DI (mult:DI (reg:DI 199)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 178 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 199)
            (nil))))

(insn:HI 180 179 181 86 ./CppStatUtilities.cc:101 (set (mem:DF (reg/f:DI 201 [ ivtmp.1158 ]) [3 S8 A64])
        (reg:DF 200)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 179 (nil))
    (expr_list:REG_DEAD (reg:DF 200)
        (nil)))

(note:HI 181 180 1469 86 ("./CppStatUtilities.cc") 100)

(note:HI 1469 181 1470 86 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1470 1469 1471 86 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1471 1470 1472 86 ./CppStatUtilities.cc:101 (set (reg:SI 203 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1470 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1472 1471 1473 86 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 380)
                (div:SI (reg:SI 203 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 204)
                (mod:SI (reg:SI 203 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1471 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 380)
            (expr_list:REG_DEAD (reg:SI 203 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 380)
                        (nil)))))))

(insn:HI 1473 1472 1474 86 ./CppStatUtilities.cc:101 (set (reg:DI 205)
        (sign_extend:DI (reg:SI 204))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1472 (nil))
    (expr_list:REG_DEAD (reg:SI 204)
        (nil)))

(insn:HI 1474 1473 1475 86 ./CppStatUtilities.cc:101 (set (reg:DF 206)
        (mem:DF (plus:DI (mult:DI (reg:DI 205)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1473 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 205)
            (nil))))

(insn:HI 1475 1474 1476 86 ./CppStatUtilities.cc:101 (set (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 8 [0x8])) [3 S8 A64])
        (reg:DF 206)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1474 (nil))
    (expr_list:REG_DEAD (reg:DF 206)
        (nil)))

(note:HI 1476 1475 1488 86 ("./CppStatUtilities.cc") 100)

(note:HI 1488 1476 1489 86 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1489 1488 1490 86 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1490 1489 1491 86 ./CppStatUtilities.cc:101 (set (reg:SI 209 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1489 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1491 1490 1492 86 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 381)
                (div:SI (reg:SI 209 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 210)
                (mod:SI (reg:SI 209 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1490 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 381)
            (expr_list:REG_DEAD (reg:SI 209 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 381)
                        (nil)))))))

(insn:HI 1492 1491 1493 86 ./CppStatUtilities.cc:101 (set (reg:DI 211)
        (sign_extend:DI (reg:SI 210))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1491 (nil))
    (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn:HI 1493 1492 1494 86 ./CppStatUtilities.cc:101 (set (reg:DF 212)
        (mem:DF (plus:DI (mult:DI (reg:DI 211)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1492 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 16 [0x10])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 211)
            (nil))))

(insn:HI 1494 1493 1495 86 ./CppStatUtilities.cc:101 (set (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 16 [0x10])) [3 S8 A64])
        (reg:DF 212)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1493 (nil))
    (expr_list:REG_DEAD (reg:DF 212)
        (nil)))

(note:HI 1495 1494 1507 86 ("./CppStatUtilities.cc") 100)

(note:HI 1507 1495 1508 86 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1508 1507 1509 86 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1509 1508 1510 86 ./CppStatUtilities.cc:101 (set (reg:SI 215 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1508 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1510 1509 1511 86 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 382)
                (div:SI (reg:SI 215 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 216)
                (mod:SI (reg:SI 215 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1509 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 382)
            (expr_list:REG_DEAD (reg:SI 215 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 382)
                        (nil)))))))

(insn:HI 1511 1510 1512 86 ./CppStatUtilities.cc:101 (set (reg:DI 217)
        (sign_extend:DI (reg:SI 216))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1510 (nil))
    (expr_list:REG_DEAD (reg:SI 216)
        (nil)))

(insn:HI 1512 1511 1513 86 ./CppStatUtilities.cc:101 (set (reg:DF 218)
        (mem:DF (plus:DI (mult:DI (reg:DI 217)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1511 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 24 [0x18])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 217)
            (nil))))

(insn:HI 1513 1512 1514 86 ./CppStatUtilities.cc:101 (set (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 24 [0x18])) [3 S8 A64])
        (reg:DF 218)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1512 (nil))
    (expr_list:REG_DEAD (reg:DF 218)
        (nil)))

(note:HI 1514 1513 1526 86 ("./CppStatUtilities.cc") 100)

(note:HI 1526 1514 1527 86 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1527 1526 1528 86 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1528 1527 1529 86 ./CppStatUtilities.cc:101 (set (reg:SI 221 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1527 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1529 1528 1530 86 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 383)
                (div:SI (reg:SI 221 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 222)
                (mod:SI (reg:SI 221 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1528 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 383)
            (expr_list:REG_DEAD (reg:SI 221 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 383)
                        (nil)))))))

(insn:HI 1530 1529 1531 86 ./CppStatUtilities.cc:101 (set (reg:DI 223)
        (sign_extend:DI (reg:SI 222))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1529 (nil))
    (expr_list:REG_DEAD (reg:SI 222)
        (nil)))

(insn:HI 1531 1530 1532 86 ./CppStatUtilities.cc:101 (set (reg:DF 224)
        (mem:DF (plus:DI (mult:DI (reg:DI 223)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1530 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 32 [0x20])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 223)
            (nil))))

(insn:HI 1532 1531 1533 86 ./CppStatUtilities.cc:101 (set (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 32 [0x20])) [3 S8 A64])
        (reg:DF 224)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1531 (nil))
    (expr_list:REG_DEAD (reg:DF 224)
        (nil)))

(note:HI 1533 1532 1545 86 ("./CppStatUtilities.cc") 100)

(note:HI 1545 1533 1546 86 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1546 1545 1547 86 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1547 1546 1548 86 ./CppStatUtilities.cc:101 (set (reg:SI 227 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1546 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1548 1547 1549 86 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 384)
                (div:SI (reg:SI 227 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 228)
                (mod:SI (reg:SI 227 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1547 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 384)
            (expr_list:REG_DEAD (reg:SI 227 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 384)
                        (nil)))))))

(insn:HI 1549 1548 1550 86 ./CppStatUtilities.cc:101 (set (reg:DI 229)
        (sign_extend:DI (reg:SI 228))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1548 (nil))
    (expr_list:REG_DEAD (reg:SI 228)
        (nil)))

(insn:HI 1550 1549 1551 86 ./CppStatUtilities.cc:101 (set (reg:DF 230)
        (mem:DF (plus:DI (mult:DI (reg:DI 229)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1549 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 40 [0x28])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 229)
            (nil))))

(insn:HI 1551 1550 1552 86 ./CppStatUtilities.cc:101 (set (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 40 [0x28])) [3 S8 A64])
        (reg:DF 230)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1550 (nil))
    (expr_list:REG_DEAD (reg:DF 230)
        (nil)))

(note:HI 1552 1551 1564 86 ("./CppStatUtilities.cc") 100)

(note:HI 1564 1552 1565 86 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1565 1564 1566 86 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1566 1565 1567 86 ./CppStatUtilities.cc:101 (set (reg:SI 233 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1565 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1567 1566 1568 86 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 385)
                (div:SI (reg:SI 233 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 234)
                (mod:SI (reg:SI 233 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1566 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 385)
            (expr_list:REG_DEAD (reg:SI 233 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 385)
                        (nil)))))))

(insn:HI 1568 1567 1569 86 ./CppStatUtilities.cc:101 (set (reg:DI 235)
        (sign_extend:DI (reg:SI 234))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1567 (nil))
    (expr_list:REG_DEAD (reg:SI 234)
        (nil)))

(insn:HI 1569 1568 1570 86 ./CppStatUtilities.cc:101 (set (reg:DF 236)
        (mem:DF (plus:DI (mult:DI (reg:DI 235)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1568 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 48 [0x30])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 235)
            (nil))))

(insn:HI 1570 1569 1571 86 ./CppStatUtilities.cc:101 (set (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 48 [0x30])) [3 S8 A64])
        (reg:DF 236)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1569 (nil))
    (expr_list:REG_DEAD (reg:DF 236)
        (nil)))

(note:HI 1571 1570 1583 86 ("./CppStatUtilities.cc") 100)

(note:HI 1583 1571 1584 86 ("./CppStatUtilities.cc") 101)

(call_insn:HI 1584 1583 1585 86 ./CppStatUtilities.cc:101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41] <function_decl 0x2b5eb50eef00 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn:HI 1585 1584 1586 86 ./CppStatUtilities.cc:101 (set (reg:SI 239 [ D.34535 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1584 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 1586 1585 1587 86 ./CppStatUtilities.cc:101 (parallel [
            (set (reg:SI 386)
                (div:SI (reg:SI 239 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (set (reg:SI 240)
                (mod:SI (reg:SI 239 [ D.34535 ])
                    (reg/v:SI 85 [ sample ])))
            (clobber (reg:CC 17 flags))
        ]) 277 {*divmodsi4_nocltd} (insn_list:REG_DEP_TRUE 1585 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:SI 386)
            (expr_list:REG_DEAD (reg:SI 239 [ D.34535 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (reg:SI 386)
                        (nil)))))))

(insn:HI 1587 1586 1588 86 ./CppStatUtilities.cc:101 (set (reg:DI 241)
        (sign_extend:DI (reg:SI 240))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 1586 (nil))
    (expr_list:REG_DEAD (reg:SI 240)
        (nil)))

(insn:HI 1588 1587 1589 86 ./CppStatUtilities.cc:101 (set (reg:DF 242)
        (mem:DF (plus:DI (mult:DI (reg:DI 241)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 82 [ data ])) [3 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1587 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 56 [0x38])) [3 S8 A64])
        (expr_list:REG_DEAD (reg:DI 241)
            (nil))))

(insn:HI 1589 1588 1590 86 ./CppStatUtilities.cc:101 (set (mem:DF (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                (const_int 56 [0x38])) [3 S8 A64])
        (reg:DF 242)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1588 (nil))
    (expr_list:REG_DEAD (reg:DF 242)
        (nil)))

(note:HI 1590 1589 1591 86 ("./CppStatUtilities.cc") 100)

(insn:HI 1591 1590 1592 86 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/v:SI 196 [ k ])
                (plus:SI (reg/v:SI 196 [ k ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1592 1591 1593 86 ./CppStatUtilities.cc:100 (parallel [
            (set (reg/f:DI 201 [ ivtmp.1158 ])
                (plus:DI (reg/f:DI 201 [ ivtmp.1158 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1593 1592 1594 86 ./CppStatUtilities.cc:100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 196 [ k ])
            (reg/v:SI 85 [ sample ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1591 (nil))
    (nil))

(jump_insn:HI 1594 1593 1599 86 ./CppStatUtilities.cc:100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1686)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1593 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 86, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

;; Start of basic block 87, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201
(note:HI 1599 1594 1689 87 [bb 87] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1689 1599 1690 87 (set (pc)
        (label_ref 172)) 548 {jump} (nil)
    (nil))
;; End of basic block 87, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 70 82 83 84 85 86 102 126 196 201

(barrier:HI 1690 1689 0)

