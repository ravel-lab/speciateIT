
;; Function char* strpre(const char*, const char*) (_Z6strprePKcS0_)

68 registers.

Register 60 used 3 times across 4 insns; set 1 time; 1 bytes.

Register 61 used 4 times across 10 insns; set 2 times; dies in 0 places; pointer.

Register 62 used 3 times across 4 insns; set 2 times; pointer.

Register 63 used 3 times across 5 insns; set 1 time; 1 bytes.

Register 65 used 6 times across 19 insns; set 2 times; user var; pointer.

Register 66 used 3 times across 7 insns; set 1 time; user var; pointer.

9 basic blocks, 14 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  3 [5.0%]  1 [95.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 65 66

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  0 [95.0%]  (fallthru)
Successors:  7 [5.0%]  2 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 65 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  1 [95.0%]  (fallthru)
Successors:  5 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 554, maybe hot.
Predecessors:  0 [5.0%]  6 [100.0%]  (loop_exit)
Successors:  8 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  5 [95.0%] 
Successors:  7 [5.0%]  (loop_exit) 5 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 65
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  4 [95.0%]  (fallthru,dfs_back) 2 [100.0%] 
Successors:  6 [5.0%]  (fallthru) 4 [95.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 65

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  5 [5.0%]  (fallthru)
Successors:  3 [100.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 526, maybe hot.
Predecessors:  1 [5.0%]  4 [5.0%]  (loop_exit)
Successors:  8 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

Basic block 8 prev 7, next -2, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 3 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]



try_optimize_cfg iteration 1

Forwarding edge 5->6 to 3 failed.
(note 1 0 12 ("./strings.cc") 43)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 12 1 8 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 8 12 9 0 ./strings.cc:43 (set (reg/v/f:DI 65 [ str ])
        (reg:DI 5 di [ str ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ str ])
        (nil)))

(insn 9 8 10 0 ./strings.cc:43 (set (reg/v/f:DI 66 [ pre ])
        (reg:DI 4 si [ pre ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 4 si [ pre ])
        (nil)))

(note 10 9 15 0 NOTE_INSN_FUNCTION_BEG)

(note 15 10 16 0 ("./strings.cc") 47)

(insn 16 15 17 0 ./strings.cc:47 (set (reg:QI 60 [ temp.36 ])
        (mem:QI (reg/v/f:DI 66 [ pre ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 9 (nil))
    (nil))

(insn 17 16 18 0 ./strings.cc:47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.36 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 16 (nil))
    (nil))

(jump_insn 18 17 21 0 ./strings.cc:47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 17 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 65 66

(note 21 18 20 ("./strings.cc") 48)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 65 66
(note 20 21 22 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 1 ./strings.cc:48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.36 ])
            (mem:QI (reg/v/f:DI 65 [ str ]) [0 S1 A8]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 60 [ temp.36 ])
        (nil)))

(jump_insn 23 22 25 1 ./strings.cc:48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 22 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 66
(note 25 23 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 77 2 ./strings.cc:48 (set (reg/f:DI 61 [ ivtmp.33 ])
        (reg/v/f:DI 66 [ pre ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 66 [ pre ])
        (nil)))

(jump_insn 77 26 78 2 (set (pc)
        (label_ref 41)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65

(barrier 78 77 29)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
(code_label 29 78 30 3 3 "" [2 uses])

(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 31 30 32 3 ("./strings.cc") 47)

(insn 32 31 79 3 ./strings.cc:47 (set (reg/f:DI 62 [ D.2513 ])
        (reg/v/f:DI 65 [ str ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 65 [ str ])
        (nil)))

(jump_insn 79 32 80 3 (set (pc)
        (label_ref 55)) -1 (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

(barrier 80 79 73)

(note 73 80 81 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 65
(code_label 81 73 36 4 11 "" [1 uses])

(note 36 81 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 4 ./strings.cc:47 (parallel [
            (set (reg/f:DI 61 [ ivtmp.33 ])
                (plus:DI (reg/f:DI 61 [ ivtmp.33 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 38 37 39 4 ("./strings.cc") 48)

(insn 39 38 40 4 ./strings.cc:48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.2512 ])
            (mem:QI (reg/v/f:DI 65 [ str ]) [0 S1 A8]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 63 [ D.2512 ])
        (nil)))

(jump_insn 40 39 41 4 ./strings.cc:48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 52)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 39 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65
(code_label 41 40 42 5 7 "" [1 uses])

(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 43 42 44 5 ("./strings.cc") 49)

(insn 44 43 45 5 ./strings.cc:49 (parallel [
            (set (reg/v/f:DI 65 [ str ])
                (plus:DI (reg/v/f:DI 65 [ str ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 45 44 46 5 ("./strings.cc") 47)

(insn 46 45 47 5 ./strings.cc:47 (set (reg:QI 63 [ D.2512 ])
        (mem:QI (plus:DI (reg/f:DI 61 [ ivtmp.33 ])
                (const_int 1 [0x1])) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 47 46 48 5 ./strings.cc:47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.2512 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 46 (nil))
    (nil))

(jump_insn 48 47 82 5 ./strings.cc:47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 81)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 47 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 65

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65
(note 82 48 83 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 83 82 84 6 (set (pc)
        (label_ref 29)) -1 (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65

(barrier 84 83 74)

(note 74 84 52 NOTE_INSN_LOOP_END)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 52 74 53 7 5 "" [2 uses])

(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 7 ./strings.cc:47 (set (reg/f:DI 62 [ D.2513 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(code_label 55 54 56 8 8 "" [1 uses])

(note 56 55 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 60 56 61 8 NOTE_INSN_FUNCTION_END)

(note 61 60 63 8 ("./strings.cc") 51)

(insn 63 61 69 8 ./strings.cc:51 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 62 [ D.2513 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 62 [ D.2513 ])
        (nil)))

(insn 69 63 0 8 ./strings.cc:51 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 63 (nil))
    (nil))
;; End of basic block 8, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* strlop(char*, char) (_Z6strlopPcc)

68 registers.

Register 58 used 3 times across 4 insns; set 1 time; 1 bytes.

Register 59 used 6 times across 11 insns; set 3 times; user var; pointer.

Register 60 used 3 times across 4 insns; set 1 time; 1 bytes.

Register 62 used 5 times across 19 insns; set 1 time; user var; pointer.

Register 63 used 3 times across 14 insns; set 1 time; user var; dies in 0 places; 1 bytes.

Register 64 used 2 times across 2 insns in block 0; set 1 time; 4 bytes.

8 basic blocks, 13 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  6 [5.0%]  1 [95.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 63

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  0 [95.0%]  (fallthru)
Successors:  6 [5.0%]  2 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  1 [95.0%]  (fallthru)
Successors:  3 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 5 [100.0%] 
Successors:  7 [5.0%]  (loop_exit) 4 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 63

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  3 [95.0%]  (fallthru)
Successors:  5 [95.0%]  (fallthru,dfs_back) 7 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 9025, maybe hot.
Predecessors:  4 [95.0%]  (fallthru,dfs_back)
Successors:  3 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 105, maybe hot.
Predecessors:  0 [5.0%]  1 [5.0%] 
Successors:  7 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62

Basic block 7 prev 6, next -2, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  3 [5.0%]  (loop_exit) 4 [5.0%]  (loop_exit) 6 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]



try_optimize_cfg iteration 1

Forwarding edge 4->5 to 3 failed.
(note 1 0 8 ("./strings.cc") 81)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 0 ./strings.cc:81 (set (reg/v/f:DI 62 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (nil)))

(insn 4 3 5 0 ./strings.cc:81 (set (reg:SI 64 [ ch ])
        (reg:SI 4 si [ ch ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ ch ])
        (nil)))

(insn 5 4 6 0 ./strings.cc:81 (set (reg/v:QI 63 [ ch ])
        (subreg:QI (reg:SI 64 [ ch ]) 0)) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (expr_list:REG_DEAD (reg:SI 64 [ ch ])
        (nil)))

(note 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 0 ("./strings.cc") 84)

(insn 11 10 12 0 ./strings.cc:84 (set (reg:QI 58 [ temp.67 ])
        (mem:QI (reg/v/f:DI 62 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn 12 11 13 0 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.67 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 11 (nil))
    (nil))

(jump_insn 13 12 15 0 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 63

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 63
(note 15 13 16 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 1 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.67 ])
            (reg/v:QI 63 [ ch ]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 58 [ temp.67 ])
        (nil)))

(jump_insn 17 16 19 1 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 16 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63
(note 19 17 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 59 2 ./strings.cc:84 (set (reg/v/f:DI 59 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63

(note 59 20 21 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63
(code_label 21 59 22 3 19 "" [1 uses])

(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 23 22 24 3 ("./strings.cc") 85)

(insn 24 23 25 3 ./strings.cc:85 (parallel [
            (set (reg/v/f:DI 59 [ last ])
                (plus:DI (reg/v/f:DI 59 [ last ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 25 24 26 3 ("./strings.cc") 84)

(insn 26 25 27 3 ./strings.cc:84 (set (reg:QI 60 [ D.2553 ])
        (mem:QI (reg/v/f:DI 59 [ last ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 24 (nil))
    (nil))

(insn 27 26 28 3 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2553 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 26 (nil))
    (nil))

(jump_insn 28 27 30 3 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 39)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 63

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 63
(note 30 28 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 4 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2553 ])
            (reg/v:QI 63 [ ch ]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 60 [ D.2553 ])
        (nil)))

(jump_insn 32 31 60 4 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 39)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63

(note 60 32 63 NOTE_INSN_LOOP_END)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63
(note 63 60 65 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 65 63 66 5 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 63

(barrier 66 65 36)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(code_label 36 66 37 6 16 "" [2 uses])

(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 6 ./strings.cc:84 (set (reg/v/f:DI 59 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62
(code_label 39 38 40 7 20 "" [2 uses])

(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 41 40 42 7 ("./strings.cc") 86)

(insn 42 41 46 7 ./strings.cc:86 (set (mem:QI (reg/v/f:DI 59 [ last ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 59 [ last ])
        (nil)))

(note 46 42 47 7 NOTE_INSN_FUNCTION_END)

(note 47 46 49 7 ("./strings.cc") 88)

(insn 49 47 55 7 ./strings.cc:88 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 62 [ s ])
        (nil)))

(insn 55 49 0 7 ./strings.cc:88 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 49 (nil))
    (nil))
;; End of basic block 7, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* strsplit(char*, char) (_Z8strsplitPcc)

71 registers.

Register 58 used 4 times across 11 insns; set 1 time; dies in 0 places; 1 bytes.

Register 59 used 5 times across 7 insns; set 2 times; 1 bytes.

Register 60 used 3 times across 4 insns; set 1 time; 1 bytes.

Register 61 used 3 times across 4 insns; set 1 time; 1 bytes.

Register 63 used 17 times across 41 insns; set 6 times; user var; pointer.

Register 64 used 5 times across 24 insns; set 1 time; user var; 1 bytes.

Register 65 used 2 times across 2 insns in block 0; set 1 time; 4 bytes.

13 basic blocks, 24 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 2727, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [67.0%]  1 [33.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 64

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  0 [33.0%]  (fallthru)
Successors:  12 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1827, maybe hot.
Predecessors:  0 [67.0%] 
Successors:  7 [5.0%]  3 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1736, maybe hot.
Predecessors:  2 [95.0%]  (fallthru)
Successors:  4 [11.0%]  (fallthru) 6 [89.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 191, maybe hot.
Predecessors:  3 [11.0%]  (fallthru)
Successors:  12 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  6 [95.0%] 
Successors:  12 [11.0%]  (loop_exit) 6 [89.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64

Basic block 6 prev 5, next 7, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  3 [89.0%]  5 [89.0%]  (fallthru,dfs_back)
Successors:  5 [95.0%]  7 [5.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 591, maybe hot.
Predecessors:  2 [5.0%]  6 [5.0%]  (fallthru,loop_exit)
Successors:  12 [33.0%]  8 [67.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 396, maybe hot.
Predecessors:  7 [67.0%]  (fallthru)
Successors:  12 [5.0%]  9 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63 64

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 376, maybe hot.
Predecessors:  8 [95.0%]  (fallthru)
Successors:  12 [5.0%]  10 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63

Basic block 10 prev 9, next 11, loop_depth 1, count 0, freq 3668, maybe hot.
Predecessors:  9 [95.0%]  (fallthru) 11 [95.0%]  (dfs_back)
Successors:  12 [5.0%]  (loop_exit) 11 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 63

Basic block 11 prev 10, next 12, loop_depth 1, count 0, freq 3484, maybe hot.
Predecessors:  10 [95.0%]  (fallthru)
Successors:  10 [95.0%]  (dfs_back) 12 [5.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63

Basic block 12 prev 11, next -2, loop_depth 0, count 0, freq 2727, maybe hot.
Predecessors:  4 [100.0%]  1 [100.0%]  5 [11.0%]  (loop_exit) 7 [33.0%]  8 [5.0%]  9 [5.0%]  10 [5.0%]  (loop_exit) 11 [5.0%]  (fallthru,loop_exit)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]



try_optimize_cfg iteration 1

Forwarding edge 3->4 to 12 failed.
(note 1 0 8 ("./strings.cc") 126)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 0 ./strings.cc:126 (set (reg/v/f:DI 63 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (nil)))

(insn 4 3 5 0 ./strings.cc:126 (set (reg:SI 65 [ ch ])
        (reg:SI 4 si [ ch ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ ch ])
        (nil)))

(insn 5 4 6 0 ./strings.cc:126 (set (reg/v:QI 64 [ ch ])
        (subreg:QI (reg:SI 65 [ ch ]) 0)) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (expr_list:REG_DEAD (reg:SI 65 [ ch ])
        (nil)))

(note 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 0 ("./strings.cc") 128)

(insn 11 10 12 0 ./strings.cc:128 (set (reg:QI 61 [ D.2584 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn 12 11 13 0 ./strings.cc:128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2584 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 11 (nil))
    (nil))

(jump_insn 13 12 15 0 ./strings.cc:128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6700 [0x1a2c])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 64

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 15 13 16 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 103 1 ./strings.cc:128 (set (reg/v/f:DI 63 [ s ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 103 16 104 1 (set (pc)
        (label_ref 71)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

(barrier 104 103 19)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 64
(code_label 19 104 20 2 26 "" [1 uses])

(note 20 19 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 21 20 22 2 ("./strings.cc") 129)

(insn 22 21 23 2 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2584 ])
            (reg/v:QI 64 [ ch ]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 61 [ D.2584 ])
        (nil)))

(jump_insn 23 22 25 2 ./strings.cc:129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 22 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64
(note 25 23 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 3 ./strings.cc:129 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 27 26 28 3 ./strings.cc:129 (set (reg:QI 59 [ temp.105 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 26 (nil))
    (nil))

(insn 28 27 29 3 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 59 [ temp.105 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 27 (nil))
    (nil))

(jump_insn 29 28 89 3 ./strings.cc:129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 108)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 28 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64

(note 89 29 105 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
(note 105 89 106 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 106 105 107 4 (set (pc)
        (label_ref 71)) -1 (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

(barrier 107 106 33)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64
(code_label 33 107 34 5 32 "" [1 uses])

(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 5 ./strings.cc:129 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 36 35 37 5 ./strings.cc:129 (set (reg:QI 59 [ temp.105 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 35 (nil))
    (nil))

(insn 37 36 38 5 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 59 [ temp.105 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 36 (nil))
    (nil))

(jump_insn 38 37 108 5 ./strings.cc:129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 37 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 64
(code_label 108 38 97 6 40 "" [1 uses])

(note 97 108 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 41 97 42 6 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 64 [ ch ])
            (reg:QI 59 [ temp.105 ]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 59 [ temp.105 ])
        (nil)))

(jump_insn 42 41 90 6 ./strings.cc:129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 41 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64

(note 90 42 43 NOTE_INSN_LOOP_END)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64
(code_label 43 90 44 7 29 "" [1 uses])

(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 45 44 46 7 ("./strings.cc") 130)

(insn 46 45 47 7 ./strings.cc:130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 64 [ ch ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 47 46 50 7 ./strings.cc:130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64

(note 50 47 49 ("./strings.cc") 132)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 64
(note 49 50 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 49 52 8 ./strings.cc:132 (set (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(insn 52 51 53 8 ./strings.cc:132 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 53 52 54 8 ("./strings.cc") 133)

(insn 54 53 55 8 ./strings.cc:133 (set (reg:QI 58 [ temp.106 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 52 (nil))
    (nil))

(insn 55 54 56 8 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.106 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 54 (nil))
    (nil))

(jump_insn 56 55 58 8 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 55 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63 64

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63 64
(note 58 56 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 9 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.106 ])
            (reg/v:QI 64 [ ch ]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg/v:QI 64 [ ch ])
        (nil)))

(jump_insn 60 59 91 9 ./strings.cc:133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 59 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63

(note 91 60 99 NOTE_INSN_LOOP_BEG)

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
(code_label 99 91 98 10 38 "" [1 uses])

(note 98 99 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 63 98 64 10 ./strings.cc:133 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 64 63 65 10 ./strings.cc:133 (set (reg:QI 60 [ temp.104 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 63 (nil))
    (nil))

(insn 65 64 66 10 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.104 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 64 (nil))
    (nil))

(jump_insn 66 65 68 10 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 65 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 63

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 63
(note 68 66 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 11 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.104 ])
            (reg:QI 58 [ temp.106 ]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 60 [ temp.104 ])
        (nil)))

(jump_insn 70 69 92 11 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 99)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 69 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63

(note 92 70 71 NOTE_INSN_LOOP_END)

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
(code_label 71 92 72 12 28 "" [7 uses])

(note 72 71 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 76 72 77 12 NOTE_INSN_FUNCTION_END)

(note 77 76 79 12 ("./strings.cc") 136)

(insn 79 77 85 12 ./strings.cc:136 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 63 [ s ])
        (nil)))

(insn 85 79 0 12 ./strings.cc:136 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 79 (nil))
    (nil))
;; End of basic block 12, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* strtrimto(char*, char) (_Z9strtrimtoPcc)



try_optimize_cfg iteration 1

deleted 2 dead insns
71 registers.

Register 58 used 3 times across 4 insns in block 0; set 1 time; user var; pointer.

Register 59 used 3 times across 3 insns in block 0; set 1 time; user var; pointer.

Register 60 used 3 times across 9 insns in block 0; set 1 time; crosses 1 call; 4 bytes.

Register 62 used 4 times across 13 insns in block 0; set 1 time; user var; crosses 1 call; pointer.

Register 63 used 2 times across 2 insns in block 0; set 1 time; user var; 1 bytes.

Register 64 used 2 times across 2 insns in block 0; set 1 time; 4 bytes.

Register 67 used 2 times across 2 insns in block 0; set 1 time; pointer.

Register 68 used 2 times across 3 insns in block 0; set 1 time; pointer.

Register 69 used 3 times across 7 insns in block 0; set 1 time; user var; crosses 1 call; pointer.

Register 70 used 2 times across 2 insns in block 0; set 1 time; user var; pointer.

1 basic blocks, 2 edges.

Basic block 0 prev -1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]



try_optimize_cfg iteration 1

(note 1 0 8 ("./strings.cc") 155)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 0 ./strings.cc:155 (set (reg/v/f:DI 62 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (nil)))

(insn 4 3 5 0 ./strings.cc:155 (set (reg:SI 64 [ ch ])
        (reg:SI 4 si [ ch ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ ch ])
        (nil)))

(insn 5 4 6 0 ./strings.cc:155 (set (reg/v:QI 63 [ ch ])
        (subreg:QI (reg:SI 64 [ ch ]) 0)) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (expr_list:REG_DEAD (reg:SI 64 [ ch ])
        (nil)))

(note 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 0 ("./strings.cc") 157)

(insn 11 10 12 0 ./strings.cc:157 (set (reg:SI 60 [ D.2619 ])
        (sign_extend:SI (reg/v:QI 63 [ ch ]))) 121 {extendqisi2} (insn_list:REG_DEP_TRUE 5 (nil))
    (expr_list:REG_DEAD (reg/v:QI 63 [ ch ])
        (nil)))

(insn 12 11 13 0 ./strings.cc:157 (set (reg:SI 4 si [ D.2619 ])
        (reg:SI 60 [ D.2619 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 11 (nil))
    (nil))

(insn 13 12 14 0 ./strings.cc:157 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(call_insn/u 14 13 15 0 ./strings.cc:157 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strrchr") [flags 0x41] <function_decl 0x2ad10a49e400 strrchr>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 12 (insn_list:REG_DEP_TRUE 13 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ D.2619 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ s ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ D.2619 ]))
                (nil)))))

(insn 15 14 17 0 ./strings.cc:157 (set (reg/v/f:DI 59 [ last ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(note 17 15 58 0 ("./strings.cc") 158)

(insn 58 17 59 0 ./strings.cc:158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 15 (nil))
    (nil))

(insn 59 58 25 0 ./strings.cc:158 (set (reg/v/f:DI 69 [ last ])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (reg/v/f:DI 59 [ last ])
            (reg/v/f:DI 62 [ s ]))) 742 {*movdicc_c_rex64} (insn_list:REG_DEP_TRUE 58 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 59 [ last ])
            (nil))))

(note 25 59 26 0 ("./strings.cc") 159)

(insn 26 25 27 0 ./strings.cc:159 (set (mem:QI (reg/v/f:DI 69 [ last ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 59 (nil))
    (nil))

(note 27 26 28 0 ("./strings.cc") 161)

(insn 28 27 29 0 ./strings.cc:161 (set (reg:SI 4 si [ D.2619 ])
        (reg:SI 60 [ D.2619 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 60 [ D.2619 ])
        (nil)))

(insn 29 28 30 0 ./strings.cc:161 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 62 [ s ])
        (nil)))

(call_insn/u 30 29 31 0 ./strings.cc:161 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41] <function_decl 0x2ad10a498000 strchr>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 28 (insn_list:REG_DEP_TRUE 29 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ D.2619 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ s ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ D.2619 ]))
                (nil)))))

(insn 31 30 33 0 ./strings.cc:161 (set (reg/v/f:DI 58 [ first ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 30 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(note 33 31 60 0 ("./strings.cc") 162)

(insn 60 33 61 0 ./strings.cc:162 (parallel [
            (set (reg/f:DI 68)
                (plus:DI (reg/v/f:DI 69 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 69 [ last ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 61 60 62 0 ./strings.cc:162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 58 [ first ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 31 (nil))
    (nil))

(insn 62 61 41 0 ./strings.cc:162 (set (reg/v/f:DI 70 [ first ])
        (if_then_else:DI (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (reg/f:DI 68)
            (reg/v/f:DI 58 [ first ]))) 742 {*movdicc_c_rex64} (insn_list:REG_DEP_TRUE 60 (insn_list:REG_DEP_TRUE 61 (nil)))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 68)
            (expr_list:REG_DEAD (reg/v/f:DI 58 [ first ])
                (nil)))))

(insn 41 62 45 0 ./strings.cc:162 (parallel [
            (set (reg/f:DI 67)
                (plus:DI (reg/v/f:DI 70 [ first ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 62 (nil))
    (expr_list:REG_DEAD (reg/v/f:DI 70 [ first ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note 45 41 46 0 NOTE_INSN_FUNCTION_END)

(note 46 45 48 0 ("./strings.cc") 164)

(insn 48 46 54 0 ./strings.cc:164 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 67)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 41 (nil))
    (expr_list:REG_DEAD (reg/f:DI 67)
        (nil)))

(insn 54 48 0 0 ./strings.cc:164 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 48 (nil))
    (nil))
;; End of basic block 0, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* strchomp(char*) (_Z8strchompPc)



try_optimize_cfg iteration 1

Forwarding edge 3->4 to 7 failed.
Forwarding edge 5->6 to 24 failed.
Forwarding edge 22->23 to 7 failed.
Forwarding edge 30->31 to 7 failed.
deleted 14 dead insns
76 registers.

Register 58 used 3 times across 5 insns; set 1 time; user var; dies in 2 places; pointer.

Register 59 used 38 times across 83 insns; set 18 times; user var; dies in 2 places; pointer.

Register 60 used 5 times across 8 insns; set 1 time; user var; pointer.

Register 63 used 7 times across 88 insns; set 1 time; user var; crosses 1 call; pointer.

Register 65 used 2 times across 2 insns in block 0; set 1 time.

Register 66 used 2 times across 3 insns in block 3; set 1 time.

Register 67 used 2 times across 2 insns in block 3; set 1 time.

Register 68 used 2 times across 2 insns in block 3; set 1 time.

Register 69 used 3 times across 69 insns; set 1 time; dies in 0 places.

Register 73 used 2 times across 2 insns in block 3; set 1 time.

Register 74 used 8 times across 17 insns; set 1 time.

Register 75 used 16 times across 25 insns; set 1 time; pointer.

32 basic blocks, 58 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  8 [5.0%]  1 [95.0%]  (fallthru)
Registers live at start: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  0 [95.0%]  (fallthru)
Successors:  3 [95.0%]  2 [5.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 63

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 51, maybe hot.
Predecessors:  1 [5.0%]  (fallthru)
Successors:  9 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  1 [95.0%] 
Successors:  10 [87.5%]  4 [12.5%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 122, maybe hot.
Predecessors:  3 [12.5%]  (fallthru)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 1042, maybe hot.
Predecessors:  7 [95.0%] 
Successors:  9 [5.0%]  (loop_exit) 6 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

Basic block 6 prev 5, next 7, loop_depth 1, count 0, freq 989, maybe hot.
Predecessors:  5 [95.0%]  (fallthru,dfs_back)
Successors:  24 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75

Basic block 7 prev 6, next 8, loop_depth 1, count 0, freq 1096, maybe hot.
Predecessors:  23 [100.0%]  31 [100.0%]  4 [100.0%]  11 [14.3%] 
Successors:  5 [95.0%]  8 [5.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Invalid sum of incoming frequencies 1325, should be 1096

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 554, maybe hot.
Predecessors:  0 [5.0%]  7 [5.0%]  (fallthru,loop_exit)
Successors:  9 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63
Invalid sum of incoming frequencies 109, should be 554

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  30 [5.0%]  (loop_exit) 5 [5.0%]  (loop_exit) 8 [100.0%]  (fallthru) 10 [5.0%]  (loop_exit) 17 [5.0%]  (loop_exit) 18 [5.0%]  (loop_exit) 19 [5.0%]  (loop_exit) 20 [5.0%]  (loop_exit) 21 [5.0%]  (loop_exit) 22 [5.0%]  (loop_exit) 24 [5.0%]  (loop_exit) 25 [5.0%]  (loop_exit) 26 [5.0%]  (loop_exit) 27 [5.0%]  (loop_exit) 28 [5.0%]  (loop_exit) 29 [5.0%]  (loop_exit) 2 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Invalid sum of incoming frequencies 1254, should be 1080

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  3 [87.5%] 
Successors:  9 [5.0%]  (loop_exit) 11 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
Invalid sum of incoming frequencies 853, should be 975

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 733, maybe hot.
Predecessors:  10 [95.0%]  (fallthru,dfs_back)
Successors:  12 [85.7%]  (fallthru) 7 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
Invalid sum of incoming frequencies 926, should be 733

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 704, maybe hot.
Predecessors:  11 [85.7%]  (fallthru)
Successors:  13 [83.3%]  (fallthru) 22 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 660, maybe hot.
Predecessors:  12 [83.3%]  (fallthru)
Successors:  14 [80.0%]  (fallthru) 21 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 587, maybe hot.
Predecessors:  13 [80.0%]  (fallthru)
Successors:  15 [75.0%]  (fallthru) 20 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 440, maybe hot.
Predecessors:  14 [75.0%]  (fallthru)
Successors:  16 [66.7%]  (fallthru) 19 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  15 [66.7%]  (fallthru)
Successors:  17 [50.0%]  (fallthru) 18 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Invalid sum of incoming frequencies 293, should be 880

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 929, maybe hot.
Predecessors:  16 [50.0%]  (fallthru)
Successors:  9 [5.0%]  (loop_exit) 18 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Invalid sum of incoming frequencies 440, should be 929

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 885, maybe hot.
Predecessors:  17 [95.0%]  (fallthru,dfs_back) 16 [50.0%] 
Successors:  9 [5.0%]  (loop_exit) 19 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Invalid sum of incoming frequencies 1323, should be 885

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 843, maybe hot.
Predecessors:  18 [95.0%]  (fallthru,dfs_back) 15 [33.3%] 
Successors:  9 [5.0%]  (loop_exit) 20 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Invalid sum of incoming frequencies 988, should be 843

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 803, maybe hot.
Predecessors:  19 [95.0%]  (fallthru,dfs_back) 14 [25.0%] 
Successors:  9 [5.0%]  (loop_exit) 21 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Invalid sum of incoming frequencies 948, should be 803

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 765, maybe hot.
Predecessors:  20 [95.0%]  (fallthru,dfs_back) 13 [20.0%] 
Successors:  9 [5.0%]  (loop_exit) 22 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Invalid sum of incoming frequencies 895, should be 765

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 729, maybe hot.
Predecessors:  21 [95.0%]  (fallthru,dfs_back) 12 [16.7%] 
Successors:  9 [5.0%]  (loop_exit) 23 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Invalid sum of incoming frequencies 844, should be 729

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 431, maybe hot.
Predecessors:  22 [95.0%]  (fallthru,dfs_back)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Invalid sum of incoming frequencies 693, should be 431

Basic block 24 prev 23, next 25, loop_depth 1, count 0, freq 990, maybe hot.
Predecessors:  6 [100.0%] 
Successors:  9 [5.0%]  (loop_exit) 25 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

Basic block 25 prev 24, next 26, loop_depth 1, count 0, freq 943, maybe hot.
Predecessors:  24 [95.0%]  (fallthru,dfs_back)
Successors:  9 [5.0%]  (loop_exit) 26 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

Basic block 26 prev 25, next 27, loop_depth 1, count 0, freq 898, maybe hot.
Predecessors:  25 [95.0%]  (fallthru,dfs_back)
Successors:  9 [5.0%]  (loop_exit) 27 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

Basic block 27 prev 26, next 28, loop_depth 1, count 0, freq 855, maybe hot.
Predecessors:  26 [95.0%]  (fallthru,dfs_back)
Successors:  9 [5.0%]  (loop_exit) 28 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

Basic block 28 prev 27, next 29, loop_depth 1, count 0, freq 815, maybe hot.
Predecessors:  27 [95.0%]  (fallthru,dfs_back)
Successors:  9 [5.0%]  (loop_exit) 29 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

Basic block 29 prev 28, next 30, loop_depth 1, count 0, freq 776, maybe hot.
Predecessors:  28 [95.0%]  (fallthru,dfs_back)
Successors:  9 [5.0%]  (loop_exit) 30 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

Basic block 30 prev 29, next 31, loop_depth 1, count 0, freq 739, maybe hot.
Predecessors:  29 [95.0%]  (fallthru,dfs_back)
Successors:  9 [5.0%]  (loop_exit) 31 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

Basic block 31 prev 30, next -2, loop_depth 1, count 0, freq 667, maybe hot.
Predecessors:  30 [95.0%]  (fallthru,dfs_back)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69



try_optimize_cfg iteration 1

Forwarding edge 3->4 to 7 failed.
Forwarding edge 5->6 to 24 failed.
Forwarding edge 22->23 to 7 failed.
Forwarding edge 30->31 to 7 failed.
(note 1 0 6 ("./strings.cc") 69)

;; Start of basic block 0, registers live: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:69 (set (reg/v/f:DI 63 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (nil)))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 71)

(insn 9 8 10 0 ./strings.cc:71 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(call_insn/u 10 9 11 0 ./strings.cc:71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x2ad10a49b200 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 9 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (nil))))

(insn 11 10 13 0 ./strings.cc:71 (set (reg:DI 65)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 13 11 14 0 ./strings.cc:71 (parallel [
            (set (reg/v/f:DI 60 [ last ])
                (plus:DI (reg:DI 65)
                    (reg/v/f:DI 63 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 11 (nil))
    (expr_list:REG_DEAD (reg:DI 65)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note 14 13 15 0 ("./strings.cc") 72)

(insn 15 14 16 0 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 63 [ s ])
            (reg/v/f:DI 60 [ last ]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 13 (nil))
    (nil))

(jump_insn 16 15 18 0 ./strings.cc:72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 63
(note 18 16 19 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 1 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 58 [ last.167 ])
                (plus:DI (reg/v/f:DI 60 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 20 19 21 1 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 60 [ last ])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 21 20 23 1 ./strings.cc:72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 63

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
(note 23 21 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 313 2 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/v/f:DI 58 [ last.167 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 58 [ last.167 ])
        (nil)))

(jump_insn 313 24 314 2 (set (pc)
        (label_ref 48)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63

(barrier 314 313 27)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 63
(code_label 27 314 28 3 53 "" [1 uses])

(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 70 3 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/v/f:DI 58 [ last.167 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 58 [ last.167 ])
        (nil)))

(insn 70 29 71 3 (parallel [
            (set (reg:DI 66)
                (minus:DI (reg/v/f:DI 60 [ last ])
                    (reg/v/f:DI 63 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 60 [ last ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 71 70 72 3 (set (reg:DI 68)
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 72 71 73 3 (parallel [
            (set (reg:DI 67)
                (minus:DI (reg:DI 68)
                    (reg:DI 66)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 70 (insn_list:REG_DEP_TRUE 71 (nil)))
    (expr_list:REG_DEAD (reg:DI 68)
        (expr_list:REG_DEAD (reg:DI 66)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (minus:DI (const_int 1 [0x1])
                        (reg:DI 66))
                    (nil))))))

(insn 73 72 68 3 (parallel [
            (set (reg:DI 69)
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (reg:DI 67)))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 29 (insn_list:REG_DEP_TRUE 72 (nil)))
    (expr_list:REG_DEAD (reg:DI 67)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note 68 73 77 3 NOTE_INSN_LOOP_BEG)

(insn 77 68 78 3 (parallel [
            (set (reg:DI 73)
                (minus:DI (reg/v/f:DI 59 [ last.166 ])
                    (reg:DI 69)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 73 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 78 77 204 3 (parallel [
            (set (reg:DI 74)
                (and:DI (reg:DI 73)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 297 {*anddi_1_rex64} (insn_list:REG_DEP_TRUE 77 (nil))
    (expr_list:REG_DEAD (reg:DI 73)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 204 78 205 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 78 (nil))
    (nil))

(jump_insn 205 204 316 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 315)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 204 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(note 316 205 317 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 317 316 318 4 (set (pc)
        (label_ref:DI 37)) 548 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

(barrier 318 317 32)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(code_label 32 318 33 5 57 "" [1 uses])

(note 33 32 298 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 298 33 34 5 ./strings.cc:72 (parallel [
            (set (reg/f:DI 75)
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 59 [ last.166 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 34 298 35 5 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/f:DI 75)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 298 (nil))
    (nil))

(insn 35 34 36 5 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 34 (nil))
    (nil))

(jump_insn 36 35 76 5 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 35 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
(note 76 36 320 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 320 76 321 6 (set (pc)
        (label_ref 319)) -1 (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75

(barrier 321 320 37)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(code_label 37 321 38 7 56 "" [4 uses])

(note 38 37 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 38 44 7 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 44 43 69 7 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 43 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

(note 69 44 45 NOTE_INSN_LOOP_END)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
(code_label 45 69 46 8 51 "" [1 uses])

(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 8 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63
(code_label 48 47 49 9 55 "" [16 uses])

(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 50 49 51 9 ("./strings.cc") 74)

(insn 51 50 55 9 ./strings.cc:74 (set (mem:QI (plus:DI (reg/v/f:DI 59 [ last.166 ])
                (const_int 1 [0x1])) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 59 [ last.166 ])
        (nil)))

(note 55 51 56 9 NOTE_INSN_FUNCTION_END)

(note 56 55 58 9 ("./strings.cc") 76)

(insn 58 56 64 9 ./strings.cc:76 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 63 [ s ])
        (nil)))

(insn 64 58 315 9 ./strings.cc:76 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 58 (nil))
    (nil))
;; End of basic block 9, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
(code_label 315 64 83 10 80 "" [1 uses])

(note 83 315 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 86 83 87 10 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 87 86 88 10 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 86 (nil))
    (nil))

(jump_insn 88 87 201 10 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 87 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
(note 201 88 199 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 199 201 200 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 1 [0x1]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 200 199 183 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 37)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 199 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
(note 183 200 181 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 181 183 182 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 2 [0x2]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 182 181 165 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 326)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 181 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
(note 165 182 163 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 163 165 164 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 3 [0x3]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 164 163 147 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 327)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 163 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
(note 147 164 145 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 145 147 146 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 4 [0x4]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 146 145 129 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 328)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 145 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
(note 129 146 127 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 127 129 128 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 5 [0x5]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 128 127 111 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 329)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 127 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 74
(note 111 128 109 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 109 111 110 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 6 [0x6]))) 2 {cmpdi_1_insn_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 74)
        (nil)))

(jump_insn 110 109 97 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 330)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 109 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(note 97 110 100 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 100 97 101 17 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 101 100 102 17 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 100 (nil))
    (nil))

(jump_insn 102 101 330 17 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 101 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(code_label 330 102 115 18 86 "" [1 uses])

(note 115 330 118 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 118 115 119 18 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 119 118 120 18 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 118 (nil))
    (nil))

(jump_insn 120 119 329 18 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 119 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(code_label 329 120 133 19 85 "" [1 uses])

(note 133 329 136 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 136 133 137 19 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 137 136 138 19 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 136 (nil))
    (nil))

(jump_insn 138 137 328 19 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 137 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(code_label 328 138 151 20 84 "" [1 uses])

(note 151 328 154 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 154 151 155 20 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 155 154 156 20 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 154 (nil))
    (nil))

(jump_insn 156 155 327 20 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 155 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(code_label 327 156 169 21 83 "" [1 uses])

(note 169 327 172 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 172 169 173 21 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 173 172 174 21 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 172 (nil))
    (nil))

(jump_insn 174 173 326 21 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 173 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(code_label 326 174 187 22 82 "" [1 uses])

(note 187 326 190 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 190 187 191 22 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 191 190 192 22 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 190 (nil))
    (nil))

(jump_insn 192 191 202 22 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 191 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(note 202 192 322 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(jump_insn 322 202 323 23 (set (pc)
        (label_ref 37)) -1 (nil)
    (nil))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

(barrier 323 322 319)

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
(code_label 319 323 210 24 81 "" [1 uses])

(note 210 319 213 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 213 210 214 24 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 214 213 215 24 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 75)
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 215 214 223 24 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 214 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
(note 223 215 226 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 226 223 227 25 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 227 226 228 25 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 75)
                    (const_int -2 [0xfffffffffffffffe])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 228 227 236 25 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 227 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
(note 236 228 239 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 239 236 240 26 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 240 239 241 26 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 75)
                    (const_int -3 [0xfffffffffffffffd])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 241 240 249 26 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 240 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
(note 249 241 252 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 252 249 253 27 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 253 252 254 27 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 75)
                    (const_int -4 [0xfffffffffffffffc])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 254 253 262 27 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 253 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
(note 262 254 265 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 265 262 266 28 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 266 265 267 28 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 75)
                    (const_int -5 [0xfffffffffffffffb])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 267 266 275 28 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 266 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
(note 275 267 278 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 278 275 279 29 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 279 278 280 29 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 75)
                    (const_int -6 [0xfffffffffffffffa])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 280 279 288 29 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 279 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69 75

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 75
(note 288 280 291 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 291 288 292 30 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -7 [0xfffffffffffffff9])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 292 291 293 30 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 75)
                    (const_int -7 [0xfffffffffffffff9])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg/f:DI 75)
        (nil)))

(jump_insn 293 292 296 30 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 292 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69
(note 296 293 324 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(jump_insn 324 296 325 31 (set (pc)
        (label_ref 37)) -1 (nil)
    (nil))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 63 69

(barrier 325 324 0)


;; Function char* strtrim(char*) (_Z7strtrimPc)



try_optimize_cfg iteration 1

Forwarding edge 0->1 to 3 failed.
Forwarding edge 3->4 to 7 failed.
Forwarding edge 30->31 to 2 failed.
Forwarding edge 39->40 to 2 failed.
deleted 13 dead insns
108 registers.

Register 58 used 44 times across 151 insns; set 17 times; user var; dies in 2 places; crosses 16 calls; pointer.

Register 59 used 2 times across 2 insns in block 6; set 1 time; 4 bytes.

Register 60 used 5 times across 7 insns; set 2 times; 1 bytes.

Register 61 used 2 times across 2 insns in block 32; set 1 time; 4 bytes.

Register 64 used 13 times across 163 insns; set 2 times; user var; crosses 18 calls; pointer.

Register 66 used 2 times across 2 insns in block 0; set 1 time.

Register 67 used 2 times across 2 insns in block 0; set 1 time.

Register 68 used 2 times across 2 insns in block 32; set 1 time; 4 bytes.

Register 69 used 2 times across 2 insns in block 6; set 1 time; 4 bytes.

Register 75 used 2 times across 2 insns in block 8; set 1 time.

Register 76 used 8 times across 23 insns; set 1 time; crosses 1 call.

Register 77 used 13 times across 51 insns; set 1 time; crosses 7 calls; pointer.

Register 78 used 2 times across 2 insns in block 8; set 1 time; 4 bytes.

Register 79 used 2 times across 2 insns in block 8; set 1 time; 4 bytes.

Register 80 used 2 times across 2 insns in block 2; set 1 time; 4 bytes.

Register 81 used 2 times across 2 insns in block 2; set 1 time; 4 bytes.

Register 82 used 2 times across 2 insns in block 17; set 1 time; 4 bytes.

Register 83 used 2 times across 2 insns in block 17; set 1 time; 4 bytes.

Register 84 used 2 times across 2 insns in block 19; set 1 time; 4 bytes.

Register 85 used 2 times across 2 insns in block 19; set 1 time; 4 bytes.

Register 86 used 2 times across 2 insns in block 21; set 1 time; 4 bytes.

Register 87 used 2 times across 2 insns in block 21; set 1 time; 4 bytes.

Register 88 used 2 times across 2 insns in block 23; set 1 time; 4 bytes.

Register 89 used 2 times across 2 insns in block 23; set 1 time; 4 bytes.

Register 90 used 2 times across 2 insns in block 25; set 1 time; 4 bytes.

Register 91 used 2 times across 2 insns in block 25; set 1 time; 4 bytes.

Register 92 used 2 times across 2 insns in block 27; set 1 time; 4 bytes.

Register 93 used 2 times across 2 insns in block 27; set 1 time; 4 bytes.

Register 94 used 2 times across 2 insns in block 29; set 1 time; 4 bytes.

Register 95 used 2 times across 2 insns in block 29; set 1 time; 4 bytes.

Register 96 used 2 times across 2 insns in block 33; set 1 time; 4 bytes.

Register 97 used 2 times across 2 insns in block 33; set 1 time; 4 bytes.

Register 98 used 2 times across 2 insns in block 34; set 1 time; 4 bytes.

Register 99 used 2 times across 2 insns in block 34; set 1 time; 4 bytes.

Register 100 used 2 times across 2 insns in block 35; set 1 time; 4 bytes.

Register 101 used 2 times across 2 insns in block 35; set 1 time; 4 bytes.

Register 102 used 2 times across 2 insns in block 36; set 1 time; 4 bytes.

Register 103 used 2 times across 2 insns in block 36; set 1 time; 4 bytes.

Register 104 used 2 times across 2 insns in block 37; set 1 time; 4 bytes.

Register 105 used 2 times across 2 insns in block 37; set 1 time; 4 bytes.

Register 106 used 2 times across 2 insns in block 38; set 1 time; 4 bytes.

Register 107 used 2 times across 2 insns in block 38; set 1 time; 4 bytes.

41 basic blocks, 72 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  1 [5.0%]  (fallthru) 8 [95.0%] 
Registers live at start: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 51, maybe hot.
Predecessors:  0 [5.0%]  (fallthru)
Successors:  3 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 890, maybe hot.
Predecessors:  31 [100.0%]  40 [100.0%]  10 [12.5%] 
Successors:  32 [95.0%]  3 [5.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Invalid sum of incoming frequencies 1144, should be 890

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  32 [5.0%]  (loop_exit) 34 [5.0%]  (loop_exit) 2 [5.0%]  (fallthru,loop_exit) 8 [5.0%]  (loop_exit) 9 [5.0%]  (loop_exit) 17 [5.0%]  (loop_exit) 39 [5.0%]  (loop_exit) 19 [5.0%]  (loop_exit) 38 [5.0%]  (loop_exit) 21 [5.0%]  (loop_exit) 35 [5.0%]  (loop_exit) 23 [5.0%]  (loop_exit) 37 [5.0%]  (loop_exit) 25 [5.0%]  (loop_exit) 33 [5.0%]  (loop_exit) 27 [5.0%]  (loop_exit) 36 [5.0%]  (loop_exit) 29 [5.0%]  (loop_exit) 30 [5.0%]  (loop_exit) 1 [100.0%] 
Successors:  4 [5.0%]  (fallthru) 6 [95.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64
Invalid sum of incoming frequencies 771, should be 1026

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 51, maybe hot.
Predecessors:  3 [5.0%]  (fallthru)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  6 [95.0%] 
Successors:  7 [5.0%]  (loop_exit) 6 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64

Basic block 6 prev 5, next 7, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  3 [95.0%]  5 [95.0%]  (fallthru,dfs_back)
Successors:  5 [95.0%]  7 [5.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  6 [5.0%]  (fallthru,loop_exit) 5 [5.0%]  (loop_exit) 4 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  0 [95.0%] 
Successors:  9 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 926, maybe hot.
Predecessors:  8 [95.0%]  (fallthru)
Successors:  3 [5.0%]  (loop_exit) 10 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 754, maybe hot.
Predecessors:  9 [95.0%]  (fallthru,dfs_back)
Successors:  11 [87.5%]  (fallthru) 2 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
Invalid sum of incoming frequencies 880, should be 754

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 733, maybe hot.
Predecessors:  10 [87.5%]  (fallthru)
Successors:  12 [85.7%]  (fallthru) 29 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 704, maybe hot.
Predecessors:  11 [85.7%]  (fallthru)
Successors:  13 [83.3%]  (fallthru) 27 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 660, maybe hot.
Predecessors:  12 [83.3%]  (fallthru)
Successors:  14 [80.0%]  (fallthru) 25 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 587, maybe hot.
Predecessors:  13 [80.0%]  (fallthru)
Successors:  15 [75.0%]  (fallthru) 23 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 440, maybe hot.
Predecessors:  14 [75.0%]  (fallthru)
Successors:  16 [66.7%]  (fallthru) 21 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  15 [66.7%]  (fallthru)
Successors:  17 [50.0%]  (fallthru) 19 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Invalid sum of incoming frequencies 293, should be 880

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  16 [50.0%]  (fallthru)
Successors:  18 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Invalid sum of incoming frequencies 440, should be 880

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 836, maybe hot.
Predecessors:  17 [95.0%]  (fallthru)
Successors:  19 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 836, maybe hot.
Predecessors:  18 [100.0%]  (fallthru) 16 [50.0%] 
Successors:  20 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Invalid sum of incoming frequencies 1276, should be 836

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 794, maybe hot.
Predecessors:  19 [95.0%]  (fallthru)
Successors:  21 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 794, maybe hot.
Predecessors:  20 [100.0%]  (fallthru) 15 [33.3%] 
Successors:  22 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Invalid sum of incoming frequencies 941, should be 794

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 754, maybe hot.
Predecessors:  21 [95.0%]  (fallthru)
Successors:  23 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 755, maybe hot.
Predecessors:  22 [100.0%]  (fallthru) 14 [25.0%] 
Successors:  24 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Invalid sum of incoming frequencies 901, should be 755

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 717, maybe hot.
Predecessors:  23 [95.0%]  (fallthru)
Successors:  25 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 717, maybe hot.
Predecessors:  24 [100.0%]  (fallthru) 13 [20.0%] 
Successors:  26 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Invalid sum of incoming frequencies 849, should be 717

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 681, maybe hot.
Predecessors:  25 [95.0%]  (fallthru)
Successors:  27 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 681, maybe hot.
Predecessors:  26 [100.0%]  (fallthru) 12 [16.7%] 
Successors:  28 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Invalid sum of incoming frequencies 798, should be 681

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 647, maybe hot.
Predecessors:  27 [95.0%]  (fallthru)
Successors:  29 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 29 prev 28, next 30, loop_depth 0, count 0, freq 647, maybe hot.
Predecessors:  28 [100.0%]  (fallthru) 11 [14.3%] 
Successors:  30 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Invalid sum of incoming frequencies 752, should be 647

Basic block 30 prev 29, next 31, loop_depth 0, count 0, freq 614, maybe hot.
Predecessors:  29 [95.0%]  (fallthru)
Successors:  3 [5.0%]  (loop_exit) 31 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 490, maybe hot.
Predecessors:  30 [95.0%]  (fallthru,dfs_back)
Successors:  2 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 32 prev 31, next 33, loop_depth 1, count 0, freq 845, maybe hot.
Predecessors:  2 [95.0%] 
Successors:  33 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

Basic block 33 prev 32, next 34, loop_depth 1, count 0, freq 803, maybe hot.
Predecessors:  32 [95.0%]  (fallthru)
Successors:  34 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

Basic block 34 prev 33, next 35, loop_depth 1, count 0, freq 763, maybe hot.
Predecessors:  33 [95.0%]  (fallthru)
Successors:  35 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

Basic block 35 prev 34, next 36, loop_depth 1, count 0, freq 725, maybe hot.
Predecessors:  34 [95.0%]  (fallthru)
Successors:  36 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

Basic block 36 prev 35, next 37, loop_depth 1, count 0, freq 688, maybe hot.
Predecessors:  35 [95.0%]  (fallthru)
Successors:  37 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

Basic block 37 prev 36, next 38, loop_depth 1, count 0, freq 653, maybe hot.
Predecessors:  36 [95.0%]  (fallthru)
Successors:  38 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

Basic block 38 prev 37, next 39, loop_depth 1, count 0, freq 620, maybe hot.
Predecessors:  37 [95.0%]  (fallthru)
Successors:  39 [95.0%]  (fallthru) 3 [5.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

Basic block 39 prev 38, next 40, loop_depth 1, count 0, freq 589, maybe hot.
Predecessors:  38 [95.0%]  (fallthru)
Successors:  3 [5.0%]  (loop_exit) 40 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 40 prev 39, next -2, loop_depth 1, count 0, freq 560, maybe hot.
Predecessors:  39 [95.0%]  (fallthru,dfs_back)
Successors:  2 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64



try_optimize_cfg iteration 1

Forwarding edge 0->1 to 3 failed.
Forwarding edge 3->4 to 7 failed.
Forwarding edge 30->31 to 2 failed.
Forwarding edge 39->40 to 2 failed.
(note 1 0 6 ("./strings.cc") 141)

;; Start of basic block 0, registers live: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:141 (set (reg/v/f:DI 64 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (nil)))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 143)

(insn 9 8 10 0 ./strings.cc:143 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 64 [ s ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(call_insn/u 10 9 11 0 ./strings.cc:143 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x2ad10a49b200 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 9 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (nil))))

(insn 11 10 13 0 ./strings.cc:143 (set (reg:DI 66)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))

(insn 13 11 14 0 ./strings.cc:143 (parallel [
            (set (reg:DI 67)
                (plus:DI (reg:DI 66)
                    (reg/v/f:DI 64 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 11 (nil))
    (expr_list:REG_DEAD (reg:DI 66)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 14 13 15 0 ./strings.cc:143 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg:DI 67)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_DEAD (reg:DI 67)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note 15 14 16 0 ("./strings.cc") 144)

(insn 16 15 17 0 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 14 (nil))
    (nil))

(jump_insn 17 16 81 0 ./strings.cc:144 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 479)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 16 (nil))
    (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

(note 81 17 459 NOTE_INSN_LOOP_BEG)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 459 81 460 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn 460 459 461 1 (set (pc)
        (label_ref 36)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

(barrier 461 460 474)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(code_label 474 461 89 2 133 "" [3 uses])

(note 89 474 30 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 30 89 31 2 ./strings.cc:144 (set (reg:SI 80)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 31 30 32 2 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 80)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 30 (nil))
    (expr_list:REG_DEAD (reg:SI 80)
        (nil)))

(call_insn/u 32 31 33 2 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 33 32 34 2 ./strings.cc:144 (set (reg:SI 81 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 34 33 35 2 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:SI 81 [ D.2604 ])
        (nil)))

(jump_insn 35 34 82 2 ./strings.cc:144 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 34 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

(note 82 35 36 NOTE_INSN_LOOP_END)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(code_label 36 82 37 3 88 "" [19 uses])

(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 38 37 39 3 ("./strings.cc") 146)

(insn 39 38 40 3 ./strings.cc:146 (set (mem:QI (plus:DI (reg/v/f:DI 58 [ last ])
                (const_int 1 [0x1])) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 58 [ last ])
        (nil)))

(note 40 39 41 3 ("./strings.cc") 147)

(insn 41 40 42 3 ./strings.cc:147 (set (reg:QI 60 [ D.2609 ])
        (mem:QI (reg/v/f:DI 64 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 42 41 43 3 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2609 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 41 (nil))
    (nil))

(jump_insn 43 42 83 3 ./strings.cc:147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 471)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 42 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64

(note 83 43 468 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
(note 468 83 469 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 469 468 470 4 (set (pc)
        (label_ref 63)) -1 (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

(barrier 470 469 47)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
(code_label 47 470 48 5 93 "" [1 uses])

(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 49 48 50 5 ("./strings.cc") 148)

(insn 50 49 51 5 ./strings.cc:148 (parallel [
            (set (reg/v/f:DI 64 [ s ])
                (plus:DI (reg/v/f:DI 64 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 51 50 52 5 ("./strings.cc") 147)

(insn 52 51 53 5 ./strings.cc:147 (set (reg:QI 60 [ D.2609 ])
        (mem:QI (reg/v/f:DI 64 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 50 (nil))
    (nil))

(insn 53 52 54 5 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2609 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 52 (nil))
    (nil))

(jump_insn 54 53 471 5 ./strings.cc:147 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 63)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 53 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64
(code_label 471 54 90 6 132 "" [1 uses])

(note 90 471 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 57 90 58 6 ./strings.cc:147 (set (reg:SI 69 [ D.2609 ])
        (sign_extend:SI (reg:QI 60 [ D.2609 ]))) 121 {extendqisi2} (nil)
    (expr_list:REG_DEAD (reg:QI 60 [ D.2609 ])
        (nil)))

(insn 58 57 59 6 ./strings.cc:147 (set (reg:SI 5 di [ D.2609 ])
        (reg:SI 69 [ D.2609 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 57 (nil))
    (expr_list:REG_DEAD (reg:SI 69 [ D.2609 ])
        (nil)))

(call_insn/u 59 58 60 6 ./strings.cc:147 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 58 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2609 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2609 ]))
            (nil))))

(insn 60 59 61 6 ./strings.cc:147 (set (reg:SI 59 [ D.2611 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 59 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 61 60 62 6 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.2611 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 60 (nil))
    (expr_list:REG_DEAD (reg:SI 59 [ D.2611 ])
        (nil)))

(jump_insn 62 61 84 6 ./strings.cc:147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 61 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

(note 84 62 63 NOTE_INSN_LOOP_END)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
(code_label 63 84 64 7 91 "" [2 uses])

(note 64 63 68 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 68 64 69 7 NOTE_INSN_FUNCTION_END)

(note 69 68 71 7 ("./strings.cc") 150)

(insn 71 69 77 7 ./strings.cc:150 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 64 [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 64 [ s ])
        (nil)))

(insn 77 71 479 7 ./strings.cc:150 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 71 (nil))
    (nil))
;; End of basic block 7, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(code_label 479 77 95 8 134 "" [1 uses])

(note 95 479 93 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 93 95 94 8 (parallel [
            (set (reg:DI 75)
                (minus:DI (reg/v/f:DI 58 [ last ])
                    (reg/v/f:DI 64 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 94 93 97 8 (parallel [
            (set (reg:DI 76)
                (and:DI (reg:DI 75)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 297 {*anddi_1_rex64} (insn_list:REG_DEP_TRUE 93 (nil))
    (expr_list:REG_DEAD (reg:DI 75)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 97 94 98 8 ./strings.cc:144 (set (reg:SI 78)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 98 97 99 8 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 78)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 97 (nil))
    (expr_list:REG_DEAD (reg:SI 78)
        (nil)))

(call_insn/u 99 98 100 8 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 98 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 100 99 101 8 ./strings.cc:144 (set (reg:SI 79 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 99 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 101 100 102 8 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 100 (nil))
    (expr_list:REG_DEAD (reg:SI 79 [ D.2604 ])
        (nil)))

(jump_insn 102 101 111 8 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 101 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
(note 111 102 106 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 106 111 107 9 ("./strings.cc") 145)

(insn 107 106 108 9 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 108 107 109 9 ("./strings.cc") 144)

(insn 109 108 110 9 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 107 (nil))
    (nil))

(jump_insn 110 109 291 9 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 109 (nil))
    (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
(note 291 110 289 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 289 291 290 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(jump_insn 290 289 266 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 474)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 289 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
(note 266 290 264 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 264 266 265 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 1 [0x1]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 265 264 241 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 480)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 264 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
(note 241 265 239 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 239 241 240 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 2 [0x2]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 240 239 216 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 481)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 239 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
(note 216 240 214 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 214 216 215 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 3 [0x3]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 215 214 191 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 482)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 214 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
(note 191 215 189 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 189 191 190 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 4 [0x4]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 190 189 166 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 483)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 189 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
(note 166 190 164 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 164 166 165 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 5 [0x5]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 165 164 141 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 484)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 164 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 76
(note 141 165 139 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 139 141 140 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 6 [0x6]))) 2 {cmpdi_1_insn_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 76)
        (nil)))

(jump_insn 140 139 124 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 485)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 139 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 124 140 118 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 118 124 119 17 ./strings.cc:144 (set (reg:SI 82)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 119 118 120 17 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 82)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 118 (nil))
    (expr_list:REG_DEAD (reg:SI 82)
        (nil)))

(call_insn/u 120 119 121 17 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 119 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 121 120 122 17 ./strings.cc:144 (set (reg:SI 83 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 120 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 122 121 123 17 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 121 (nil))
    (expr_list:REG_DEAD (reg:SI 83 [ D.2604 ])
        (nil)))

(jump_insn 123 122 132 17 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 122 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 132 123 127 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 127 132 128 18 ("./strings.cc") 145)

(insn 128 127 129 18 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 129 128 485 18 ("./strings.cc") 144)
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(code_label 485 129 149 19 140 "" [1 uses])

(note 149 485 143 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 143 149 144 19 ./strings.cc:144 (set (reg:SI 84)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 144 143 145 19 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 84)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 143 (nil))
    (expr_list:REG_DEAD (reg:SI 84)
        (nil)))

(call_insn/u 145 144 146 19 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 144 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 146 145 147 19 ./strings.cc:144 (set (reg:SI 85 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 145 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 147 146 148 19 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 146 (nil))
    (expr_list:REG_DEAD (reg:SI 85 [ D.2604 ])
        (nil)))

(jump_insn 148 147 157 19 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 147 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 157 148 152 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 152 157 153 20 ("./strings.cc") 145)

(insn 153 152 154 20 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 154 153 484 20 ("./strings.cc") 144)
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(code_label 484 154 174 21 139 "" [1 uses])

(note 174 484 168 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 168 174 169 21 ./strings.cc:144 (set (reg:SI 86)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 169 168 170 21 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 86)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 168 (nil))
    (expr_list:REG_DEAD (reg:SI 86)
        (nil)))

(call_insn/u 170 169 171 21 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 169 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 171 170 172 21 ./strings.cc:144 (set (reg:SI 87 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 170 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 172 171 173 21 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 171 (nil))
    (expr_list:REG_DEAD (reg:SI 87 [ D.2604 ])
        (nil)))

(jump_insn 173 172 182 21 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 172 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 182 173 177 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 177 182 178 22 ("./strings.cc") 145)

(insn 178 177 179 22 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 179 178 483 22 ("./strings.cc") 144)
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(code_label 483 179 199 23 138 "" [1 uses])

(note 199 483 193 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 193 199 194 23 ./strings.cc:144 (set (reg:SI 88)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 194 193 195 23 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 88)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 193 (nil))
    (expr_list:REG_DEAD (reg:SI 88)
        (nil)))

(call_insn/u 195 194 196 23 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 194 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 196 195 197 23 ./strings.cc:144 (set (reg:SI 89 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 195 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 197 196 198 23 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 196 (nil))
    (expr_list:REG_DEAD (reg:SI 89 [ D.2604 ])
        (nil)))

(jump_insn 198 197 207 23 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 197 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 207 198 202 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 202 207 203 24 ("./strings.cc") 145)

(insn 203 202 204 24 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 204 203 482 24 ("./strings.cc") 144)
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(code_label 482 204 224 25 137 "" [1 uses])

(note 224 482 218 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 218 224 219 25 ./strings.cc:144 (set (reg:SI 90)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 219 218 220 25 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 90)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 218 (nil))
    (expr_list:REG_DEAD (reg:SI 90)
        (nil)))

(call_insn/u 220 219 221 25 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 219 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 221 220 222 25 ./strings.cc:144 (set (reg:SI 91 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 220 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 222 221 223 25 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 221 (nil))
    (expr_list:REG_DEAD (reg:SI 91 [ D.2604 ])
        (nil)))

(jump_insn 223 222 232 25 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 222 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 232 223 227 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 227 232 228 26 ("./strings.cc") 145)

(insn 228 227 229 26 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 229 228 481 26 ("./strings.cc") 144)
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(code_label 481 229 249 27 136 "" [1 uses])

(note 249 481 243 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 243 249 244 27 ./strings.cc:144 (set (reg:SI 92)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 244 243 245 27 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 92)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 243 (nil))
    (expr_list:REG_DEAD (reg:SI 92)
        (nil)))

(call_insn/u 245 244 246 27 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 244 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 246 245 247 27 ./strings.cc:144 (set (reg:SI 93 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 245 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 247 246 248 27 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 246 (nil))
    (expr_list:REG_DEAD (reg:SI 93 [ D.2604 ])
        (nil)))

(jump_insn 248 247 257 27 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 247 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 257 248 252 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 252 257 253 28 ("./strings.cc") 145)

(insn 253 252 254 28 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 254 253 480 28 ("./strings.cc") 144)
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(code_label 480 254 274 29 135 "" [1 uses])

(note 274 480 268 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 268 274 269 29 ./strings.cc:144 (set (reg:SI 94)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 269 268 270 29 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 94)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 268 (nil))
    (expr_list:REG_DEAD (reg:SI 94)
        (nil)))

(call_insn/u 270 269 271 29 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 269 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 271 270 272 29 ./strings.cc:144 (set (reg:SI 95 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 270 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 272 271 273 29 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 271 (nil))
    (expr_list:REG_DEAD (reg:SI 95 [ D.2604 ])
        (nil)))

(jump_insn 273 272 282 29 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 272 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 282 273 277 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 277 282 278 30 ("./strings.cc") 145)

(insn 278 277 279 30 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 279 278 280 30 ("./strings.cc") 144)

(insn 280 279 281 30 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 278 (nil))
    (nil))

(jump_insn 281 280 287 30 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 280 (nil))
    (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 287 281 475 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(jump_insn 475 287 476 31 (set (pc)
        (label_ref 474)) -1 (nil)
    (nil))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

(barrier 476 475 21)

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(code_label 21 476 22 32 90 "" [1 uses])

(note 22 21 23 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 23 22 432 32 ("./strings.cc") 145)

(insn 432 23 24 32 ./strings.cc:145 (parallel [
            (set (reg/f:DI 77)
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 58 [ last ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn 24 432 25 32 ./strings.cc:145 (set (reg/v/f:DI 58 [ last ])
        (reg/f:DI 77)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 432 (nil))
    (nil))

(note 25 24 293 32 ("./strings.cc") 144)

(insn 293 25 294 32 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (insn_list:REG_DEP_TRUE 24 (nil))
    (nil))

(insn 294 293 295 32 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 293 (nil))
    (expr_list:REG_DEAD (reg:SI 68)
        (nil)))

(call_insn/u 295 294 296 32 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 294 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 296 295 297 32 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 295 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 297 296 298 32 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 296 (nil))
    (expr_list:REG_DEAD (reg:SI 61 [ D.2604 ])
        (nil)))

(jump_insn 298 297 307 32 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 297 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77
(note 307 298 302 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note 302 307 303 33 ("./strings.cc") 145)

(insn 303 302 304 33 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 304 303 313 33 ("./strings.cc") 144)

(insn 313 304 314 33 ./strings.cc:144 (set (reg:SI 96)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) 121 {extendqisi2} (insn_list:REG_DEP_TRUE 303 (nil))
    (nil))

(insn 314 313 315 33 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 96)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 313 (nil))
    (expr_list:REG_DEAD (reg:SI 96)
        (nil)))

(call_insn/u 315 314 316 33 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 314 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 316 315 317 33 ./strings.cc:144 (set (reg:SI 97 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 315 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 317 316 318 33 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 316 (nil))
    (expr_list:REG_DEAD (reg:SI 97 [ D.2604 ])
        (nil)))

(jump_insn 318 317 327 33 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 317 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
(note 327 318 322 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 322 327 323 34 ("./strings.cc") 145)

(insn 323 322 324 34 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 324 323 333 34 ("./strings.cc") 144)

(insn 333 324 334 34 ./strings.cc:144 (set (reg:SI 98)
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 77)
                    (const_int -2 [0xfffffffffffffffe])) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 334 333 335 34 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 98)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 333 (nil))
    (expr_list:REG_DEAD (reg:SI 98)
        (nil)))

(call_insn/u 335 334 336 34 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 334 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 336 335 337 34 ./strings.cc:144 (set (reg:SI 99 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 335 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 337 336 338 34 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 336 (nil))
    (expr_list:REG_DEAD (reg:SI 99 [ D.2604 ])
        (nil)))

(jump_insn 338 337 347 34 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 337 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
(note 347 338 342 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note 342 347 343 35 ("./strings.cc") 145)

(insn 343 342 344 35 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 344 343 353 35 ("./strings.cc") 144)

(insn 353 344 354 35 ./strings.cc:144 (set (reg:SI 100)
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 77)
                    (const_int -3 [0xfffffffffffffffd])) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 354 353 355 35 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 100)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 353 (nil))
    (expr_list:REG_DEAD (reg:SI 100)
        (nil)))

(call_insn/u 355 354 356 35 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 354 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 356 355 357 35 ./strings.cc:144 (set (reg:SI 101 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 355 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 357 356 358 35 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 356 (nil))
    (expr_list:REG_DEAD (reg:SI 101 [ D.2604 ])
        (nil)))

(jump_insn 358 357 367 35 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 357 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
(note 367 358 362 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note 362 367 363 36 ("./strings.cc") 145)

(insn 363 362 364 36 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 364 363 373 36 ("./strings.cc") 144)

(insn 373 364 374 36 ./strings.cc:144 (set (reg:SI 102)
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 77)
                    (const_int -4 [0xfffffffffffffffc])) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 374 373 375 36 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 102)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 373 (nil))
    (expr_list:REG_DEAD (reg:SI 102)
        (nil)))

(call_insn/u 375 374 376 36 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 374 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 376 375 377 36 ./strings.cc:144 (set (reg:SI 103 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 375 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 377 376 378 36 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 376 (nil))
    (expr_list:REG_DEAD (reg:SI 103 [ D.2604 ])
        (nil)))

(jump_insn 378 377 387 36 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 377 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
(note 387 378 382 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note 382 387 383 37 ("./strings.cc") 145)

(insn 383 382 384 37 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 384 383 393 37 ("./strings.cc") 144)

(insn 393 384 394 37 ./strings.cc:144 (set (reg:SI 104)
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 77)
                    (const_int -5 [0xfffffffffffffffb])) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 394 393 395 37 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 104)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 393 (nil))
    (expr_list:REG_DEAD (reg:SI 104)
        (nil)))

(call_insn/u 395 394 396 37 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 394 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 396 395 397 37 ./strings.cc:144 (set (reg:SI 105 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 395 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 397 396 398 37 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 396 (nil))
    (expr_list:REG_DEAD (reg:SI 105 [ D.2604 ])
        (nil)))

(jump_insn 398 397 407 37 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 397 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
(note 407 398 402 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(note 402 407 403 38 ("./strings.cc") 145)

(insn 403 402 404 38 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 404 403 413 38 ("./strings.cc") 144)

(insn 413 404 414 38 ./strings.cc:144 (set (reg:SI 106)
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 77)
                    (const_int -6 [0xfffffffffffffffa])) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 414 413 415 38 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 106)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 413 (nil))
    (expr_list:REG_DEAD (reg:SI 106)
        (nil)))

(call_insn/u 415 414 416 38 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 414 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 416 415 417 38 ./strings.cc:144 (set (reg:SI 107 [ D.2604 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 415 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 417 416 418 38 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.2604 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 416 (nil))
    (expr_list:REG_DEAD (reg:SI 107 [ D.2604 ])
        (nil)))

(jump_insn 418 417 427 38 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 417 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64 77

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 77
(note 427 418 422 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 422 427 423 39 ("./strings.cc") 145)

(insn 423 422 424 39 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -7 [0xfffffffffffffff9])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 77)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note 424 423 425 39 ("./strings.cc") 144)

(insn 425 424 426 39 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 423 (nil))
    (nil))

(jump_insn 426 425 430 39 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 425 (nil))
    (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 430 426 477 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(jump_insn 477 430 478 40 (set (pc)
        (label_ref 474)) -1 (nil)
    (nil))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

(barrier 478 477 0)


;; Function char* strsplit(char*) (_Z8strsplitPc)

69 registers.

Register 58 used 5 times across 7 insns; set 2 times; 1 bytes.

Register 59 used 2 times across 2 insns in block 7; set 1 time; 4 bytes.

Register 60 used 2 times across 2 insns in block 3; set 1 time; 4 bytes.

Register 61 used 5 times across 7 insns; set 2 times; 1 bytes.

Register 63 used 14 times across 36 insns; set 5 times; user var; crosses 2 calls; pointer.

Register 64 used 2 times across 2 insns in block 3; set 1 time; 4 bytes.

Register 65 used 2 times across 2 insns in block 7; set 1 time; 4 bytes.

9 basic blocks, 16 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 2306, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  3 [67.0%]  1 [33.0%]  (fallthru)
Registers live at start: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 761, maybe hot.
Predecessors:  0 [33.0%]  (fallthru)
Successors:  8 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  3 [95.0%] 
Successors:  8 [11.0%]  (loop_exit) 3 [89.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  0 [67.0%]  2 [89.0%]  (fallthru,dfs_back)
Successors:  2 [95.0%]  4 [5.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  3 [5.0%]  (fallthru,loop_exit)
Successors:  5 [5.0%]  (fallthru) 7 [95.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 25, maybe hot.
Predecessors:  4 [5.0%]  (fallthru)
Successors:  8 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

Basic block 6 prev 5, next 7, loop_depth 1, count 0, freq 4628, maybe hot.
Predecessors:  7 [95.0%] 
Successors:  8 [5.0%]  (loop_exit) 7 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63

Basic block 7 prev 6, next 8, loop_depth 1, count 0, freq 4872, maybe hot.
Predecessors:  4 [95.0%]  6 [95.0%]  (fallthru,dfs_back)
Successors:  6 [95.0%]  8 [5.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

Basic block 8 prev 7, next -2, loop_depth 0, count 0, freq 2306, maybe hot.
Predecessors:  7 [5.0%]  (fallthru,loop_exit) 2 [11.0%]  (loop_exit) 1 [100.0%]  6 [5.0%]  (loop_exit) 5 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]



try_optimize_cfg iteration 1

Forwarding edge 4->5 to 8 failed.
(note 1 0 6 ("./strings.cc") 108)

;; Start of basic block 0, registers live: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:108 (set (reg/v/f:DI 63 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (nil)))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 110)

(insn 9 8 10 0 ./strings.cc:110 (set (reg:QI 61 [ D.2569 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn 10 9 11 0 ./strings.cc:110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2569 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 9 (nil))
    (nil))

(jump_insn 11 10 13 0 ./strings.cc:110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 88)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6700 [0x1a2c])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 86 1 ./strings.cc:110 (set (reg/v/f:DI 63 [ s ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 86 14 87 1 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

(barrier 87 86 76)

(note 76 87 17 NOTE_INSN_LOOP_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
(code_label 17 76 18 2 145 "" [1 uses])

(note 18 17 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 19 18 20 2 ("./strings.cc") 111)

(insn 20 19 21 2 ./strings.cc:111 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 21 20 22 2 ./strings.cc:111 (set (reg:QI 61 [ D.2569 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 20 (nil))
    (nil))

(insn 22 21 23 2 ./strings.cc:111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2569 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 21 (nil))
    (nil))

(jump_insn 23 22 88 2 ./strings.cc:111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 58)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 22 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63
(code_label 88 23 82 3 150 "" [1 uses])

(note 82 88 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 82 27 3 ./strings.cc:111 (set (reg:SI 64 [ D.2569 ])
        (sign_extend:SI (reg:QI 61 [ D.2569 ]))) 121 {extendqisi2} (nil)
    (expr_list:REG_DEAD (reg:QI 61 [ D.2569 ])
        (nil)))

(insn 27 26 28 3 ./strings.cc:111 (set (reg:SI 5 di [ D.2569 ])
        (reg:SI 64 [ D.2569 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 26 (nil))
    (expr_list:REG_DEAD (reg:SI 64 [ D.2569 ])
        (nil)))

(call_insn/u 28 27 29 3 ./strings.cc:111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2569 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2569 ]))
            (nil))))

(insn 29 28 30 3 ./strings.cc:111 (set (reg:SI 60 [ D.2575 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 28 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 30 29 31 3 ./strings.cc:111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.2575 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 29 (nil))
    (expr_list:REG_DEAD (reg:SI 60 [ D.2575 ])
        (nil)))

(jump_insn 31 30 77 3 ./strings.cc:111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 30 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

(note 77 31 34 NOTE_INSN_LOOP_END)

(note 34 77 33 ("./strings.cc") 114)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
(note 33 34 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 4 ./strings.cc:114 (set (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(insn 36 35 37 4 ./strings.cc:114 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 37 36 38 4 ("./strings.cc") 115)

(insn 38 37 39 4 ./strings.cc:115 (set (reg:QI 58 [ temp.240 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 36 (nil))
    (nil))

(insn 39 38 40 4 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.240 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 38 (nil))
    (nil))

(jump_insn 40 39 78 4 ./strings.cc:115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 94)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 39 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63

(note 78 40 91 NOTE_INSN_LOOP_BEG)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
(note 91 78 92 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 92 91 93 5 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

(barrier 93 92 44)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
(code_label 44 93 45 6 148 "" [1 uses])

(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 ./strings.cc:115 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 47 46 48 6 ./strings.cc:115 (set (reg:QI 58 [ temp.240 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 46 (nil))
    (nil))

(insn 48 47 49 6 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.240 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 47 (nil))
    (nil))

(jump_insn 49 48 94 6 ./strings.cc:115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 58)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 48 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 63
(code_label 94 49 83 7 151 "" [1 uses])

(note 83 94 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 83 53 7 ./strings.cc:115 (set (reg:SI 65 [ temp.240 ])
        (sign_extend:SI (reg:QI 58 [ temp.240 ]))) 121 {extendqisi2} (nil)
    (expr_list:REG_DEAD (reg:QI 58 [ temp.240 ])
        (nil)))

(insn 53 52 54 7 ./strings.cc:115 (set (reg:SI 5 di [ temp.240 ])
        (reg:SI 65 [ temp.240 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 52 (nil))
    (expr_list:REG_DEAD (reg:SI 65 [ temp.240 ])
        (nil)))

(call_insn/u 54 53 55 7 ./strings.cc:115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 53 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ temp.240 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ temp.240 ]))
            (nil))))

(insn 55 54 56 7 ./strings.cc:115 (set (reg:SI 59 [ D.2579 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 54 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 56 55 57 7 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.2579 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 55 (nil))
    (expr_list:REG_DEAD (reg:SI 59 [ D.2579 ])
        (nil)))

(jump_insn 57 56 79 7 ./strings.cc:115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 56 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63

(note 79 57 58 NOTE_INSN_LOOP_END)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
(code_label 58 79 59 8 144 "" [4 uses])

(note 59 58 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 63 59 64 8 NOTE_INSN_FUNCTION_END)

(note 64 63 66 8 ("./strings.cc") 118)

(insn 66 64 72 8 ./strings.cc:118 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 63 [ s ])
        (nil)))

(insn 72 66 0 8 ./strings.cc:118 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 66 (nil))
    (nil))
;; End of basic block 8, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* strlopspace(char*) (_Z11strlopspacePc)

67 registers.

Register 58 used 6 times across 16 insns; set 3 times; user var; crosses 1 call; pointer.

Register 59 used 2 times across 2 insns in block 4; set 1 time; 4 bytes.

Register 60 used 5 times across 9 insns; set 2 times; 1 bytes.

Register 62 used 5 times across 20 insns; set 1 time; user var; crosses 1 call; pointer.

Register 63 used 2 times across 2 insns in block 4; set 1 time; 4 bytes.

6 basic blocks, 10 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [95.0%]  1 [5.0%]  (fallthru)
Registers live at start: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 51, maybe hot.
Predecessors:  0 [5.0%]  (fallthru)
Successors:  5 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  0 [95.0%] 
Successors:  4 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 62

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  4 [95.0%] 
Successors:  5 [5.0%]  (loop_exit) 4 [95.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 62

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  3 [95.0%]  (fallthru,dfs_back) 2 [100.0%] 
Successors:  3 [95.0%]  5 [5.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62

Basic block 5 prev 4, next -2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  4 [5.0%]  (fallthru,loop_exit) 3 [5.0%]  (loop_exit) 1 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]



try_optimize_cfg iteration 1

(note 1 0 6 ("./strings.cc") 93)

;; Start of basic block 0, registers live: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:93 (set (reg/v/f:DI 62 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (nil)))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 96)

(insn 9 8 10 0 ./strings.cc:96 (set (reg:QI 60 [ D.2562 ])
        (mem:QI (reg/v/f:DI 62 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn 10 9 11 0 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2562 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 9 (nil))
    (nil))

(jump_insn 11 10 13 0 ./strings.cc:96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(note 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 63 1 ./strings.cc:96 (set (reg/v/f:DI 58 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 63 14 64 1 (set (pc)
        (label_ref 38)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62

(barrier 64 63 17)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62
(code_label 17 64 18 2 155 "" [1 uses])

(note 18 17 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 58 2 ./strings.cc:96 (set (reg/v/f:DI 58 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 58 19 65 2 NOTE_INSN_LOOP_BEG)

(jump_insn 65 58 66 2 (set (pc)
        (label_ref 30)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 62

(barrier 66 65 22)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62
(code_label 22 66 23 3 159 "" [1 uses])

(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 24 23 25 3 ("./strings.cc") 97)

(insn 25 24 26 3 ./strings.cc:97 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 26 25 27 3 ("./strings.cc") 96)

(insn 27 26 28 3 ./strings.cc:96 (set (reg:QI 60 [ D.2562 ])
        (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 25 (nil))
    (nil))

(insn 28 27 29 3 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2562 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 27 (nil))
    (nil))

(jump_insn 29 28 30 3 ./strings.cc:96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 38)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 28 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 62

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 60 62
(code_label 30 29 31 4 158 "" [1 uses])

(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 4 ./strings.cc:96 (set (reg:SI 63 [ D.2562 ])
        (sign_extend:SI (reg:QI 60 [ D.2562 ]))) 121 {extendqisi2} (nil)
    (expr_list:REG_DEAD (reg:QI 60 [ D.2562 ])
        (nil)))

(insn 33 32 34 4 ./strings.cc:96 (set (reg:SI 5 di [ D.2562 ])
        (reg:SI 63 [ D.2562 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_DEAD (reg:SI 63 [ D.2562 ])
        (nil)))

(call_insn/u 34 33 35 4 ./strings.cc:96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2562 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2562 ]))
            (nil))))

(insn 35 34 36 4 ./strings.cc:96 (set (reg:SI 59 [ D.2564 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 34 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 36 35 37 4 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.2564 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 35 (nil))
    (expr_list:REG_DEAD (reg:SI 59 [ D.2564 ])
        (nil)))

(jump_insn 37 36 59 4 ./strings.cc:96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 36 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62

(note 59 37 38 NOTE_INSN_LOOP_END)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62
(code_label 38 59 39 5 157 "" [2 uses])

(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 40 39 41 5 ("./strings.cc") 98)

(insn 41 40 45 5 ./strings.cc:98 (set (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 58 [ last ])
        (nil)))

(note 45 41 46 5 NOTE_INSN_FUNCTION_END)

(note 46 45 48 5 ("./strings.cc") 100)

(insn 48 46 54 5 ./strings.cc:100 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 62 [ s ])
        (nil)))

(insn 54 48 0 5 ./strings.cc:100 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 48 (nil))
    (nil))
;; End of basic block 5, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* strcasepre(const char*, const char*) (_Z10strcaseprePKcS0_)

71 registers.

Register 58 used 4 times across 18 insns; set 2 times; dies in 0 places; crosses 2 calls; pointer.

Register 59 used 2 times across 2 insns in block 3; set 1 time; 4 bytes.

Register 60 used 2 times across 6 insns in block 3; set 1 time; crosses 1 call; 4 bytes.

Register 61 used 3 times across 4 insns; set 2 times; pointer.

Register 62 used 5 times across 10 insns; set 2 times; 1 bytes.

Register 64 used 5 times across 24 insns; set 2 times; user var; crosses 2 calls; pointer.

Register 65 used 3 times across 5 insns; set 1 time; user var; pointer.

Register 66 used 2 times across 2 insns in block 3; set 1 time; 4 bytes.

Register 67 used 2 times across 2 insns in block 3; set 1 time; 4 bytes.

8 basic blocks, 12 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [95.0%]  1 [5.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 526, maybe hot.
Predecessors:  0 [5.0%]  (fallthru) 4 [5.0%]  (loop_exit)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  0 [95.0%] 
Successors:  3 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 64

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 5 [100.0%] 
Successors:  6 [5.0%]  (loop_exit) 4 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  3 [95.0%]  (fallthru)
Successors:  1 [5.0%]  (loop_exit) 5 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 64

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 9025, maybe hot.
Predecessors:  4 [95.0%]  (fallthru)
Successors:  3 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 64

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  3 [5.0%]  (loop_exit)
Successors:  7 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

Basic block 7 prev 6, next -2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 1 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]



try_optimize_cfg iteration 1

Forwarding edge 4->5 to 3 failed.
(note 1 0 7 ("./strings.cc") 56)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 7 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 0 ./strings.cc:56 (set (reg/v/f:DI 64 [ str ])
        (reg:DI 5 di [ str ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ str ])
        (nil)))

(insn 4 3 5 0 ./strings.cc:56 (set (reg/v/f:DI 65 [ pre ])
        (reg:DI 4 si [ pre ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 4 si [ pre ])
        (nil)))

(note 5 4 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 5 11 0 ("./strings.cc") 60)

(insn 11 10 12 0 ./strings.cc:60 (set (reg:QI 62 [ D.2522 ])
        (mem:QI (reg/v/f:DI 65 [ pre ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(insn 12 11 13 0 ./strings.cc:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 62 [ D.2522 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 11 (nil))
    (nil))

(jump_insn 13 12 14 0 ./strings.cc:60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
(code_label 14 13 15 1 164 "" [1 uses])

(note 15 14 16 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 75 1 ./strings.cc:60 (set (reg/f:DI 61 [ D.2523 ])
        (reg/v/f:DI 64 [ str ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 64 [ str ])
        (nil)))

(jump_insn 75 16 76 1 (set (pc)
        (label_ref 50)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

(barrier 76 75 19)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65
(code_label 19 76 20 2 163 "" [1 uses])

(note 20 19 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 68 2 ./strings.cc:60 (set (reg/f:DI 58 [ ivtmp.302 ])
        (reg/v/f:DI 65 [ pre ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 65 [ pre ])
        (nil)))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 64

(note 68 21 22 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 64
(code_label 22 68 23 3 166 "" [1 uses])

(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 24 23 25 3 ("./strings.cc") 61)

(insn 25 24 26 3 ./strings.cc:61 (set (reg:SI 66 [ D.2522 ])
        (sign_extend:SI (reg:QI 62 [ D.2522 ]))) 121 {extendqisi2} (nil)
    (expr_list:REG_DEAD (reg:QI 62 [ D.2522 ])
        (nil)))

(insn 26 25 27 3 ./strings.cc:61 (set (reg:SI 5 di [ D.2522 ])
        (reg:SI 66 [ D.2522 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 25 (nil))
    (expr_list:REG_DEAD (reg:SI 66 [ D.2522 ])
        (nil)))

(call_insn/u 27 26 28 3 ./strings.cc:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 26 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2522 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2522 ]))
            (nil))))

(insn 28 27 29 3 ./strings.cc:61 (set (reg:SI 60 [ D.2525 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 29 28 30 3 ./strings.cc:61 (set (reg:SI 67)
        (sign_extend:SI (mem:QI (reg/v/f:DI 64 [ str ]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(insn 30 29 31 3 ./strings.cc:61 (set (reg:SI 5 di)
        (reg:SI 67)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 29 (nil))
    (expr_list:REG_DEAD (reg:SI 67)
        (nil)))

(call_insn/u 31 30 32 3 ./strings.cc:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 30 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 32 31 33 3 ./strings.cc:61 (set (reg:SI 59 [ D.2528 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 33 32 34 3 ./strings.cc:61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.2525 ])
            (reg:SI 59 [ D.2528 ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 28 (insn_list:REG_DEP_TRUE 32 (nil)))
    (expr_list:REG_DEAD (reg:SI 60 [ D.2525 ])
        (expr_list:REG_DEAD (reg:SI 59 [ D.2528 ])
            (nil))))

(jump_insn 34 33 37 3 ./strings.cc:61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 47)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64

(note 37 34 36 ("./strings.cc") 62)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 64
(note 36 37 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 38 36 39 4 ./strings.cc:62 (parallel [
            (set (reg/v/f:DI 64 [ str ])
                (plus:DI (reg/v/f:DI 64 [ str ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 39 38 40 4 ("./strings.cc") 60)

(insn 40 39 41 4 ./strings.cc:60 (set (reg:QI 62 [ D.2522 ])
        (mem:QI (plus:DI (reg/f:DI 58 [ ivtmp.302 ])
                (const_int 1 [0x1])) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 41 40 42 4 ./strings.cc:60 (parallel [
            (set (reg/f:DI 58 [ ivtmp.302 ])
                (plus:DI (reg/f:DI 58 [ ivtmp.302 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 42 41 43 4 ./strings.cc:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 62 [ D.2522 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 40 (nil))
    (nil))

(jump_insn 43 42 74 4 ./strings.cc:60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 14)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 42 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 64

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 64
(note 74 43 77 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 77 74 78 5 (set (pc)
        (label_ref 22)) -1 (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 62 64

(barrier 78 77 69)

(note 69 78 47 NOTE_INSN_LOOP_END)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label 47 69 48 6 167 "" [1 uses])

(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 6 ./strings.cc:60 (set (reg/f:DI 61 [ D.2523 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
(code_label 50 49 51 7 165 "" [1 uses])

(note 51 50 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 55 51 56 7 NOTE_INSN_FUNCTION_END)

(note 56 55 58 7 ("./strings.cc") 64)

(insn 58 56 64 7 ./strings.cc:64 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 61 [ D.2523 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 61 [ D.2523 ])
        (nil)))

(insn 64 58 0 7 ./strings.cc:64 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 58 (nil))
    (nil))
;; End of basic block 7, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* strclean(char*) (_Z8strcleanPc)

70 registers.

Register 58 used 4 times across 25 insns; set 2 times; dies in 0 places; crosses 3 calls; pointer.

Register 59 used 6 times across 27 insns; set 3 times; user var; crosses 3 calls; pointer.

Register 60 used 2 times across 2 insns in block 6; set 1 time; 4 bytes.

Register 61 used 2 times across 2 insns in block 5; set 1 time; 4 bytes.

Register 62 used 2 times across 2 insns in block 3; set 1 time; 4 bytes.

Register 63 used 4 times across 14 insns; set 1 time; crosses 2 calls; 4 bytes.

Register 64 used 6 times across 16 insns; set 2 times; crosses 1 call; 1 bytes.

Register 66 used 6 times across 32 insns; set 1 time; user var; crosses 3 calls; pointer.

9 basic blocks, 15 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [90.0%]  1 [10.0%]  (fallthru)
Registers live at start: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  0 [10.0%]  (fallthru)
Successors:  8 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 66

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  3 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 64 66

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 7 [90.0%]  (dfs_back)
Successors:  6 [30.0%]  4 [70.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 64 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 64 66

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 7000, maybe hot.
Predecessors:  3 [70.0%]  (fallthru)
Successors:  6 [48.8%]  5 [51.2%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 64 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 66

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 3584, maybe hot.
Predecessors:  4 [51.2%]  (fallthru)
Successors:  7 [50.0%]  6 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 66

Basic block 6 prev 5, next 7, loop_depth 1, count 0, freq 8208, maybe hot.
Predecessors:  3 [30.0%]  4 [48.8%]  5 [50.0%]  (fallthru)
Successors:  7 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 66

Basic block 7 prev 6, next 8, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  5 [50.0%]  6 [100.0%]  (fallthru)
Successors:  3 [90.0%]  (dfs_back) 8 [10.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 64 66

Basic block 8 prev 7, next -2, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  1 [100.0%]  7 [10.0%]  (fallthru,loop_exit)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 66
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]



try_optimize_cfg iteration 1

(note 1 0 6 ("./strings.cc") 29)

;; Start of basic block 0, registers live: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:29 (set (reg/v/f:DI 66 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (nil)))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 33)

(insn 9 8 10 0 ./strings.cc:33 (set (reg:QI 64 [ D.2495 ])
        (mem:QI (reg/v/f:DI 66 [ s ]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn 10 9 11 0 ./strings.cc:33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.2495 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 9 (nil))
    (nil))

(jump_insn 11 10 13 0 ./strings.cc:33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
(note 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 84 1 ./strings.cc:33 (set (reg/v/f:DI 59 [ p ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 84 14 85 1 (set (pc)
        (label_ref 56)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 66

(barrier 85 84 17)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66
(code_label 17 85 18 2 172 "" [1 uses])

(note 18 17 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 2 ./strings.cc:33 (set (reg/f:DI 58 [ ivtmp.331 ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 20 19 76 2 ./strings.cc:33 (set (reg/v/f:DI 59 [ p ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 64 66

(note 76 20 21 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 64 66
(code_label 21 76 22 3 175 "" [1 uses])

(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 23 22 24 3 ("./strings.cc") 34)

(insn 24 23 25 3 ./strings.cc:34 (set (reg:SI 63 [ D.2499 ])
        (sign_extend:SI (reg:QI 64 [ D.2495 ]))) 121 {extendqisi2} (nil)
    (nil))

(insn 25 24 26 3 ./strings.cc:34 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 63 [ D.2499 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 24 (nil))
    (nil))

(call_insn/u 26 25 27 3 ./strings.cc:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isalnum") [flags 0x41] <function_decl 0x2ad10a4adb00 isalnum>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 25 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2499 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn 27 26 28 3 ./strings.cc:34 (set (reg:SI 62 [ D.2500 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 26 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 28 27 29 3 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.2500 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:SI 62 [ D.2500 ])
        (nil)))

(jump_insn 29 28 31 3 ./strings.cc:34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 28 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3000 [0xbb8])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 64 66

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 64 66
(note 31 29 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 4 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.2495 ])
            (const_int 45 [0x2d]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 64 [ D.2495 ])
        (nil)))

(jump_insn 33 32 35 4 ./strings.cc:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 4880 [0x1310])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 66

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 66
(note 35 33 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 5 ./strings.cc:34 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 63 [ D.2499 ])) 40 {*movsi_1} (nil)
    (nil))

(call_insn/u 37 36 38 5 ./strings.cc:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 36 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2499 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn 38 37 39 5 ./strings.cc:34 (set (reg:SI 61 [ D.2501 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 37 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 39 38 40 5 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2501 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 38 (nil))
    (expr_list:REG_DEAD (reg:SI 61 [ D.2501 ])
        (nil)))

(jump_insn 40 39 41 5 ./strings.cc:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 39 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 66

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 66
(code_label 41 40 42 6 176 "" [2 uses])

(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 43 42 44 6 ("./strings.cc") 35)

(insn 44 43 45 6 ./strings.cc:35 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 63 [ D.2499 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 63 [ D.2499 ])
        (nil)))

(call_insn/u 45 44 46 6 ./strings.cc:35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 44 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2499 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn 46 45 47 6 ./strings.cc:35 (set (reg:SI 60 [ D.2502 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 45 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn 47 46 48 6 ./strings.cc:35 (set (mem:QI (reg/v/f:DI 59 [ p ]) [0 S1 A8])
        (subreg:QI (reg:SI 60 [ D.2502 ]) 0)) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:SI 60 [ D.2502 ])
        (nil)))

(insn 48 47 49 6 ./strings.cc:35 (parallel [
            (set (reg/v/f:DI 59 [ p ])
                (plus:DI (reg/v/f:DI 59 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 66

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 66
(code_label 49 48 50 7 179 "" [1 uses])

(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 51 50 52 7 ("./strings.cc") 33)

(insn 52 51 53 7 ./strings.cc:33 (set (reg:QI 64 [ D.2495 ])
        (mem:QI (plus:DI (reg/f:DI 58 [ ivtmp.331 ])
                (const_int 1 [0x1])) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 53 52 54 7 ./strings.cc:33 (parallel [
            (set (reg/f:DI 58 [ ivtmp.331 ])
                (plus:DI (reg/f:DI 58 [ ivtmp.331 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 54 53 55 7 ./strings.cc:33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.2495 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 52 (nil))
    (nil))

(jump_insn 55 54 77 7 ./strings.cc:33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 21)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 54 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 64 66

(note 77 55 56 NOTE_INSN_LOOP_END)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 66
(code_label 56 77 57 8 174 "" [1 uses])

(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 8 ("./strings.cc") 36)

(insn 59 58 63 8 ./strings.cc:36 (set (mem:QI (reg/v/f:DI 59 [ p ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 59 [ p ])
        (nil)))

(note 63 59 64 8 NOTE_INSN_FUNCTION_END)

(note 64 63 66 8 ("./strings.cc") 38)

(insn 66 64 72 8 ./strings.cc:38 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 66 [ s ])
        (nil)))

(insn 72 66 0 8 ./strings.cc:38 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 66 (nil))
    (nil))
;; End of basic block 8, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

