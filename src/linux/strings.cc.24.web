
;; Function char* strpre(const char*, const char*) (_Z6strprePKcS0_)


Dataflow summary:
n_regs = 68, n_defs = 9, n_uses = 13, n_bbs = 10
Use-def chains:
d0 bb 0 luid 1 insn 8 reg 65 { }
d1 bb 0 luid 2 insn 9 reg 66 { }
d2 bb 0 luid 3 insn 16 reg 60 { }
d3 bb 2 luid 1 insn 26 reg 61 { }
d4 bb 3 luid 1 insn 32 reg 62 { }
d5 bb 4 luid 1 insn 37 reg 61 { }
d6 bb 6 luid 1 insn 44 reg 65 { }
d7 bb 6 luid 2 insn 46 reg 63 { }
d8 bb 8 luid 1 insn 54 reg 62 { }
Def-use chains:
u0 bb 0 luid 3 insn 16 reg 66 { d1 }
u1 bb 0 luid 4 insn 17 reg 60 { d2 }
u2 bb 1 luid 1 insn 22 reg 65 { d0 }
u3 bb 1 luid 1 insn 22 reg 60 { d2 }
u4 bb 2 luid 1 insn 26 reg 66 { d1 }
u5 bb 3 luid 1 insn 32 reg 65 { d0 d6 }
u6 bb 4 luid 1 insn 37 reg 61 { d3 d5 }
u7 bb 4 luid 2 insn 39 reg 65 { d6 }
u8 bb 4 luid 2 insn 39 reg 63 { d7 }
u9 bb 6 luid 1 insn 44 reg 65 { d0 d6 }
u10 bb 6 luid 2 insn 46 reg 61 { d3 d5 }
u11 bb 6 luid 3 insn 47 reg 63 { d7 }
u12 bb 9 luid 1 insn 63 reg 62 { d4 d8 }



try_optimize_cfg iteration 1

Forwarding edge 5->6 to 3 failed.
(note 1 0 12 ("./strings.cc") 43)

;; Start of basic block 0, registers live: (nil)
(note 12 1 8 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 8 12 9 0 ./strings.cc:43 (set (reg/v/f:DI 65 [ str ])
        (reg:DI 5 di [ str ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 9 8 10 0 ./strings.cc:43 (set (reg/v/f:DI 66 [ pre ])
        (reg:DI 4 si [ pre ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 10 9 15 0 NOTE_INSN_FUNCTION_BEG)

(note 15 10 16 0 ("./strings.cc") 47)

(insn 16 15 17 0 ./strings.cc:47 (set (reg:QI 60 [ temp.36 ])
        (mem:QI (reg/v/f:DI 66 [ pre ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 17 16 18 0 ./strings.cc:47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.36 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 18 17 21 0 ./strings.cc:47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

(note 21 18 20 ("./strings.cc") 48)

;; Start of basic block 1, registers live: (nil)
(note 20 21 22 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 1 ./strings.cc:48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.36 ])
            (mem:QI (reg/v/f:DI 65 [ str ]) [0 S1 A8]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 23 22 25 1 ./strings.cc:48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 1, registers live:
 (nil)

;; Start of basic block 2, registers live: (nil)
(note 25 23 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 77 2 ./strings.cc:48 (set (reg/f:DI 61 [ ivtmp.33 ])
        (reg/v/f:DI 66 [ pre ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 77 26 78 2 (set (pc)
        (label_ref 41)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(barrier 78 77 29)

;; Start of basic block 3, registers live: (nil)
(code_label 29 78 30 3 3 "" [2 uses])

(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 31 30 32 3 ("./strings.cc") 47)

(insn 32 31 79 3 ./strings.cc:47 (set (reg/f:DI 62 [ D.2513 ])
        (reg/v/f:DI 65 [ str ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 79 32 80 3 (set (pc)
        (label_ref 55)) -1 (nil)
    (nil))
;; End of basic block 3, registers live:
 (nil)

(barrier 80 79 73)

(note 73 80 81 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: (nil)
(code_label 81 73 36 4 11 "" [1 uses])

(note 36 81 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 4 ./strings.cc:47 (parallel [
            (set (reg/f:DI 61 [ ivtmp.33 ])
                (plus:DI (reg/f:DI 61 [ ivtmp.33 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 38 37 39 4 ("./strings.cc") 48)

(insn 39 38 40 4 ./strings.cc:48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.2512 ])
            (mem:QI (reg/v/f:DI 65 [ str ]) [0 S1 A8]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 40 39 41 4 ./strings.cc:48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 52)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 4, registers live:
 (nil)

;; Start of basic block 5, registers live: (nil)
(code_label 41 40 42 5 7 "" [1 uses])

(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 43 42 44 5 ("./strings.cc") 49)

(insn 44 43 45 5 ./strings.cc:49 (parallel [
            (set (reg/v/f:DI 65 [ str ])
                (plus:DI (reg/v/f:DI 65 [ str ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 45 44 46 5 ("./strings.cc") 47)

(insn 46 45 47 5 ./strings.cc:47 (set (reg:QI 63 [ D.2512 ])
        (mem:QI (plus:DI (reg/f:DI 61 [ ivtmp.33 ])
                (const_int 1 [0x1])) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 47 46 48 5 ./strings.cc:47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.2512 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 48 47 82 5 ./strings.cc:47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 81)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 5, registers live:
 (nil)

;; Start of basic block 6, registers live: (nil)
(note 82 48 83 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 83 82 84 6 (set (pc)
        (label_ref 29)) -1 (nil)
    (nil))
;; End of basic block 6, registers live:
 (nil)

(barrier 84 83 74)

(note 74 84 52 NOTE_INSN_LOOP_END)

;; Start of basic block 7, registers live: (nil)
(code_label 52 74 53 7 5 "" [2 uses])

(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 7 ./strings.cc:47 (set (reg/f:DI 62 [ D.2513 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 7, registers live:
 (nil)

;; Start of basic block 8, registers live: (nil)
(code_label 55 54 56 8 8 "" [1 uses])

(note 56 55 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 60 56 61 8 NOTE_INSN_FUNCTION_END)

(note 61 60 63 8 ("./strings.cc") 51)

(insn 63 61 69 8 ./strings.cc:51 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 62 [ D.2513 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 69 63 0 8 ./strings.cc:51 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 8, registers live:
 (nil)


;; Function char* strlop(char*, char) (_Z6strlopPcc)


Dataflow summary:
n_regs = 68, n_defs = 8, n_uses = 14, n_bbs = 8
Use-def chains:
d0 bb 0 luid 1 insn 3 reg 62 { }
d1 bb 0 luid 2 insn 4 reg 64 { }
d2 bb 0 luid 3 insn 5 reg 63 { }
d3 bb 0 luid 4 insn 11 reg 58 { }
d4 bb 2 luid 1 insn 20 reg 59 { }
d5 bb 3 luid 1 insn 24 reg 59 { }
d6 bb 3 luid 2 insn 26 reg 60 { }
d7 bb 6 luid 1 insn 38 reg 59 { }
Def-use chains:
u0 bb 0 luid 3 insn 5 reg 64 { d1 }
u1 bb 0 luid 4 insn 11 reg 62 { d0 }
u2 bb 0 luid 5 insn 12 reg 58 { d3 }
u3 bb 1 luid 1 insn 16 reg 63 { d2 }
u4 bb 1 luid 1 insn 16 reg 58 { d3 }
u5 bb 2 luid 1 insn 20 reg 62 { d0 }
u6 bb 3 luid 1 insn 24 reg 59 { d4 d5 }
u7 bb 3 luid 2 insn 26 reg 59 { d5 }
u8 bb 3 luid 3 insn 27 reg 60 { d6 }
u9 bb 4 luid 1 insn 31 reg 63 { d2 }
u10 bb 4 luid 1 insn 31 reg 60 { d6 }
u11 bb 6 luid 1 insn 38 reg 62 { d0 }
u12 bb 7 luid 1 insn 42 reg 59 { d5 d7 }
u13 bb 7 luid 2 insn 49 reg 62 { d0 }



try_optimize_cfg iteration 1

Forwarding edge 4->5 to 3 failed.
(note 1 0 8 ("./strings.cc") 81)

;; Start of basic block 0, registers live: (nil)
(note 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 0 ./strings.cc:81 (set (reg/v/f:DI 62 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 4 3 5 0 ./strings.cc:81 (set (reg:SI 64 [ ch ])
        (reg:SI 4 si [ ch ])) 40 {*movsi_1} (nil)
    (nil))

(insn 5 4 6 0 ./strings.cc:81 (set (reg/v:QI 63 [ ch ])
        (subreg:QI (reg:SI 64 [ ch ]) 0)) 55 {*movqi_1} (nil)
    (nil))

(note 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 0 ("./strings.cc") 84)

(insn 11 10 12 0 ./strings.cc:84 (set (reg:QI 58 [ temp.67 ])
        (mem:QI (reg/v/f:DI 62 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 12 11 13 0 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.67 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 13 12 15 0 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 15 13 16 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 1 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.67 ])
            (reg/v:QI 63 [ ch ]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 17 16 19 1 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 1, registers live:
 (nil)

;; Start of basic block 2, registers live: (nil)
(note 19 17 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 59 2 ./strings.cc:84 (set (reg/v/f:DI 59 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(note 59 20 21 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: (nil)
(code_label 21 59 22 3 19 "" [1 uses])

(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 23 22 24 3 ("./strings.cc") 85)

(insn 24 23 25 3 ./strings.cc:85 (parallel [
            (set (reg/v/f:DI 59 [ last ])
                (plus:DI (reg/v/f:DI 59 [ last ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 25 24 26 3 ("./strings.cc") 84)

(insn 26 25 27 3 ./strings.cc:84 (set (reg:QI 60 [ D.2553 ])
        (mem:QI (reg/v/f:DI 59 [ last ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 27 26 28 3 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2553 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 28 27 30 3 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 39)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

;; Start of basic block 4, registers live: (nil)
(note 30 28 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 4 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2553 ])
            (reg/v:QI 63 [ ch ]))) -1 (nil)
    (nil))

(jump_insn 32 31 60 4 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 39)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 4, registers live:
 (nil)

(note 60 32 63 NOTE_INSN_LOOP_END)

;; Start of basic block 5, registers live: (nil)
(note 63 60 65 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 65 63 66 5 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))
;; End of basic block 5, registers live:
 (nil)

(barrier 66 65 36)

;; Start of basic block 6, registers live: (nil)
(code_label 36 66 37 6 16 "" [2 uses])

(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 6 ./strings.cc:84 (set (reg/v/f:DI 59 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 6, registers live:
 (nil)

;; Start of basic block 7, registers live: (nil)
(code_label 39 38 40 7 20 "" [2 uses])

(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 41 40 42 7 ("./strings.cc") 86)

(insn 42 41 46 7 ./strings.cc:86 (set (mem:QI (reg/v/f:DI 59 [ last ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 46 42 47 7 NOTE_INSN_FUNCTION_END)

(note 47 46 49 7 ("./strings.cc") 88)

(insn 49 47 55 7 ./strings.cc:88 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 55 49 0 7 ./strings.cc:88 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 7, registers live:
 (nil)


;; Function char* strsplit(char*, char) (_Z8strsplitPcc)


Dataflow summary:
n_regs = 71, n_defs = 13, n_uses = 26, n_bbs = 17
Use-def chains:
d0 bb 0 luid 1 insn 3 reg 63 { }
d1 bb 0 luid 2 insn 4 reg 65 { }
d2 bb 0 luid 3 insn 5 reg 64 { }
d3 bb 0 luid 4 insn 11 reg 61 { }
d4 bb 1 luid 1 insn 16 reg 63 { }
d5 bb 3 luid 1 insn 26 reg 63 { }
d6 bb 3 luid 2 insn 27 reg 59 { }
d7 bb 5 luid 1 insn 35 reg 63 { }
d8 bb 5 luid 2 insn 36 reg 59 { }
d9 bb 10 luid 2 insn 52 reg 63 { }
d10 bb 10 luid 3 insn 54 reg 58 { }
d11 bb 13 luid 1 insn 63 reg 63 { }
d12 bb 13 luid 2 insn 64 reg 60 { }
Def-use chains:
u0 bb 0 luid 3 insn 5 reg 65 { d1 }
u1 bb 0 luid 4 insn 11 reg 63 { d0 }
u2 bb 0 luid 5 insn 12 reg 61 { d3 }
u3 bb 2 luid 1 insn 22 reg 64 { d2 }
u4 bb 2 luid 1 insn 22 reg 61 { d3 }
u5 bb 3 luid 1 insn 26 reg 63 { d0 }
u6 bb 3 luid 2 insn 27 reg 63 { d5 }
u7 bb 3 luid 3 insn 28 reg 59 { d6 }
u8 bb 5 luid 1 insn 35 reg 63 { d5 d7 }
u9 bb 5 luid 2 insn 36 reg 63 { d7 }
u10 bb 5 luid 3 insn 37 reg 59 { d8 }
u11 bb 8 luid 1 insn 41 reg 59 { d6 d8 }
u12 bb 8 luid 1 insn 41 reg 64 { d2 }
u13 bb 9 luid 1 insn 46 reg 64 { d2 }
u14 bb 10 luid 1 insn 51 reg 63 { d0 d5 d7 }
u15 bb 10 luid 2 insn 52 reg 63 { d0 d5 d7 }
u16 bb 10 luid 3 insn 54 reg 63 { d9 }
u17 bb 10 luid 4 insn 55 reg 58 { d10 }
u18 bb 11 luid 1 insn 59 reg 64 { d2 }
u19 bb 11 luid 1 insn 59 reg 58 { d10 }
u20 bb 13 luid 1 insn 63 reg 63 { d9 d11 }
u21 bb 13 luid 2 insn 64 reg 63 { d11 }
u22 bb 13 luid 3 insn 65 reg 60 { d12 }
u23 bb 14 luid 1 insn 69 reg 58 { d10 }
u24 bb 14 luid 1 insn 69 reg 60 { d12 }
u25 bb 16 luid 1 insn 79 reg 63 { d0 d4 d5 d7 d9 d11 }



try_optimize_cfg iteration 1

Forwarding edge 3->4 to 12 failed.
(note 1 0 8 ("./strings.cc") 126)

;; Start of basic block 0, registers live: (nil)
(note 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 0 ./strings.cc:126 (set (reg/v/f:DI 63 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 4 3 5 0 ./strings.cc:126 (set (reg:SI 65 [ ch ])
        (reg:SI 4 si [ ch ])) 40 {*movsi_1} (nil)
    (nil))

(insn 5 4 6 0 ./strings.cc:126 (set (reg/v:QI 64 [ ch ])
        (subreg:QI (reg:SI 65 [ ch ]) 0)) 55 {*movqi_1} (nil)
    (nil))

(note 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 0 ("./strings.cc") 128)

(insn 11 10 12 0 ./strings.cc:128 (set (reg:QI 61 [ D.2584 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 12 11 13 0 ./strings.cc:128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2584 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 13 12 15 0 ./strings.cc:128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 6700 [0x1a2c])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 15 13 16 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 103 1 ./strings.cc:128 (set (reg/v/f:DI 63 [ s ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 103 16 104 1 (set (pc)
        (label_ref 71)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 104 103 19)

;; Start of basic block 2, registers live: (nil)
(code_label 19 104 20 2 26 "" [1 uses])

(note 20 19 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 21 20 22 2 ("./strings.cc") 129)

(insn 22 21 23 2 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2584 ])
            (reg/v:QI 64 [ ch ]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 23 22 25 2 ./strings.cc:129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 2, registers live:
 (nil)

;; Start of basic block 3, registers live: (nil)
(note 25 23 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 3 ./strings.cc:129 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 27 26 28 3 ./strings.cc:129 (set (reg:QI 59 [ temp.105 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 28 27 29 3 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 59 [ temp.105 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 29 28 89 3 ./strings.cc:129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 108)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

(note 89 29 105 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: (nil)
(note 105 89 106 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 106 105 107 4 (set (pc)
        (label_ref 71)) -1 (nil)
    (nil))
;; End of basic block 4, registers live:
 (nil)

(barrier 107 106 33)

;; Start of basic block 5, registers live: (nil)
(code_label 33 107 34 5 32 "" [1 uses])

(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 5 ./strings.cc:129 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 36 35 37 5 ./strings.cc:129 (set (reg:QI 59 [ temp.105 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 37 36 38 5 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 59 [ temp.105 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 38 37 108 5 ./strings.cc:129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 71)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
        (nil)))
;; End of basic block 5, registers live:
 (nil)

;; Start of basic block 6, registers live: (nil)
(code_label 108 38 97 6 40 "" [1 uses])

(note 97 108 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 41 97 42 6 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 64 [ ch ])
            (reg:QI 59 [ temp.105 ]))) -1 (nil)
    (nil))

(jump_insn 42 41 90 6 ./strings.cc:129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 6, registers live:
 (nil)

(note 90 42 43 NOTE_INSN_LOOP_END)

;; Start of basic block 7, registers live: (nil)
(code_label 43 90 44 7 29 "" [1 uses])

(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 45 44 46 7 ("./strings.cc") 130)

(insn 46 45 47 7 ./strings.cc:130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 64 [ ch ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 47 46 50 7 ./strings.cc:130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
        (nil)))
;; End of basic block 7, registers live:
 (nil)

(note 50 47 49 ("./strings.cc") 132)

;; Start of basic block 8, registers live: (nil)
(note 49 50 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 49 52 8 ./strings.cc:132 (set (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(insn 52 51 53 8 ./strings.cc:132 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 53 52 54 8 ("./strings.cc") 133)

(insn 54 53 55 8 ./strings.cc:133 (set (reg:QI 58 [ temp.106 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 55 54 56 8 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.106 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 56 55 58 8 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 8, registers live:
 (nil)

;; Start of basic block 9, registers live: (nil)
(note 58 56 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 9 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.106 ])
            (reg/v:QI 64 [ ch ]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 60 59 91 9 ./strings.cc:133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 9, registers live:
 (nil)

(note 91 60 99 NOTE_INSN_LOOP_BEG)

;; Start of basic block 10, registers live: (nil)
(code_label 99 91 98 10 38 "" [1 uses])

(note 98 99 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 63 98 64 10 ./strings.cc:133 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 64 63 65 10 ./strings.cc:133 (set (reg:QI 60 [ temp.104 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 65 64 66 10 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.104 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 66 65 68 10 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 71)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 10, registers live:
 (nil)

;; Start of basic block 11, registers live: (nil)
(note 68 66 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 11 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.104 ])
            (reg:QI 58 [ temp.106 ]))) -1 (nil)
    (nil))

(jump_insn 70 69 92 11 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 99)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 11, registers live:
 (nil)

(note 92 70 71 NOTE_INSN_LOOP_END)

;; Start of basic block 12, registers live: (nil)
(code_label 71 92 72 12 28 "" [7 uses])

(note 72 71 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 76 72 77 12 NOTE_INSN_FUNCTION_END)

(note 77 76 79 12 ("./strings.cc") 136)

(insn 79 77 85 12 ./strings.cc:136 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 85 79 0 12 ./strings.cc:136 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 12, registers live:
 (nil)


;; Function char* strtrimto(char*, char) (_Z9strtrimtoPcc)


Dataflow summary:
n_regs = 69, n_defs = 10, n_uses = 18, n_bbs = 1
Use-def chains:
d0 bb 0 luid 1 insn 3 reg 62 { }
d1 bb 0 luid 2 insn 4 reg 64 { }
d2 bb 0 luid 3 insn 5 reg 63 { }
d3 bb 0 luid 4 insn 11 reg 60 { }
d4 bb 0 luid 8 insn 15 reg 59 { }
d5 bb 0 luid 11 insn 59 reg 59 { }
d6 bb 0 luid 16 insn 31 reg 58 { }
d7 bb 0 luid 18 insn 60 reg 68 { }
d8 bb 0 luid 20 insn 62 reg 58 { }
d9 bb 0 luid 21 insn 41 reg 67 { }
Def-use chains:
u0 bb 0 luid 3 insn 5 reg 64 { d1 }
u1 bb 0 luid 4 insn 11 reg 63 { d2 }
u2 bb 0 luid 5 insn 12 reg 60 { d3 }
u3 bb 0 luid 6 insn 13 reg 62 { d0 }
u4 bb 0 luid 9 insn 18 reg 59 { d4 }
u5 bb 0 luid 10 insn 58 reg 59 { d4 }
u6 bb 0 luid 11 insn 59 reg 62 { d0 }
u7 bb 0 luid 11 insn 59 reg 59 { d4 }
u8 bb 0 luid 12 insn 26 reg 59 { d5 }
u9 bb 0 luid 13 insn 28 reg 60 { d3 }
u10 bb 0 luid 14 insn 29 reg 62 { d0 }
u11 bb 0 luid 17 insn 34 reg 58 { d6 }
u12 bb 0 luid 18 insn 60 reg 59 { d5 }
u13 bb 0 luid 19 insn 61 reg 58 { d6 }
u14 bb 0 luid 20 insn 62 reg 58 { d6 }
u15 bb 0 luid 20 insn 62 reg 68 { d7 }
u16 bb 0 luid 21 insn 41 reg 58 { d8 }
u17 bb 0 luid 22 insn 48 reg 67 { d9 }

Web oldreg=59 newreg=69
Updating insn 26 (59->69)
Updating insn 60 (59->69)
Web oldreg=58 newreg=70
Updating insn 41 (58->70)
Updating insn 59 (59->69)
Updating insn 62 (58->70)


try_optimize_cfg iteration 1

(note 1 0 8 ("./strings.cc") 155)

;; Start of basic block 0, registers live: (nil)
(note 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 0 ./strings.cc:155 (set (reg/v/f:DI 62 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 4 3 5 0 ./strings.cc:155 (set (reg:SI 64 [ ch ])
        (reg:SI 4 si [ ch ])) 40 {*movsi_1} (nil)
    (nil))

(insn 5 4 6 0 ./strings.cc:155 (set (reg/v:QI 63 [ ch ])
        (subreg:QI (reg:SI 64 [ ch ]) 0)) 55 {*movqi_1} (nil)
    (nil))

(note 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 0 ("./strings.cc") 157)

(insn 11 10 12 0 ./strings.cc:157 (set (reg:SI 60 [ D.2619 ])
        (sign_extend:SI (reg/v:QI 63 [ ch ]))) 121 {extendqisi2} (nil)
    (nil))

(insn 12 11 13 0 ./strings.cc:157 (set (reg:SI 4 si [ D.2619 ])
        (reg:SI 60 [ D.2619 ])) 40 {*movsi_1} (nil)
    (nil))

(insn 13 12 14 0 ./strings.cc:157 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn/u 14 13 15 0 ./strings.cc:157 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strrchr") [flags 0x41] <function_decl 0x2ad10a49e400 strrchr>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ D.2619 ]))
                (nil)))))

(insn 15 14 17 0 ./strings.cc:157 (set (reg/v/f:DI 59 [ last ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 17 15 18 0 ("./strings.cc") 158)

(insn 18 17 58 0 ./strings.cc:158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(insn 58 18 59 0 ./strings.cc:158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(insn 59 58 25 0 ./strings.cc:158 (set (reg/v/f:DI 69 [ last ])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (reg/v/f:DI 59 [ last ])
            (reg/v/f:DI 62 [ s ]))) 742 {*movdicc_c_rex64} (nil)
    (nil))

(note 25 59 26 0 ("./strings.cc") 159)

(insn 26 25 27 0 ./strings.cc:159 (set (mem:QI (reg/v/f:DI 69 [ last ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 27 26 28 0 ("./strings.cc") 161)

(insn 28 27 29 0 ./strings.cc:161 (set (reg:SI 4 si [ D.2619 ])
        (reg:SI 60 [ D.2619 ])) 40 {*movsi_1} (nil)
    (nil))

(insn 29 28 30 0 ./strings.cc:161 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn/u 30 29 31 0 ./strings.cc:161 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41] <function_decl 0x2ad10a498000 strchr>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ D.2619 ]))
                (nil)))))

(insn 31 30 33 0 ./strings.cc:161 (set (reg/v/f:DI 58 [ first ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 33 31 34 0 ("./strings.cc") 162)

(insn 34 33 60 0 ./strings.cc:162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 58 [ first ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(insn 60 34 61 0 ./strings.cc:162 (parallel [
            (set (reg/f:DI 68)
                (plus:DI (reg/v/f:DI 69 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 61 60 62 0 ./strings.cc:162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 58 [ first ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(insn 62 61 41 0 ./strings.cc:162 (set (reg/v/f:DI 70 [ first ])
        (if_then_else:DI (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (reg/f:DI 68)
            (reg/v/f:DI 58 [ first ]))) 742 {*movdicc_c_rex64} (nil)
    (nil))

(insn 41 62 45 0 ./strings.cc:162 (parallel [
            (set (reg/f:DI 67)
                (plus:DI (reg/v/f:DI 70 [ first ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 45 41 46 0 NOTE_INSN_FUNCTION_END)

(note 46 45 48 0 ("./strings.cc") 164)

(insn 48 46 54 0 ./strings.cc:164 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 67)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 54 48 0 0 ./strings.cc:164 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 0, registers live:
 (nil)


;; Function char* strchomp(char*) (_Z8strchompPc)


Dataflow summary:
n_regs = 76, n_defs = 29, n_uses = 90, n_bbs = 68
Use-def chains:
d0 bb 0 luid 1 insn 3 reg 63 { }
d1 bb 0 luid 4 insn 11 reg 65 { }
d2 bb 0 luid 5 insn 13 reg 60 { }
d3 bb 1 luid 1 insn 19 reg 58 { }
d4 bb 2 luid 1 insn 24 reg 59 { }
d5 bb 3 luid 1 insn 29 reg 59 { }
d6 bb 3 luid 2 insn 70 reg 66 { }
d7 bb 3 luid 3 insn 71 reg 68 { }
d8 bb 3 luid 4 insn 72 reg 67 { }
d9 bb 3 luid 5 insn 73 reg 69 { }
d10 bb 3 luid 6 insn 77 reg 73 { }
d11 bb 3 luid 7 insn 78 reg 74 { }
d12 bb 7 luid 1 insn 298 reg 75 { }
d13 bb 7 luid 2 insn 34 reg 59 { }
d14 bb 10 luid 1 insn 47 reg 59 { }
d15 bb 12 luid 2 insn 86 reg 59 { }
d16 bb 22 luid 2 insn 100 reg 59 { }
d17 bb 26 luid 2 insn 118 reg 59 { }
d18 bb 30 luid 2 insn 136 reg 59 { }
d19 bb 34 luid 2 insn 154 reg 59 { }
d20 bb 38 luid 2 insn 172 reg 59 { }
d21 bb 42 luid 2 insn 190 reg 59 { }
d22 bb 47 luid 2 insn 213 reg 59 { }
d23 bb 50 luid 2 insn 226 reg 59 { }
d24 bb 53 luid 2 insn 239 reg 59 { }
d25 bb 56 luid 2 insn 252 reg 59 { }
d26 bb 59 luid 2 insn 265 reg 59 { }
d27 bb 62 luid 2 insn 278 reg 59 { }
d28 bb 65 luid 2 insn 291 reg 59 { }
Def-use chains:
u0 bb 0 luid 2 insn 9 reg 63 { d0 }
u1 bb 0 luid 5 insn 13 reg 63 { d0 }
u2 bb 0 luid 5 insn 13 reg 65 { d1 }
u3 bb 0 luid 6 insn 15 reg 60 { d2 }
u4 bb 0 luid 6 insn 15 reg 63 { d0 }
u5 bb 1 luid 1 insn 19 reg 60 { d2 }
u6 bb 1 luid 2 insn 20 reg 60 { d2 }
u7 bb 2 luid 1 insn 24 reg 58 { d3 }
u8 bb 3 luid 1 insn 29 reg 58 { d3 }
u9 bb 3 luid 2 insn 70 reg 63 { d0 }
u10 bb 3 luid 2 insn 70 reg 60 { d2 }
u11 bb 3 luid 4 insn 72 reg 66 { d6 }
u12 bb 3 luid 4 insn 72 reg 66 { d6 }
u13 bb 3 luid 4 insn 72 reg 68 { d7 }
u14 bb 3 luid 5 insn 73 reg 67 { d8 }
u15 bb 3 luid 5 insn 73 reg 58 { d3 }
u16 bb 3 luid 6 insn 77 reg 69 { d9 }
u17 bb 3 luid 6 insn 77 reg 59 { d5 }
u18 bb 3 luid 7 insn 78 reg 73 { d10 }
u19 bb 3 luid 8 insn 204 reg 74 { d11 }
u20 bb 7 luid 1 insn 298 reg 59 { d5 d15 d21 d28 }
u21 bb 7 luid 2 insn 34 reg 75 { d12 }
u22 bb 7 luid 3 insn 35 reg 59 { d13 }
u23 bb 9 luid 1 insn 43 reg 69 { d9 }
u24 bb 9 luid 1 insn 43 reg 59 { d5 d15 d21 d28 }
u25 bb 10 luid 1 insn 47 reg 63 { d0 }
u26 bb 11 luid 1 insn 51 reg 59 { d4 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 }
u27 bb 11 luid 2 insn 58 reg 63 { d0 }
u28 bb 12 luid 1 insn 81 reg 69 { d9 }
u29 bb 12 luid 1 insn 81 reg 59 { d5 }
u30 bb 12 luid 2 insn 86 reg 59 { d5 }
u31 bb 12 luid 3 insn 87 reg 59 { d15 }
u32 bb 15 luid 1 insn 199 reg 74 { d11 }
u33 bb 16 luid 1 insn 181 reg 74 { d11 }
u34 bb 17 luid 1 insn 163 reg 74 { d11 }
u35 bb 18 luid 1 insn 145 reg 74 { d11 }
u36 bb 19 luid 1 insn 127 reg 74 { d11 }
u37 bb 20 luid 1 insn 109 reg 74 { d11 }
u38 bb 22 luid 1 insn 95 reg 69 { d9 }
u39 bb 22 luid 1 insn 95 reg 59 { d15 }
u40 bb 22 luid 2 insn 100 reg 59 { d15 }
u41 bb 22 luid 3 insn 101 reg 59 { d16 }
u42 bb 26 luid 1 insn 113 reg 69 { d9 }
u43 bb 26 luid 1 insn 113 reg 59 { d15 d16 }
u44 bb 26 luid 2 insn 118 reg 59 { d15 d16 }
u45 bb 26 luid 3 insn 119 reg 59 { d17 }
u46 bb 30 luid 1 insn 131 reg 69 { d9 }
u47 bb 30 luid 1 insn 131 reg 59 { d15 d17 }
u48 bb 30 luid 2 insn 136 reg 59 { d15 d17 }
u49 bb 30 luid 3 insn 137 reg 59 { d18 }
u50 bb 34 luid 1 insn 149 reg 69 { d9 }
u51 bb 34 luid 1 insn 149 reg 59 { d15 d18 }
u52 bb 34 luid 2 insn 154 reg 59 { d15 d18 }
u53 bb 34 luid 3 insn 155 reg 59 { d19 }
u54 bb 38 luid 1 insn 167 reg 69 { d9 }
u55 bb 38 luid 1 insn 167 reg 59 { d15 d19 }
u56 bb 38 luid 2 insn 172 reg 59 { d15 d19 }
u57 bb 38 luid 3 insn 173 reg 59 { d20 }
u58 bb 42 luid 1 insn 185 reg 69 { d9 }
u59 bb 42 luid 1 insn 185 reg 59 { d15 d20 }
u60 bb 42 luid 2 insn 190 reg 59 { d15 d20 }
u61 bb 42 luid 3 insn 191 reg 59 { d21 }
u62 bb 47 luid 1 insn 208 reg 69 { d9 }
u63 bb 47 luid 1 insn 208 reg 59 { d13 }
u64 bb 47 luid 2 insn 213 reg 75 { d12 }
u65 bb 47 luid 3 insn 214 reg 59 { d22 }
u66 bb 50 luid 1 insn 221 reg 69 { d9 }
u67 bb 50 luid 1 insn 221 reg 59 { d22 }
u68 bb 50 luid 2 insn 226 reg 75 { d12 }
u69 bb 50 luid 3 insn 227 reg 59 { d23 }
u70 bb 53 luid 1 insn 234 reg 69 { d9 }
u71 bb 53 luid 1 insn 234 reg 59 { d23 }
u72 bb 53 luid 2 insn 239 reg 75 { d12 }
u73 bb 53 luid 3 insn 240 reg 59 { d24 }
u74 bb 56 luid 1 insn 247 reg 69 { d9 }
u75 bb 56 luid 1 insn 247 reg 59 { d24 }
u76 bb 56 luid 2 insn 252 reg 75 { d12 }
u77 bb 56 luid 3 insn 253 reg 59 { d25 }
u78 bb 59 luid 1 insn 260 reg 69 { d9 }
u79 bb 59 luid 1 insn 260 reg 59 { d25 }
u80 bb 59 luid 2 insn 265 reg 75 { d12 }
u81 bb 59 luid 3 insn 266 reg 59 { d26 }
u82 bb 62 luid 1 insn 273 reg 69 { d9 }
u83 bb 62 luid 1 insn 273 reg 59 { d26 }
u84 bb 62 luid 2 insn 278 reg 75 { d12 }
u85 bb 62 luid 3 insn 279 reg 59 { d27 }
u86 bb 65 luid 1 insn 286 reg 69 { d9 }
u87 bb 65 luid 1 insn 286 reg 59 { d27 }
u88 bb 65 luid 2 insn 291 reg 75 { d12 }
u89 bb 65 luid 3 insn 292 reg 59 { d28 }



try_optimize_cfg iteration 1

Forwarding edge 3->4 to 7 failed.
Forwarding edge 5->6 to 24 failed.
Forwarding edge 22->23 to 7 failed.
Forwarding edge 30->31 to 7 failed.
(note 1 0 6 ("./strings.cc") 69)

;; Start of basic block 0, registers live: (nil)
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:69 (set (reg/v/f:DI 63 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 71)

(insn 9 8 10 0 ./strings.cc:71 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn/u 10 9 11 0 ./strings.cc:71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x2ad10a49b200 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (nil))))

(insn 11 10 13 0 ./strings.cc:71 (set (reg:DI 65)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 13 11 14 0 ./strings.cc:71 (parallel [
            (set (reg/v/f:DI 60 [ last ])
                (plus:DI (reg:DI 65)
                    (reg/v/f:DI 63 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 14 13 15 0 ("./strings.cc") 72)

(insn 15 14 16 0 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 63 [ s ])
            (reg/v/f:DI 60 [ last ]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 16 15 18 0 ./strings.cc:72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 18 16 19 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 1 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 58 [ last.167 ])
                (plus:DI (reg/v/f:DI 60 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 20 19 21 1 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 60 [ last ])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 21 20 23 1 ./strings.cc:72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 1, registers live:
 (nil)

;; Start of basic block 2, registers live: (nil)
(note 23 21 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 313 2 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/v/f:DI 58 [ last.167 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 313 24 314 2 (set (pc)
        (label_ref 48)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(barrier 314 313 27)

;; Start of basic block 3, registers live: (nil)
(code_label 27 314 28 3 53 "" [1 uses])

(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 70 3 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/v/f:DI 58 [ last.167 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 70 29 71 3 (parallel [
            (set (reg:DI 66)
                (minus:DI (reg/v/f:DI 60 [ last ])
                    (reg/v/f:DI 63 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 71 70 72 3 (set (reg:DI 68)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(insn 72 71 73 3 (parallel [
            (set (reg:DI 67)
                (minus:DI (reg:DI 68)
                    (reg:DI 66)))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (expr_list:REG_EQUAL (minus:DI (const_int 1 [0x1])
            (reg:DI 66))
        (nil)))

(insn 73 72 68 3 (parallel [
            (set (reg:DI 69)
                (plus:DI (reg/v/f:DI 58 [ last.167 ])
                    (reg:DI 67)))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 68 73 77 3 NOTE_INSN_LOOP_BEG)

(insn 77 68 78 3 (parallel [
            (set (reg:DI 73)
                (minus:DI (reg/v/f:DI 59 [ last.166 ])
                    (reg:DI 69)))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 78 77 204 3 (parallel [
            (set (reg:DI 74)
                (and:DI (reg:DI 73)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 204 78 205 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 205 204 316 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 315)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

;; Start of basic block 4, registers live: (nil)
(note 316 205 317 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 317 316 318 4 (set (pc)
        (label_ref:DI 37)) 548 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 (nil)

(barrier 318 317 32)

;; Start of basic block 5, registers live: (nil)
(code_label 32 318 33 5 57 "" [1 uses])

(note 33 32 298 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 298 33 34 5 ./strings.cc:72 (parallel [
            (set (reg/f:DI 75)
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 34 298 35 5 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/f:DI 75)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 35 34 36 5 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 36 35 76 5 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 5, registers live:
 (nil)

;; Start of basic block 6, registers live: (nil)
(note 76 36 320 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 320 76 321 6 (set (pc)
        (label_ref 319)) -1 (nil)
    (nil))
;; End of basic block 6, registers live:
 (nil)

(barrier 321 320 37)

;; Start of basic block 7, registers live: (nil)
(code_label 37 321 38 7 56 "" [4 uses])

(note 38 37 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 38 44 7 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(jump_insn 44 43 69 7 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 7, registers live:
 (nil)

(note 69 44 45 NOTE_INSN_LOOP_END)

;; Start of basic block 8, registers live: (nil)
(code_label 45 69 46 8 51 "" [1 uses])

(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 8 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 8, registers live:
 (nil)

;; Start of basic block 9, registers live: (nil)
(code_label 48 47 49 9 55 "" [16 uses])

(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 50 49 51 9 ("./strings.cc") 74)

(insn 51 50 55 9 ./strings.cc:74 (set (mem:QI (plus:DI (reg/v/f:DI 59 [ last.166 ])
                (const_int 1 [0x1])) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 55 51 56 9 NOTE_INSN_FUNCTION_END)

(note 56 55 58 9 ("./strings.cc") 76)

(insn 58 56 64 9 ./strings.cc:76 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 64 58 315 9 ./strings.cc:76 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 9, registers live:
 (nil)

;; Start of basic block 10, registers live: (nil)
(code_label 315 64 83 10 80 "" [1 uses])

(note 83 315 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 81 83 86 10 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 86 81 87 10 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 87 86 88 10 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 88 87 201 10 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 10, registers live:
 (nil)

;; Start of basic block 11, registers live: (nil)
(note 201 88 199 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 199 201 200 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 200 199 183 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 37)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1428 [0x594])
        (nil)))
;; End of basic block 11, registers live:
 (nil)

;; Start of basic block 12, registers live: (nil)
(note 183 200 181 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 181 183 182 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 182 181 165 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 326)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1666 [0x682])
        (nil)))
;; End of basic block 12, registers live:
 (nil)

;; Start of basic block 13, registers live: (nil)
(note 165 182 163 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 163 165 164 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 164 163 147 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 327)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
        (nil)))
;; End of basic block 13, registers live:
 (nil)

;; Start of basic block 14, registers live: (nil)
(note 147 164 145 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 145 147 146 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

(jump_insn 146 145 129 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 328)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil)))
;; End of basic block 14, registers live:
 (nil)

;; Start of basic block 15, registers live: (nil)
(note 129 146 127 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 127 129 128 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 5 [0x5]))) -1 (nil)
    (nil))

(jump_insn 128 127 111 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 329)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))
;; End of basic block 15, registers live:
 (nil)

;; Start of basic block 16, registers live: (nil)
(note 111 128 109 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 109 111 110 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 6 [0x6]))) -1 (nil)
    (nil))

(jump_insn 110 109 97 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 330)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 16, registers live:
 (nil)

;; Start of basic block 17, registers live: (nil)
(note 97 110 95 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 95 97 100 17 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 100 95 101 17 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 101 100 102 17 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 102 101 330 17 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 17, registers live:
 (nil)

;; Start of basic block 18, registers live: (nil)
(code_label 330 102 115 18 86 "" [1 uses])

(note 115 330 113 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 113 115 118 18 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 118 113 119 18 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 119 118 120 18 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 120 119 329 18 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 18, registers live:
 (nil)

;; Start of basic block 19, registers live: (nil)
(code_label 329 120 133 19 85 "" [1 uses])

(note 133 329 131 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 131 133 136 19 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 136 131 137 19 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 137 136 138 19 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 138 137 328 19 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 19, registers live:
 (nil)

;; Start of basic block 20, registers live: (nil)
(code_label 328 138 151 20 84 "" [1 uses])

(note 151 328 149 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 149 151 154 20 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 154 149 155 20 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 155 154 156 20 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 156 155 327 20 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 20, registers live:
 (nil)

;; Start of basic block 21, registers live: (nil)
(code_label 327 156 169 21 83 "" [1 uses])

(note 169 327 167 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 167 169 172 21 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 172 167 173 21 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 173 172 174 21 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 174 173 326 21 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 21, registers live:
 (nil)

;; Start of basic block 22, registers live: (nil)
(code_label 326 174 187 22 82 "" [1 uses])

(note 187 326 185 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 185 187 190 22 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 190 185 191 22 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 191 190 192 22 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 192 191 202 22 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 22, registers live:
 (nil)

;; Start of basic block 23, registers live: (nil)
(note 202 192 322 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(jump_insn 322 202 323 23 (set (pc)
        (label_ref 37)) -1 (nil)
    (nil))
;; End of basic block 23, registers live:
 (nil)

(barrier 323 322 319)

;; Start of basic block 24, registers live: (nil)
(code_label 319 323 210 24 81 "" [1 uses])

(note 210 319 208 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 208 210 213 24 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 213 208 214 24 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 214 213 215 24 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 215 214 223 24 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 24, registers live:
 (nil)

;; Start of basic block 25, registers live: (nil)
(note 223 215 221 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 221 223 226 25 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 226 221 227 25 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 227 226 228 25 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 228 227 236 25 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 25, registers live:
 (nil)

;; Start of basic block 26, registers live: (nil)
(note 236 228 234 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 234 236 239 26 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 239 234 240 26 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 240 239 241 26 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 241 240 249 26 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 26, registers live:
 (nil)

;; Start of basic block 27, registers live: (nil)
(note 249 241 247 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 247 249 252 27 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 252 247 253 27 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 253 252 254 27 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 254 253 262 27 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 27, registers live:
 (nil)

;; Start of basic block 28, registers live: (nil)
(note 262 254 260 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 260 262 265 28 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 265 260 266 28 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 266 265 267 28 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 267 266 275 28 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 28, registers live:
 (nil)

;; Start of basic block 29, registers live: (nil)
(note 275 267 273 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 273 275 278 29 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 278 273 279 29 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 279 278 280 29 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 280 279 288 29 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 29, registers live:
 (nil)

;; Start of basic block 30, registers live: (nil)
(note 288 280 286 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 286 288 291 30 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 291 286 292 30 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -7 [0xfffffffffffffff9])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 292 291 293 30 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 293 292 296 30 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 30, registers live:
 (nil)

;; Start of basic block 31, registers live: (nil)
(note 296 293 324 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(jump_insn 324 296 325 31 (set (pc)
        (label_ref 37)) -1 (nil)
    (nil))
;; End of basic block 31, registers live:
 (nil)

(barrier 325 324 0)


;; Function char* strtrim(char*) (_Z7strtrimPc)


Dataflow summary:
n_regs = 78, n_defs = 60, n_uses = 123, n_bbs = 74
Use-def chains:
d0 bb 0 luid 1 insn 3 reg 64 { }
d1 bb 0 luid 4 insn 11 reg 66 { }
d2 bb 0 luid 5 insn 13 reg 67 { }
d3 bb 0 luid 6 insn 14 reg 58 { }
d4 bb 2 luid 1 insn 432 reg 77 { }
d5 bb 2 luid 2 insn 24 reg 58 { }
d6 bb 2 luid 4 insn 293 reg 68 { }
d7 bb 2 luid 7 insn 296 reg 61 { }
d8 bb 5 luid 1 insn 93 reg 75 { }
d9 bb 5 luid 2 insn 94 reg 76 { }
d10 bb 5 luid 3 insn 97 reg 68 { }
d11 bb 5 luid 6 insn 100 reg 61 { }
d12 bb 6 luid 1 insn 30 reg 68 { }
d13 bb 6 luid 4 insn 33 reg 61 { }
d14 bb 7 luid 2 insn 41 reg 60 { }
d15 bb 9 luid 1 insn 50 reg 64 { }
d16 bb 9 luid 2 insn 52 reg 60 { }
d17 bb 12 luid 1 insn 57 reg 69 { }
d18 bb 12 luid 4 insn 60 reg 59 { }
d19 bb 15 luid 1 insn 107 reg 58 { }
d20 bb 25 luid 1 insn 118 reg 68 { }
d21 bb 25 luid 4 insn 121 reg 61 { }
d22 bb 26 luid 1 insn 128 reg 58 { }
d23 bb 29 luid 1 insn 143 reg 68 { }
d24 bb 29 luid 4 insn 146 reg 61 { }
d25 bb 30 luid 1 insn 153 reg 58 { }
d26 bb 33 luid 1 insn 168 reg 68 { }
d27 bb 33 luid 4 insn 171 reg 61 { }
d28 bb 34 luid 1 insn 178 reg 58 { }
d29 bb 37 luid 1 insn 193 reg 68 { }
d30 bb 37 luid 4 insn 196 reg 61 { }
d31 bb 38 luid 1 insn 203 reg 58 { }
d32 bb 41 luid 1 insn 218 reg 68 { }
d33 bb 41 luid 4 insn 221 reg 61 { }
d34 bb 42 luid 1 insn 228 reg 58 { }
d35 bb 45 luid 1 insn 243 reg 68 { }
d36 bb 45 luid 4 insn 246 reg 61 { }
d37 bb 46 luid 1 insn 253 reg 58 { }
d38 bb 49 luid 1 insn 268 reg 68 { }
d39 bb 49 luid 4 insn 271 reg 61 { }
d40 bb 50 luid 1 insn 278 reg 58 { }
d41 bb 54 luid 1 insn 303 reg 58 { }
d42 bb 54 luid 3 insn 313 reg 68 { }
d43 bb 54 luid 6 insn 316 reg 61 { }
d44 bb 57 luid 1 insn 323 reg 58 { }
d45 bb 57 luid 3 insn 333 reg 68 { }
d46 bb 57 luid 6 insn 336 reg 61 { }
d47 bb 60 luid 1 insn 343 reg 58 { }
d48 bb 60 luid 3 insn 353 reg 68 { }
d49 bb 60 luid 6 insn 356 reg 61 { }
d50 bb 63 luid 1 insn 363 reg 58 { }
d51 bb 63 luid 3 insn 373 reg 68 { }
d52 bb 63 luid 6 insn 376 reg 61 { }
d53 bb 66 luid 1 insn 383 reg 58 { }
d54 bb 66 luid 3 insn 393 reg 68 { }
d55 bb 66 luid 6 insn 396 reg 61 { }
d56 bb 69 luid 1 insn 403 reg 58 { }
d57 bb 69 luid 3 insn 413 reg 68 { }
d58 bb 69 luid 6 insn 416 reg 61 { }
d59 bb 72 luid 1 insn 423 reg 58 { }
Def-use chains:
u0 bb 0 luid 2 insn 9 reg 64 { d0 }
u1 bb 0 luid 5 insn 13 reg 64 { d0 }
u2 bb 0 luid 5 insn 13 reg 66 { d1 }
u3 bb 0 luid 6 insn 14 reg 67 { d2 }
u4 bb 0 luid 7 insn 16 reg 58 { d3 }
u5 bb 0 luid 7 insn 16 reg 64 { d0 }
u6 bb 2 luid 1 insn 432 reg 58 { d19 d40 d59 }
u7 bb 2 luid 2 insn 24 reg 77 { d4 }
u8 bb 2 luid 3 insn 26 reg 58 { d5 }
u9 bb 2 luid 3 insn 26 reg 64 { d0 }
u10 bb 2 luid 4 insn 293 reg 58 { d5 }
u11 bb 2 luid 5 insn 294 reg 68 { d6 }
u12 bb 2 luid 8 insn 297 reg 61 { d7 }
u13 bb 5 luid 1 insn 93 reg 64 { d0 }
u14 bb 5 luid 1 insn 93 reg 58 { d3 }
u15 bb 5 luid 2 insn 94 reg 75 { d8 }
u16 bb 5 luid 3 insn 97 reg 58 { d3 }
u17 bb 5 luid 4 insn 98 reg 68 { d10 }
u18 bb 5 luid 7 insn 101 reg 61 { d11 }
u19 bb 6 luid 1 insn 30 reg 58 { d19 d40 d59 }
u20 bb 6 luid 2 insn 31 reg 68 { d12 }
u21 bb 6 luid 5 insn 34 reg 61 { d13 }
u22 bb 7 luid 1 insn 39 reg 58 { d3 d5 d19 d22 d25 d28 d31 d34 d37 d40 d41 d44 d47 d50 d53 d56 d59 }
u23 bb 7 luid 2 insn 41 reg 64 { d0 }
u24 bb 7 luid 3 insn 42 reg 60 { d14 }
u25 bb 9 luid 1 insn 50 reg 64 { d0 d15 }
u26 bb 9 luid 2 insn 52 reg 64 { d15 }
u27 bb 9 luid 3 insn 53 reg 60 { d16 }
u28 bb 12 luid 1 insn 57 reg 60 { d14 d16 }
u29 bb 12 luid 2 insn 58 reg 69 { d17 }
u30 bb 12 luid 5 insn 61 reg 59 { d18 }
u31 bb 13 luid 1 insn 71 reg 64 { d0 d15 }
u32 bb 15 luid 1 insn 107 reg 58 { d3 }
u33 bb 15 luid 2 insn 109 reg 58 { d19 }
u34 bb 15 luid 2 insn 109 reg 64 { d0 }
u35 bb 17 luid 1 insn 289 reg 76 { d9 }
u36 bb 18 luid 1 insn 264 reg 76 { d9 }
u37 bb 19 luid 1 insn 239 reg 76 { d9 }
u38 bb 20 luid 1 insn 214 reg 76 { d9 }
u39 bb 21 luid 1 insn 189 reg 76 { d9 }
u40 bb 22 luid 1 insn 164 reg 76 { d9 }
u41 bb 23 luid 1 insn 139 reg 76 { d9 }
u42 bb 25 luid 1 insn 118 reg 58 { d19 }
u43 bb 25 luid 2 insn 119 reg 68 { d20 }
u44 bb 25 luid 5 insn 122 reg 61 { d21 }
u45 bb 26 luid 1 insn 128 reg 58 { d19 }
u46 bb 26 luid 2 insn 130 reg 58 { d22 }
u47 bb 26 luid 2 insn 130 reg 64 { d0 }
u48 bb 29 luid 1 insn 143 reg 58 { d19 d22 }
u49 bb 29 luid 2 insn 144 reg 68 { d23 }
u50 bb 29 luid 5 insn 147 reg 61 { d24 }
u51 bb 30 luid 1 insn 153 reg 58 { d19 d22 }
u52 bb 30 luid 2 insn 155 reg 58 { d25 }
u53 bb 30 luid 2 insn 155 reg 64 { d0 }
u54 bb 33 luid 1 insn 168 reg 58 { d19 d25 }
u55 bb 33 luid 2 insn 169 reg 68 { d26 }
u56 bb 33 luid 5 insn 172 reg 61 { d27 }
u57 bb 34 luid 1 insn 178 reg 58 { d19 d25 }
u58 bb 34 luid 2 insn 180 reg 58 { d28 }
u59 bb 34 luid 2 insn 180 reg 64 { d0 }
u60 bb 37 luid 1 insn 193 reg 58 { d19 d28 }
u61 bb 37 luid 2 insn 194 reg 68 { d29 }
u62 bb 37 luid 5 insn 197 reg 61 { d30 }
u63 bb 38 luid 1 insn 203 reg 58 { d19 d28 }
u64 bb 38 luid 2 insn 205 reg 58 { d31 }
u65 bb 38 luid 2 insn 205 reg 64 { d0 }
u66 bb 41 luid 1 insn 218 reg 58 { d19 d31 }
u67 bb 41 luid 2 insn 219 reg 68 { d32 }
u68 bb 41 luid 5 insn 222 reg 61 { d33 }
u69 bb 42 luid 1 insn 228 reg 58 { d19 d31 }
u70 bb 42 luid 2 insn 230 reg 58 { d34 }
u71 bb 42 luid 2 insn 230 reg 64 { d0 }
u72 bb 45 luid 1 insn 243 reg 58 { d19 d34 }
u73 bb 45 luid 2 insn 244 reg 68 { d35 }
u74 bb 45 luid 5 insn 247 reg 61 { d36 }
u75 bb 46 luid 1 insn 253 reg 58 { d19 d34 }
u76 bb 46 luid 2 insn 255 reg 58 { d37 }
u77 bb 46 luid 2 insn 255 reg 64 { d0 }
u78 bb 49 luid 1 insn 268 reg 58 { d19 d37 }
u79 bb 49 luid 2 insn 269 reg 68 { d38 }
u80 bb 49 luid 5 insn 272 reg 61 { d39 }
u81 bb 50 luid 1 insn 278 reg 58 { d19 d37 }
u82 bb 50 luid 2 insn 280 reg 58 { d40 }
u83 bb 50 luid 2 insn 280 reg 64 { d0 }
u84 bb 54 luid 1 insn 303 reg 77 { d4 }
u85 bb 54 luid 2 insn 305 reg 58 { d41 }
u86 bb 54 luid 2 insn 305 reg 64 { d0 }
u87 bb 54 luid 3 insn 313 reg 58 { d41 }
u88 bb 54 luid 4 insn 314 reg 68 { d42 }
u89 bb 54 luid 7 insn 317 reg 61 { d43 }
u90 bb 57 luid 1 insn 323 reg 77 { d4 }
u91 bb 57 luid 2 insn 325 reg 58 { d44 }
u92 bb 57 luid 2 insn 325 reg 64 { d0 }
u93 bb 57 luid 3 insn 333 reg 58 { d44 }
u94 bb 57 luid 4 insn 334 reg 68 { d45 }
u95 bb 57 luid 7 insn 337 reg 61 { d46 }
u96 bb 60 luid 1 insn 343 reg 77 { d4 }
u97 bb 60 luid 2 insn 345 reg 58 { d47 }
u98 bb 60 luid 2 insn 345 reg 64 { d0 }
u99 bb 60 luid 3 insn 353 reg 58 { d47 }
u100 bb 60 luid 4 insn 354 reg 68 { d48 }
u101 bb 60 luid 7 insn 357 reg 61 { d49 }
u102 bb 63 luid 1 insn 363 reg 77 { d4 }
u103 bb 63 luid 2 insn 365 reg 58 { d50 }
u104 bb 63 luid 2 insn 365 reg 64 { d0 }
u105 bb 63 luid 3 insn 373 reg 58 { d50 }
u106 bb 63 luid 4 insn 374 reg 68 { d51 }
u107 bb 63 luid 7 insn 377 reg 61 { d52 }
u108 bb 66 luid 1 insn 383 reg 77 { d4 }
u109 bb 66 luid 2 insn 385 reg 58 { d53 }
u110 bb 66 luid 2 insn 385 reg 64 { d0 }
u111 bb 66 luid 3 insn 393 reg 58 { d53 }
u112 bb 66 luid 4 insn 394 reg 68 { d54 }
u113 bb 66 luid 7 insn 397 reg 61 { d55 }
u114 bb 69 luid 1 insn 403 reg 77 { d4 }
u115 bb 69 luid 2 insn 405 reg 58 { d56 }
u116 bb 69 luid 2 insn 405 reg 64 { d0 }
u117 bb 69 luid 3 insn 413 reg 58 { d56 }
u118 bb 69 luid 4 insn 414 reg 68 { d57 }
u119 bb 69 luid 7 insn 417 reg 61 { d58 }
u120 bb 72 luid 1 insn 423 reg 77 { d4 }
u121 bb 72 luid 2 insn 425 reg 58 { d59 }
u122 bb 72 luid 2 insn 425 reg 64 { d0 }

Web oldreg=68 newreg=78
Updating insn 98 (68->78)
Web oldreg=61 newreg=79
Updating insn 101 (61->79)
Web oldreg=68 newreg=80
Updating insn 31 (68->80)
Web oldreg=61 newreg=81
Updating insn 34 (61->81)
Web oldreg=68 newreg=82
Updating insn 119 (68->82)
Web oldreg=61 newreg=83
Updating insn 122 (61->83)
Web oldreg=68 newreg=84
Updating insn 144 (68->84)
Web oldreg=61 newreg=85
Updating insn 147 (61->85)
Web oldreg=68 newreg=86
Updating insn 169 (68->86)
Web oldreg=61 newreg=87
Updating insn 172 (61->87)
Web oldreg=68 newreg=88
Updating insn 194 (68->88)
Web oldreg=61 newreg=89
Updating insn 197 (61->89)
Web oldreg=68 newreg=90
Updating insn 219 (68->90)
Web oldreg=61 newreg=91
Updating insn 222 (61->91)
Web oldreg=68 newreg=92
Updating insn 244 (68->92)
Web oldreg=61 newreg=93
Updating insn 247 (61->93)
Web oldreg=68 newreg=94
Updating insn 269 (68->94)
Web oldreg=61 newreg=95
Updating insn 272 (61->95)
Web oldreg=68 newreg=96
Updating insn 314 (68->96)
Web oldreg=61 newreg=97
Updating insn 317 (61->97)
Web oldreg=68 newreg=98
Updating insn 334 (68->98)
Web oldreg=61 newreg=99
Updating insn 337 (61->99)
Web oldreg=68 newreg=100
Updating insn 354 (68->100)
Web oldreg=61 newreg=101
Updating insn 357 (61->101)
Web oldreg=68 newreg=102
Updating insn 374 (68->102)
Web oldreg=61 newreg=103
Updating insn 377 (61->103)
Web oldreg=68 newreg=104
Updating insn 394 (68->104)
Web oldreg=61 newreg=105
Updating insn 397 (61->105)
Web oldreg=68 newreg=106
Updating insn 414 (68->106)
Web oldreg=61 newreg=107
Updating insn 417 (61->107)
Updating insn 97 (68->78)
Updating insn 100 (61->79)
Updating insn 30 (68->80)
Updating insn 33 (61->81)
Updating insn 118 (68->82)
Updating insn 121 (61->83)
Updating insn 143 (68->84)
Updating insn 146 (61->85)
Updating insn 168 (68->86)
Updating insn 171 (61->87)
Updating insn 193 (68->88)
Updating insn 196 (61->89)
Updating insn 218 (68->90)
Updating insn 221 (61->91)
Updating insn 243 (68->92)
Updating insn 246 (61->93)
Updating insn 268 (68->94)
Updating insn 271 (61->95)
Updating insn 313 (68->96)
Updating insn 316 (61->97)
Updating insn 333 (68->98)
Updating insn 336 (61->99)
Updating insn 353 (68->100)
Updating insn 356 (61->101)
Updating insn 373 (68->102)
Updating insn 376 (61->103)
Updating insn 393 (68->104)
Updating insn 396 (61->105)
Updating insn 413 (68->106)
Updating insn 416 (61->107)


try_optimize_cfg iteration 1

Forwarding edge 0->1 to 3 failed.
Forwarding edge 3->4 to 7 failed.
Forwarding edge 30->31 to 2 failed.
Forwarding edge 39->40 to 2 failed.
(note 1 0 6 ("./strings.cc") 141)

;; Start of basic block 0, registers live: (nil)
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:141 (set (reg/v/f:DI 64 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 143)

(insn 9 8 10 0 ./strings.cc:143 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 64 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn/u 10 9 11 0 ./strings.cc:143 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x2ad10a49b200 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (nil))))

(insn 11 10 13 0 ./strings.cc:143 (set (reg:DI 66)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 13 11 14 0 ./strings.cc:143 (parallel [
            (set (reg:DI 67)
                (plus:DI (reg:DI 66)
                    (reg/v/f:DI 64 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 14 13 15 0 ./strings.cc:143 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg:DI 67)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 15 14 16 0 ("./strings.cc") 144)

(insn 16 15 17 0 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 17 16 81 0 ./strings.cc:144 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 479)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

(note 81 17 459 NOTE_INSN_LOOP_BEG)

;; Start of basic block 1, registers live: (nil)
(note 459 81 460 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn 460 459 461 1 (set (pc)
        (label_ref 36)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 461 460 474)

;; Start of basic block 2, registers live: (nil)
(code_label 474 461 89 2 133 "" [3 uses])

(note 89 474 30 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 30 89 31 2 ./strings.cc:144 (set (reg:SI 80)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 31 30 32 2 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 80)) -1 (nil)
    (nil))

(call_insn/u 32 31 33 2 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 33 32 34 2 ./strings.cc:144 (set (reg:SI 81 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 34 33 35 2 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 35 34 82 2 ./strings.cc:144 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 2, registers live:
 (nil)

(note 82 35 36 NOTE_INSN_LOOP_END)

;; Start of basic block 3, registers live: (nil)
(code_label 36 82 37 3 88 "" [19 uses])

(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 38 37 39 3 ("./strings.cc") 146)

(insn 39 38 40 3 ./strings.cc:146 (set (mem:QI (plus:DI (reg/v/f:DI 58 [ last ])
                (const_int 1 [0x1])) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 40 39 41 3 ("./strings.cc") 147)

(insn 41 40 42 3 ./strings.cc:147 (set (reg:QI 60 [ D.2609 ])
        (mem:QI (reg/v/f:DI 64 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 42 41 43 3 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2609 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 43 42 83 3 ./strings.cc:147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 471)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

(note 83 43 468 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: (nil)
(note 468 83 469 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 469 468 470 4 (set (pc)
        (label_ref 63)) -1 (nil)
    (nil))
;; End of basic block 4, registers live:
 (nil)

(barrier 470 469 47)

;; Start of basic block 5, registers live: (nil)
(code_label 47 470 48 5 93 "" [1 uses])

(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 49 48 50 5 ("./strings.cc") 148)

(insn 50 49 51 5 ./strings.cc:148 (parallel [
            (set (reg/v/f:DI 64 [ s ])
                (plus:DI (reg/v/f:DI 64 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 51 50 52 5 ("./strings.cc") 147)

(insn 52 51 53 5 ./strings.cc:147 (set (reg:QI 60 [ D.2609 ])
        (mem:QI (reg/v/f:DI 64 [ s ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 53 52 54 5 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2609 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 54 53 471 5 ./strings.cc:147 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 63)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 5, registers live:
 (nil)

;; Start of basic block 6, registers live: (nil)
(code_label 471 54 90 6 132 "" [1 uses])

(note 90 471 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 57 90 58 6 ./strings.cc:147 (set (reg:SI 69 [ D.2609 ])
        (sign_extend:SI (reg:QI 60 [ D.2609 ]))) -1 (nil)
    (nil))

(insn 58 57 59 6 ./strings.cc:147 (set (reg:SI 5 di [ D.2609 ])
        (reg:SI 69 [ D.2609 ])) -1 (nil)
    (nil))

(call_insn/u 59 58 60 6 ./strings.cc:147 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2609 ]))
            (nil))))

(insn 60 59 61 6 ./strings.cc:147 (set (reg:SI 59 [ D.2611 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 61 60 62 6 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.2611 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 62 61 84 6 ./strings.cc:147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 6, registers live:
 (nil)

(note 84 62 63 NOTE_INSN_LOOP_END)

;; Start of basic block 7, registers live: (nil)
(code_label 63 84 64 7 91 "" [2 uses])

(note 64 63 68 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 68 64 69 7 NOTE_INSN_FUNCTION_END)

(note 69 68 71 7 ("./strings.cc") 150)

(insn 71 69 77 7 ./strings.cc:150 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 64 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 77 71 479 7 ./strings.cc:150 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 7, registers live:
 (nil)

;; Start of basic block 8, registers live: (nil)
(code_label 479 77 95 8 134 "" [1 uses])

(note 95 479 93 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 93 95 94 8 (parallel [
            (set (reg:DI 75)
                (minus:DI (reg/v/f:DI 58 [ last ])
                    (reg/v/f:DI 64 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 94 93 97 8 (parallel [
            (set (reg:DI 76)
                (and:DI (reg:DI 75)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 97 94 98 8 ./strings.cc:144 (set (reg:SI 78)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 98 97 99 8 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 78)) -1 (nil)
    (nil))

(call_insn/u 99 98 100 8 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 100 99 101 8 ./strings.cc:144 (set (reg:SI 79 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 101 100 102 8 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 79 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 102 101 111 8 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 8, registers live:
 (nil)

;; Start of basic block 9, registers live: (nil)
(note 111 102 106 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 106 111 107 9 ("./strings.cc") 145)

(insn 107 106 108 9 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 108 107 109 9 ("./strings.cc") 144)

(insn 109 108 110 9 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(jump_insn 110 109 291 9 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 9, registers live:
 (nil)

;; Start of basic block 10, registers live: (nil)
(note 291 110 289 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 289 291 290 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 290 289 266 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 474)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
        (nil)))
;; End of basic block 10, registers live:
 (nil)

;; Start of basic block 11, registers live: (nil)
(note 266 290 264 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 264 266 265 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 265 264 241 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 480)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1428 [0x594])
        (nil)))
;; End of basic block 11, registers live:
 (nil)

;; Start of basic block 12, registers live: (nil)
(note 241 265 239 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 239 241 240 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 240 239 216 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 481)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1666 [0x682])
        (nil)))
;; End of basic block 12, registers live:
 (nil)

;; Start of basic block 13, registers live: (nil)
(note 216 240 214 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 214 216 215 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 215 214 191 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 482)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
        (nil)))
;; End of basic block 13, registers live:
 (nil)

;; Start of basic block 14, registers live: (nil)
(note 191 215 189 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 189 191 190 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

(jump_insn 190 189 166 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 483)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil)))
;; End of basic block 14, registers live:
 (nil)

;; Start of basic block 15, registers live: (nil)
(note 166 190 164 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 164 166 165 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 5 [0x5]))) -1 (nil)
    (nil))

(jump_insn 165 164 141 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 484)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))
;; End of basic block 15, registers live:
 (nil)

;; Start of basic block 16, registers live: (nil)
(note 141 165 139 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 139 141 140 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 6 [0x6]))) -1 (nil)
    (nil))

(jump_insn 140 139 124 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 485)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 16, registers live:
 (nil)

;; Start of basic block 17, registers live: (nil)
(note 124 140 118 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 118 124 119 17 ./strings.cc:144 (set (reg:SI 82)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 119 118 120 17 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 82)) -1 (nil)
    (nil))

(call_insn/u 120 119 121 17 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 121 120 122 17 ./strings.cc:144 (set (reg:SI 83 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 122 121 123 17 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 123 122 132 17 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 17, registers live:
 (nil)

;; Start of basic block 18, registers live: (nil)
(note 132 123 127 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 127 132 128 18 ("./strings.cc") 145)

(insn 128 127 129 18 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 129 128 130 18 ("./strings.cc") 144)

(insn 130 129 485 18 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 18, registers live:
 (nil)

;; Start of basic block 19, registers live: (nil)
(code_label 485 130 149 19 140 "" [1 uses])

(note 149 485 143 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 143 149 144 19 ./strings.cc:144 (set (reg:SI 84)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 144 143 145 19 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 84)) -1 (nil)
    (nil))

(call_insn/u 145 144 146 19 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 146 145 147 19 ./strings.cc:144 (set (reg:SI 85 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 147 146 148 19 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 148 147 157 19 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 19, registers live:
 (nil)

;; Start of basic block 20, registers live: (nil)
(note 157 148 152 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 152 157 153 20 ("./strings.cc") 145)

(insn 153 152 154 20 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 154 153 155 20 ("./strings.cc") 144)

(insn 155 154 484 20 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 20, registers live:
 (nil)

;; Start of basic block 21, registers live: (nil)
(code_label 484 155 174 21 139 "" [1 uses])

(note 174 484 168 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 168 174 169 21 ./strings.cc:144 (set (reg:SI 86)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 169 168 170 21 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 86)) -1 (nil)
    (nil))

(call_insn/u 170 169 171 21 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 171 170 172 21 ./strings.cc:144 (set (reg:SI 87 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 172 171 173 21 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 173 172 182 21 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 21, registers live:
 (nil)

;; Start of basic block 22, registers live: (nil)
(note 182 173 177 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 177 182 178 22 ("./strings.cc") 145)

(insn 178 177 179 22 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 179 178 180 22 ("./strings.cc") 144)

(insn 180 179 483 22 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 22, registers live:
 (nil)

;; Start of basic block 23, registers live: (nil)
(code_label 483 180 199 23 138 "" [1 uses])

(note 199 483 193 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 193 199 194 23 ./strings.cc:144 (set (reg:SI 88)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 194 193 195 23 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 88)) -1 (nil)
    (nil))

(call_insn/u 195 194 196 23 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 196 195 197 23 ./strings.cc:144 (set (reg:SI 89 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 197 196 198 23 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 198 197 207 23 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 23, registers live:
 (nil)

;; Start of basic block 24, registers live: (nil)
(note 207 198 202 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 202 207 203 24 ("./strings.cc") 145)

(insn 203 202 204 24 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 204 203 205 24 ("./strings.cc") 144)

(insn 205 204 482 24 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 24, registers live:
 (nil)

;; Start of basic block 25, registers live: (nil)
(code_label 482 205 224 25 137 "" [1 uses])

(note 224 482 218 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 218 224 219 25 ./strings.cc:144 (set (reg:SI 90)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 219 218 220 25 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 90)) -1 (nil)
    (nil))

(call_insn/u 220 219 221 25 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 221 220 222 25 ./strings.cc:144 (set (reg:SI 91 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 222 221 223 25 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 223 222 232 25 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 25, registers live:
 (nil)

;; Start of basic block 26, registers live: (nil)
(note 232 223 227 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 227 232 228 26 ("./strings.cc") 145)

(insn 228 227 229 26 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 229 228 230 26 ("./strings.cc") 144)

(insn 230 229 481 26 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 26, registers live:
 (nil)

;; Start of basic block 27, registers live: (nil)
(code_label 481 230 249 27 136 "" [1 uses])

(note 249 481 243 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 243 249 244 27 ./strings.cc:144 (set (reg:SI 92)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 244 243 245 27 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 92)) -1 (nil)
    (nil))

(call_insn/u 245 244 246 27 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 246 245 247 27 ./strings.cc:144 (set (reg:SI 93 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 247 246 248 27 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 248 247 257 27 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 27, registers live:
 (nil)

;; Start of basic block 28, registers live: (nil)
(note 257 248 252 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 252 257 253 28 ("./strings.cc") 145)

(insn 253 252 254 28 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 254 253 255 28 ("./strings.cc") 144)

(insn 255 254 480 28 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 28, registers live:
 (nil)

;; Start of basic block 29, registers live: (nil)
(code_label 480 255 274 29 135 "" [1 uses])

(note 274 480 268 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 268 274 269 29 ./strings.cc:144 (set (reg:SI 94)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 269 268 270 29 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 94)) -1 (nil)
    (nil))

(call_insn/u 270 269 271 29 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 271 270 272 29 ./strings.cc:144 (set (reg:SI 95 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 272 271 273 29 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 273 272 282 29 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 29, registers live:
 (nil)

;; Start of basic block 30, registers live: (nil)
(note 282 273 277 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 277 282 278 30 ("./strings.cc") 145)

(insn 278 277 279 30 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 279 278 280 30 ("./strings.cc") 144)

(insn 280 279 281 30 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(jump_insn 281 280 287 30 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 30, registers live:
 (nil)

;; Start of basic block 31, registers live: (nil)
(note 287 281 475 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(jump_insn 475 287 476 31 (set (pc)
        (label_ref 474)) -1 (nil)
    (nil))
;; End of basic block 31, registers live:
 (nil)

(barrier 476 475 21)

;; Start of basic block 32, registers live: (nil)
(code_label 21 476 22 32 90 "" [1 uses])

(note 22 21 23 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 23 22 432 32 ("./strings.cc") 145)

(insn 432 23 24 32 ./strings.cc:145 (parallel [
            (set (reg/f:DI 77)
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 24 432 25 32 ./strings.cc:145 (set (reg/v/f:DI 58 [ last ])
        (reg/f:DI 77)) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 25 24 26 32 ("./strings.cc") 144)

(insn 26 25 293 32 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 293 26 294 32 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 294 293 295 32 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 295 294 296 32 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 296 295 297 32 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 297 296 298 32 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 298 297 307 32 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 32, registers live:
 (nil)

;; Start of basic block 33, registers live: (nil)
(note 307 298 302 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note 302 307 303 33 ("./strings.cc") 145)

(insn 303 302 304 33 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 304 303 305 33 ("./strings.cc") 144)

(insn 305 304 313 33 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 313 305 314 33 ./strings.cc:144 (set (reg:SI 96)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 314 313 315 33 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 96)) -1 (nil)
    (nil))

(call_insn/u 315 314 316 33 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 316 315 317 33 ./strings.cc:144 (set (reg:SI 97 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 317 316 318 33 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 318 317 327 33 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 33, registers live:
 (nil)

;; Start of basic block 34, registers live: (nil)
(note 327 318 322 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 322 327 323 34 ("./strings.cc") 145)

(insn 323 322 324 34 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 324 323 325 34 ("./strings.cc") 144)

(insn 325 324 333 34 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 333 325 334 34 ./strings.cc:144 (set (reg:SI 98)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 334 333 335 34 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 98)) -1 (nil)
    (nil))

(call_insn/u 335 334 336 34 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 336 335 337 34 ./strings.cc:144 (set (reg:SI 99 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 337 336 338 34 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 338 337 347 34 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 34, registers live:
 (nil)

;; Start of basic block 35, registers live: (nil)
(note 347 338 342 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note 342 347 343 35 ("./strings.cc") 145)

(insn 343 342 344 35 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 344 343 345 35 ("./strings.cc") 144)

(insn 345 344 353 35 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 353 345 354 35 ./strings.cc:144 (set (reg:SI 100)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 354 353 355 35 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 100)) -1 (nil)
    (nil))

(call_insn/u 355 354 356 35 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 356 355 357 35 ./strings.cc:144 (set (reg:SI 101 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 357 356 358 35 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 358 357 367 35 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 35, registers live:
 (nil)

;; Start of basic block 36, registers live: (nil)
(note 367 358 362 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note 362 367 363 36 ("./strings.cc") 145)

(insn 363 362 364 36 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 364 363 365 36 ("./strings.cc") 144)

(insn 365 364 373 36 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 373 365 374 36 ./strings.cc:144 (set (reg:SI 102)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 374 373 375 36 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 102)) -1 (nil)
    (nil))

(call_insn/u 375 374 376 36 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 376 375 377 36 ./strings.cc:144 (set (reg:SI 103 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 377 376 378 36 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 378 377 387 36 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 36, registers live:
 (nil)

;; Start of basic block 37, registers live: (nil)
(note 387 378 382 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note 382 387 383 37 ("./strings.cc") 145)

(insn 383 382 384 37 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 384 383 385 37 ("./strings.cc") 144)

(insn 385 384 393 37 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 393 385 394 37 ./strings.cc:144 (set (reg:SI 104)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 394 393 395 37 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 104)) -1 (nil)
    (nil))

(call_insn/u 395 394 396 37 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 396 395 397 37 ./strings.cc:144 (set (reg:SI 105 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 397 396 398 37 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 398 397 407 37 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 37, registers live:
 (nil)

;; Start of basic block 38, registers live: (nil)
(note 407 398 402 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(note 402 407 403 38 ("./strings.cc") 145)

(insn 403 402 404 38 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 404 403 405 38 ("./strings.cc") 144)

(insn 405 404 413 38 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 413 405 414 38 ./strings.cc:144 (set (reg:SI 106)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 414 413 415 38 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 106)) -1 (nil)
    (nil))

(call_insn/u 415 414 416 38 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 416 415 417 38 ./strings.cc:144 (set (reg:SI 107 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 417 416 418 38 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 418 417 427 38 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 38, registers live:
 (nil)

;; Start of basic block 39, registers live: (nil)
(note 427 418 422 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 422 427 423 39 ("./strings.cc") 145)

(insn 423 422 424 39 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -7 [0xfffffffffffffff9])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 424 423 425 39 ("./strings.cc") 144)

(insn 425 424 426 39 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(jump_insn 426 425 430 39 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 39, registers live:
 (nil)

;; Start of basic block 40, registers live: (nil)
(note 430 426 477 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(jump_insn 477 430 478 40 (set (pc)
        (label_ref 474)) -1 (nil)
    (nil))
;; End of basic block 40, registers live:
 (nil)

(barrier 478 477 0)


;; Function char* strsplit(char*) (_Z8strsplitPc)


Dataflow summary:
n_regs = 69, n_defs = 13, n_uses = 19, n_bbs = 13
Use-def chains:
d0 bb 0 luid 1 insn 3 reg 63 { }
d1 bb 0 luid 2 insn 9 reg 61 { }
d2 bb 1 luid 1 insn 14 reg 63 { }
d3 bb 2 luid 1 insn 20 reg 63 { }
d4 bb 2 luid 2 insn 21 reg 61 { }
d5 bb 5 luid 1 insn 26 reg 64 { }
d6 bb 5 luid 4 insn 29 reg 60 { }
d7 bb 6 luid 2 insn 36 reg 63 { }
d8 bb 6 luid 3 insn 38 reg 58 { }
d9 bb 8 luid 1 insn 46 reg 63 { }
d10 bb 8 luid 2 insn 47 reg 58 { }
d11 bb 11 luid 1 insn 52 reg 65 { }
d12 bb 11 luid 4 insn 55 reg 59 { }
Def-use chains:
u0 bb 0 luid 2 insn 9 reg 63 { d0 }
u1 bb 0 luid 3 insn 10 reg 61 { d1 }
u2 bb 2 luid 1 insn 20 reg 63 { d0 d3 }
u3 bb 2 luid 2 insn 21 reg 63 { d3 }
u4 bb 2 luid 3 insn 22 reg 61 { d4 }
u5 bb 5 luid 1 insn 26 reg 61 { d1 d4 }
u6 bb 5 luid 2 insn 27 reg 64 { d5 }
u7 bb 5 luid 5 insn 30 reg 60 { d6 }
u8 bb 6 luid 1 insn 35 reg 63 { d0 d3 }
u9 bb 6 luid 2 insn 36 reg 63 { d0 d3 }
u10 bb 6 luid 3 insn 38 reg 63 { d7 }
u11 bb 6 luid 4 insn 39 reg 58 { d8 }
u12 bb 8 luid 1 insn 46 reg 63 { d7 d9 }
u13 bb 8 luid 2 insn 47 reg 63 { d9 }
u14 bb 8 luid 3 insn 48 reg 58 { d10 }
u15 bb 11 luid 1 insn 52 reg 58 { d8 d10 }
u16 bb 11 luid 2 insn 53 reg 65 { d11 }
u17 bb 11 luid 5 insn 56 reg 59 { d12 }
u18 bb 12 luid 1 insn 66 reg 63 { d2 d3 d7 d9 }



try_optimize_cfg iteration 1

Forwarding edge 4->5 to 8 failed.
(note 1 0 6 ("./strings.cc") 108)

;; Start of basic block 0, registers live: (nil)
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:108 (set (reg/v/f:DI 63 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 110)

(insn 9 8 10 0 ./strings.cc:110 (set (reg:QI 61 [ D.2569 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 10 9 11 0 ./strings.cc:110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2569 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 11 10 13 0 ./strings.cc:110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 88)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 6700 [0x1a2c])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 86 1 ./strings.cc:110 (set (reg/v/f:DI 63 [ s ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 86 14 87 1 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 87 86 76)

(note 76 87 17 NOTE_INSN_LOOP_BEG)

;; Start of basic block 2, registers live: (nil)
(code_label 17 76 18 2 145 "" [1 uses])

(note 18 17 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 19 18 20 2 ("./strings.cc") 111)

(insn 20 19 21 2 ./strings.cc:111 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 21 20 22 2 ./strings.cc:111 (set (reg:QI 61 [ D.2569 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 22 21 23 2 ./strings.cc:111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2569 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 23 22 88 2 ./strings.cc:111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 58)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
        (nil)))
;; End of basic block 2, registers live:
 (nil)

;; Start of basic block 3, registers live: (nil)
(code_label 88 23 82 3 150 "" [1 uses])

(note 82 88 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 82 27 3 ./strings.cc:111 (set (reg:SI 64 [ D.2569 ])
        (sign_extend:SI (reg:QI 61 [ D.2569 ]))) 121 {extendqisi2} (nil)
    (nil))

(insn 27 26 28 3 ./strings.cc:111 (set (reg:SI 5 di [ D.2569 ])
        (reg:SI 64 [ D.2569 ])) 40 {*movsi_1} (nil)
    (nil))

(call_insn/u 28 27 29 3 ./strings.cc:111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2569 ]))
            (nil))))

(insn 29 28 30 3 ./strings.cc:111 (set (reg:SI 60 [ D.2575 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (nil)
    (nil))

(insn 30 29 31 3 ./strings.cc:111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.2575 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn 31 30 77 3 ./strings.cc:111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

(note 77 31 34 NOTE_INSN_LOOP_END)

(note 34 77 33 ("./strings.cc") 114)

;; Start of basic block 4, registers live: (nil)
(note 33 34 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 4 ./strings.cc:114 (set (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(insn 36 35 37 4 ./strings.cc:114 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 37 36 38 4 ("./strings.cc") 115)

(insn 38 37 39 4 ./strings.cc:115 (set (reg:QI 58 [ temp.240 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 39 38 40 4 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.240 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 40 39 78 4 ./strings.cc:115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 94)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 4, registers live:
 (nil)

(note 78 40 91 NOTE_INSN_LOOP_BEG)

;; Start of basic block 5, registers live: (nil)
(note 91 78 92 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 92 91 93 5 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))
;; End of basic block 5, registers live:
 (nil)

(barrier 93 92 44)

;; Start of basic block 6, registers live: (nil)
(code_label 44 93 45 6 148 "" [1 uses])

(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 ./strings.cc:115 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 47 46 48 6 ./strings.cc:115 (set (reg:QI 58 [ temp.240 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 48 47 49 6 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.240 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 49 48 94 6 ./strings.cc:115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 58)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 6, registers live:
 (nil)

;; Start of basic block 7, registers live: (nil)
(code_label 94 49 83 7 151 "" [1 uses])

(note 83 94 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 83 53 7 ./strings.cc:115 (set (reg:SI 65 [ temp.240 ])
        (sign_extend:SI (reg:QI 58 [ temp.240 ]))) -1 (nil)
    (nil))

(insn 53 52 54 7 ./strings.cc:115 (set (reg:SI 5 di [ temp.240 ])
        (reg:SI 65 [ temp.240 ])) -1 (nil)
    (nil))

(call_insn/u 54 53 55 7 ./strings.cc:115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ temp.240 ]))
            (nil))))

(insn 55 54 56 7 ./strings.cc:115 (set (reg:SI 59 [ D.2579 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 56 55 57 7 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.2579 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 57 56 79 7 ./strings.cc:115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 7, registers live:
 (nil)

(note 79 57 58 NOTE_INSN_LOOP_END)

;; Start of basic block 8, registers live: (nil)
(code_label 58 79 59 8 144 "" [4 uses])

(note 59 58 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 63 59 64 8 NOTE_INSN_FUNCTION_END)

(note 64 63 66 8 ("./strings.cc") 118)

(insn 66 64 72 8 ./strings.cc:118 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 72 66 0 8 ./strings.cc:118 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 8, registers live:
 (nil)


;; Function char* strlopspace(char*) (_Z11strlopspacePc)


Dataflow summary:
n_regs = 67, n_defs = 8, n_uses = 12, n_bbs = 7
Use-def chains:
d0 bb 0 luid 1 insn 3 reg 62 { }
d1 bb 0 luid 2 insn 9 reg 60 { }
d2 bb 1 luid 1 insn 14 reg 58 { }
d3 bb 2 luid 1 insn 19 reg 58 { }
d4 bb 3 luid 1 insn 25 reg 58 { }
d5 bb 3 luid 2 insn 27 reg 60 { }
d6 bb 5 luid 1 insn 32 reg 63 { }
d7 bb 5 luid 4 insn 35 reg 59 { }
Def-use chains:
u0 bb 0 luid 2 insn 9 reg 62 { d0 }
u1 bb 0 luid 3 insn 10 reg 60 { d1 }
u2 bb 1 luid 1 insn 14 reg 62 { d0 }
u3 bb 2 luid 1 insn 19 reg 62 { d0 }
u4 bb 3 luid 1 insn 25 reg 58 { d3 d4 }
u5 bb 3 luid 2 insn 27 reg 58 { d4 }
u6 bb 3 luid 3 insn 28 reg 60 { d5 }
u7 bb 5 luid 1 insn 32 reg 60 { d1 d5 }
u8 bb 5 luid 2 insn 33 reg 63 { d6 }
u9 bb 5 luid 5 insn 36 reg 59 { d7 }
u10 bb 6 luid 1 insn 41 reg 58 { d2 d3 d4 }
u11 bb 6 luid 2 insn 48 reg 62 { d0 }



try_optimize_cfg iteration 1

(note 1 0 6 ("./strings.cc") 93)

;; Start of basic block 0, registers live: (nil)
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:93 (set (reg/v/f:DI 62 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 96)

(insn 9 8 10 0 ./strings.cc:96 (set (reg:QI 60 [ D.2562 ])
        (mem:QI (reg/v/f:DI 62 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 10 9 11 0 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2562 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 11 10 13 0 ./strings.cc:96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 63 1 ./strings.cc:96 (set (reg/v/f:DI 58 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 63 14 64 1 (set (pc)
        (label_ref 38)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 64 63 17)

;; Start of basic block 2, registers live: (nil)
(code_label 17 64 18 2 155 "" [1 uses])

(note 18 17 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 58 2 ./strings.cc:96 (set (reg/v/f:DI 58 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 58 19 65 2 NOTE_INSN_LOOP_BEG)

(jump_insn 65 58 66 2 (set (pc)
        (label_ref 30)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(barrier 66 65 22)

;; Start of basic block 3, registers live: (nil)
(code_label 22 66 23 3 159 "" [1 uses])

(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 24 23 25 3 ("./strings.cc") 97)

(insn 25 24 26 3 ./strings.cc:97 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 26 25 27 3 ("./strings.cc") 96)

(insn 27 26 28 3 ./strings.cc:96 (set (reg:QI 60 [ D.2562 ])
        (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 28 27 29 3 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2562 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 29 28 30 3 ./strings.cc:96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 38)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

;; Start of basic block 4, registers live: (nil)
(code_label 30 29 31 4 158 "" [1 uses])

(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 4 ./strings.cc:96 (set (reg:SI 63 [ D.2562 ])
        (sign_extend:SI (reg:QI 60 [ D.2562 ]))) -1 (nil)
    (nil))

(insn 33 32 34 4 ./strings.cc:96 (set (reg:SI 5 di [ D.2562 ])
        (reg:SI 63 [ D.2562 ])) -1 (nil)
    (nil))

(call_insn/u 34 33 35 4 ./strings.cc:96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2562 ]))
            (nil))))

(insn 35 34 36 4 ./strings.cc:96 (set (reg:SI 59 [ D.2564 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 36 35 37 4 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.2564 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 37 36 59 4 ./strings.cc:96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 4, registers live:
 (nil)

(note 59 37 38 NOTE_INSN_LOOP_END)

;; Start of basic block 5, registers live: (nil)
(code_label 38 59 39 5 157 "" [2 uses])

(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 40 39 41 5 ("./strings.cc") 98)

(insn 41 40 45 5 ./strings.cc:98 (set (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 45 41 46 5 NOTE_INSN_FUNCTION_END)

(note 46 45 48 5 ("./strings.cc") 100)

(insn 48 46 54 5 ./strings.cc:100 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 54 48 0 5 ./strings.cc:100 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 5, registers live:
 (nil)


;; Function char* strcasepre(const char*, const char*) (_Z10strcaseprePKcS0_)


Dataflow summary:
n_regs = 71, n_defs = 13, n_uses = 15, n_bbs = 8
Use-def chains:
d0 bb 0 luid 1 insn 3 reg 64 { }
d1 bb 0 luid 2 insn 4 reg 65 { }
d2 bb 0 luid 3 insn 11 reg 62 { }
d3 bb 1 luid 1 insn 16 reg 61 { }
d4 bb 2 luid 1 insn 21 reg 58 { }
d5 bb 3 luid 1 insn 25 reg 66 { }
d6 bb 3 luid 4 insn 28 reg 60 { }
d7 bb 3 luid 5 insn 29 reg 67 { }
d8 bb 3 luid 8 insn 32 reg 59 { }
d9 bb 4 luid 1 insn 38 reg 64 { }
d10 bb 4 luid 2 insn 40 reg 62 { }
d11 bb 4 luid 3 insn 41 reg 58 { }
d12 bb 6 luid 1 insn 49 reg 61 { }
Def-use chains:
u0 bb 0 luid 3 insn 11 reg 65 { d1 }
u1 bb 0 luid 4 insn 12 reg 62 { d2 }
u2 bb 1 luid 1 insn 16 reg 64 { d0 d9 }
u3 bb 2 luid 1 insn 21 reg 65 { d1 }
u4 bb 3 luid 1 insn 25 reg 62 { d2 d10 }
u5 bb 3 luid 2 insn 26 reg 66 { d5 }
u6 bb 3 luid 5 insn 29 reg 64 { d0 d9 }
u7 bb 3 luid 6 insn 30 reg 67 { d7 }
u8 bb 3 luid 9 insn 33 reg 59 { d8 }
u9 bb 3 luid 9 insn 33 reg 60 { d6 }
u10 bb 4 luid 1 insn 38 reg 64 { d0 d9 }
u11 bb 4 luid 2 insn 40 reg 58 { d4 d11 }
u12 bb 4 luid 3 insn 41 reg 58 { d4 d11 }
u13 bb 4 luid 4 insn 42 reg 62 { d10 }
u14 bb 7 luid 1 insn 58 reg 61 { d3 d12 }



try_optimize_cfg iteration 1

Forwarding edge 4->5 to 3 failed.
(note 1 0 7 ("./strings.cc") 56)

;; Start of basic block 0, registers live: (nil)
(note 7 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 0 ./strings.cc:56 (set (reg/v/f:DI 64 [ str ])
        (reg:DI 5 di [ str ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 4 3 5 0 ./strings.cc:56 (set (reg/v/f:DI 65 [ pre ])
        (reg:DI 4 si [ pre ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 5 4 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 5 11 0 ("./strings.cc") 60)

(insn 11 10 12 0 ./strings.cc:60 (set (reg:QI 62 [ D.2522 ])
        (mem:QI (reg/v/f:DI 65 [ pre ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 12 11 13 0 ./strings.cc:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 62 [ D.2522 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 13 12 14 0 ./strings.cc:60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(code_label 14 13 15 1 164 "" [1 uses])

(note 15 14 16 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 75 1 ./strings.cc:60 (set (reg/f:DI 61 [ D.2523 ])
        (reg/v/f:DI 64 [ str ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 75 16 76 1 (set (pc)
        (label_ref 50)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 76 75 19)

;; Start of basic block 2, registers live: (nil)
(code_label 19 76 20 2 163 "" [1 uses])

(note 20 19 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 68 2 ./strings.cc:60 (set (reg/f:DI 58 [ ivtmp.302 ])
        (reg/v/f:DI 65 [ pre ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(note 68 21 22 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: (nil)
(code_label 22 68 23 3 166 "" [1 uses])

(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 24 23 25 3 ("./strings.cc") 61)

(insn 25 24 26 3 ./strings.cc:61 (set (reg:SI 66 [ D.2522 ])
        (sign_extend:SI (reg:QI 62 [ D.2522 ]))) -1 (nil)
    (nil))

(insn 26 25 27 3 ./strings.cc:61 (set (reg:SI 5 di [ D.2522 ])
        (reg:SI 66 [ D.2522 ])) -1 (nil)
    (nil))

(call_insn/u 27 26 28 3 ./strings.cc:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2522 ]))
            (nil))))

(insn 28 27 29 3 ./strings.cc:61 (set (reg:SI 60 [ D.2525 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 29 28 30 3 ./strings.cc:61 (set (reg:SI 67)
        (sign_extend:SI (mem:QI (reg/v/f:DI 64 [ str ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 30 29 31 3 ./strings.cc:61 (set (reg:SI 5 di)
        (reg:SI 67)) -1 (nil)
    (nil))

(call_insn/u 31 30 32 3 ./strings.cc:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 32 31 33 3 ./strings.cc:61 (set (reg:SI 59 [ D.2528 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 33 32 34 3 ./strings.cc:61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.2525 ])
            (reg:SI 59 [ D.2528 ]))) -1 (nil)
    (nil))

(jump_insn 34 33 37 3 ./strings.cc:61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 47)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

(note 37 34 36 ("./strings.cc") 62)

;; Start of basic block 4, registers live: (nil)
(note 36 37 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 38 36 39 4 ./strings.cc:62 (parallel [
            (set (reg/v/f:DI 64 [ str ])
                (plus:DI (reg/v/f:DI 64 [ str ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 39 38 40 4 ("./strings.cc") 60)

(insn 40 39 41 4 ./strings.cc:60 (set (reg:QI 62 [ D.2522 ])
        (mem:QI (plus:DI (reg/f:DI 58 [ ivtmp.302 ])
                (const_int 1 [0x1])) [0 S1 A8])) -1 (nil)
    (nil))

(insn 41 40 42 4 ./strings.cc:60 (parallel [
            (set (reg/f:DI 58 [ ivtmp.302 ])
                (plus:DI (reg/f:DI 58 [ ivtmp.302 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 42 41 43 4 ./strings.cc:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 62 [ D.2522 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 43 42 74 4 ./strings.cc:60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 14)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 4, registers live:
 (nil)

;; Start of basic block 5, registers live: (nil)
(note 74 43 77 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 77 74 78 5 (set (pc)
        (label_ref 22)) -1 (nil)
    (nil))
;; End of basic block 5, registers live:
 (nil)

(barrier 78 77 69)

(note 69 78 47 NOTE_INSN_LOOP_END)

;; Start of basic block 6, registers live: (nil)
(code_label 47 69 48 6 167 "" [1 uses])

(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 6 ./strings.cc:60 (set (reg/f:DI 61 [ D.2523 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 6, registers live:
 (nil)

;; Start of basic block 7, registers live: (nil)
(code_label 50 49 51 7 165 "" [1 uses])

(note 51 50 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 55 51 56 7 NOTE_INSN_FUNCTION_END)

(note 56 55 58 7 ("./strings.cc") 64)

(insn 58 56 64 7 ./strings.cc:64 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 61 [ D.2523 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 64 58 0 7 ./strings.cc:64 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 7, registers live:
 (nil)


;; Function char* strclean(char*) (_Z8strcleanPc)


Dataflow summary:
n_regs = 70, n_defs = 12, n_uses = 20, n_bbs = 10
Use-def chains:
d0 bb 0 luid 1 insn 3 reg 66 { }
d1 bb 0 luid 2 insn 9 reg 64 { }
d2 bb 1 luid 1 insn 14 reg 59 { }
d3 bb 2 luid 1 insn 19 reg 58 { }
d4 bb 2 luid 2 insn 20 reg 59 { }
d5 bb 3 luid 1 insn 24 reg 63 { }
d6 bb 3 luid 4 insn 27 reg 62 { }
d7 bb 5 luid 3 insn 38 reg 61 { }
d8 bb 6 luid 3 insn 46 reg 60 { }
d9 bb 6 luid 5 insn 48 reg 59 { }
d10 bb 7 luid 1 insn 52 reg 64 { }
d11 bb 7 luid 2 insn 53 reg 58 { }
Def-use chains:
u0 bb 0 luid 2 insn 9 reg 66 { d0 }
u1 bb 0 luid 3 insn 10 reg 64 { d1 }
u2 bb 1 luid 1 insn 14 reg 66 { d0 }
u3 bb 2 luid 1 insn 19 reg 66 { d0 }
u4 bb 2 luid 2 insn 20 reg 66 { d0 }
u5 bb 3 luid 1 insn 24 reg 64 { d1 d10 }
u6 bb 3 luid 2 insn 25 reg 63 { d5 }
u7 bb 3 luid 5 insn 28 reg 62 { d6 }
u8 bb 4 luid 1 insn 32 reg 64 { d1 d10 }
u9 bb 5 luid 1 insn 36 reg 63 { d5 }
u10 bb 5 luid 4 insn 39 reg 61 { d7 }
u11 bb 6 luid 1 insn 44 reg 63 { d5 }
u12 bb 6 luid 4 insn 47 reg 60 { d8 }
u13 bb 6 luid 4 insn 47 reg 59 { d4 d9 }
u14 bb 6 luid 5 insn 48 reg 59 { d4 d9 }
u15 bb 7 luid 1 insn 52 reg 58 { d3 d11 }
u16 bb 7 luid 2 insn 53 reg 58 { d3 d11 }
u17 bb 7 luid 3 insn 54 reg 64 { d10 }
u18 bb 9 luid 1 insn 59 reg 59 { d2 d4 d9 }
u19 bb 9 luid 2 insn 66 reg 66 { d0 }



try_optimize_cfg iteration 1

(note 1 0 6 ("./strings.cc") 29)

;; Start of basic block 0, registers live: (nil)
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:29 (set (reg/v/f:DI 66 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 33)

(insn 9 8 10 0 ./strings.cc:33 (set (reg:QI 64 [ D.2495 ])
        (mem:QI (reg/v/f:DI 66 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 10 9 11 0 ./strings.cc:33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.2495 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 11 10 13 0 ./strings.cc:33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 84 1 ./strings.cc:33 (set (reg/v/f:DI 59 [ p ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 84 14 85 1 (set (pc)
        (label_ref 56)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 85 84 17)

;; Start of basic block 2, registers live: (nil)
(code_label 17 85 18 2 172 "" [1 uses])

(note 18 17 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 2 ./strings.cc:33 (set (reg/f:DI 58 [ ivtmp.331 ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 20 19 76 2 ./strings.cc:33 (set (reg/v/f:DI 59 [ p ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(note 76 20 21 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: (nil)
(code_label 21 76 22 3 175 "" [1 uses])

(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 23 22 24 3 ("./strings.cc") 34)

(insn 24 23 25 3 ./strings.cc:34 (set (reg:SI 63 [ D.2499 ])
        (sign_extend:SI (reg:QI 64 [ D.2495 ]))) -1 (nil)
    (nil))

(insn 25 24 26 3 ./strings.cc:34 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 63 [ D.2499 ])) -1 (nil)
    (nil))

(call_insn/u 26 25 27 3 ./strings.cc:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isalnum") [flags 0x41] <function_decl 0x2ad10a4adb00 isalnum>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn 27 26 28 3 ./strings.cc:34 (set (reg:SI 62 [ D.2500 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 28 27 29 3 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.2500 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 29 28 31 3 ./strings.cc:34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 3000 [0xbb8])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

;; Start of basic block 4, registers live: (nil)
(note 31 29 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 4 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.2495 ])
            (const_int 45 [0x2d]))) -1 (nil)
    (nil))

(jump_insn 33 32 35 4 ./strings.cc:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 4880 [0x1310])
        (nil)))
;; End of basic block 4, registers live:
 (nil)

;; Start of basic block 5, registers live: (nil)
(note 35 33 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 5 ./strings.cc:34 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 63 [ D.2499 ])) -1 (nil)
    (nil))

(call_insn/u 37 36 38 5 ./strings.cc:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn 38 37 39 5 ./strings.cc:34 (set (reg:SI 61 [ D.2501 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 39 38 40 5 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2501 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 40 39 41 5 ./strings.cc:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5, registers live:
 (nil)

;; Start of basic block 6, registers live: (nil)
(code_label 41 40 42 6 176 "" [2 uses])

(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 43 42 44 6 ("./strings.cc") 35)

(insn 44 43 45 6 ./strings.cc:35 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 63 [ D.2499 ])) -1 (nil)
    (nil))

(call_insn/u 45 44 46 6 ./strings.cc:35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn 46 45 47 6 ./strings.cc:35 (set (reg:SI 60 [ D.2502 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 47 46 48 6 ./strings.cc:35 (set (mem:QI (reg/v/f:DI 59 [ p ]) [0 S1 A8])
        (subreg:QI (reg:SI 60 [ D.2502 ]) 0)) -1 (nil)
    (nil))

(insn 48 47 49 6 ./strings.cc:35 (parallel [
            (set (reg/v/f:DI 59 [ p ])
                (plus:DI (reg/v/f:DI 59 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))
;; End of basic block 6, registers live:
 (nil)

;; Start of basic block 7, registers live: (nil)
(code_label 49 48 50 7 179 "" [1 uses])

(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 51 50 52 7 ("./strings.cc") 33)

(insn 52 51 53 7 ./strings.cc:33 (set (reg:QI 64 [ D.2495 ])
        (mem:QI (plus:DI (reg/f:DI 58 [ ivtmp.331 ])
                (const_int 1 [0x1])) [0 S1 A8])) -1 (nil)
    (nil))

(insn 53 52 54 7 ./strings.cc:33 (parallel [
            (set (reg/f:DI 58 [ ivtmp.331 ])
                (plus:DI (reg/f:DI 58 [ ivtmp.331 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 54 53 55 7 ./strings.cc:33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.2495 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 55 54 77 7 ./strings.cc:33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 21)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
        (nil)))
;; End of basic block 7, registers live:
 (nil)

(note 77 55 56 NOTE_INSN_LOOP_END)

;; Start of basic block 8, registers live: (nil)
(code_label 56 77 57 8 174 "" [1 uses])

(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 8 ("./strings.cc") 36)

(insn 59 58 63 8 ./strings.cc:36 (set (mem:QI (reg/v/f:DI 59 [ p ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 63 59 64 8 NOTE_INSN_FUNCTION_END)

(note 64 63 66 8 ("./strings.cc") 38)

(insn 66 64 72 8 ./strings.cc:38 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 72 66 0 8 ./strings.cc:38 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 8, registers live:
 (nil)

