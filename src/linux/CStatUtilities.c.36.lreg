
;; Function bsearchDbl (bsearchDbl)



Pass 0

  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:104 INDEX_REGS:0 LEGACY_REGS:104 GENERAL_REGS:104 SSE_REGS:1339 MMX_REGS:1339 FP_TOP_SSE_REGS:1339 FP_SECOND_SSE_REGS:1339 FLOAT_SSE_REGS:1339 FLOAT_INT_REGS:927 INT_SSE_REGS:1339 FLOAT_INT_SSE_REGS:1339 ALL_REGS:1339 MEM:364
  Register 60 costs: AREG:-77 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:66352 MMX_REGS:66352 INT_SSE_REGS:66352 MEM:15364
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:34203 MMX_REGS:34203 INT_SSE_REGS:34203 MEM:8893
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:34463 MMX_REGS:34463 INT_SSE_REGS:34463 MEM:9029
  Register 63 costs: AREG:19500 DREG:19500 CREG:19500 BREG:19500 SIREG:19500 DIREG:19500 AD_REGS:19500 Q_REGS:19500 NON_Q_REGS:36500 INDEX_REGS:19500 LEGACY_REGS:36500 GENERAL_REGS:36500 FP_TOP_REG:31500 FP_SECOND_REG:31500 FLOAT_REGS:31500 SSE_REGS:0 FP_TOP_SSE_REGS:31500 FP_SECOND_SSE_REGS:31500 FLOAT_SSE_REGS:31500 FLOAT_INT_REGS:31500 INT_SSE_REGS:19500 FLOAT_INT_SSE_REGS:31500 ALL_REGS:52500 MEM:15000
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-77 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15353 MMX_REGS:15353 FP_TOP_SSE_REGS:15353 FP_SECOND_SSE_REGS:15353 FLOAT_SSE_REGS:15353 FLOAT_INT_REGS:10629 INT_SSE_REGS:15353 FLOAT_INT_SSE_REGS:15353 ALL_REGS:15353 MEM:4724
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-77 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2002 MMX_REGS:2002 FP_TOP_SSE_REGS:2002 FP_SECOND_SSE_REGS:2002 FLOAT_SSE_REGS:2002 FLOAT_INT_REGS:1386 INT_SSE_REGS:2002 FLOAT_INT_SSE_REGS:2002 ALL_REGS:2002 MEM:539
  Register 67 costs: AREG:20852 DREG:20852 CREG:20852 BREG:20852 SIREG:20852 DIREG:20852 AD_REGS:20852 Q_REGS:20852 NON_Q_REGS:22161 INDEX_REGS:20852 LEGACY_REGS:22161 GENERAL_REGS:22161 FP_TOP_REG:33684 FP_SECOND_REG:33684 FLOAT_REGS:33684 SSE_REGS:0 FP_TOP_SSE_REGS:33684 FP_SECOND_SSE_REGS:33684 FLOAT_SSE_REGS:33684 FLOAT_INT_REGS:33684 INT_SSE_REGS:20852 FLOAT_INT_SSE_REGS:33684 ALL_REGS:35301 MEM:12536
  Register 68 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:41000 MMX_REGS:41000 FP_TOP_SSE_REGS:41000 FP_SECOND_SSE_REGS:41000 FLOAT_SSE_REGS:41000 FLOAT_INT_REGS:29000 INT_SSE_REGS:41000 FLOAT_INT_SSE_REGS:41000 ALL_REGS:41000 MEM:12000
  Register 69 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:28000 MMX_REGS:28000 FP_TOP_SSE_REGS:28000 FP_SECOND_SSE_REGS:28000 FLOAT_SSE_REGS:28000 FLOAT_INT_REGS:20000 INT_SSE_REGS:28000 FLOAT_INT_SSE_REGS:28000 ALL_REGS:28000 MEM:8000
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2000 INDEX_REGS:0 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:8000
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1248 MMX_REGS:1248 FP_TOP_SSE_REGS:1248 FP_SECOND_SSE_REGS:1248 FLOAT_SSE_REGS:1248 FLOAT_INT_REGS:864 INT_SSE_REGS:1248 FLOAT_INT_SSE_REGS:1248 ALL_REGS:1248 MEM:336
  Register 75 costs: AREG:3380 DREG:3380 CREG:3380 BREG:3380 SIREG:3380 DIREG:3380 AD_REGS:3380 Q_REGS:3380 NON_Q_REGS:4264 INDEX_REGS:3380 LEGACY_REGS:4264 GENERAL_REGS:4264 FP_TOP_REG:5460 FP_SECOND_REG:5460 FLOAT_REGS:5460 SSE_REGS:0 FP_TOP_SSE_REGS:5460 FP_SECOND_SSE_REGS:5460 FLOAT_SSE_REGS:5460 FLOAT_INT_REGS:5460 INT_SSE_REGS:3380 FLOAT_INT_SSE_REGS:5460 ALL_REGS:6552 MEM:2288
  Register 77 costs: SSE_REGS:0 FP_TOP_SSE_REGS:2652 FP_SECOND_SSE_REGS:2652 FLOAT_SSE_REGS:2652 INT_SSE_REGS:4732 FLOAT_INT_SSE_REGS:4732 ALL_REGS:4732 MEM:1144
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:104 INDEX_REGS:0 LEGACY_REGS:104 GENERAL_REGS:104 SSE_REGS:1352 MMX_REGS:1352 FP_TOP_SSE_REGS:1352 FP_SECOND_SSE_REGS:1352 FLOAT_SSE_REGS:1352 FLOAT_INT_REGS:936 INT_SSE_REGS:1352 FLOAT_INT_SSE_REGS:1352 ALL_REGS:1352 MEM:416
  Register 80 costs: AREG:3380 DREG:3380 CREG:3380 BREG:3380 SIREG:3380 DIREG:3380 AD_REGS:3380 Q_REGS:3380 NON_Q_REGS:4264 INDEX_REGS:3380 LEGACY_REGS:4264 GENERAL_REGS:4264 FP_TOP_REG:5460 FP_SECOND_REG:5460 FLOAT_REGS:5460 SSE_REGS:0 FP_TOP_SSE_REGS:5460 FP_SECOND_SSE_REGS:5460 FLOAT_SSE_REGS:5460 FLOAT_INT_REGS:5460 INT_SSE_REGS:3380 FLOAT_INT_SSE_REGS:5460 ALL_REGS:6552 MEM:2236

  Register 59 pref INDEX_REGS, else GENERAL_REGS
  Register 60 pref AREG, else GENERAL_REGS
  Register 61 pref GENERAL_REGS or none
  Register 62 pref GENERAL_REGS or none
  Register 63 pref SSE_REGS or none
  Register 65 pref DIREG, else GENERAL_REGS
  Register 66 pref SIREG, else GENERAL_REGS
  Register 67 pref SSE_REGS or none
  Register 68 pref GENERAL_REGS or none
  Register 69 pref GENERAL_REGS or none
  Register 72 pref INDEX_REGS, else GENERAL_REGS
  Register 73 pref GENERAL_REGS or none
  Register 75 pref SSE_REGS or none
  Register 77 pref SSE_REGS or none
  Register 78 pref INDEX_REGS, else GENERAL_REGS
  Register 80 pref SSE_REGS or none


Pass 1

  Register 59 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:104 INDEX_REGS:0 LEGACY_REGS:104 GENERAL_REGS:104 SSE_REGS:1339 MMX_REGS:1339 FP_TOP_SSE_REGS:1339 FP_SECOND_SSE_REGS:1339 FLOAT_SSE_REGS:1339 FLOAT_INT_REGS:927 INT_SSE_REGS:1339 FLOAT_INT_SSE_REGS:1339 ALL_REGS:1339 MEM:364
  Register 60 costs: AREG:-77 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:66352 MMX_REGS:66352 INT_SSE_REGS:66352 MEM:15364
  Register 61 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:36203 MMX_REGS:36203 INT_SSE_REGS:36203 MEM:9893
  Register 62 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:36463 MMX_REGS:36463 INT_SSE_REGS:36463 MEM:10029
  Register 63 costs: AREG:19500 DREG:19500 CREG:19500 BREG:19500 SIREG:19500 DIREG:19500 AD_REGS:19500 Q_REGS:19500 NON_Q_REGS:36500 INDEX_REGS:19500 LEGACY_REGS:36500 GENERAL_REGS:36500 FP_TOP_REG:31500 FP_SECOND_REG:31500 FLOAT_REGS:31500 SSE_REGS:0 FP_TOP_SSE_REGS:31500 FP_SECOND_SSE_REGS:31500 FLOAT_SSE_REGS:31500 FLOAT_INT_REGS:31500 INT_SSE_REGS:19500 FLOAT_INT_SSE_REGS:31500 ALL_REGS:52500 MEM:15000
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-77 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15353 MMX_REGS:15353 FP_TOP_SSE_REGS:15353 FP_SECOND_SSE_REGS:15353 FLOAT_SSE_REGS:15353 FLOAT_INT_REGS:10629 INT_SSE_REGS:15353 FLOAT_INT_SSE_REGS:15353 ALL_REGS:15353 MEM:4724
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-77 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2002 MMX_REGS:2002 FP_TOP_SSE_REGS:2002 FP_SECOND_SSE_REGS:2002 FLOAT_SSE_REGS:2002 FLOAT_INT_REGS:1386 INT_SSE_REGS:2002 FLOAT_INT_SSE_REGS:2002 ALL_REGS:2002 MEM:539
  Register 67 costs: AREG:20852 DREG:20852 CREG:20852 BREG:20852 SIREG:20852 DIREG:20852 AD_REGS:20852 Q_REGS:20852 NON_Q_REGS:22161 INDEX_REGS:20852 LEGACY_REGS:22161 GENERAL_REGS:22161 FP_TOP_REG:33684 FP_SECOND_REG:33684 FLOAT_REGS:33684 SSE_REGS:0 FP_TOP_SSE_REGS:33684 FP_SECOND_SSE_REGS:33684 FLOAT_SSE_REGS:33684 FLOAT_INT_REGS:33684 INT_SSE_REGS:20852 FLOAT_INT_SSE_REGS:33684 ALL_REGS:35301 MEM:12536
  Register 68 costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 INDEX_REGS:4000 LEGACY_REGS:4000 GENERAL_REGS:4000 SSE_REGS:43000 MMX_REGS:43000 FP_TOP_SSE_REGS:43000 FP_SECOND_SSE_REGS:43000 FLOAT_SSE_REGS:43000 FLOAT_INT_REGS:31000 INT_SSE_REGS:43000 FLOAT_INT_SSE_REGS:43000 ALL_REGS:43000 MEM:13000
  Register 69 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:28000 MMX_REGS:28000 FP_TOP_SSE_REGS:28000 FP_SECOND_SSE_REGS:28000 FLOAT_SSE_REGS:28000 FLOAT_INT_REGS:20000 INT_SSE_REGS:28000 FLOAT_INT_SSE_REGS:28000 ALL_REGS:28000 MEM:8000
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2000 INDEX_REGS:0 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:8000
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1248 MMX_REGS:1248 FP_TOP_SSE_REGS:1248 FP_SECOND_SSE_REGS:1248 FLOAT_SSE_REGS:1248 FLOAT_INT_REGS:864 INT_SSE_REGS:1248 FLOAT_INT_SSE_REGS:1248 ALL_REGS:1248 MEM:336
  Register 75 costs: AREG:3380 DREG:3380 CREG:3380 BREG:3380 SIREG:3380 DIREG:3380 AD_REGS:3380 Q_REGS:3380 NON_Q_REGS:4264 INDEX_REGS:3380 LEGACY_REGS:4264 GENERAL_REGS:4264 FP_TOP_REG:5460 FP_SECOND_REG:5460 FLOAT_REGS:5460 SSE_REGS:0 FP_TOP_SSE_REGS:5460 FP_SECOND_SSE_REGS:5460 FLOAT_SSE_REGS:5460 FLOAT_INT_REGS:5460 INT_SSE_REGS:3380 FLOAT_INT_SSE_REGS:5460 ALL_REGS:6552 MEM:2288
  Register 77 costs: SSE_REGS:0 FP_TOP_SSE_REGS:2652 FP_SECOND_SSE_REGS:2652 FLOAT_SSE_REGS:2652 INT_SSE_REGS:4732 FLOAT_INT_SSE_REGS:4732 ALL_REGS:4732 MEM:1144
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:104 INDEX_REGS:0 LEGACY_REGS:104 GENERAL_REGS:104 SSE_REGS:1352 MMX_REGS:1352 FP_TOP_SSE_REGS:1352 FP_SECOND_SSE_REGS:1352 FLOAT_SSE_REGS:1352 FLOAT_INT_REGS:936 INT_SSE_REGS:1352 FLOAT_INT_SSE_REGS:1352 ALL_REGS:1352 MEM:416
  Register 80 costs: AREG:3380 DREG:3380 CREG:3380 BREG:3380 SIREG:3380 DIREG:3380 AD_REGS:3380 Q_REGS:3380 NON_Q_REGS:4264 INDEX_REGS:3380 LEGACY_REGS:4264 GENERAL_REGS:4264 FP_TOP_REG:5460 FP_SECOND_REG:5460 FLOAT_REGS:5460 SSE_REGS:0 FP_TOP_SSE_REGS:5460 FP_SECOND_SSE_REGS:5460 FLOAT_SSE_REGS:5460 FLOAT_INT_REGS:5460 INT_SSE_REGS:3380 FLOAT_INT_SSE_REGS:5460 ALL_REGS:6552 MEM:2236

86 registers.

Register 59 used 3 times across 8 insns; set 2 times; pref INDEX_REGS, else GENERAL_REGS.

Register 60 used 8 times across 13 insns; set 3 times; user var; dies in 3 places; 4 bytes; pref AREG, else GENERAL_REGS.

Register 61 used 6 times across 31 insns; set 2 times; user var; 4 bytes; GENERAL_REGS or none.

Register 62 used 7 times across 124 insns; set 3 times; user var; 4 bytes; GENERAL_REGS or none.

Register 63 used 3 times across 4 insns; set 1 time; SSE_REGS or none.

Register 65 used 4 times across 32 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 66 used 3 times across 3 insns in block 0; set 1 time; user var; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 67 used 5 times across 31 insns; set 1 time; user var; SSE_REGS or none.

Register 68 used 3 times across 3 insns in block 3; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 69 used 2 times across 2 insns in block 3; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 72 used 2 times across 2 insns in block 3; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 73 used 2 times across 2 insns in block 8; set 1 time; GENERAL_REGS or none.

Register 75 used 6 times across 11 insns in block 9; set 3 times; SSE_REGS or none.

Register 77 used 3 times across 12 insns in block 9; set 1 time; 16 bytes; SSE_REGS or none.

Register 78 used 2 times across 2 insns in block 9; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 80 used 6 times across 6 insns in block 9; set 3 times; SSE_REGS or none.

11 basic blocks, 16 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 776, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [95.0%]  1 [5.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65 67

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 39, maybe hot.
Predecessors:  0 [5.0%]  (fallthru)
Successors:  9 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 62 65 67

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 738, maybe hot.
Predecessors:  0 [95.0%] 
Successors:  3 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 7 [95.0%]  (dfs_back)
Successors:  5 [50.0%]  4 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 62 63 65 67

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 5000, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 65 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 5000, maybe hot.
Predecessors:  3 [50.0%] 
Successors:  10 [5.0%]  (loop_exit) 6 [95.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 65 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 67

Basic block 6 prev 5, next 7, loop_depth 1, count 0, freq 4750, maybe hot.
Predecessors:  5 [95.0%]  (fallthru)
Successors:  7 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67

Basic block 7 prev 6, next 8, loop_depth 1, count 0, freq 9750, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 4 [100.0%] 
Successors:  3 [95.0%]  (dfs_back) 8 [5.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 487, maybe hot.
Predecessors:  7 [5.0%]  (fallthru,loop_exit)
Successors:  9 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 62 65 67

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 526, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 1 [100.0%] 
Successors:  10 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 62 65 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

Basic block 10 prev 9, next -2, loop_depth 0, count 0, freq 776, maybe hot.
Predecessors:  5 [5.0%]  (loop_exit) 9 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 66 in 4.
;; Register 68 in 0.
;; Register 69 in 1.
;; Register 72 in 0.
;; Register 73 in 0.
;; Register 75 in 22.
;; Register 77 in 23.
;; Register 78 in 0.
;; Register 80 in 21.
(note:HI 1 0 11 ("./CStatUtilities.c") 30)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
(note:HI 11 1 6 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 6 11 7 0 ./CStatUtilities.c:30 (set (reg/v/f:DI 65 [ a ])
        (reg:DI 5 di [ a ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))

(insn:HI 7 6 8 0 ./CStatUtilities.c:30 (set (reg/v:SI 66 [ n ])
        (reg:SI 4 si [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))

(insn:HI 8 7 9 0 ./CStatUtilities.c:30 (set (reg/v:DF 67 [ x ])
        (reg:DF 21 xmm0 [ x ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ x ])
        (nil)))

(note:HI 9 8 13 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 13 9 14 0 ("./CStatUtilities.c") 32)

(note:HI 14 13 15 0 NOTE_INSN_DELETED)

(note:HI 15 14 16 0 ("./CStatUtilities.c") 34)

(insn:HI 16 15 17 0 ./CStatUtilities.c:34 (parallel [
            (set (reg:CCGOC 17 flags)
                (compare:CCGOC (plus:SI (reg/v:SI 66 [ n ])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 61 [ u ])
                (plus:SI (reg/v:SI 66 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
        ]) 210 {*addsi_2} (insn_list:REG_DEP_TRUE 7 (nil))
    (expr_list:REG_DEAD (reg/v:SI 66 [ n ])
        (nil)))

(jump_insn:HI 17 16 19 0 ./CStatUtilities.c:34 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 16 (nil))
    (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65 67

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65 67
(note:HI 19 17 20 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 20 19 21 1 ./CStatUtilities.c:34 (set (reg/v:SI 62 [ l ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 21 20 127 1 ./CStatUtilities.c:34 (set (reg:DI 59 [ prephitmp.70 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn:HI 127 21 128 1 (set (pc)
        (label_ref 71)) 548 {jump} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 62 65 67

(barrier:HI 128 127 24)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 65 67
(code_label:HI 24 128 25 2 2 "" [1 uses])

(note:HI 25 24 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 26 25 120 2 ./CStatUtilities.c:34 (set (reg/v:SI 62 [ l ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67

(note:HI 120 26 27 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67
(code_label:HI 27 120 28 3 5 "" [1 uses])

(note:HI 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 29 28 30 3 ("./CStatUtilities.c") 36)

(insn:HI 30 29 31 3 ./CStatUtilities.c:36 (parallel [
            (set (reg:SI 68)
                (plus:SI (reg/v:SI 61 [ u ])
                    (reg/v:SI 62 [ l ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 31 30 32 3 ./CStatUtilities.c:36 (parallel [
            (set (reg:SI 69)
                (lshiftrt:SI (reg:SI 68)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 476 {*lshrsi3_1} (insn_list:REG_DEP_TRUE 30 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 32 31 33 3 ./CStatUtilities.c:36 (parallel [
            (set (reg/v:SI 60 [ i ])
                (plus:SI (reg:SI 69)
                    (reg:SI 68)))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 69)
            (expr_list:REG_DEAD (reg:SI 68)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(note:HI 33 32 34 3 NOTE_INSN_DELETED)

(insn:HI 34 33 35 3 ./CStatUtilities.c:36 (parallel [
            (set (reg/v:SI 60 [ i ])
                (ashiftrt:SI (reg/v:SI 60 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 441 {*ashrsi3_1_one_bit} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 35 34 36 3 ("./CStatUtilities.c") 38)

(insn:HI 36 35 37 3 ./CStatUtilities.c:38 (set (reg:DI 72 [ i ])
        (sign_extend:DI (reg/v:SI 60 [ i ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 34 (nil))
    (nil))

(insn:HI 37 36 38 3 ./CStatUtilities.c:38 (set (reg:DF 63 [ D.5144 ])
        (mem:DF (plus:DI (mult:DI (reg:DI 72 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ a ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 36 (nil))
    (expr_list:REG_DEAD (reg:DI 72 [ i ])
        (nil)))

(insn:HI 38 37 39 3 ./CStatUtilities.c:38 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 67 [ x ])
            (reg:DF 63 [ D.5144 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 37 (nil))
    (nil))

(jump_insn:HI 39 38 45 3 ./CStatUtilities.c:38 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 49)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 38 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 62 63 65 67

(note:HI 45 39 44 ("./CStatUtilities.c") 40)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 61 65 67
(note:HI 44 45 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 46 44 129 4 ./CStatUtilities.c:40 (parallel [
            (set (reg/v:SI 62 [ l ])
                (plus:SI (reg/v:SI 60 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 60 [ i ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(jump_insn:HI 129 46 130 4 (set (pc)
        (label_ref 61)) 548 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67

(barrier:HI 130 129 49)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 65 67
(code_label:HI 49 130 50 5 6 "" [1 uses])

(note:HI 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 51 50 52 5 ("./CStatUtilities.c") 42)

(insn:HI 52 51 53 5 ./CStatUtilities.c:42 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 63 [ D.5144 ])
            (reg/v:DF 67 [ x ]))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 63 [ D.5144 ])
        (nil)))

(jump_insn:HI 53 52 59 5 ./CStatUtilities.c:42 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s:DI 96)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 52 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 67

(note:HI 59 53 58 ("./CStatUtilities.c") 44)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 67
(note:HI 58 59 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 60 58 61 6 ./CStatUtilities.c:44 (parallel [
            (set (reg/v:SI 61 [ u ])
                (plus:SI (reg/v:SI 60 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 60 [ i ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67
(code_label:HI 61 60 62 7 9 "" [1 uses])

(note:HI 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 63 62 64 7 ("./CStatUtilities.c") 34)

(insn:HI 64 63 65 7 ./CStatUtilities.c:34 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 62 [ l ])
            (reg/v:SI 61 [ u ]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 65 64 121 7 ./CStatUtilities.c:34 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 27)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 64 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67

(note:HI 121 65 67 NOTE_INSN_LOOP_END)

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 65 67
(note:HI 67 121 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 69 67 70 8 ./CStatUtilities.c:34 (set (reg:DI 73 [ l.71 ])
        (sign_extend:DI (reg/v:SI 62 [ l ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 70 69 71 8 ./CStatUtilities.c:34 (parallel [
            (set (reg:DI 59 [ prephitmp.70 ])
                (ashift:DI (reg:DI 73 [ l.71 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 69 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 73 [ l.71 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 62 65 67

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 62 65 67
(code_label:HI 71 70 72 9 4 "" [1 uses])

(note:HI 72 71 73 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note:HI 73 72 74 9 ("./CStatUtilities.c") 52)

(insn:HI 74 73 75 9 ./CStatUtilities.c:52 (set (reg:DF 75)
        (mem:DF (plus:DI (reg/v/f:DI 65 [ a ])
                (reg:DI 59 [ prephitmp.70 ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DI 59 [ prephitmp.70 ])
        (nil)))

(insn:HI 75 74 76 9 ./CStatUtilities.c:52 (set (reg:DF 75)
        (minus:DF (reg:DF 75)
            (reg/v:DF 67 [ x ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 74 (nil))
    (nil))

(insn:HI 76 75 77 9 ./CStatUtilities.c:52 (set (reg:V2DF 77)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [6 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn:HI 77 76 78 9 ./CStatUtilities.c:52 (parallel [
            (set (reg:DF 75)
                (abs:DF (reg:DF 75)))
            (use (reg:V2DF 77))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 75 (insn_list:REG_DEP_TRUE 76 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 74))
                (nil)))))

(insn:HI 78 77 79 9 ./CStatUtilities.c:52 (set (reg:DI 78 [ u ])
        (sign_extend:DI (reg/v:SI 61 [ u ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 79 78 80 9 ./CStatUtilities.c:52 (set (reg:DF 80)
        (mem:DF (plus:DI (mult:DI (reg:DI 78 [ u ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 65 [ a ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 78 (nil))
    (expr_list:REG_DEAD (reg:DI 78 [ u ])
        (expr_list:REG_DEAD (reg/v/f:DI 65 [ a ])
            (nil))))

(insn:HI 80 79 82 9 ./CStatUtilities.c:52 (set (reg:DF 80)
        (minus:DF (reg:DF 80)
            (reg/v:DF 67 [ x ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 79 (nil))
    (expr_list:REG_DEAD (reg/v:DF 67 [ x ])
        (nil)))

(insn:HI 82 80 123 9 ./CStatUtilities.c:52 (parallel [
            (set (reg:DF 80)
                (abs:DF (reg:DF 80)))
            (use (reg:V2DF 77))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 80 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:V2DF 77)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 79))
                    (nil))))))

(insn:HI 123 82 124 9 ./CStatUtilities.c:52 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 75)
            (reg:DF 80))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 77 (insn_list:REG_DEP_TRUE 82 (nil)))
    (expr_list:REG_DEAD (reg:DF 80)
        (expr_list:REG_DEAD (reg:DF 75)
            (nil))))

(insn:HI 124 123 96 9 ./CStatUtilities.c:52 (set (reg/v:SI 60 [ i ])
        (if_then_else:SI (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (reg/v:SI 62 [ l ])
            (reg/v:SI 61 [ u ]))) 744 {*movsicc_noc} (insn_list:REG_DEP_TRUE 123 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 62 [ l ])
            (expr_list:REG_DEAD (reg/v:SI 61 [ u ])
                (nil)))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
(code_label:HI 96 124 97 10 10 "" [1 uses])

(note:HI 97 96 101 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 101 97 102 10 NOTE_INSN_FUNCTION_END)

(note:HI 102 101 104 10 ("./CStatUtilities.c") 60)

(insn:HI 104 102 110 10 ./CStatUtilities.c:60 (set (reg/i:SI 0 ax [ <result> ])
        (reg/v:SI 60 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 60 [ i ])
        (nil)))

(insn:HI 110 104 0 10 ./CStatUtilities.c:60 (use (reg/i:SI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 104 (nil))
    (nil))
;; End of basic block 10, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function min (min)



Pass 0

  Register 61 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:44590 MMX_REGS:44590 FP_TOP_SSE_REGS:44590 FP_SECOND_SSE_REGS:44590 FLOAT_SSE_REGS:44590 FLOAT_INT_REGS:30870 INT_SSE_REGS:44590 FLOAT_INT_SSE_REGS:44590 ALL_REGS:44590 MEM:12074
  Register 64 costs: AREG:22997 DREG:22997 CREG:22997 BREG:22997 SIREG:22997 DIREG:22997 AD_REGS:22997 Q_REGS:22997 NON_Q_REGS:28862 INDEX_REGS:22997 LEGACY_REGS:28862 GENERAL_REGS:28862 FP_TOP_REG:37149 FP_SECOND_REG:37149 FLOAT_REGS:37149 SSE_REGS:0 FP_TOP_SSE_REGS:37149 FP_SECOND_SSE_REGS:37149 FLOAT_SSE_REGS:37149 FLOAT_INT_REGS:37149 INT_SSE_REGS:22997 FLOAT_INT_SSE_REGS:37149 ALL_REGS:44394 MEM:14598
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 FP_TOP_SSE_REGS:4186 FP_SECOND_SSE_REGS:4186 FLOAT_SSE_REGS:4186 FLOAT_INT_REGS:2898 INT_SSE_REGS:4186 FLOAT_INT_SSE_REGS:4186 ALL_REGS:4186 MEM:1188
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5967 MMX_REGS:5967 INT_SSE_REGS:5967 MEM:1699
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6942 MMX_REGS:6942 FP_TOP_SSE_REGS:6942 FP_SECOND_SSE_REGS:6942 FLOAT_SSE_REGS:6942 FLOAT_INT_REGS:4806 INT_SSE_REGS:6942 FLOAT_INT_SSE_REGS:6942 ALL_REGS:6942 MEM:1602
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3562 MMX_REGS:3562 FP_TOP_SSE_REGS:3562 FP_SECOND_SSE_REGS:3562 FLOAT_SSE_REGS:3562 FLOAT_INT_REGS:2466 INT_SSE_REGS:3562 FLOAT_INT_SSE_REGS:3562 ALL_REGS:3562 MEM:959
  Register 76 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 81 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 86 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 91 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 96 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 101 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24479 MMX_REGS:24479 FP_TOP_SSE_REGS:24479 FP_SECOND_SSE_REGS:24479 FLOAT_SSE_REGS:24479 FLOAT_INT_REGS:16947 INT_SSE_REGS:24479 FLOAT_INT_SSE_REGS:24479 ALL_REGS:24479 MEM:5886
  Register 110 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 112 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 114 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 116 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 118 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 120 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 122 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200

  Register 61 pref SSE_REGS or none
  Register 62 pref GENERAL_REGS or none
  Register 64 pref SSE_REGS or none
  Register 66 pref DIREG, else GENERAL_REGS
  Register 67 pref SIREG, else GENERAL_REGS
  Register 69 pref GENERAL_REGS or none
  Register 71 pref GENERAL_REGS or none
  Register 72 pref GENERAL_REGS or none
  Register 76 pref SSE_REGS or none
  Register 81 pref SSE_REGS or none
  Register 86 pref SSE_REGS or none
  Register 91 pref SSE_REGS or none
  Register 96 pref SSE_REGS or none
  Register 101 pref SSE_REGS or none
  Register 104 pref GENERAL_REGS or none
  Register 110 pref SSE_REGS or none
  Register 112 pref SSE_REGS or none
  Register 114 pref SSE_REGS or none
  Register 116 pref SSE_REGS or none
  Register 118 pref SSE_REGS or none
  Register 120 pref SSE_REGS or none
  Register 122 pref SSE_REGS or none


Pass 1

  Register 61 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-100 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:44590 MMX_REGS:44590 FP_TOP_SSE_REGS:44590 FP_SECOND_SSE_REGS:44590 FLOAT_SSE_REGS:44590 FLOAT_INT_REGS:30870 INT_SSE_REGS:44590 FLOAT_INT_SSE_REGS:44590 ALL_REGS:44590 MEM:12074
  Register 64 costs: AREG:22997 DREG:22997 CREG:22997 BREG:22997 SIREG:22997 DIREG:22997 AD_REGS:22997 Q_REGS:22997 NON_Q_REGS:28862 INDEX_REGS:22997 LEGACY_REGS:28862 GENERAL_REGS:28862 FP_TOP_REG:37149 FP_SECOND_REG:37149 FLOAT_REGS:37149 SSE_REGS:0 FP_TOP_SSE_REGS:37149 FP_SECOND_SSE_REGS:37149 FLOAT_SSE_REGS:37149 FLOAT_INT_REGS:37149 INT_SSE_REGS:22997 FLOAT_INT_SSE_REGS:37149 ALL_REGS:44394 MEM:14598
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 FP_TOP_SSE_REGS:4186 FP_SECOND_SSE_REGS:4186 FLOAT_SSE_REGS:4186 FLOAT_INT_REGS:2898 INT_SSE_REGS:4186 FLOAT_INT_SSE_REGS:4186 ALL_REGS:4186 MEM:1188
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5967 MMX_REGS:5967 INT_SSE_REGS:5967 MEM:1699
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6942 MMX_REGS:6942 FP_TOP_SSE_REGS:6942 FP_SECOND_SSE_REGS:6942 FLOAT_SSE_REGS:6942 FLOAT_INT_REGS:4806 INT_SSE_REGS:6942 FLOAT_INT_SSE_REGS:6942 ALL_REGS:6942 MEM:1602
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3562 MMX_REGS:3562 FP_TOP_SSE_REGS:3562 FP_SECOND_SSE_REGS:3562 FLOAT_SSE_REGS:3562 FLOAT_INT_REGS:2466 INT_SSE_REGS:3562 FLOAT_INT_SSE_REGS:3562 ALL_REGS:3562 MEM:959
  Register 76 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 81 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 86 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 91 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 96 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 101 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24479 MMX_REGS:24479 FP_TOP_SSE_REGS:24479 FP_SECOND_SSE_REGS:24479 FLOAT_SSE_REGS:24479 FLOAT_INT_REGS:16947 INT_SSE_REGS:24479 FLOAT_INT_SSE_REGS:24479 ALL_REGS:24479 MEM:5886
  Register 110 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 112 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 114 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 116 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 118 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 120 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 122 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200

  Register 62 pref DIREG, else GENERAL_REGS
124 registers.

Register 61 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 62 used 32 times across 77 insns; set 9 times; dies in 0 places; pref DIREG, else GENERAL_REGS; pointer.

Register 64 used 20 times across 70 insns; set 10 times; user var; dies in 2 places; SSE_REGS or none.

Register 66 used 3 times across 6 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 67 used 4 times across 73 insns; set 1 time; user var; dies in 0 places; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 69 used 3 times across 2 insns in block 4; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 71 used 7 times across 17 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 72 used 2 times across 2 insns in block 2; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 76 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 81 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 86 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 91 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 96 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 101 used 4 times across 7 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 104 used 18 times across 152 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 110 used 2 times across 3 insns in block 7; set 1 time; user var; SSE_REGS or none.

Register 112 used 2 times across 3 insns in block 13; set 1 time; user var; SSE_REGS or none.

Register 114 used 2 times across 3 insns in block 14; set 1 time; user var; SSE_REGS or none.

Register 116 used 2 times across 3 insns in block 15; set 1 time; user var; SSE_REGS or none.

Register 118 used 2 times across 3 insns in block 16; set 1 time; user var; SSE_REGS or none.

Register 120 used 2 times across 3 insns in block 17; set 1 time; user var; SSE_REGS or none.

Register 122 used 2 times across 3 insns in block 18; set 1 time; user var; SSE_REGS or none.

20 basic blocks, 30 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [90.0%]  1 [10.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 67

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  0 [10.0%]  (fallthru)
Successors:  6 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 1370, maybe hot.
Predecessors:  18 [100.0%]  19 [100.0%]  (dfs_back) 5 [100.0%]  7 [14.3%] 
Successors:  19 [90.0%]  3 [10.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Invalid sum of incoming frequencies 2501, should be 1370

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  2 [10.0%]  (fallthru,loop_exit)
Successors:  6 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
Invalid sum of incoming frequencies 137, should be 1000

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  7 [87.5%]  5 [12.5%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 125, maybe hot.
Predecessors:  4 [12.5%]  (fallthru)
Successors:  2 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  1 [100.0%]  3 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  4 [87.5%] 
Successors:  8 [85.7%]  (fallthru) 2 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
Invalid sum of incoming frequencies 875, should be 1000

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  7 [85.7%]  (fallthru)
Successors:  9 [83.3%]  (fallthru) 18 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
Invalid sum of incoming frequencies 857, should be 720

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  8 [83.3%]  (fallthru)
Successors:  10 [80.0%]  (fallthru) 17 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  9 [80.0%]  (fallthru)
Successors:  11 [75.0%]  (fallthru) 16 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  10 [75.0%]  (fallthru)
Successors:  12 [66.7%]  (fallthru) 15 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [66.7%]  (fallthru)
Successors:  13 [50.0%]  (fallthru) 14 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Invalid sum of incoming frequencies 300, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Invalid sum of incoming frequencies 450, should be 1000

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 12 [50.0%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Invalid sum of incoming frequencies 1450, should be 1000

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 11 [33.3%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Invalid sum of incoming frequencies 1150, should be 1000

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 10 [25.0%] 
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Invalid sum of incoming frequencies 1150, should be 1000

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 9 [20.0%] 
Successors:  18 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Invalid sum of incoming frequencies 1135, should be 1000

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 8 [16.7%] 
Successors:  2 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Invalid sum of incoming frequencies 1120, should be 1000

Basic block 19 prev 18, next -2, loop_depth 1, count 0, freq 1233, maybe hot.
Predecessors:  2 [90.0%] 
Successors:  2 [100.0%]  (dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

;; Register 61 in 21.
;; Register 69 in 0.
;; Register 72 in 0.
;; Register 76 in 22.
;; Register 81 in 21.
;; Register 86 in 22.
;; Register 91 in 21.
;; Register 96 in 22.
;; Register 101 in 21.
;; Register 110 in 21.
;; Register 112 in 21.
;; Register 114 in 21.
;; Register 116 in 21.
;; Register 118 in 21.
;; Register 120 in 21.
;; Register 122 in 21.
(note:HI 1 0 10 ("./CStatUtilities.c") 65)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 10 1 6 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 6 10 7 0 ./CStatUtilities.c:65 (set (reg/v/f:DI 66 [ x ])
        (reg:DI 5 di [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))

(insn:HI 7 6 8 0 ./CStatUtilities.c:65 (set (reg/v:SI 67 [ n ])
        (reg:SI 4 si [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))

(note:HI 8 7 12 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 12 8 13 0 ("./CStatUtilities.c") 66)

(insn:HI 13 12 14 0 ./CStatUtilities.c:66 (set (reg/v:DF 64 [ minEl ])
        (mem:DF (reg/v/f:DI 66 [ x ]) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 6 (nil))
    (nil))

(note:HI 14 13 15 0 ("./CStatUtilities.c") 69)

(insn:HI 15 14 16 0 ./CStatUtilities.c:69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 67 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 7 (nil))
    (nil))

(jump_insn:HI 16 15 66 0 ./CStatUtilities.c:69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 67

(note:HI 66 16 364 NOTE_INSN_LOOP_BEG)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
(note:HI 364 66 365 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 365 364 366 1 (set (pc)
        (label_ref 39)) 548 {jump} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

(barrier:HI 366 365 33)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
(code_label:HI 33 366 34 2 30 "" [4 uses])

(note:HI 34 33 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 35 34 348 2 ("./CStatUtilities.c") 69)

(insn:HI 348 35 37 2 ./CStatUtilities.c:69 (parallel [
            (set (reg:SI 72)
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 37 348 38 2 ./CStatUtilities.c:69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 72)
            (reg/v:SI 67 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 348 (nil))
    (expr_list:REG_DEAD (reg:SI 72)
        (nil)))

(jump_insn:HI 38 37 67 2 ./CStatUtilities.c:69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 37 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

(note:HI 67 38 69 NOTE_INSN_LOOP_END)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
(note:HI 69 67 370 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 370 69 371 3 (set (pc)
        (label_ref 39)) 548 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

(barrier:HI 371 370 44)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 67
(code_label:HI 44 371 45 4 25 "" [1 uses])

(note:HI 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 46 45 47 4 ./CStatUtilities.c:69 (set (reg/f:DI 62 [ ivtmp.105 ])
        (reg/v/f:DI 66 [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 66 [ x ])
        (nil)))

(insn:HI 47 46 70 4 ./CStatUtilities.c:69 (set (reg/v:SI 104 [ i ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 70 47 71 4 NOTE_INSN_DELETED)

(insn:HI 71 70 72 4 (parallel [
            (set (reg:SI 69)
                (plus:SI (reg/v:SI 67 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 72 71 226 4 NOTE_INSN_DELETED)

(insn:HI 226 72 227 4 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 69)
                        (const_int 7 [0x7]))
                    (const_int 0 [0x0])))
            (set (reg:SI 71)
                (and:SI (reg:SI 69)
                    (const_int 7 [0x7])))
        ]) 301 {*andsi_2} (insn_list:REG_DEP_TRUE 71 (nil))
    (expr_list:REG_DEAD (reg:SI 69)
        (nil)))

(jump_insn:HI 227 226 373 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 372)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 226 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
(note:HI 373 227 374 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 374 373 375 5 (set (pc)
        (label_ref:DI 33)) 548 {jump} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

(barrier:HI 375 374 50)

(note:HI 50 375 51 NOTE_INSN_FUNCTION_END)

(note:HI 51 50 39 ("./CStatUtilities.c") 74)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
(code_label:HI 39 51 40 6 26 "" [2 uses])

(note:HI 40 39 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 53 40 59 6 ./CStatUtilities.c:74 (set (reg/i:DF 21 xmm0 [ <result> ])
        (reg/v:DF 64 [ minEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 64 [ minEl ])
        (nil)))

(insn:HI 59 53 372 6 ./CStatUtilities.c:74 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 53 (nil))
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
(code_label:HI 372 59 79 7 54 "" [1 uses])

(note:HI 79 372 75 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 75 79 76 7 ("./CStatUtilities.c") 69)

(insn:HI 76 75 82 7 ./CStatUtilities.c:69 (parallel [
            (set (reg/v:SI 104 [ i ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 82 76 83 7 ("./CStatUtilities.c") 70)

(insn:HI 83 82 85 7 ./CStatUtilities.c:70 (set (reg/v:DF 110 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 85 83 86 7 NOTE_INSN_DELETED)

(insn:HI 86 85 87 7 ./CStatUtilities.c:70 (parallel [
            (set (reg/f:DI 62 [ ivtmp.105 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 87 86 221 7 ./CStatUtilities.c:70 (set (reg/v:DF 64 [ minEl ])
        (unspec:DF [
                (reg/v:DF 110 [ minEl.106 ])
                (reg/v:DF 64 [ minEl ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 83 (nil))
    (expr_list:REG_DEAD (reg/v:DF 110 [ minEl.106 ])
        (nil)))

(insn:HI 221 87 222 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 222 221 201 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 33)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 221 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
(note:HI 201 222 199 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 199 201 200 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 200 199 179 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 380)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 199 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
(note:HI 179 200 177 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 177 179 178 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 178 177 157 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 381)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 177 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
(note:HI 157 178 155 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 155 157 156 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 156 155 135 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 382)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 155 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
(note:HI 135 156 133 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 133 135 134 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 134 133 113 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 383)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 133 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 71 104
(note:HI 113 134 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 111 113 112 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 71)
        (nil)))

(jump_insn:HI 112 111 97 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 384)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 111 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
(note:HI 97 112 93 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 93 97 94 13 ("./CStatUtilities.c") 69)

(insn:HI 94 93 100 13 ./CStatUtilities.c:69 (parallel [
            (set (reg/v:SI 104 [ i ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 100 94 101 13 ("./CStatUtilities.c") 70)

(insn:HI 101 100 103 13 ./CStatUtilities.c:70 (set (reg/v:DF 112 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 103 101 104 13 NOTE_INSN_DELETED)

(insn:HI 104 103 105 13 ./CStatUtilities.c:70 (parallel [
            (set (reg/f:DI 62 [ ivtmp.105 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 105 104 384 13 ./CStatUtilities.c:70 (set (reg/v:DF 64 [ minEl ])
        (unspec:DF [
                (reg/v:DF 112 [ minEl.106 ])
                (reg/v:DF 64 [ minEl ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 101 (nil))
    (expr_list:REG_DEAD (reg/v:DF 112 [ minEl.106 ])
        (nil)))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
(code_label:HI 384 105 119 14 59 "" [1 uses])

(note:HI 119 384 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 115 119 116 14 ("./CStatUtilities.c") 69)

(insn:HI 116 115 122 14 ./CStatUtilities.c:69 (parallel [
            (set (reg/v:SI 104 [ i ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 122 116 123 14 ("./CStatUtilities.c") 70)

(insn:HI 123 122 125 14 ./CStatUtilities.c:70 (set (reg/v:DF 114 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 125 123 126 14 NOTE_INSN_DELETED)

(insn:HI 126 125 127 14 ./CStatUtilities.c:70 (parallel [
            (set (reg/f:DI 62 [ ivtmp.105 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 127 126 383 14 ./CStatUtilities.c:70 (set (reg/v:DF 64 [ minEl ])
        (unspec:DF [
                (reg/v:DF 114 [ minEl.106 ])
                (reg/v:DF 64 [ minEl ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 123 (nil))
    (expr_list:REG_DEAD (reg/v:DF 114 [ minEl.106 ])
        (nil)))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
(code_label:HI 383 127 141 15 58 "" [1 uses])

(note:HI 141 383 137 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 137 141 138 15 ("./CStatUtilities.c") 69)

(insn:HI 138 137 144 15 ./CStatUtilities.c:69 (parallel [
            (set (reg/v:SI 104 [ i ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 144 138 145 15 ("./CStatUtilities.c") 70)

(insn:HI 145 144 147 15 ./CStatUtilities.c:70 (set (reg/v:DF 116 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 147 145 148 15 NOTE_INSN_DELETED)

(insn:HI 148 147 149 15 ./CStatUtilities.c:70 (parallel [
            (set (reg/f:DI 62 [ ivtmp.105 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 149 148 382 15 ./CStatUtilities.c:70 (set (reg/v:DF 64 [ minEl ])
        (unspec:DF [
                (reg/v:DF 116 [ minEl.106 ])
                (reg/v:DF 64 [ minEl ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 145 (nil))
    (expr_list:REG_DEAD (reg/v:DF 116 [ minEl.106 ])
        (nil)))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
(code_label:HI 382 149 163 16 57 "" [1 uses])

(note:HI 163 382 159 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 159 163 160 16 ("./CStatUtilities.c") 69)

(insn:HI 160 159 166 16 ./CStatUtilities.c:69 (parallel [
            (set (reg/v:SI 104 [ i ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 166 160 167 16 ("./CStatUtilities.c") 70)

(insn:HI 167 166 169 16 ./CStatUtilities.c:70 (set (reg/v:DF 118 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 169 167 170 16 NOTE_INSN_DELETED)

(insn:HI 170 169 171 16 ./CStatUtilities.c:70 (parallel [
            (set (reg/f:DI 62 [ ivtmp.105 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 171 170 381 16 ./CStatUtilities.c:70 (set (reg/v:DF 64 [ minEl ])
        (unspec:DF [
                (reg/v:DF 118 [ minEl.106 ])
                (reg/v:DF 64 [ minEl ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 167 (nil))
    (expr_list:REG_DEAD (reg/v:DF 118 [ minEl.106 ])
        (nil)))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
(code_label:HI 381 171 185 17 56 "" [1 uses])

(note:HI 185 381 181 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 181 185 182 17 ("./CStatUtilities.c") 69)

(insn:HI 182 181 188 17 ./CStatUtilities.c:69 (parallel [
            (set (reg/v:SI 104 [ i ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 188 182 189 17 ("./CStatUtilities.c") 70)

(insn:HI 189 188 191 17 ./CStatUtilities.c:70 (set (reg/v:DF 120 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 191 189 192 17 NOTE_INSN_DELETED)

(insn:HI 192 191 193 17 ./CStatUtilities.c:70 (parallel [
            (set (reg/f:DI 62 [ ivtmp.105 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 193 192 380 17 ./CStatUtilities.c:70 (set (reg/v:DF 64 [ minEl ])
        (unspec:DF [
                (reg/v:DF 120 [ minEl.106 ])
                (reg/v:DF 64 [ minEl ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 189 (nil))
    (expr_list:REG_DEAD (reg/v:DF 120 [ minEl.106 ])
        (nil)))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
(code_label:HI 380 193 207 18 55 "" [1 uses])

(note:HI 207 380 203 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 203 207 204 18 ("./CStatUtilities.c") 69)

(insn:HI 204 203 210 18 ./CStatUtilities.c:69 (parallel [
            (set (reg/v:SI 104 [ i ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 210 204 211 18 ("./CStatUtilities.c") 70)

(insn:HI 211 210 213 18 ./CStatUtilities.c:70 (set (reg/v:DF 122 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 213 211 214 18 NOTE_INSN_DELETED)

(insn:HI 214 213 215 18 ./CStatUtilities.c:70 (parallel [
            (set (reg/f:DI 62 [ ivtmp.105 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 215 214 376 18 ./CStatUtilities.c:70 (set (reg/v:DF 64 [ minEl ])
        (unspec:DF [
                (reg/v:DF 122 [ minEl.106 ])
                (reg/v:DF 64 [ minEl ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 211 (nil))
    (expr_list:REG_DEAD (reg/v:DF 122 [ minEl.106 ])
        (nil)))

(jump_insn:HI 376 215 377 18 (set (pc)
        (label_ref 33)) 548 {jump} (nil)
    (nil))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

(barrier:HI 377 376 20)

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104
(code_label:HI 20 377 21 19 27 "" [1 uses])

(note:HI 21 20 22 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 22 21 23 19 ("./CStatUtilities.c") 70)

(insn:HI 23 22 68 19 ./CStatUtilities.c:70 (set (reg/v:DF 61 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 68 23 349 19 ./CStatUtilities.c:70 (set (reg/v:DF 61 [ minEl.106 ])
        (unspec:DF [
                (reg/v:DF 61 [ minEl.106 ])
                (reg/v:DF 64 [ minEl ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 23 (nil))
    (expr_list:REG_DEAD (reg/v:DF 64 [ minEl ])
        (nil)))

(note:HI 349 68 230 19 NOTE_INSN_DELETED)

(note:HI 230 349 237 19 ("./CStatUtilities.c") 69)

(note:HI 237 230 238 19 ("./CStatUtilities.c") 70)

(insn:HI 238 237 240 19 ./CStatUtilities.c:70 (set (reg/v:DF 76 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 16 [0x10])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 240 238 241 19 ./CStatUtilities.c:70 (set (reg/v:DF 76 [ minEl.106 ])
        (unspec:DF [
                (reg/v:DF 76 [ minEl.106 ])
                (reg/v:DF 61 [ minEl.106 ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 68 (insn_list:REG_DEP_TRUE 238 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 61 [ minEl.106 ])
        (nil)))

(note:HI 241 240 247 19 NOTE_INSN_DELETED)

(note:HI 247 241 254 19 ("./CStatUtilities.c") 69)

(note:HI 254 247 255 19 ("./CStatUtilities.c") 70)

(insn:HI 255 254 257 19 ./CStatUtilities.c:70 (set (reg/v:DF 81 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 24 [0x18])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 257 255 258 19 ./CStatUtilities.c:70 (set (reg/v:DF 81 [ minEl.106 ])
        (unspec:DF [
                (reg/v:DF 81 [ minEl.106 ])
                (reg/v:DF 76 [ minEl.106 ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 240 (insn_list:REG_DEP_TRUE 255 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 76 [ minEl.106 ])
        (nil)))

(note:HI 258 257 264 19 NOTE_INSN_DELETED)

(note:HI 264 258 271 19 ("./CStatUtilities.c") 69)

(note:HI 271 264 272 19 ("./CStatUtilities.c") 70)

(insn:HI 272 271 274 19 ./CStatUtilities.c:70 (set (reg/v:DF 86 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 32 [0x20])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 274 272 275 19 ./CStatUtilities.c:70 (set (reg/v:DF 86 [ minEl.106 ])
        (unspec:DF [
                (reg/v:DF 86 [ minEl.106 ])
                (reg/v:DF 81 [ minEl.106 ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 257 (insn_list:REG_DEP_TRUE 272 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 81 [ minEl.106 ])
        (nil)))

(note:HI 275 274 281 19 NOTE_INSN_DELETED)

(note:HI 281 275 288 19 ("./CStatUtilities.c") 69)

(note:HI 288 281 289 19 ("./CStatUtilities.c") 70)

(insn:HI 289 288 291 19 ./CStatUtilities.c:70 (set (reg/v:DF 91 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 40 [0x28])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 291 289 292 19 ./CStatUtilities.c:70 (set (reg/v:DF 91 [ minEl.106 ])
        (unspec:DF [
                (reg/v:DF 91 [ minEl.106 ])
                (reg/v:DF 86 [ minEl.106 ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 274 (insn_list:REG_DEP_TRUE 289 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 86 [ minEl.106 ])
        (nil)))

(note:HI 292 291 298 19 NOTE_INSN_DELETED)

(note:HI 298 292 305 19 ("./CStatUtilities.c") 69)

(note:HI 305 298 306 19 ("./CStatUtilities.c") 70)

(insn:HI 306 305 308 19 ./CStatUtilities.c:70 (set (reg/v:DF 96 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 48 [0x30])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 308 306 309 19 ./CStatUtilities.c:70 (set (reg/v:DF 96 [ minEl.106 ])
        (unspec:DF [
                (reg/v:DF 96 [ minEl.106 ])
                (reg/v:DF 91 [ minEl.106 ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 291 (insn_list:REG_DEP_TRUE 306 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 91 [ minEl.106 ])
        (nil)))

(note:HI 309 308 315 19 NOTE_INSN_DELETED)

(note:HI 315 309 322 19 ("./CStatUtilities.c") 69)

(note:HI 322 315 323 19 ("./CStatUtilities.c") 70)

(insn:HI 323 322 325 19 ./CStatUtilities.c:70 (set (reg/v:DF 101 [ minEl.106 ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 56 [0x38])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 325 323 326 19 ./CStatUtilities.c:70 (set (reg/v:DF 101 [ minEl.106 ])
        (unspec:DF [
                (reg/v:DF 101 [ minEl.106 ])
                (reg/v:DF 96 [ minEl.106 ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 308 (insn_list:REG_DEP_TRUE 323 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 96 [ minEl.106 ])
        (nil)))

(note:HI 326 325 332 19 NOTE_INSN_DELETED)

(note:HI 332 326 333 19 ("./CStatUtilities.c") 69)

(insn:HI 333 332 339 19 ./CStatUtilities.c:69 (parallel [
            (set (reg/v:SI 104 [ i ])
                (plus:SI (reg/v:SI 104 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 339 333 340 19 ("./CStatUtilities.c") 70)

(insn:HI 340 339 342 19 ./CStatUtilities.c:70 (set (reg/v:DF 64 [ minEl ])
        (mem:DF (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                (const_int 64 [0x40])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 342 340 343 19 NOTE_INSN_DELETED)

(insn:HI 343 342 344 19 ./CStatUtilities.c:70 (parallel [
            (set (reg/f:DI 62 [ ivtmp.105 ])
                (plus:DI (reg/f:DI 62 [ ivtmp.105 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 344 343 378 19 ./CStatUtilities.c:70 (set (reg/v:DF 64 [ minEl ])
        (unspec:DF [
                (reg/v:DF 64 [ minEl ])
                (reg/v:DF 101 [ minEl.106 ])
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 340 (insn_list:REG_DEP_TRUE 325 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 101 [ minEl.106 ])
        (nil)))

(jump_insn:HI 378 344 379 19 (set (pc)
        (label_ref 33)) 548 {jump} (nil)
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 67 104

(barrier:HI 379 378 0)


;; Function max (max)



Pass 0

  Register 59 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:44590 MMX_REGS:44590 FP_TOP_SSE_REGS:44590 FP_SECOND_SSE_REGS:44590 FLOAT_SSE_REGS:44590 FLOAT_INT_REGS:30870 INT_SSE_REGS:44590 FLOAT_INT_SSE_REGS:44590 ALL_REGS:44590 MEM:12074
  Register 62 costs: AREG:22997 DREG:22997 CREG:22997 BREG:22997 SIREG:22997 DIREG:22997 AD_REGS:22997 Q_REGS:22997 NON_Q_REGS:28862 INDEX_REGS:22997 LEGACY_REGS:28862 GENERAL_REGS:28862 FP_TOP_REG:37149 FP_SECOND_REG:37149 FLOAT_REGS:37149 SSE_REGS:0 FP_TOP_SSE_REGS:37149 FP_SECOND_SSE_REGS:37149 FLOAT_SSE_REGS:37149 FLOAT_INT_REGS:37149 INT_SSE_REGS:22997 FLOAT_INT_SSE_REGS:37149 ALL_REGS:44394 MEM:14598
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 FP_TOP_SSE_REGS:4186 FP_SECOND_SSE_REGS:4186 FLOAT_SSE_REGS:4186 FLOAT_INT_REGS:2898 INT_SSE_REGS:4186 FLOAT_INT_SSE_REGS:4186 ALL_REGS:4186 MEM:1188
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5967 MMX_REGS:5967 INT_SSE_REGS:5967 MEM:1699
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6942 MMX_REGS:6942 FP_TOP_SSE_REGS:6942 FP_SECOND_SSE_REGS:6942 FLOAT_SSE_REGS:6942 FLOAT_INT_REGS:4806 INT_SSE_REGS:6942 FLOAT_INT_SSE_REGS:6942 ALL_REGS:6942 MEM:1602
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3562 MMX_REGS:3562 FP_TOP_SSE_REGS:3562 FP_SECOND_SSE_REGS:3562 FLOAT_SSE_REGS:3562 FLOAT_INT_REGS:2466 INT_SSE_REGS:3562 FLOAT_INT_SSE_REGS:3562 ALL_REGS:3562 MEM:959
  Register 75 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 80 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 85 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 90 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 95 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 100 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24479 MMX_REGS:24479 FP_TOP_SSE_REGS:24479 FP_SECOND_SSE_REGS:24479 FLOAT_SSE_REGS:24479 FLOAT_INT_REGS:16947 INT_SSE_REGS:24479 FLOAT_INT_SSE_REGS:24479 ALL_REGS:24479 MEM:5886
  Register 108 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 110 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 112 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 114 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 116 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 118 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 120 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200

  Register 59 pref SSE_REGS or none
  Register 60 pref GENERAL_REGS or none
  Register 62 pref SSE_REGS or none
  Register 64 pref DIREG, else GENERAL_REGS
  Register 65 pref SIREG, else GENERAL_REGS
  Register 67 pref GENERAL_REGS or none
  Register 69 pref GENERAL_REGS or none
  Register 71 pref GENERAL_REGS or none
  Register 75 pref SSE_REGS or none
  Register 80 pref SSE_REGS or none
  Register 85 pref SSE_REGS or none
  Register 90 pref SSE_REGS or none
  Register 95 pref SSE_REGS or none
  Register 100 pref SSE_REGS or none
  Register 102 pref GENERAL_REGS or none
  Register 108 pref SSE_REGS or none
  Register 110 pref SSE_REGS or none
  Register 112 pref SSE_REGS or none
  Register 114 pref SSE_REGS or none
  Register 116 pref SSE_REGS or none
  Register 118 pref SSE_REGS or none
  Register 120 pref SSE_REGS or none


Pass 1

  Register 59 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-100 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:44590 MMX_REGS:44590 FP_TOP_SSE_REGS:44590 FP_SECOND_SSE_REGS:44590 FLOAT_SSE_REGS:44590 FLOAT_INT_REGS:30870 INT_SSE_REGS:44590 FLOAT_INT_SSE_REGS:44590 ALL_REGS:44590 MEM:12074
  Register 62 costs: AREG:22997 DREG:22997 CREG:22997 BREG:22997 SIREG:22997 DIREG:22997 AD_REGS:22997 Q_REGS:22997 NON_Q_REGS:28862 INDEX_REGS:22997 LEGACY_REGS:28862 GENERAL_REGS:28862 FP_TOP_REG:37149 FP_SECOND_REG:37149 FLOAT_REGS:37149 SSE_REGS:0 FP_TOP_SSE_REGS:37149 FP_SECOND_SSE_REGS:37149 FLOAT_SSE_REGS:37149 FLOAT_INT_REGS:37149 INT_SSE_REGS:22997 FLOAT_INT_SSE_REGS:37149 ALL_REGS:44394 MEM:14598
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 FP_TOP_SSE_REGS:4186 FP_SECOND_SSE_REGS:4186 FLOAT_SSE_REGS:4186 FLOAT_INT_REGS:2898 INT_SSE_REGS:4186 FLOAT_INT_SSE_REGS:4186 ALL_REGS:4186 MEM:1188
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5967 MMX_REGS:5967 INT_SSE_REGS:5967 MEM:1699
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6942 MMX_REGS:6942 FP_TOP_SSE_REGS:6942 FP_SECOND_SSE_REGS:6942 FLOAT_SSE_REGS:6942 FLOAT_INT_REGS:4806 INT_SSE_REGS:6942 FLOAT_INT_SSE_REGS:6942 ALL_REGS:6942 MEM:1602
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3562 MMX_REGS:3562 FP_TOP_SSE_REGS:3562 FP_SECOND_SSE_REGS:3562 FLOAT_SSE_REGS:3562 FLOAT_INT_REGS:2466 INT_SSE_REGS:3562 FLOAT_INT_SSE_REGS:3562 ALL_REGS:3562 MEM:959
  Register 75 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 80 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 85 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 90 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 95 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 100 costs: AREG:4797 DREG:4797 CREG:4797 BREG:4797 SIREG:4797 DIREG:4797 AD_REGS:4797 Q_REGS:4797 NON_Q_REGS:6888 INDEX_REGS:4797 LEGACY_REGS:6888 GENERAL_REGS:6888 FP_TOP_REG:7749 FP_SECOND_REG:7749 FLOAT_REGS:7749 SSE_REGS:0 FP_TOP_SSE_REGS:7749 FP_SECOND_SSE_REGS:7749 FLOAT_SSE_REGS:7749 FLOAT_INT_REGS:7749 INT_SSE_REGS:4797 FLOAT_INT_SSE_REGS:7749 ALL_REGS:10332 MEM:3321
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24479 MMX_REGS:24479 FP_TOP_SSE_REGS:24479 FP_SECOND_SSE_REGS:24479 FLOAT_SSE_REGS:24479 FLOAT_INT_REGS:16947 INT_SSE_REGS:24479 FLOAT_INT_SSE_REGS:24479 ALL_REGS:24479 MEM:5886
  Register 108 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 110 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 112 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 114 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 116 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 118 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200
  Register 120 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1200

  Register 60 pref DIREG, else GENERAL_REGS
122 registers.

Register 59 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 60 used 32 times across 77 insns; set 9 times; dies in 0 places; pref DIREG, else GENERAL_REGS; pointer.

Register 62 used 20 times across 70 insns; set 10 times; user var; dies in 2 places; SSE_REGS or none.

Register 64 used 3 times across 6 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 65 used 4 times across 73 insns; set 1 time; user var; dies in 0 places; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 67 used 3 times across 2 insns in block 4; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 69 used 7 times across 17 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 71 used 2 times across 2 insns in block 2; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 75 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 80 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 85 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 90 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 95 used 4 times across 5 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 100 used 4 times across 7 insns in block 19; set 2 times; user var; SSE_REGS or none.

Register 102 used 18 times across 152 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 108 used 2 times across 3 insns in block 7; set 1 time; user var; SSE_REGS or none.

Register 110 used 2 times across 3 insns in block 13; set 1 time; user var; SSE_REGS or none.

Register 112 used 2 times across 3 insns in block 14; set 1 time; user var; SSE_REGS or none.

Register 114 used 2 times across 3 insns in block 15; set 1 time; user var; SSE_REGS or none.

Register 116 used 2 times across 3 insns in block 16; set 1 time; user var; SSE_REGS or none.

Register 118 used 2 times across 3 insns in block 17; set 1 time; user var; SSE_REGS or none.

Register 120 used 2 times across 3 insns in block 18; set 1 time; user var; SSE_REGS or none.

20 basic blocks, 30 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [90.0%]  1 [10.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  0 [10.0%]  (fallthru)
Successors:  6 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 1370, maybe hot.
Predecessors:  18 [100.0%]  19 [100.0%]  (dfs_back) 5 [100.0%]  7 [14.3%] 
Successors:  19 [90.0%]  3 [10.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Invalid sum of incoming frequencies 2501, should be 1370

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  2 [10.0%]  (fallthru,loop_exit)
Successors:  6 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Invalid sum of incoming frequencies 137, should be 1000

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  7 [87.5%]  5 [12.5%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 125, maybe hot.
Predecessors:  4 [12.5%]  (fallthru)
Successors:  2 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  1 [100.0%]  3 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  4 [87.5%] 
Successors:  8 [85.7%]  (fallthru) 2 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
Invalid sum of incoming frequencies 875, should be 1000

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  7 [85.7%]  (fallthru)
Successors:  9 [83.3%]  (fallthru) 18 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
Invalid sum of incoming frequencies 857, should be 720

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  8 [83.3%]  (fallthru)
Successors:  10 [80.0%]  (fallthru) 17 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  9 [80.0%]  (fallthru)
Successors:  11 [75.0%]  (fallthru) 16 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  10 [75.0%]  (fallthru)
Successors:  12 [66.7%]  (fallthru) 15 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [66.7%]  (fallthru)
Successors:  13 [50.0%]  (fallthru) 14 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Invalid sum of incoming frequencies 300, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Invalid sum of incoming frequencies 450, should be 1000

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 12 [50.0%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Invalid sum of incoming frequencies 1450, should be 1000

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 11 [33.3%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Invalid sum of incoming frequencies 1150, should be 1000

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 10 [25.0%] 
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Invalid sum of incoming frequencies 1150, should be 1000

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 9 [20.0%] 
Successors:  18 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Invalid sum of incoming frequencies 1135, should be 1000

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 8 [16.7%] 
Successors:  2 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Invalid sum of incoming frequencies 1120, should be 1000

Basic block 19 prev 18, next -2, loop_depth 1, count 0, freq 1233, maybe hot.
Predecessors:  2 [90.0%] 
Successors:  2 [100.0%]  (dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

;; Register 59 in 21.
;; Register 67 in 0.
;; Register 71 in 0.
;; Register 75 in 22.
;; Register 80 in 21.
;; Register 85 in 22.
;; Register 90 in 21.
;; Register 95 in 22.
;; Register 100 in 21.
;; Register 108 in 21.
;; Register 110 in 21.
;; Register 112 in 21.
;; Register 114 in 21.
;; Register 116 in 21.
;; Register 118 in 21.
;; Register 120 in 21.
(note:HI 1 0 8 ("./CStatUtilities.c") 79)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 8 1 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 4 8 5 0 ./CStatUtilities.c:79 (set (reg/v/f:DI 64 [ x ])
        (reg:DI 5 di [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))

(insn:HI 5 4 6 0 ./CStatUtilities.c:79 (set (reg/v:SI 65 [ n ])
        (reg:SI 4 si [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))

(note:HI 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 10 6 11 0 ("./CStatUtilities.c") 80)

(insn:HI 11 10 12 0 ./CStatUtilities.c:80 (set (reg/v:DF 62 [ maxEl ])
        (mem:DF (reg/v/f:DI 64 [ x ]) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(note:HI 12 11 13 0 ("./CStatUtilities.c") 83)

(insn:HI 13 12 14 0 ./CStatUtilities.c:83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 65 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 5 (nil))
    (nil))

(jump_insn:HI 14 13 64 0 ./CStatUtilities.c:83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65

(note:HI 64 14 362 NOTE_INSN_LOOP_BEG)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(note:HI 362 64 363 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 363 362 364 1 (set (pc)
        (label_ref 37)) 548 {jump} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

(barrier:HI 364 363 31)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
(code_label:HI 31 364 32 2 66 "" [4 uses])

(note:HI 32 31 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 33 32 346 2 ("./CStatUtilities.c") 83)

(insn:HI 346 33 35 2 ./CStatUtilities.c:83 (parallel [
            (set (reg:SI 71)
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 35 346 36 2 ./CStatUtilities.c:83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (reg/v:SI 65 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 346 (nil))
    (expr_list:REG_DEAD (reg:SI 71)
        (nil)))

(jump_insn:HI 36 35 65 2 ./CStatUtilities.c:83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 35 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

(note:HI 65 36 67 NOTE_INSN_LOOP_END)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(note:HI 67 65 368 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 368 67 369 3 (set (pc)
        (label_ref 37)) 548 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

(barrier:HI 369 368 42)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 64 65
(code_label:HI 42 369 43 4 61 "" [1 uses])

(note:HI 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 44 43 45 4 ./CStatUtilities.c:83 (set (reg/f:DI 60 [ ivtmp.139 ])
        (reg/v/f:DI 64 [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 64 [ x ])
        (nil)))

(insn:HI 45 44 68 4 ./CStatUtilities.c:83 (set (reg/v:SI 102 [ i ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 68 45 69 4 NOTE_INSN_DELETED)

(insn:HI 69 68 70 4 (parallel [
            (set (reg:SI 67)
                (plus:SI (reg/v:SI 65 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 70 69 224 4 NOTE_INSN_DELETED)

(insn:HI 224 70 225 4 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 67)
                        (const_int 7 [0x7]))
                    (const_int 0 [0x0])))
            (set (reg:SI 69)
                (and:SI (reg:SI 67)
                    (const_int 7 [0x7])))
        ]) 301 {*andsi_2} (insn_list:REG_DEP_TRUE 69 (nil))
    (expr_list:REG_DEAD (reg:SI 67)
        (nil)))

(jump_insn:HI 225 224 371 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 370)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 224 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
(note:HI 371 225 372 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 372 371 373 5 (set (pc)
        (label_ref:DI 31)) 548 {jump} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

(barrier:HI 373 372 48)

(note:HI 48 373 49 NOTE_INSN_FUNCTION_END)

(note:HI 49 48 37 ("./CStatUtilities.c") 88)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(code_label:HI 37 49 38 6 62 "" [2 uses])

(note:HI 38 37 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 51 38 57 6 ./CStatUtilities.c:88 (set (reg/i:DF 21 xmm0 [ <result> ])
        (reg/v:DF 62 [ maxEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 62 [ maxEl ])
        (nil)))

(insn:HI 57 51 370 6 ./CStatUtilities.c:88 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 51 (nil))
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
(code_label:HI 370 57 77 7 90 "" [1 uses])

(note:HI 77 370 73 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 73 77 74 7 ("./CStatUtilities.c") 83)

(insn:HI 74 73 80 7 ./CStatUtilities.c:83 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 80 74 81 7 ("./CStatUtilities.c") 84)

(insn:HI 81 80 83 7 ./CStatUtilities.c:84 (set (reg/v:DF 108 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 83 81 84 7 NOTE_INSN_DELETED)

(insn:HI 84 83 85 7 ./CStatUtilities.c:84 (parallel [
            (set (reg/f:DI 60 [ ivtmp.139 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 85 84 219 7 ./CStatUtilities.c:84 (set (reg/v:DF 62 [ maxEl ])
        (unspec:DF [
                (reg/v:DF 108 [ maxEl.140 ])
                (reg/v:DF 62 [ maxEl ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 81 (nil))
    (expr_list:REG_DEAD (reg/v:DF 108 [ maxEl.140 ])
        (nil)))

(insn:HI 219 85 220 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 220 219 199 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 31)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 219 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
(note:HI 199 220 197 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 197 199 198 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 198 197 177 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 378)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 197 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
(note:HI 177 198 175 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 175 177 176 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 176 175 155 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 379)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 175 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
(note:HI 155 176 153 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 153 155 154 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 154 153 133 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 380)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 153 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
(note:HI 133 154 131 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 131 133 132 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 132 131 111 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 381)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 131 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 69 102
(note:HI 111 132 109 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 109 111 110 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 69)
        (nil)))

(jump_insn:HI 110 109 95 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 382)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 109 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
(note:HI 95 110 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 91 95 92 13 ("./CStatUtilities.c") 83)

(insn:HI 92 91 98 13 ./CStatUtilities.c:83 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 98 92 99 13 ("./CStatUtilities.c") 84)

(insn:HI 99 98 101 13 ./CStatUtilities.c:84 (set (reg/v:DF 110 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 101 99 102 13 NOTE_INSN_DELETED)

(insn:HI 102 101 103 13 ./CStatUtilities.c:84 (parallel [
            (set (reg/f:DI 60 [ ivtmp.139 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 103 102 382 13 ./CStatUtilities.c:84 (set (reg/v:DF 62 [ maxEl ])
        (unspec:DF [
                (reg/v:DF 110 [ maxEl.140 ])
                (reg/v:DF 62 [ maxEl ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 99 (nil))
    (expr_list:REG_DEAD (reg/v:DF 110 [ maxEl.140 ])
        (nil)))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
(code_label:HI 382 103 117 14 95 "" [1 uses])

(note:HI 117 382 113 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 113 117 114 14 ("./CStatUtilities.c") 83)

(insn:HI 114 113 120 14 ./CStatUtilities.c:83 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 120 114 121 14 ("./CStatUtilities.c") 84)

(insn:HI 121 120 123 14 ./CStatUtilities.c:84 (set (reg/v:DF 112 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 123 121 124 14 NOTE_INSN_DELETED)

(insn:HI 124 123 125 14 ./CStatUtilities.c:84 (parallel [
            (set (reg/f:DI 60 [ ivtmp.139 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 125 124 381 14 ./CStatUtilities.c:84 (set (reg/v:DF 62 [ maxEl ])
        (unspec:DF [
                (reg/v:DF 112 [ maxEl.140 ])
                (reg/v:DF 62 [ maxEl ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 121 (nil))
    (expr_list:REG_DEAD (reg/v:DF 112 [ maxEl.140 ])
        (nil)))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
(code_label:HI 381 125 139 15 94 "" [1 uses])

(note:HI 139 381 135 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 135 139 136 15 ("./CStatUtilities.c") 83)

(insn:HI 136 135 142 15 ./CStatUtilities.c:83 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 142 136 143 15 ("./CStatUtilities.c") 84)

(insn:HI 143 142 145 15 ./CStatUtilities.c:84 (set (reg/v:DF 114 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 145 143 146 15 NOTE_INSN_DELETED)

(insn:HI 146 145 147 15 ./CStatUtilities.c:84 (parallel [
            (set (reg/f:DI 60 [ ivtmp.139 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 147 146 380 15 ./CStatUtilities.c:84 (set (reg/v:DF 62 [ maxEl ])
        (unspec:DF [
                (reg/v:DF 114 [ maxEl.140 ])
                (reg/v:DF 62 [ maxEl ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 143 (nil))
    (expr_list:REG_DEAD (reg/v:DF 114 [ maxEl.140 ])
        (nil)))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
(code_label:HI 380 147 161 16 93 "" [1 uses])

(note:HI 161 380 157 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 157 161 158 16 ("./CStatUtilities.c") 83)

(insn:HI 158 157 164 16 ./CStatUtilities.c:83 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 164 158 165 16 ("./CStatUtilities.c") 84)

(insn:HI 165 164 167 16 ./CStatUtilities.c:84 (set (reg/v:DF 116 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 167 165 168 16 NOTE_INSN_DELETED)

(insn:HI 168 167 169 16 ./CStatUtilities.c:84 (parallel [
            (set (reg/f:DI 60 [ ivtmp.139 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 169 168 379 16 ./CStatUtilities.c:84 (set (reg/v:DF 62 [ maxEl ])
        (unspec:DF [
                (reg/v:DF 116 [ maxEl.140 ])
                (reg/v:DF 62 [ maxEl ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 165 (nil))
    (expr_list:REG_DEAD (reg/v:DF 116 [ maxEl.140 ])
        (nil)))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
(code_label:HI 379 169 183 17 92 "" [1 uses])

(note:HI 183 379 179 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 179 183 180 17 ("./CStatUtilities.c") 83)

(insn:HI 180 179 186 17 ./CStatUtilities.c:83 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 186 180 187 17 ("./CStatUtilities.c") 84)

(insn:HI 187 186 189 17 ./CStatUtilities.c:84 (set (reg/v:DF 118 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 189 187 190 17 NOTE_INSN_DELETED)

(insn:HI 190 189 191 17 ./CStatUtilities.c:84 (parallel [
            (set (reg/f:DI 60 [ ivtmp.139 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 191 190 378 17 ./CStatUtilities.c:84 (set (reg/v:DF 62 [ maxEl ])
        (unspec:DF [
                (reg/v:DF 118 [ maxEl.140 ])
                (reg/v:DF 62 [ maxEl ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 187 (nil))
    (expr_list:REG_DEAD (reg/v:DF 118 [ maxEl.140 ])
        (nil)))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
(code_label:HI 378 191 205 18 91 "" [1 uses])

(note:HI 205 378 201 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 201 205 202 18 ("./CStatUtilities.c") 83)

(insn:HI 202 201 208 18 ./CStatUtilities.c:83 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 208 202 209 18 ("./CStatUtilities.c") 84)

(insn:HI 209 208 211 18 ./CStatUtilities.c:84 (set (reg/v:DF 120 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 211 209 212 18 NOTE_INSN_DELETED)

(insn:HI 212 211 213 18 ./CStatUtilities.c:84 (parallel [
            (set (reg/f:DI 60 [ ivtmp.139 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 213 212 374 18 ./CStatUtilities.c:84 (set (reg/v:DF 62 [ maxEl ])
        (unspec:DF [
                (reg/v:DF 120 [ maxEl.140 ])
                (reg/v:DF 62 [ maxEl ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 209 (nil))
    (expr_list:REG_DEAD (reg/v:DF 120 [ maxEl.140 ])
        (nil)))

(jump_insn:HI 374 213 375 18 (set (pc)
        (label_ref 31)) 548 {jump} (nil)
    (nil))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

(barrier:HI 375 374 18)

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102
(code_label:HI 18 375 19 19 63 "" [1 uses])

(note:HI 19 18 20 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 20 19 21 19 ("./CStatUtilities.c") 84)

(insn:HI 21 20 66 19 ./CStatUtilities.c:84 (set (reg/v:DF 59 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 66 21 347 19 ./CStatUtilities.c:84 (set (reg/v:DF 59 [ maxEl.140 ])
        (unspec:DF [
                (reg/v:DF 59 [ maxEl.140 ])
                (reg/v:DF 62 [ maxEl ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 21 (nil))
    (expr_list:REG_DEAD (reg/v:DF 62 [ maxEl ])
        (nil)))

(note:HI 347 66 228 19 NOTE_INSN_DELETED)

(note:HI 228 347 235 19 ("./CStatUtilities.c") 83)

(note:HI 235 228 236 19 ("./CStatUtilities.c") 84)

(insn:HI 236 235 238 19 ./CStatUtilities.c:84 (set (reg/v:DF 75 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 16 [0x10])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 238 236 239 19 ./CStatUtilities.c:84 (set (reg/v:DF 75 [ maxEl.140 ])
        (unspec:DF [
                (reg/v:DF 75 [ maxEl.140 ])
                (reg/v:DF 59 [ maxEl.140 ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 66 (insn_list:REG_DEP_TRUE 236 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 59 [ maxEl.140 ])
        (nil)))

(note:HI 239 238 245 19 NOTE_INSN_DELETED)

(note:HI 245 239 252 19 ("./CStatUtilities.c") 83)

(note:HI 252 245 253 19 ("./CStatUtilities.c") 84)

(insn:HI 253 252 255 19 ./CStatUtilities.c:84 (set (reg/v:DF 80 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 24 [0x18])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 255 253 256 19 ./CStatUtilities.c:84 (set (reg/v:DF 80 [ maxEl.140 ])
        (unspec:DF [
                (reg/v:DF 80 [ maxEl.140 ])
                (reg/v:DF 75 [ maxEl.140 ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 238 (insn_list:REG_DEP_TRUE 253 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 75 [ maxEl.140 ])
        (nil)))

(note:HI 256 255 262 19 NOTE_INSN_DELETED)

(note:HI 262 256 269 19 ("./CStatUtilities.c") 83)

(note:HI 269 262 270 19 ("./CStatUtilities.c") 84)

(insn:HI 270 269 272 19 ./CStatUtilities.c:84 (set (reg/v:DF 85 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 32 [0x20])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 272 270 273 19 ./CStatUtilities.c:84 (set (reg/v:DF 85 [ maxEl.140 ])
        (unspec:DF [
                (reg/v:DF 85 [ maxEl.140 ])
                (reg/v:DF 80 [ maxEl.140 ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 255 (insn_list:REG_DEP_TRUE 270 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 80 [ maxEl.140 ])
        (nil)))

(note:HI 273 272 279 19 NOTE_INSN_DELETED)

(note:HI 279 273 286 19 ("./CStatUtilities.c") 83)

(note:HI 286 279 287 19 ("./CStatUtilities.c") 84)

(insn:HI 287 286 289 19 ./CStatUtilities.c:84 (set (reg/v:DF 90 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 40 [0x28])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 289 287 290 19 ./CStatUtilities.c:84 (set (reg/v:DF 90 [ maxEl.140 ])
        (unspec:DF [
                (reg/v:DF 90 [ maxEl.140 ])
                (reg/v:DF 85 [ maxEl.140 ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 272 (insn_list:REG_DEP_TRUE 287 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 85 [ maxEl.140 ])
        (nil)))

(note:HI 290 289 296 19 NOTE_INSN_DELETED)

(note:HI 296 290 303 19 ("./CStatUtilities.c") 83)

(note:HI 303 296 304 19 ("./CStatUtilities.c") 84)

(insn:HI 304 303 306 19 ./CStatUtilities.c:84 (set (reg/v:DF 95 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 48 [0x30])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 306 304 307 19 ./CStatUtilities.c:84 (set (reg/v:DF 95 [ maxEl.140 ])
        (unspec:DF [
                (reg/v:DF 95 [ maxEl.140 ])
                (reg/v:DF 90 [ maxEl.140 ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 289 (insn_list:REG_DEP_TRUE 304 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 90 [ maxEl.140 ])
        (nil)))

(note:HI 307 306 313 19 NOTE_INSN_DELETED)

(note:HI 313 307 320 19 ("./CStatUtilities.c") 83)

(note:HI 320 313 321 19 ("./CStatUtilities.c") 84)

(insn:HI 321 320 323 19 ./CStatUtilities.c:84 (set (reg/v:DF 100 [ maxEl.140 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 56 [0x38])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 323 321 324 19 ./CStatUtilities.c:84 (set (reg/v:DF 100 [ maxEl.140 ])
        (unspec:DF [
                (reg/v:DF 100 [ maxEl.140 ])
                (reg/v:DF 95 [ maxEl.140 ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 306 (insn_list:REG_DEP_TRUE 321 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 95 [ maxEl.140 ])
        (nil)))

(note:HI 324 323 330 19 NOTE_INSN_DELETED)

(note:HI 330 324 331 19 ("./CStatUtilities.c") 83)

(insn:HI 331 330 337 19 ./CStatUtilities.c:83 (parallel [
            (set (reg/v:SI 102 [ i ])
                (plus:SI (reg/v:SI 102 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 337 331 338 19 ("./CStatUtilities.c") 84)

(insn:HI 338 337 340 19 ./CStatUtilities.c:84 (set (reg/v:DF 62 [ maxEl ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                (const_int 64 [0x40])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 340 338 341 19 NOTE_INSN_DELETED)

(insn:HI 341 340 342 19 ./CStatUtilities.c:84 (parallel [
            (set (reg/f:DI 60 [ ivtmp.139 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.139 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 342 341 376 19 ./CStatUtilities.c:84 (set (reg/v:DF 62 [ maxEl ])
        (unspec:DF [
                (reg/v:DF 62 [ maxEl ])
                (reg/v:DF 100 [ maxEl.140 ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 338 (insn_list:REG_DEP_TRUE 323 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 100 [ maxEl.140 ])
        (nil)))

(jump_insn:HI 376 342 377 19 (set (pc)
        (label_ref 31)) 548 {jump} (nil)
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 65 102

(barrier:HI 377 376 0)


;; Function which_max (which_max)



Pass 0

  Register 59 costs: AREG:3198 DREG:3198 CREG:3198 BREG:3198 SIREG:3198 DIREG:3198 AD_REGS:3198 Q_REGS:3198 NON_Q_REGS:7040 INDEX_REGS:3198 LEGACY_REGS:7040 GENERAL_REGS:7040 FP_TOP_REG:5166 FP_SECOND_REG:5166 FLOAT_REGS:5166 SSE_REGS:0 FP_TOP_SSE_REGS:5166 FP_SECOND_SSE_REGS:5166 FLOAT_SSE_REGS:5166 FLOAT_INT_REGS:5166 INT_SSE_REGS:3198 FLOAT_INT_SSE_REGS:5166 ALL_REGS:9912 MEM:2700
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:31421 MMX_REGS:31421 FP_TOP_SSE_REGS:31421 FP_SECOND_SSE_REGS:31421 FLOAT_SSE_REGS:31421 FLOAT_INT_REGS:21753 INT_SSE_REGS:31421 FLOAT_INT_SSE_REGS:31421 ALL_REGS:31421 MEM:8174
  Register 62 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15171 MMX_REGS:15171 FP_TOP_SSE_REGS:15171 FP_SECOND_SSE_REGS:15171 FLOAT_SSE_REGS:15171 FLOAT_INT_REGS:10503 INT_SSE_REGS:15171 FLOAT_INT_SSE_REGS:15171 ALL_REGS:15171 MEM:4557
  Register 63 costs: AREG:10699 DREG:10699 CREG:10699 BREG:10699 SIREG:10699 DIREG:10699 AD_REGS:10699 Q_REGS:10699 NON_Q_REGS:30861 INDEX_REGS:10699 LEGACY_REGS:30861 GENERAL_REGS:30861 FP_TOP_REG:17283 FP_SECOND_REG:17283 FLOAT_REGS:17283 SSE_REGS:0 FP_TOP_SSE_REGS:17283 FP_SECOND_SSE_REGS:17283 FLOAT_SSE_REGS:17283 FLOAT_INT_REGS:17283 INT_SSE_REGS:10699 FLOAT_INT_SSE_REGS:17283 ALL_REGS:42189 MEM:10171
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 FP_TOP_SSE_REGS:4186 FP_SECOND_SSE_REGS:4186 FLOAT_SSE_REGS:4186 FLOAT_INT_REGS:2898 INT_SSE_REGS:4186 FLOAT_INT_SSE_REGS:4186 ALL_REGS:4186 MEM:1188
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5967 MMX_REGS:5967 INT_SSE_REGS:5967 MEM:1699
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6812 MMX_REGS:6812 FP_TOP_SSE_REGS:6812 FP_SECOND_SSE_REGS:6812 FLOAT_SSE_REGS:6812 FLOAT_INT_REGS:4716 INT_SSE_REGS:6812 FLOAT_INT_SSE_REGS:6812 ALL_REGS:6812 MEM:1572
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:14703 MMX_REGS:14703 FP_TOP_SSE_REGS:14703 FP_SECOND_SSE_REGS:14703 FLOAT_SSE_REGS:14703 FLOAT_INT_REGS:10179 INT_SSE_REGS:14703 FLOAT_INT_SSE_REGS:14703 ALL_REGS:14703 MEM:4071
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13299 MMX_REGS:13299 FP_TOP_SSE_REGS:13299 FP_SECOND_SSE_REGS:13299 FLOAT_SSE_REGS:13299 FLOAT_INT_REGS:9207 INT_SSE_REGS:13299 FLOAT_INT_SSE_REGS:13299 ALL_REGS:13299 MEM:3858
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2392 MMX_REGS:2392 FP_TOP_SSE_REGS:2392 FP_SECOND_SSE_REGS:2392 FLOAT_SSE_REGS:2392 FLOAT_INT_REGS:1656 INT_SSE_REGS:2392 FLOAT_INT_SSE_REGS:2392 ALL_REGS:2392 MEM:675
  Register 76 costs: AREG:3042 DREG:3042 CREG:3042 BREG:3042 SIREG:3042 DIREG:3042 AD_REGS:3042 Q_REGS:3042 NON_Q_REGS:6799 INDEX_REGS:3042 LEGACY_REGS:6799 GENERAL_REGS:6799 FP_TOP_REG:4914 FP_SECOND_REG:4914 FLOAT_REGS:4914 SSE_REGS:0 FP_TOP_SSE_REGS:4914 FP_SECOND_SSE_REGS:4914 FLOAT_SSE_REGS:4914 FLOAT_INT_REGS:4914 INT_SSE_REGS:3042 FLOAT_INT_SSE_REGS:4914 ALL_REGS:9555 MEM:2596
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:28067 MMX_REGS:28067 FP_TOP_SSE_REGS:28067 FP_SECOND_SSE_REGS:28067 FLOAT_SSE_REGS:28067 FLOAT_INT_REGS:19431 INT_SSE_REGS:28067 FLOAT_INT_SSE_REGS:28067 ALL_REGS:28067 MEM:6577
  Register 78 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 79 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 80 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 81 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 82 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 83 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 84 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 85 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 88 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 89 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 92 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 96 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 100 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 101 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 104 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 107 costs: AREG:1443 DREG:1443 CREG:1443 BREG:1443 SIREG:1443 DIREG:1443 AD_REGS:1443 Q_REGS:1443 NON_Q_REGS:6050 INDEX_REGS:1443 LEGACY_REGS:6050 GENERAL_REGS:6050 FP_TOP_REG:2331 FP_SECOND_REG:2331 FLOAT_REGS:2331 SSE_REGS:0 FP_TOP_SSE_REGS:2331 FP_SECOND_SSE_REGS:2331 FLOAT_SSE_REGS:2331 FLOAT_INT_REGS:2331 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:2331 ALL_REGS:8022 MEM:1861

  Register 59 pref SSE_REGS or none
  Register 60 pref GENERAL_REGS or none
  Register 62 pref AREG, else GENERAL_REGS
  Register 63 pref SSE_REGS or none
  Register 65 pref DIREG, else GENERAL_REGS
  Register 66 pref SIREG, else GENERAL_REGS
  Register 68 pref GENERAL_REGS or none
  Register 70 pref GENERAL_REGS or none
  Register 71 pref GENERAL_REGS or none
  Register 72 pref GENERAL_REGS or none
  Register 73 pref GENERAL_REGS or none
  Register 76 pref SSE_REGS or none
  Register 77 pref GENERAL_REGS or none
  Register 78 pref SSE_REGS, else INT_SSE_REGS
  Register 79 pref SSE_REGS, else INT_SSE_REGS
  Register 80 pref SSE_REGS, else INT_SSE_REGS
  Register 81 pref SSE_REGS, else INT_SSE_REGS
  Register 82 pref SSE_REGS, else INT_SSE_REGS
  Register 83 pref SSE_REGS, else INT_SSE_REGS
  Register 84 pref SSE_REGS, else INT_SSE_REGS
  Register 85 pref GENERAL_REGS or none
  Register 88 pref SSE_REGS or none
  Register 89 pref GENERAL_REGS or none
  Register 92 pref SSE_REGS or none
  Register 93 pref GENERAL_REGS or none
  Register 96 pref SSE_REGS or none
  Register 97 pref GENERAL_REGS or none
  Register 100 pref SSE_REGS or none
  Register 101 pref GENERAL_REGS or none
  Register 104 pref SSE_REGS or none
  Register 107 pref SSE_REGS, else INT_SSE_REGS


Pass 1

  Register 59 costs: AREG:3198 DREG:3198 CREG:3198 BREG:3198 SIREG:3198 DIREG:3198 AD_REGS:3198 Q_REGS:3198 NON_Q_REGS:7040 INDEX_REGS:3198 LEGACY_REGS:7040 GENERAL_REGS:7040 FP_TOP_REG:5166 FP_SECOND_REG:5166 FLOAT_REGS:5166 SSE_REGS:0 FP_TOP_SSE_REGS:5166 FP_SECOND_SSE_REGS:5166 FLOAT_SSE_REGS:5166 FLOAT_INT_REGS:5166 INT_SSE_REGS:3198 FLOAT_INT_SSE_REGS:5166 ALL_REGS:9912 MEM:2700
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-100 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:31421 MMX_REGS:31421 FP_TOP_SSE_REGS:31421 FP_SECOND_SSE_REGS:31421 FLOAT_SSE_REGS:31421 FLOAT_INT_REGS:21753 INT_SSE_REGS:31421 FLOAT_INT_SSE_REGS:31421 ALL_REGS:31421 MEM:8174
  Register 62 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15171 MMX_REGS:15171 FP_TOP_SSE_REGS:15171 FP_SECOND_SSE_REGS:15171 FLOAT_SSE_REGS:15171 FLOAT_INT_REGS:10503 INT_SSE_REGS:15171 FLOAT_INT_SSE_REGS:15171 ALL_REGS:15171 MEM:4557
  Register 63 costs: AREG:10699 DREG:10699 CREG:10699 BREG:10699 SIREG:10699 DIREG:10699 AD_REGS:10699 Q_REGS:10699 NON_Q_REGS:30861 INDEX_REGS:10699 LEGACY_REGS:30861 GENERAL_REGS:30861 FP_TOP_REG:17283 FP_SECOND_REG:17283 FLOAT_REGS:17283 SSE_REGS:0 FP_TOP_SSE_REGS:17283 FP_SECOND_SSE_REGS:17283 FLOAT_SSE_REGS:17283 FLOAT_INT_REGS:17283 INT_SSE_REGS:10699 FLOAT_INT_SSE_REGS:17283 ALL_REGS:42189 MEM:10171
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 FP_TOP_SSE_REGS:4186 FP_SECOND_SSE_REGS:4186 FLOAT_SSE_REGS:4186 FLOAT_INT_REGS:2898 INT_SSE_REGS:4186 FLOAT_INT_SSE_REGS:4186 ALL_REGS:4186 MEM:1188
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5967 MMX_REGS:5967 INT_SSE_REGS:5967 MEM:1699
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6812 MMX_REGS:6812 FP_TOP_SSE_REGS:6812 FP_SECOND_SSE_REGS:6812 FLOAT_SSE_REGS:6812 FLOAT_INT_REGS:4716 INT_SSE_REGS:6812 FLOAT_INT_SSE_REGS:6812 ALL_REGS:6812 MEM:1572
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:14703 MMX_REGS:14703 FP_TOP_SSE_REGS:14703 FP_SECOND_SSE_REGS:14703 FLOAT_SSE_REGS:14703 FLOAT_INT_REGS:10179 INT_SSE_REGS:14703 FLOAT_INT_SSE_REGS:14703 ALL_REGS:14703 MEM:4071
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13299 MMX_REGS:13299 FP_TOP_SSE_REGS:13299 FP_SECOND_SSE_REGS:13299 FLOAT_SSE_REGS:13299 FLOAT_INT_REGS:9207 INT_SSE_REGS:13299 FLOAT_INT_SSE_REGS:13299 ALL_REGS:13299 MEM:3858
  Register 73 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2392 MMX_REGS:2392 FP_TOP_SSE_REGS:2392 FP_SECOND_SSE_REGS:2392 FLOAT_SSE_REGS:2392 FLOAT_INT_REGS:1656 INT_SSE_REGS:2392 FLOAT_INT_SSE_REGS:2392 ALL_REGS:2392 MEM:675
  Register 76 costs: AREG:3042 DREG:3042 CREG:3042 BREG:3042 SIREG:3042 DIREG:3042 AD_REGS:3042 Q_REGS:3042 NON_Q_REGS:6799 INDEX_REGS:3042 LEGACY_REGS:6799 GENERAL_REGS:6799 FP_TOP_REG:4914 FP_SECOND_REG:4914 FLOAT_REGS:4914 SSE_REGS:0 FP_TOP_SSE_REGS:4914 FP_SECOND_SSE_REGS:4914 FLOAT_SSE_REGS:4914 FLOAT_INT_REGS:4914 INT_SSE_REGS:3042 FLOAT_INT_SSE_REGS:4914 ALL_REGS:9555 MEM:2596
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:28067 MMX_REGS:28067 FP_TOP_SSE_REGS:28067 FP_SECOND_SSE_REGS:28067 FLOAT_SSE_REGS:28067 FLOAT_INT_REGS:19431 INT_SSE_REGS:28067 FLOAT_INT_SSE_REGS:28067 ALL_REGS:28067 MEM:6577
  Register 78 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 79 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 80 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 81 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 82 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 83 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 84 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1630
  Register 85 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 88 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 89 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 92 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 93 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 96 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 97 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 100 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 101 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 104 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 107 costs: AREG:1443 DREG:1443 CREG:1443 BREG:1443 SIREG:1443 DIREG:1443 AD_REGS:1443 Q_REGS:1443 NON_Q_REGS:6050 INDEX_REGS:1443 LEGACY_REGS:6050 GENERAL_REGS:6050 FP_TOP_REG:2331 FP_SECOND_REG:2331 FLOAT_REGS:2331 SSE_REGS:0 FP_TOP_SSE_REGS:2331 FP_SECOND_SSE_REGS:2331 FLOAT_SSE_REGS:2331 FLOAT_INT_REGS:2331 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:2331 ALL_REGS:8022 MEM:1861

  Register 60 pref DIREG, else GENERAL_REGS
  Register 73 pref AREG, else GENERAL_REGS
  Register 85 pref AREG, else GENERAL_REGS
  Register 89 pref AREG, else GENERAL_REGS
  Register 93 pref AREG, else GENERAL_REGS
  Register 97 pref AREG, else GENERAL_REGS
  Register 101 pref AREG, else GENERAL_REGS
108 registers.

Register 59 used 5 times across 13 insns; set 2 times; user var; SSE_REGS or none.

Register 60 used 25 times across 104 insns; set 9 times; pref DIREG, else GENERAL_REGS; pointer.

Register 62 used 18 times across 300 insns; set 17 times; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 63 used 25 times across 76 insns; set 9 times; user var; dies in 8 places; SSE_REGS or none.

Register 65 used 3 times across 8 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 66 used 4 times across 152 insns; set 1 time; user var; dies in 0 places; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 68 used 3 times across 2 insns in block 7; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 70 used 7 times across 22 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 71 used 10 times across 54 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 72 used 9 times across 51 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 73 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 76 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 77 used 25 times across 198 insns; set 9 times; user var; 4 bytes; GENERAL_REGS or none.

Register 78 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 79 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 80 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 81 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 82 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 83 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 84 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 85 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 88 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 89 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 92 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 93 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 96 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 97 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 100 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 101 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 104 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 107 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

65 basic blocks, 90 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  9 [10.0%]  1 [90.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 65 66

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%]  (fallthru)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 1233, maybe hot.
Predecessors:  5 [90.0%] 
Successors:  4 [44.4%]  3 [55.6%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 63 66 71

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 685, maybe hot.
Predecessors:  2 [55.6%]  (fallthru)
Successors:  43 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 66 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 548, maybe hot.
Predecessors:  2 [44.4%] 
Successors:  43 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 1370, maybe hot.
Predecessors:  42 [100.0%]  64 [100.0%]  (dfs_back) 8 [100.0%]  13 [14.3%] 
Successors:  2 [90.0%]  6 [10.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71
Invalid sum of incoming frequencies 2264, should be 1370

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  5 [10.0%]  (fallthru,loop_exit)
Successors:  9 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Invalid sum of incoming frequencies 137, should be 1000

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  1 [100.0%] 
Successors:  10 [87.5%]  8 [12.5%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 125, maybe hot.
Predecessors:  7 [12.5%]  (fallthru)
Successors:  5 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  0 [10.0%]  6 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  7 [87.5%] 
Successors:  11 [44.4%]  (fallthru) 12 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77 78
Invalid sum of incoming frequencies 875, should be 1000

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  10 [44.4%]  (fallthru)
Successors:  13 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  10 [55.6%] 
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 70 77 78
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 11 [100.0%] 
Successors:  14 [85.7%]  (fallthru) 5 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  13 [85.7%]  (fallthru)
Successors:  15 [83.3%]  (fallthru) 39 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  14 [83.3%]  (fallthru)
Successors:  16 [80.0%]  (fallthru) 35 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  15 [80.0%]  (fallthru)
Successors:  17 [75.0%]  (fallthru) 31 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  16 [75.0%]  (fallthru)
Successors:  18 [66.7%]  (fallthru) 27 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  17 [66.7%]  (fallthru)
Successors:  19 [50.0%]  (fallthru) 23 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Invalid sum of incoming frequencies 300, should be 900

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
Successors:  20 [44.4%]  (fallthru) 21 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 79
Invalid sum of incoming frequencies 450, should be 1000

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  19 [44.4%]  (fallthru)
Successors:  22 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  19 [55.6%] 
Successors:  22 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  21 [100.0%]  (fallthru) 20 [100.0%] 
Successors:  23 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  22 [100.0%]  (fallthru) 18 [50.0%] 
Successors:  24 [44.4%]  (fallthru) 25 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 80
Invalid sum of incoming frequencies 1350, should be 1000

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  23 [44.4%]  (fallthru)
Successors:  26 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  23 [55.6%] 
Successors:  26 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 80
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  25 [100.0%]  (fallthru) 24 [100.0%] 
Successors:  27 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  26 [100.0%]  (fallthru) 17 [33.3%] 
Successors:  28 [44.4%]  (fallthru) 29 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 81

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  27 [44.4%]  (fallthru)
Successors:  30 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81

Basic block 29 prev 28, next 30, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  27 [55.6%] 
Successors:  30 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 81
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81

Basic block 30 prev 29, next 31, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  29 [100.0%]  (fallthru) 28 [100.0%] 
Successors:  31 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  30 [100.0%]  (fallthru) 16 [25.0%] 
Successors:  32 [44.4%]  (fallthru) 33 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 82

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  31 [44.4%]  (fallthru)
Successors:  34 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  31 [55.6%] 
Successors:  34 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 32 [100.0%] 
Successors:  35 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  34 [100.0%]  (fallthru) 15 [20.0%] 
Successors:  36 [44.4%]  (fallthru) 37 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 83

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  35 [44.4%]  (fallthru)
Successors:  38 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83

Basic block 37 prev 36, next 38, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  35 [55.6%] 
Successors:  38 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83

Basic block 38 prev 37, next 39, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  37 [100.0%]  (fallthru) 36 [100.0%] 
Successors:  39 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 39 prev 38, next 40, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  38 [100.0%]  (fallthru) 14 [16.7%] 
Successors:  40 [44.4%]  (fallthru) 41 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 84

Basic block 40 prev 39, next 41, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  39 [44.4%]  (fallthru)
Successors:  42 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84

Basic block 41 prev 40, next 42, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  39 [55.6%] 
Successors:  42 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 84
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84

Basic block 42 prev 41, next 43, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  41 [100.0%]  (fallthru) 40 [100.0%] 
Successors:  5 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 43 prev 42, next 44, loop_depth 1, count 0, freq 1233, maybe hot.
Predecessors:  3 [100.0%]  4 [100.0%] 
Successors:  44 [44.4%]  (fallthru) 45 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 66 71 72 73 76

Basic block 44 prev 43, next 45, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  43 [44.4%]  (fallthru)
Successors:  46 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 66 71 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 76

Basic block 45 prev 44, next 46, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  43 [55.6%] 
Successors:  46 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 73 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 76

Basic block 46 prev 45, next 47, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  45 [100.0%]  (fallthru) 44 [100.0%] 
Successors:  47 [44.4%]  (fallthru) 48 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 76 85 88

Basic block 47 prev 46, next 48, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  46 [44.4%]  (fallthru)
Successors:  49 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 88

Basic block 48 prev 47, next 49, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  46 [55.6%] 
Successors:  49 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 88

Basic block 49 prev 48, next 50, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  48 [100.0%]  (fallthru) 47 [100.0%] 
Successors:  50 [44.4%]  (fallthru) 51 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 88 89 92

Basic block 50 prev 49, next 51, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  49 [44.4%]  (fallthru)
Successors:  52 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 92

Basic block 51 prev 50, next 52, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  49 [55.6%] 
Successors:  52 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 89 92
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 92

Basic block 52 prev 51, next 53, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  51 [100.0%]  (fallthru) 50 [100.0%] 
Successors:  53 [44.4%]  (fallthru) 54 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 92
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 92 93 96

Basic block 53 prev 52, next 54, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  52 [44.4%]  (fallthru)
Successors:  55 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 92
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 96

Basic block 54 prev 53, next 55, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  52 [55.6%] 
Successors:  55 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 93 96
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 96

Basic block 55 prev 54, next 56, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  54 [100.0%]  (fallthru) 53 [100.0%] 
Successors:  56 [44.4%]  (fallthru) 57 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 96
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 96 97 100

Basic block 56 prev 55, next 57, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  55 [44.4%]  (fallthru)
Successors:  58 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 96
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 100

Basic block 57 prev 56, next 58, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  55 [55.6%] 
Successors:  58 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 97 100
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 100

Basic block 58 prev 57, next 59, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  57 [100.0%]  (fallthru) 56 [100.0%] 
Successors:  59 [44.4%]  (fallthru) 60 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 100
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 100 101 104

Basic block 59 prev 58, next 60, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  58 [44.4%]  (fallthru)
Successors:  61 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 100
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 104

Basic block 60 prev 59, next 61, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  58 [55.6%] 
Successors:  61 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 101 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 104

Basic block 61 prev 60, next 62, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  60 [100.0%]  (fallthru) 59 [100.0%] 
Successors:  62 [44.4%]  (fallthru) 63 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 104 107

Basic block 62 prev 61, next 63, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  61 [44.4%]  (fallthru)
Successors:  64 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 104
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 107

Basic block 63 prev 62, next 64, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  61 [55.6%] 
Successors:  64 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 72 77 107
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 107

Basic block 64 prev 63, next -2, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  63 [100.0%]  (fallthru) 62 [100.0%] 
Successors:  5 [100.0%]  (dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 107
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Register 68 in 0.
(note:HI 1 0 8 ("./CStatUtilities.c") 93)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 8 1 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 4 8 5 0 ./CStatUtilities.c:93 (set (reg/v/f:DI 65 [ x ])
        (reg:DI 5 di [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))

(insn:HI 5 4 6 0 ./CStatUtilities.c:93 (set (reg/v:SI 66 [ n ])
        (reg:SI 4 si [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))

(note:HI 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 10 6 11 0 ("./CStatUtilities.c") 94)

(insn:HI 11 10 12 0 ./CStatUtilities.c:94 (set (reg/v:DF 63 [ maxEl ])
        (mem:DF (reg/v/f:DI 65 [ x ]) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(note:HI 12 11 17 0 ("./CStatUtilities.c") 98)

(insn:HI 17 12 13 0 ./CStatUtilities.c:98 (set (reg/v:SI 62 [ maxIdx ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 13 17 14 0 ./CStatUtilities.c:98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 66 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 5 (nil))
    (nil))

(jump_insn:HI 14 13 580 0 ./CStatUtilities.c:98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 47)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 65 66

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
(note:HI 580 14 581 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 581 580 582 1 (set (pc)
        (label_ref 52)) 548 {jump} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66

(barrier:HI 582 581 77)

(note:HI 77 582 20 NOTE_INSN_LOOP_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71
(code_label:HI 20 77 21 2 100 "" [1 uses])

(note:HI 21 20 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 22 21 23 2 ("./CStatUtilities.c") 100)

(insn:HI 23 22 24 2 ./CStatUtilities.c:100 (set (reg/v:DF 59 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 24 23 25 2 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 59 [ maxEl.174 ])
            (reg/v:DF 63 [ maxEl ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 23 (nil))
    (nil))

(jump_insn:HI 25 24 30 2 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 34)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 24 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 4444 [0x115c])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 63 66 71

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 66 71
(note:HI 30 25 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 31 30 502 3 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg:SI 71)) 40 {*movsi_1} (nil)
    (nil))

(jump_insn:HI 502 31 503 3 (set (pc)
        (label_ref 37)) 548 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71

(barrier:HI 503 502 34)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71
(code_label:HI 34 503 35 4 101 "" [1 uses])

(note:HI 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 36 35 573 4 ./CStatUtilities.c:100 (set (reg/v:DF 59 [ maxEl.174 ])
        (reg/v:DF 63 [ maxEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ maxEl ])
        (nil)))

(jump_insn:HI 573 36 574 4 (set (pc)
        (label_ref 37)) 548 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71

(barrier:HI 574 573 41)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 41 574 42 5 105 "" [4 uses])

(note:HI 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 43 42 484 5 ("./CStatUtilities.c") 98)

(insn:HI 484 43 45 5 ./CStatUtilities.c:98 (parallel [
            (set (reg:SI 71)
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 77 [ i ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 45 484 46 5 ./CStatUtilities.c:98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (reg/v:SI 66 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 484 (nil))
    (nil))

(jump_insn:HI 46 45 78 5 ./CStatUtilities.c:98 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 45 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71

(note:HI 78 46 79 NOTE_INSN_LOOP_END)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(note:HI 79 78 507 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 507 79 508 6 (set (pc)
        (label_ref 47)) 548 {jump} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

(barrier:HI 508 507 52)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
(code_label:HI 52 508 53 7 97 "" [1 uses])

(note:HI 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 54 53 55 7 ./CStatUtilities.c:98 (set (reg/f:DI 60 [ ivtmp.173 ])
        (reg/v/f:DI 65 [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 65 [ x ])
        (nil)))

(insn:HI 55 54 56 7 ./CStatUtilities.c:98 (set (reg/v:SI 62 [ maxIdx ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 56 55 80 7 ./CStatUtilities.c:98 (set (reg/v:SI 77 [ i ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 80 56 81 7 NOTE_INSN_DELETED)

(insn:HI 81 80 82 7 (parallel [
            (set (reg:SI 68)
                (plus:SI (reg/v:SI 66 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 82 81 299 7 NOTE_INSN_DELETED)

(insn:HI 299 82 300 7 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 68)
                        (const_int 7 [0x7]))
                    (const_int 0 [0x0])))
            (set (reg:SI 70)
                (and:SI (reg:SI 68)
                    (const_int 7 [0x7])))
        ]) 301 {*andsi_2} (insn_list:REG_DEP_TRUE 81 (nil))
    (expr_list:REG_DEAD (reg:SI 68)
        (nil)))

(jump_insn:HI 300 299 510 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 509)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 299 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 510 300 511 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 511 510 512 8 (set (pc)
        (label_ref:DI 41)) 548 {jump} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

(barrier:HI 512 511 59)

(note:HI 59 512 60 NOTE_INSN_FUNCTION_END)

(note:HI 60 59 47 ("./CStatUtilities.c") 108)

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(code_label:HI 47 60 48 9 99 "" [2 uses])

(note:HI 48 47 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 62 48 68 9 ./CStatUtilities.c:108 (set (reg/i:SI 0 ax [ <result> ])
        (reg/v:SI 62 [ maxIdx ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 62 [ maxIdx ])
        (nil)))

(insn:HI 68 62 509 9 ./CStatUtilities.c:108 (use (reg/i:SI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 62 (nil))
    (nil))
;; End of basic block 9, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(code_label:HI 509 68 89 10 143 "" [1 uses])

(note:HI 89 509 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 85 89 86 10 ("./CStatUtilities.c") 98)

(insn:HI 86 85 92 10 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 92 86 93 10 ("./CStatUtilities.c") 100)

(insn:HI 93 92 94 10 ./CStatUtilities.c:100 (set (reg/v:DF 78 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 94 93 95 10 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 78 [ maxEl.174 ])
            (reg/v:DF 63 [ maxEl ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 93 (nil))
    (nil))

(jump_insn:HI 95 94 100 10 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 513)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 94 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77 78

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 100 95 99 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 99 100 515 11 ./CStatUtilities.c:100 (set (reg/v:DF 78 [ maxEl.174 ])
        (reg/v:DF 63 [ maxEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ maxEl ])
        (nil)))

(jump_insn:HI 515 99 516 11 (set (pc)
        (label_ref 514)) 548 {jump} (nil)
    (nil))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78

(barrier:HI 516 515 513)

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 70 77 78
(code_label:HI 513 516 103 12 144 "" [1 uses])

(note:HI 103 513 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 102 103 514 12 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78
(code_label:HI 514 102 107 13 145 "" [1 uses])

(note:HI 107 514 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 105 107 106 13 ./CStatUtilities.c:100 (parallel [
            (set (reg/f:DI 60 [ ivtmp.173 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 106 105 294 13 ./CStatUtilities.c:100 (set (reg/v:DF 63 [ maxEl ])
        (reg/v:DF 78 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 78 [ maxEl.174 ])
        (nil)))

(insn:HI 294 106 295 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 295 294 265 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 41)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 294 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 265 295 263 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 263 265 264 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 264 263 234 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 575)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 263 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 234 264 232 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:HI 232 234 233 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 233 232 203 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 576)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 232 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 203 233 201 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 201 203 202 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 202 201 172 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 577)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 201 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 172 202 170 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:HI 170 172 171 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 171 170 141 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 578)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 170 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 141 171 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:HI 139 141 140 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 70)
        (nil)))

(jump_insn:HI 140 139 116 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 579)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 139 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 116 140 112 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 112 116 113 19 ("./CStatUtilities.c") 98)

(insn:HI 113 112 119 19 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 119 113 120 19 ("./CStatUtilities.c") 100)

(insn:HI 120 119 121 19 ./CStatUtilities.c:100 (set (reg/v:DF 79 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 121 120 122 19 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 79 [ maxEl.174 ])
            (reg/v:DF 63 [ maxEl ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 120 (nil))
    (nil))

(jump_insn:HI 122 121 127 19 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 517)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 121 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 79

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 127 122 126 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:HI 126 127 519 20 ./CStatUtilities.c:100 (set (reg/v:DF 79 [ maxEl.174 ])
        (reg/v:DF 63 [ maxEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ maxEl ])
        (nil)))

(jump_insn:HI 519 126 520 20 (set (pc)
        (label_ref 518)) 548 {jump} (nil)
    (nil))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79

(barrier:HI 520 519 517)

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 79
(code_label:HI 517 520 130 21 146 "" [1 uses])

(note:HI 130 517 129 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:HI 129 130 518 21 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79
(code_label:HI 518 129 134 22 147 "" [1 uses])

(note:HI 134 518 132 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 132 134 133 22 ./CStatUtilities.c:100 (parallel [
            (set (reg/f:DI 60 [ ivtmp.173 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 133 132 579 22 ./CStatUtilities.c:100 (set (reg/v:DF 63 [ maxEl ])
        (reg/v:DF 79 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 79 [ maxEl.174 ])
        (nil)))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 579 133 147 23 176 "" [1 uses])

(note:HI 147 579 143 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note:HI 143 147 144 23 ("./CStatUtilities.c") 98)

(insn:HI 144 143 150 23 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 150 144 151 23 ("./CStatUtilities.c") 100)

(insn:HI 151 150 152 23 ./CStatUtilities.c:100 (set (reg/v:DF 80 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 152 151 153 23 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 80 [ maxEl.174 ])
            (reg/v:DF 63 [ maxEl ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 151 (nil))
    (nil))

(jump_insn:HI 153 152 158 23 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 521)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 152 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 80

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 158 153 157 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:HI 157 158 523 24 ./CStatUtilities.c:100 (set (reg/v:DF 80 [ maxEl.174 ])
        (reg/v:DF 63 [ maxEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ maxEl ])
        (nil)))

(jump_insn:HI 523 157 524 24 (set (pc)
        (label_ref 522)) 548 {jump} (nil)
    (nil))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80

(barrier:HI 524 523 521)

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 80
(code_label:HI 521 524 161 25 148 "" [1 uses])

(note:HI 161 521 160 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:HI 160 161 522 25 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80
(code_label:HI 522 160 165 26 149 "" [1 uses])

(note:HI 165 522 163 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:HI 163 165 164 26 ./CStatUtilities.c:100 (parallel [
            (set (reg/f:DI 60 [ ivtmp.173 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 164 163 578 26 ./CStatUtilities.c:100 (set (reg/v:DF 63 [ maxEl ])
        (reg/v:DF 80 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 80 [ maxEl.174 ])
        (nil)))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 578 164 178 27 175 "" [1 uses])

(note:HI 178 578 174 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note:HI 174 178 175 27 ("./CStatUtilities.c") 98)

(insn:HI 175 174 181 27 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 181 175 182 27 ("./CStatUtilities.c") 100)

(insn:HI 182 181 183 27 ./CStatUtilities.c:100 (set (reg/v:DF 81 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 183 182 184 27 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 81 [ maxEl.174 ])
            (reg/v:DF 63 [ maxEl ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 182 (nil))
    (nil))

(jump_insn:HI 184 183 189 27 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 525)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 183 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 81

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 189 184 188 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:HI 188 189 527 28 ./CStatUtilities.c:100 (set (reg/v:DF 81 [ maxEl.174 ])
        (reg/v:DF 63 [ maxEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ maxEl ])
        (nil)))

(jump_insn:HI 527 188 528 28 (set (pc)
        (label_ref 526)) 548 {jump} (nil)
    (nil))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81

(barrier:HI 528 527 525)

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 81
(code_label:HI 525 528 192 29 150 "" [1 uses])

(note:HI 192 525 191 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:HI 191 192 526 29 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81
(code_label:HI 526 191 196 30 151 "" [1 uses])

(note:HI 196 526 194 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn:HI 194 196 195 30 ./CStatUtilities.c:100 (parallel [
            (set (reg/f:DI 60 [ ivtmp.173 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 195 194 577 30 ./CStatUtilities.c:100 (set (reg/v:DF 63 [ maxEl ])
        (reg/v:DF 81 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 81 [ maxEl.174 ])
        (nil)))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 577 195 209 31 174 "" [1 uses])

(note:HI 209 577 205 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note:HI 205 209 206 31 ("./CStatUtilities.c") 98)

(insn:HI 206 205 212 31 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 212 206 213 31 ("./CStatUtilities.c") 100)

(insn:HI 213 212 214 31 ./CStatUtilities.c:100 (set (reg/v:DF 82 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 214 213 215 31 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 82 [ maxEl.174 ])
            (reg/v:DF 63 [ maxEl ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 213 (nil))
    (nil))

(jump_insn:HI 215 214 220 31 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 529)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 214 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 82

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 220 215 219 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:HI 219 220 531 32 ./CStatUtilities.c:100 (set (reg/v:DF 82 [ maxEl.174 ])
        (reg/v:DF 63 [ maxEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ maxEl ])
        (nil)))

(jump_insn:HI 531 219 532 32 (set (pc)
        (label_ref 530)) 548 {jump} (nil)
    (nil))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82

(barrier:HI 532 531 529)

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 82
(code_label:HI 529 532 223 33 152 "" [1 uses])

(note:HI 223 529 222 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:HI 222 223 530 33 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82
(code_label:HI 530 222 227 34 153 "" [1 uses])

(note:HI 227 530 225 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:HI 225 227 226 34 ./CStatUtilities.c:100 (parallel [
            (set (reg/f:DI 60 [ ivtmp.173 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 226 225 576 34 ./CStatUtilities.c:100 (set (reg/v:DF 63 [ maxEl ])
        (reg/v:DF 82 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 82 [ maxEl.174 ])
        (nil)))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 576 226 240 35 173 "" [1 uses])

(note:HI 240 576 236 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note:HI 236 240 237 35 ("./CStatUtilities.c") 98)

(insn:HI 237 236 243 35 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 243 237 244 35 ("./CStatUtilities.c") 100)

(insn:HI 244 243 245 35 ./CStatUtilities.c:100 (set (reg/v:DF 83 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 245 244 246 35 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 83 [ maxEl.174 ])
            (reg/v:DF 63 [ maxEl ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 244 (nil))
    (nil))

(jump_insn:HI 246 245 251 35 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 533)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 245 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 83

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 251 246 250 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn:HI 250 251 535 36 ./CStatUtilities.c:100 (set (reg/v:DF 83 [ maxEl.174 ])
        (reg/v:DF 63 [ maxEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ maxEl ])
        (nil)))

(jump_insn:HI 535 250 536 36 (set (pc)
        (label_ref 534)) 548 {jump} (nil)
    (nil))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83

(barrier:HI 536 535 533)

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 83
(code_label:HI 533 536 254 37 154 "" [1 uses])

(note:HI 254 533 253 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn:HI 253 254 534 37 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83
(code_label:HI 534 253 258 38 155 "" [1 uses])

(note:HI 258 534 256 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:HI 256 258 257 38 ./CStatUtilities.c:100 (parallel [
            (set (reg/f:DI 60 [ ivtmp.173 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 257 256 575 38 ./CStatUtilities.c:100 (set (reg/v:DF 63 [ maxEl ])
        (reg/v:DF 83 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 83 [ maxEl.174 ])
        (nil)))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 575 257 271 39 172 "" [1 uses])

(note:HI 271 575 267 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note:HI 267 271 268 39 ("./CStatUtilities.c") 98)

(insn:HI 268 267 274 39 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 274 268 275 39 ("./CStatUtilities.c") 100)

(insn:HI 275 274 276 39 ./CStatUtilities.c:100 (set (reg/v:DF 84 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 276 275 277 39 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 84 [ maxEl.174 ])
            (reg/v:DF 63 [ maxEl ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 275 (nil))
    (nil))

(jump_insn:HI 277 276 282 39 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 537)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 276 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 84

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 282 277 281 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn:HI 281 282 539 40 ./CStatUtilities.c:100 (set (reg/v:DF 84 [ maxEl.174 ])
        (reg/v:DF 63 [ maxEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ maxEl ])
        (nil)))

(jump_insn:HI 539 281 540 40 (set (pc)
        (label_ref 538)) 548 {jump} (nil)
    (nil))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84

(barrier:HI 540 539 537)

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 84
(code_label:HI 537 540 285 41 156 "" [1 uses])

(note:HI 285 537 284 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn:HI 284 285 538 41 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84
(code_label:HI 538 284 289 42 157 "" [1 uses])

(note:HI 289 538 287 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:HI 287 289 288 42 ./CStatUtilities.c:100 (parallel [
            (set (reg/f:DI 60 [ ivtmp.173 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 288 287 541 42 ./CStatUtilities.c:100 (set (reg/v:DF 63 [ maxEl ])
        (reg/v:DF 84 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 84 [ maxEl.174 ])
        (nil)))

(jump_insn:HI 541 288 542 42 (set (pc)
        (label_ref 41)) 548 {jump} (nil)
    (nil))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

(barrier:HI 542 541 37)

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71
(code_label:HI 37 542 38 43 104 "" [2 uses])

(note:HI 38 37 485 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn:HI 485 38 303 43 ./CStatUtilities.c:100 (parallel [
            (set (reg/f:DI 72)
                (plus:DI (reg/f:DI 60 [ ivtmp.173 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 60 [ ivtmp.173 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 303 485 304 43 ("./CStatUtilities.c") 98)

(insn:HI 304 303 310 43 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 73 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 310 304 311 43 ("./CStatUtilities.c") 100)

(insn:HI 311 310 312 43 ./CStatUtilities.c:100 (set (reg/v:DF 76 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 485 (nil))
    (nil))

(insn:HI 312 311 313 43 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 76 [ maxEl.174 ])
            (reg/v:DF 59 [ maxEl.174 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 311 (nil))
    (nil))

(jump_insn:HI 313 312 318 43 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 543)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 312 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 66 71 72 73 76

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 66 71 72
(note:HI 318 313 317 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn:HI 317 318 545 44 ./CStatUtilities.c:100 (set (reg/v:DF 76 [ maxEl.174 ])
        (reg/v:DF 59 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 59 [ maxEl.174 ])
        (nil)))

(jump_insn:HI 545 317 546 44 (set (pc)
        (label_ref 544)) 548 {jump} (nil)
    (nil))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 76

(barrier:HI 546 545 543)

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 73 76
(code_label:HI 543 546 321 45 158 "" [1 uses])

(note:HI 321 543 320 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn:HI 320 321 544 45 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 73 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 73 [ i ])
        (nil)))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 76

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 76
(code_label:HI 544 320 325 46 159 "" [1 uses])

(note:HI 325 544 323 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(note:HI 323 325 329 46 NOTE_INSN_DELETED)

(note:HI 329 323 330 46 ("./CStatUtilities.c") 98)

(insn:HI 330 329 336 46 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 85 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 336 330 337 46 ("./CStatUtilities.c") 100)

(insn:HI 337 336 338 46 ./CStatUtilities.c:100 (set (reg/v:DF 88 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 16 [0x10])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 338 337 339 46 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 88 [ maxEl.174 ])
            (reg/v:DF 76 [ maxEl.174 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 337 (nil))
    (nil))

(jump_insn:HI 339 338 344 46 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 547)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 338 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 76 85 88

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 76
(note:HI 344 339 343 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn:HI 343 344 549 47 ./CStatUtilities.c:100 (set (reg/v:DF 88 [ maxEl.174 ])
        (reg/v:DF 76 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 76 [ maxEl.174 ])
        (nil)))

(jump_insn:HI 549 343 550 47 (set (pc)
        (label_ref 548)) 548 {jump} (nil)
    (nil))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 88

(barrier:HI 550 549 547)

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 85 88
(code_label:HI 547 550 347 48 160 "" [1 uses])

(note:HI 347 547 346 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn:HI 346 347 548 48 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 85 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 85 [ i ])
        (nil)))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 88

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 88
(code_label:HI 548 346 351 49 161 "" [1 uses])

(note:HI 351 548 349 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note:HI 349 351 355 49 NOTE_INSN_DELETED)

(note:HI 355 349 356 49 ("./CStatUtilities.c") 98)

(insn:HI 356 355 362 49 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 89 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 362 356 363 49 ("./CStatUtilities.c") 100)

(insn:HI 363 362 364 49 ./CStatUtilities.c:100 (set (reg/v:DF 92 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 24 [0x18])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 364 363 365 49 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 92 [ maxEl.174 ])
            (reg/v:DF 88 [ maxEl.174 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 363 (nil))
    (nil))

(jump_insn:HI 365 364 370 49 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 551)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 364 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 49, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 88 89 92

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 88
(note:HI 370 365 369 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn:HI 369 370 553 50 ./CStatUtilities.c:100 (set (reg/v:DF 92 [ maxEl.174 ])
        (reg/v:DF 88 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 88 [ maxEl.174 ])
        (nil)))

(jump_insn:HI 553 369 554 50 (set (pc)
        (label_ref 552)) 548 {jump} (nil)
    (nil))
;; End of basic block 50, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 92

(barrier:HI 554 553 551)

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 89 92
(code_label:HI 551 554 373 51 162 "" [1 uses])

(note:HI 373 551 372 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn:HI 372 373 552 51 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 89 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 89 [ i ])
        (nil)))
;; End of basic block 51, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 92

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 92
(code_label:HI 552 372 377 52 163 "" [1 uses])

(note:HI 377 552 375 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(note:HI 375 377 381 52 NOTE_INSN_DELETED)

(note:HI 381 375 382 52 ("./CStatUtilities.c") 98)

(insn:HI 382 381 388 52 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 93 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 388 382 389 52 ("./CStatUtilities.c") 100)

(insn:HI 389 388 390 52 ./CStatUtilities.c:100 (set (reg/v:DF 96 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 32 [0x20])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 390 389 391 52 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 96 [ maxEl.174 ])
            (reg/v:DF 92 [ maxEl.174 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 389 (nil))
    (nil))

(jump_insn:HI 391 390 396 52 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 555)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 390 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 52, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 92 93 96

;; Start of basic block 53, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 92
(note:HI 396 391 395 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn:HI 395 396 557 53 ./CStatUtilities.c:100 (set (reg/v:DF 96 [ maxEl.174 ])
        (reg/v:DF 92 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 92 [ maxEl.174 ])
        (nil)))

(jump_insn:HI 557 395 558 53 (set (pc)
        (label_ref 556)) 548 {jump} (nil)
    (nil))
;; End of basic block 53, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 96

(barrier:HI 558 557 555)

;; Start of basic block 54, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 93 96
(code_label:HI 555 558 399 54 164 "" [1 uses])

(note:HI 399 555 398 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn:HI 398 399 556 54 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 93 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 93 [ i ])
        (nil)))
;; End of basic block 54, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 96

;; Start of basic block 55, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 96
(code_label:HI 556 398 403 55 165 "" [1 uses])

(note:HI 403 556 401 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(note:HI 401 403 407 55 NOTE_INSN_DELETED)

(note:HI 407 401 408 55 ("./CStatUtilities.c") 98)

(insn:HI 408 407 414 55 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 97 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 414 408 415 55 ("./CStatUtilities.c") 100)

(insn:HI 415 414 416 55 ./CStatUtilities.c:100 (set (reg/v:DF 100 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 40 [0x28])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 416 415 417 55 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 100 [ maxEl.174 ])
            (reg/v:DF 96 [ maxEl.174 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 415 (nil))
    (nil))

(jump_insn:HI 417 416 422 55 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 559)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 416 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 55, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 96 97 100

;; Start of basic block 56, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 96
(note:HI 422 417 421 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn:HI 421 422 561 56 ./CStatUtilities.c:100 (set (reg/v:DF 100 [ maxEl.174 ])
        (reg/v:DF 96 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 96 [ maxEl.174 ])
        (nil)))

(jump_insn:HI 561 421 562 56 (set (pc)
        (label_ref 560)) 548 {jump} (nil)
    (nil))
;; End of basic block 56, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 100

(barrier:HI 562 561 559)

;; Start of basic block 57, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 97 100
(code_label:HI 559 562 425 57 166 "" [1 uses])

(note:HI 425 559 424 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn:HI 424 425 560 57 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 97 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 97 [ i ])
        (nil)))
;; End of basic block 57, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 100

;; Start of basic block 58, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 100
(code_label:HI 560 424 429 58 167 "" [1 uses])

(note:HI 429 560 427 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(note:HI 427 429 433 58 NOTE_INSN_DELETED)

(note:HI 433 427 434 58 ("./CStatUtilities.c") 98)

(insn:HI 434 433 440 58 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 101 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 440 434 441 58 ("./CStatUtilities.c") 100)

(insn:HI 441 440 442 58 ./CStatUtilities.c:100 (set (reg/v:DF 104 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 48 [0x30])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 442 441 443 58 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 104 [ maxEl.174 ])
            (reg/v:DF 100 [ maxEl.174 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 441 (nil))
    (nil))

(jump_insn:HI 443 442 448 58 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 563)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 442 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 58, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 100 101 104

;; Start of basic block 59, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 100
(note:HI 448 443 447 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn:HI 447 448 565 59 ./CStatUtilities.c:100 (set (reg/v:DF 104 [ maxEl.174 ])
        (reg/v:DF 100 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 100 [ maxEl.174 ])
        (nil)))

(jump_insn:HI 565 447 566 59 (set (pc)
        (label_ref 564)) 548 {jump} (nil)
    (nil))
;; End of basic block 59, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 104

(barrier:HI 566 565 563)

;; Start of basic block 60, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 101 104
(code_label:HI 563 566 451 60 168 "" [1 uses])

(note:HI 451 563 450 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn:HI 450 451 564 60 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 101 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 101 [ i ])
        (nil)))
;; End of basic block 60, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 104

;; Start of basic block 61, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 104
(code_label:HI 564 450 455 61 169 "" [1 uses])

(note:HI 455 564 453 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(note:HI 453 455 459 61 NOTE_INSN_DELETED)

(note:HI 459 453 460 61 ("./CStatUtilities.c") 98)

(insn:HI 460 459 466 61 ./CStatUtilities.c:98 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 71)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 466 460 467 61 ("./CStatUtilities.c") 100)

(insn:HI 467 466 468 61 ./CStatUtilities.c:100 (set (reg/v:DF 107 [ maxEl.174 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 56 [0x38])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 468 467 469 61 ./CStatUtilities.c:100 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 107 [ maxEl.174 ])
            (reg/v:DF 104 [ maxEl.174 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 467 (nil))
    (nil))

(jump_insn:HI 469 468 474 61 ./CStatUtilities.c:100 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 567)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 468 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 61, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 104 107

;; Start of basic block 62, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 104
(note:HI 474 469 473 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn:HI 473 474 569 62 ./CStatUtilities.c:100 (set (reg/v:DF 107 [ maxEl.174 ])
        (reg/v:DF 104 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 104 [ maxEl.174 ])
        (nil)))

(jump_insn:HI 569 473 570 62 (set (pc)
        (label_ref 568)) 548 {jump} (nil)
    (nil))
;; End of basic block 62, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 107

(barrier:HI 570 569 567)

;; Start of basic block 63, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 72 77 107
(code_label:HI 567 570 477 63 170 "" [1 uses])

(note:HI 477 567 476 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn:HI 476 477 568 63 ./CStatUtilities.c:100 (set (reg/v:SI 62 [ maxIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 63, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 107

;; Start of basic block 64, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 107
(code_label:HI 568 476 481 64 171 "" [1 uses])

(note:HI 481 568 479 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn:HI 479 481 480 64 ./CStatUtilities.c:100 (parallel [
            (set (reg/f:DI 60 [ ivtmp.173 ])
                (plus:DI (reg/f:DI 72)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 72)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 480 479 571 64 ./CStatUtilities.c:100 (set (reg/v:DF 63 [ maxEl ])
        (reg/v:DF 107 [ maxEl.174 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 107 [ maxEl.174 ])
        (nil)))

(jump_insn:HI 571 480 572 64 (set (pc)
        (label_ref 41)) 548 {jump} (nil)
    (nil))
;; End of basic block 64, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

(barrier:HI 572 571 0)


;; Function which_min (which_min)



Pass 0

  Register 59 costs: AREG:3198 DREG:3198 CREG:3198 BREG:3198 SIREG:3198 DIREG:3198 AD_REGS:3198 Q_REGS:3198 NON_Q_REGS:7040 INDEX_REGS:3198 LEGACY_REGS:7040 GENERAL_REGS:7040 FP_TOP_REG:5166 FP_SECOND_REG:5166 FLOAT_REGS:5166 SSE_REGS:0 FP_TOP_SSE_REGS:5166 FP_SECOND_SSE_REGS:5166 FLOAT_SSE_REGS:5166 FLOAT_INT_REGS:5166 INT_SSE_REGS:3198 FLOAT_INT_SSE_REGS:5166 ALL_REGS:9912 MEM:2700
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:31421 MMX_REGS:31421 FP_TOP_SSE_REGS:31421 FP_SECOND_SSE_REGS:31421 FLOAT_SSE_REGS:31421 FLOAT_INT_REGS:21753 INT_SSE_REGS:31421 FLOAT_INT_SSE_REGS:31421 ALL_REGS:31421 MEM:8174
  Register 62 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15171 MMX_REGS:15171 FP_TOP_SSE_REGS:15171 FP_SECOND_SSE_REGS:15171 FLOAT_SSE_REGS:15171 FLOAT_INT_REGS:10503 INT_SSE_REGS:15171 FLOAT_INT_SSE_REGS:15171 ALL_REGS:15171 MEM:4557
  Register 63 costs: AREG:10699 DREG:10699 CREG:10699 BREG:10699 SIREG:10699 DIREG:10699 AD_REGS:10699 Q_REGS:10699 NON_Q_REGS:30861 INDEX_REGS:10699 LEGACY_REGS:30861 GENERAL_REGS:30861 FP_TOP_REG:17283 FP_SECOND_REG:17283 FLOAT_REGS:17283 SSE_REGS:0 FP_TOP_SSE_REGS:17283 FP_SECOND_SSE_REGS:17283 FLOAT_SSE_REGS:17283 FLOAT_INT_REGS:17283 INT_SSE_REGS:10699 FLOAT_INT_SSE_REGS:17283 ALL_REGS:42189 MEM:10994
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 FP_TOP_SSE_REGS:4186 FP_SECOND_SSE_REGS:4186 FLOAT_SSE_REGS:4186 FLOAT_INT_REGS:2898 INT_SSE_REGS:4186 FLOAT_INT_SSE_REGS:4186 ALL_REGS:4186 MEM:1188
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5967 MMX_REGS:5967 INT_SSE_REGS:5967 MEM:1699
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6812 MMX_REGS:6812 FP_TOP_SSE_REGS:6812 FP_SECOND_SSE_REGS:6812 FLOAT_SSE_REGS:6812 FLOAT_INT_REGS:4716 INT_SSE_REGS:6812 FLOAT_INT_SSE_REGS:6812 ALL_REGS:6812 MEM:1572
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:14703 MMX_REGS:14703 FP_TOP_SSE_REGS:14703 FP_SECOND_SSE_REGS:14703 FLOAT_SSE_REGS:14703 FLOAT_INT_REGS:10179 INT_SSE_REGS:14703 FLOAT_INT_SSE_REGS:14703 ALL_REGS:14703 MEM:4071
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13299 MMX_REGS:13299 FP_TOP_SSE_REGS:13299 FP_SECOND_SSE_REGS:13299 FLOAT_SSE_REGS:13299 FLOAT_INT_REGS:9207 INT_SSE_REGS:13299 FLOAT_INT_SSE_REGS:13299 ALL_REGS:13299 MEM:3858
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2392 MMX_REGS:2392 FP_TOP_SSE_REGS:2392 FP_SECOND_SSE_REGS:2392 FLOAT_SSE_REGS:2392 FLOAT_INT_REGS:1656 INT_SSE_REGS:2392 FLOAT_INT_SSE_REGS:2392 ALL_REGS:2392 MEM:675
  Register 75 costs: AREG:3042 DREG:3042 CREG:3042 BREG:3042 SIREG:3042 DIREG:3042 AD_REGS:3042 Q_REGS:3042 NON_Q_REGS:6799 INDEX_REGS:3042 LEGACY_REGS:6799 GENERAL_REGS:6799 FP_TOP_REG:4914 FP_SECOND_REG:4914 FLOAT_REGS:4914 SSE_REGS:0 FP_TOP_SSE_REGS:4914 FP_SECOND_SSE_REGS:4914 FLOAT_SSE_REGS:4914 FLOAT_INT_REGS:4914 INT_SSE_REGS:3042 FLOAT_INT_SSE_REGS:4914 ALL_REGS:9555 MEM:2584
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:28067 MMX_REGS:28067 FP_TOP_SSE_REGS:28067 FP_SECOND_SSE_REGS:28067 FLOAT_SSE_REGS:28067 FLOAT_INT_REGS:19431 INT_SSE_REGS:28067 FLOAT_INT_SSE_REGS:28067 ALL_REGS:28067 MEM:6577
  Register 78 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 79 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 80 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 81 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 82 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 83 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 84 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 85 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 87 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 89 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 91 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 95 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 97 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 99 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 101 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 103 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 106 costs: AREG:1443 DREG:1443 CREG:1443 BREG:1443 SIREG:1443 DIREG:1443 AD_REGS:1443 Q_REGS:1443 NON_Q_REGS:6050 INDEX_REGS:1443 LEGACY_REGS:6050 GENERAL_REGS:6050 FP_TOP_REG:2331 FP_SECOND_REG:2331 FLOAT_REGS:2331 SSE_REGS:0 FP_TOP_SSE_REGS:2331 FP_SECOND_SSE_REGS:2331 FLOAT_SSE_REGS:2331 FLOAT_INT_REGS:2331 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:2331 ALL_REGS:8022 MEM:1750

  Register 59 pref SSE_REGS or none
  Register 60 pref GENERAL_REGS or none
  Register 62 pref AREG, else GENERAL_REGS
  Register 63 pref SSE_REGS, else INT_SSE_REGS
  Register 65 pref DIREG, else GENERAL_REGS
  Register 66 pref SIREG, else GENERAL_REGS
  Register 68 pref GENERAL_REGS or none
  Register 70 pref GENERAL_REGS or none
  Register 71 pref GENERAL_REGS or none
  Register 72 pref GENERAL_REGS or none
  Register 73 pref GENERAL_REGS or none
  Register 75 pref SSE_REGS or none
  Register 77 pref GENERAL_REGS or none
  Register 78 pref SSE_REGS, else INT_SSE_REGS
  Register 79 pref SSE_REGS, else INT_SSE_REGS
  Register 80 pref SSE_REGS, else INT_SSE_REGS
  Register 81 pref SSE_REGS, else INT_SSE_REGS
  Register 82 pref SSE_REGS, else INT_SSE_REGS
  Register 83 pref SSE_REGS, else INT_SSE_REGS
  Register 84 pref SSE_REGS, else INT_SSE_REGS
  Register 85 pref GENERAL_REGS or none
  Register 87 pref SSE_REGS or none
  Register 89 pref GENERAL_REGS or none
  Register 91 pref SSE_REGS or none
  Register 93 pref GENERAL_REGS or none
  Register 95 pref SSE_REGS or none
  Register 97 pref GENERAL_REGS or none
  Register 99 pref SSE_REGS or none
  Register 101 pref GENERAL_REGS or none
  Register 103 pref SSE_REGS or none
  Register 106 pref SSE_REGS, else INT_SSE_REGS


Pass 1

  Register 59 costs: AREG:3198 DREG:3198 CREG:3198 BREG:3198 SIREG:3198 DIREG:3198 AD_REGS:3198 Q_REGS:3198 NON_Q_REGS:7040 INDEX_REGS:3198 LEGACY_REGS:7040 GENERAL_REGS:7040 FP_TOP_REG:5166 FP_SECOND_REG:5166 FLOAT_REGS:5166 SSE_REGS:0 FP_TOP_SSE_REGS:5166 FP_SECOND_SSE_REGS:5166 FLOAT_SSE_REGS:5166 FLOAT_INT_REGS:5166 INT_SSE_REGS:3198 FLOAT_INT_SSE_REGS:5166 ALL_REGS:9912 MEM:2700
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-100 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:31421 MMX_REGS:31421 FP_TOP_SSE_REGS:31421 FP_SECOND_SSE_REGS:31421 FLOAT_SSE_REGS:31421 FLOAT_INT_REGS:21753 INT_SSE_REGS:31421 FLOAT_INT_SSE_REGS:31421 ALL_REGS:31421 MEM:8174
  Register 62 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:15171 MMX_REGS:15171 FP_TOP_SSE_REGS:15171 FP_SECOND_SSE_REGS:15171 FLOAT_SSE_REGS:15171 FLOAT_INT_REGS:10503 INT_SSE_REGS:15171 FLOAT_INT_SSE_REGS:15171 ALL_REGS:15171 MEM:4557
  Register 63 costs: AREG:10699 DREG:10699 CREG:10699 BREG:10699 SIREG:10699 DIREG:10699 AD_REGS:10699 Q_REGS:10699 NON_Q_REGS:30861 INDEX_REGS:10699 LEGACY_REGS:30861 GENERAL_REGS:30861 FP_TOP_REG:17283 FP_SECOND_REG:17283 FLOAT_REGS:17283 SSE_REGS:0 FP_TOP_SSE_REGS:17283 FP_SECOND_SSE_REGS:17283 FLOAT_SSE_REGS:17283 FLOAT_INT_REGS:17283 INT_SSE_REGS:10699 FLOAT_INT_SSE_REGS:17283 ALL_REGS:42189 MEM:10994
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 FP_TOP_SSE_REGS:4186 FP_SECOND_SSE_REGS:4186 FLOAT_SSE_REGS:4186 FLOAT_INT_REGS:2898 INT_SSE_REGS:4186 FLOAT_INT_SSE_REGS:4186 ALL_REGS:4186 MEM:1188
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5967 MMX_REGS:5967 INT_SSE_REGS:5967 MEM:1699
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 INT_SSE_REGS:2600 MEM:700
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6812 MMX_REGS:6812 FP_TOP_SSE_REGS:6812 FP_SECOND_SSE_REGS:6812 FLOAT_SSE_REGS:6812 FLOAT_INT_REGS:4716 INT_SSE_REGS:6812 FLOAT_INT_SSE_REGS:6812 ALL_REGS:6812 MEM:1572
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:14703 MMX_REGS:14703 FP_TOP_SSE_REGS:14703 FP_SECOND_SSE_REGS:14703 FLOAT_SSE_REGS:14703 FLOAT_INT_REGS:10179 INT_SSE_REGS:14703 FLOAT_INT_SSE_REGS:14703 ALL_REGS:14703 MEM:4071
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13299 MMX_REGS:13299 FP_TOP_SSE_REGS:13299 FP_SECOND_SSE_REGS:13299 FLOAT_SSE_REGS:13299 FLOAT_INT_REGS:9207 INT_SSE_REGS:13299 FLOAT_INT_SSE_REGS:13299 ALL_REGS:13299 MEM:3858
  Register 73 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2392 MMX_REGS:2392 FP_TOP_SSE_REGS:2392 FP_SECOND_SSE_REGS:2392 FLOAT_SSE_REGS:2392 FLOAT_INT_REGS:1656 INT_SSE_REGS:2392 FLOAT_INT_SSE_REGS:2392 ALL_REGS:2392 MEM:675
  Register 75 costs: AREG:3042 DREG:3042 CREG:3042 BREG:3042 SIREG:3042 DIREG:3042 AD_REGS:3042 Q_REGS:3042 NON_Q_REGS:6799 INDEX_REGS:3042 LEGACY_REGS:6799 GENERAL_REGS:6799 FP_TOP_REG:4914 FP_SECOND_REG:4914 FLOAT_REGS:4914 SSE_REGS:0 FP_TOP_SSE_REGS:4914 FP_SECOND_SSE_REGS:4914 FLOAT_SSE_REGS:4914 FLOAT_INT_REGS:4914 INT_SSE_REGS:3042 FLOAT_INT_SSE_REGS:4914 ALL_REGS:9555 MEM:2584
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:28067 MMX_REGS:28067 FP_TOP_SSE_REGS:28067 FP_SECOND_SSE_REGS:28067 FLOAT_SSE_REGS:28067 FLOAT_INT_REGS:19431 INT_SSE_REGS:28067 FLOAT_INT_SSE_REGS:28067 ALL_REGS:28067 MEM:6577
  Register 78 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 79 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 80 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 81 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 82 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 83 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 84 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:5210 INDEX_REGS:1300 LEGACY_REGS:5210 GENERAL_REGS:5210 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:6930 MEM:1530
  Register 85 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 87 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 89 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 91 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 93 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 95 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 97 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 99 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 101 costs: AREG:-61 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2236 MMX_REGS:2236 FP_TOP_SSE_REGS:2236 FP_SECOND_SSE_REGS:2236 FLOAT_SSE_REGS:2236 FLOAT_INT_REGS:1548 INT_SSE_REGS:2236 FLOAT_INT_SSE_REGS:2236 ALL_REGS:2236 MEM:627
  Register 103 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6439 INDEX_REGS:2886 LEGACY_REGS:6439 GENERAL_REGS:6439 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9051 MEM:2452
  Register 106 costs: AREG:1443 DREG:1443 CREG:1443 BREG:1443 SIREG:1443 DIREG:1443 AD_REGS:1443 Q_REGS:1443 NON_Q_REGS:6050 INDEX_REGS:1443 LEGACY_REGS:6050 GENERAL_REGS:6050 FP_TOP_REG:2331 FP_SECOND_REG:2331 FLOAT_REGS:2331 SSE_REGS:0 FP_TOP_SSE_REGS:2331 FP_SECOND_SSE_REGS:2331 FLOAT_SSE_REGS:2331 FLOAT_INT_REGS:2331 INT_SSE_REGS:1443 FLOAT_INT_SSE_REGS:2331 ALL_REGS:8022 MEM:1750

  Register 60 pref DIREG, else GENERAL_REGS
  Register 73 pref AREG, else GENERAL_REGS
  Register 85 pref AREG, else GENERAL_REGS
  Register 89 pref AREG, else GENERAL_REGS
  Register 93 pref AREG, else GENERAL_REGS
  Register 97 pref AREG, else GENERAL_REGS
  Register 101 pref AREG, else GENERAL_REGS
108 registers.

Register 59 used 5 times across 13 insns; set 2 times; user var; SSE_REGS or none.

Register 60 used 25 times across 104 insns; set 9 times; pref DIREG, else GENERAL_REGS; pointer.

Register 62 used 18 times across 300 insns; set 17 times; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 63 used 25 times across 76 insns; set 9 times; user var; dies in 8 places; pref SSE_REGS, else INT_SSE_REGS.

Register 65 used 3 times across 8 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 66 used 4 times across 152 insns; set 1 time; user var; dies in 0 places; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 68 used 3 times across 2 insns in block 7; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 70 used 7 times across 22 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 71 used 10 times across 54 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 72 used 9 times across 51 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 73 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 75 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 77 used 25 times across 198 insns; set 9 times; user var; 4 bytes; GENERAL_REGS or none.

Register 78 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 79 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 80 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 81 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 82 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 83 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 84 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

Register 85 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 87 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 89 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 91 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 93 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 95 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 97 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 99 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 101 used 2 times across 5 insns; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 103 used 5 times across 11 insns; set 2 times; user var; SSE_REGS or none.

Register 106 used 4 times across 8 insns; set 2 times; user var; pref SSE_REGS, else INT_SSE_REGS.

65 basic blocks, 90 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  9 [10.0%]  1 [90.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 65 66

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%]  (fallthru)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 1233, maybe hot.
Predecessors:  5 [90.0%] 
Successors:  4 [44.4%]  3 [55.6%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 63 66 71

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 685, maybe hot.
Predecessors:  2 [55.6%]  (fallthru)
Successors:  43 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 66 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 548, maybe hot.
Predecessors:  2 [44.4%] 
Successors:  43 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 1370, maybe hot.
Predecessors:  42 [100.0%]  64 [100.0%]  (dfs_back) 8 [100.0%]  13 [14.3%] 
Successors:  2 [90.0%]  6 [10.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71
Invalid sum of incoming frequencies 2264, should be 1370

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  5 [10.0%]  (fallthru,loop_exit)
Successors:  9 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Invalid sum of incoming frequencies 137, should be 1000

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  1 [100.0%] 
Successors:  10 [87.5%]  8 [12.5%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 125, maybe hot.
Predecessors:  7 [12.5%]  (fallthru)
Successors:  5 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  0 [10.0%]  6 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  7 [87.5%] 
Successors:  11 [44.4%]  (fallthru) 12 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77 78
Invalid sum of incoming frequencies 875, should be 1000

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  10 [44.4%]  (fallthru)
Successors:  13 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  10 [55.6%] 
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 70 77 78
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 11 [100.0%] 
Successors:  14 [85.7%]  (fallthru) 5 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  13 [85.7%]  (fallthru)
Successors:  15 [83.3%]  (fallthru) 39 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  14 [83.3%]  (fallthru)
Successors:  16 [80.0%]  (fallthru) 35 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  15 [80.0%]  (fallthru)
Successors:  17 [75.0%]  (fallthru) 31 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  16 [75.0%]  (fallthru)
Successors:  18 [66.7%]  (fallthru) 27 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  17 [66.7%]  (fallthru)
Successors:  19 [50.0%]  (fallthru) 23 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Invalid sum of incoming frequencies 300, should be 900

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
Successors:  20 [44.4%]  (fallthru) 21 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 79
Invalid sum of incoming frequencies 450, should be 1000

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  19 [44.4%]  (fallthru)
Successors:  22 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  19 [55.6%] 
Successors:  22 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  21 [100.0%]  (fallthru) 20 [100.0%] 
Successors:  23 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  22 [100.0%]  (fallthru) 18 [50.0%] 
Successors:  24 [44.4%]  (fallthru) 25 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 80
Invalid sum of incoming frequencies 1350, should be 1000

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  23 [44.4%]  (fallthru)
Successors:  26 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  23 [55.6%] 
Successors:  26 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 80
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  25 [100.0%]  (fallthru) 24 [100.0%] 
Successors:  27 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  26 [100.0%]  (fallthru) 17 [33.3%] 
Successors:  28 [44.4%]  (fallthru) 29 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 81

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  27 [44.4%]  (fallthru)
Successors:  30 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81

Basic block 29 prev 28, next 30, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  27 [55.6%] 
Successors:  30 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 81
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81

Basic block 30 prev 29, next 31, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  29 [100.0%]  (fallthru) 28 [100.0%] 
Successors:  31 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  30 [100.0%]  (fallthru) 16 [25.0%] 
Successors:  32 [44.4%]  (fallthru) 33 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 82

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  31 [44.4%]  (fallthru)
Successors:  34 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  31 [55.6%] 
Successors:  34 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 32 [100.0%] 
Successors:  35 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  34 [100.0%]  (fallthru) 15 [20.0%] 
Successors:  36 [44.4%]  (fallthru) 37 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 83

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  35 [44.4%]  (fallthru)
Successors:  38 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83

Basic block 37 prev 36, next 38, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  35 [55.6%] 
Successors:  38 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83

Basic block 38 prev 37, next 39, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  37 [100.0%]  (fallthru) 36 [100.0%] 
Successors:  39 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 39 prev 38, next 40, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  38 [100.0%]  (fallthru) 14 [16.7%] 
Successors:  40 [44.4%]  (fallthru) 41 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 84

Basic block 40 prev 39, next 41, loop_depth 0, count 0, freq 400, maybe hot.
Predecessors:  39 [44.4%]  (fallthru)
Successors:  42 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84

Basic block 41 prev 40, next 42, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  39 [55.6%] 
Successors:  42 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 84
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84

Basic block 42 prev 41, next 43, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  41 [100.0%]  (fallthru) 40 [100.0%] 
Successors:  5 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

Basic block 43 prev 42, next 44, loop_depth 1, count 0, freq 1233, maybe hot.
Predecessors:  3 [100.0%]  4 [100.0%] 
Successors:  44 [44.4%]  (fallthru) 45 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 66 71 72 73 75

Basic block 44 prev 43, next 45, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  43 [44.4%]  (fallthru)
Successors:  46 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 66 71 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 75

Basic block 45 prev 44, next 46, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  43 [55.6%] 
Successors:  46 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 73 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 75

Basic block 46 prev 45, next 47, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  45 [100.0%]  (fallthru) 44 [100.0%] 
Successors:  47 [44.4%]  (fallthru) 48 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 75 85 87

Basic block 47 prev 46, next 48, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  46 [44.4%]  (fallthru)
Successors:  49 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 87

Basic block 48 prev 47, next 49, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  46 [55.6%] 
Successors:  49 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 85 87
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 87

Basic block 49 prev 48, next 50, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  48 [100.0%]  (fallthru) 47 [100.0%] 
Successors:  50 [44.4%]  (fallthru) 51 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 87
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 87 89 91

Basic block 50 prev 49, next 51, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  49 [44.4%]  (fallthru)
Successors:  52 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 87
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 91

Basic block 51 prev 50, next 52, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  49 [55.6%] 
Successors:  52 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 89 91
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 91

Basic block 52 prev 51, next 53, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  51 [100.0%]  (fallthru) 50 [100.0%] 
Successors:  53 [44.4%]  (fallthru) 54 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 91
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 91 93 95

Basic block 53 prev 52, next 54, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  52 [44.4%]  (fallthru)
Successors:  55 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 91
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 95

Basic block 54 prev 53, next 55, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  52 [55.6%] 
Successors:  55 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 93 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 95

Basic block 55 prev 54, next 56, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  54 [100.0%]  (fallthru) 53 [100.0%] 
Successors:  56 [44.4%]  (fallthru) 57 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 95 97 99

Basic block 56 prev 55, next 57, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  55 [44.4%]  (fallthru)
Successors:  58 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 99

Basic block 57 prev 56, next 58, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  55 [55.6%] 
Successors:  58 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 97 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 99

Basic block 58 prev 57, next 59, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  57 [100.0%]  (fallthru) 56 [100.0%] 
Successors:  59 [44.4%]  (fallthru) 60 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 99 101 103

Basic block 59 prev 58, next 60, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  58 [44.4%]  (fallthru)
Successors:  61 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 99
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 103

Basic block 60 prev 59, next 61, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  58 [55.6%] 
Successors:  61 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 101 103
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 103

Basic block 61 prev 60, next 62, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  60 [100.0%]  (fallthru) 59 [100.0%] 
Successors:  62 [44.4%]  (fallthru) 63 [55.6%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 103
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 103 106

Basic block 62 prev 61, next 63, loop_depth 1, count 0, freq 493, maybe hot.
Predecessors:  61 [44.4%]  (fallthru)
Successors:  64 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 103
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 106

Basic block 63 prev 62, next 64, loop_depth 1, count 0, freq 617, maybe hot.
Predecessors:  61 [55.6%] 
Successors:  64 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 72 77 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 106

Basic block 64 prev 63, next -2, loop_depth 1, count 0, freq 1110, maybe hot.
Predecessors:  63 [100.0%]  (fallthru) 62 [100.0%] 
Successors:  5 [100.0%]  (dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 106
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Register 68 in 0.
(note:HI 1 0 8 ("./CStatUtilities.c") 144)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 8 1 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 4 8 5 0 ./CStatUtilities.c:144 (set (reg/v/f:DI 65 [ x ])
        (reg:DI 5 di [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))

(insn:HI 5 4 6 0 ./CStatUtilities.c:144 (set (reg/v:SI 66 [ n ])
        (reg:SI 4 si [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))

(note:HI 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 10 6 11 0 ("./CStatUtilities.c") 145)

(insn:HI 11 10 12 0 ./CStatUtilities.c:145 (set (reg/v:DF 63 [ minEl ])
        (mem:DF (reg/v/f:DI 65 [ x ]) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(note:HI 12 11 17 0 ("./CStatUtilities.c") 149)

(insn:HI 17 12 13 0 ./CStatUtilities.c:149 (set (reg/v:SI 62 [ minIdx ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 13 17 14 0 ./CStatUtilities.c:149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 66 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 5 (nil))
    (nil))

(jump_insn:HI 14 13 580 0 ./CStatUtilities.c:149 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 47)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 65 66

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
(note:HI 580 14 581 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 581 580 582 1 (set (pc)
        (label_ref 52)) 548 {jump} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66

(barrier:HI 582 581 77)

(note:HI 77 582 20 NOTE_INSN_LOOP_BEG)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71
(code_label:HI 20 77 21 2 197 "" [1 uses])

(note:HI 21 20 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 22 21 23 2 ("./CStatUtilities.c") 151)

(insn:HI 23 22 24 2 ./CStatUtilities.c:151 (set (reg/v:DF 59 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 24 23 25 2 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 63 [ minEl ])
            (reg/v:DF 59 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 23 (nil))
    (nil))

(jump_insn:HI 25 24 30 2 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 34)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 24 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 4444 [0x115c])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 63 66 71

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 66 71
(note:HI 30 25 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 31 30 502 3 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg:SI 71)) 40 {*movsi_1} (nil)
    (nil))

(jump_insn:HI 502 31 503 3 (set (pc)
        (label_ref 37)) 548 {jump} (nil)
    (nil))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71

(barrier:HI 503 502 34)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71
(code_label:HI 34 503 35 4 198 "" [1 uses])

(note:HI 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 36 35 573 4 ./CStatUtilities.c:151 (set (reg/v:DF 59 [ minEl.208 ])
        (reg/v:DF 63 [ minEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ minEl ])
        (nil)))

(jump_insn:HI 573 36 574 4 (set (pc)
        (label_ref 37)) 548 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71

(barrier:HI 574 573 41)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 41 574 42 5 202 "" [4 uses])

(note:HI 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 43 42 484 5 ("./CStatUtilities.c") 149)

(insn:HI 484 43 45 5 ./CStatUtilities.c:149 (parallel [
            (set (reg:SI 71)
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 77 [ i ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 45 484 46 5 ./CStatUtilities.c:149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 71)
            (reg/v:SI 66 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 484 (nil))
    (nil))

(jump_insn:HI 46 45 78 5 ./CStatUtilities.c:149 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 45 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 71

(note:HI 78 46 79 NOTE_INSN_LOOP_END)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(note:HI 79 78 507 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 507 79 508 6 (set (pc)
        (label_ref 47)) 548 {jump} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62

(barrier:HI 508 507 52)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 65 66
(code_label:HI 52 508 53 7 194 "" [1 uses])

(note:HI 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 54 53 55 7 ./CStatUtilities.c:149 (set (reg/f:DI 60 [ ivtmp.207 ])
        (reg/v/f:DI 65 [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 65 [ x ])
        (nil)))

(insn:HI 55 54 56 7 ./CStatUtilities.c:149 (set (reg/v:SI 62 [ minIdx ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 56 55 80 7 ./CStatUtilities.c:149 (set (reg/v:SI 77 [ i ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 80 56 81 7 NOTE_INSN_DELETED)

(insn:HI 81 80 82 7 (parallel [
            (set (reg:SI 68)
                (plus:SI (reg/v:SI 66 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 82 81 299 7 NOTE_INSN_DELETED)

(insn:HI 299 82 300 7 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 68)
                        (const_int 7 [0x7]))
                    (const_int 0 [0x0])))
            (set (reg:SI 70)
                (and:SI (reg:SI 68)
                    (const_int 7 [0x7])))
        ]) 301 {*andsi_2} (insn_list:REG_DEP_TRUE 81 (nil))
    (expr_list:REG_DEAD (reg:SI 68)
        (nil)))

(jump_insn:HI 300 299 510 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 509)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 299 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 510 300 511 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 511 510 512 8 (set (pc)
        (label_ref:DI 41)) 548 {jump} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

(barrier:HI 512 511 59)

(note:HI 59 512 60 NOTE_INSN_FUNCTION_END)

(note:HI 60 59 47 ("./CStatUtilities.c") 159)

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62
(code_label:HI 47 60 48 9 196 "" [2 uses])

(note:HI 48 47 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 62 48 68 9 ./CStatUtilities.c:159 (set (reg/i:SI 0 ax [ <result> ])
        (reg/v:SI 62 [ minIdx ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 62 [ minIdx ])
        (nil)))

(insn:HI 68 62 509 9 ./CStatUtilities.c:159 (use (reg/i:SI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 62 (nil))
    (nil))
;; End of basic block 9, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(code_label:HI 509 68 89 10 240 "" [1 uses])

(note:HI 89 509 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 85 89 86 10 ("./CStatUtilities.c") 149)

(insn:HI 86 85 92 10 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 92 86 93 10 ("./CStatUtilities.c") 151)

(insn:HI 93 92 94 10 ./CStatUtilities.c:151 (set (reg/v:DF 78 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 94 93 95 10 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 63 [ minEl ])
            (reg/v:DF 78 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 93 (nil))
    (nil))

(jump_insn:HI 95 94 100 10 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 513)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 94 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77 78

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 100 95 99 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 99 100 515 11 ./CStatUtilities.c:151 (set (reg/v:DF 78 [ minEl.208 ])
        (reg/v:DF 63 [ minEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ minEl ])
        (nil)))

(jump_insn:HI 515 99 516 11 (set (pc)
        (label_ref 514)) 548 {jump} (nil)
    (nil))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78

(barrier:HI 516 515 513)

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 70 77 78
(code_label:HI 513 516 103 12 241 "" [1 uses])

(note:HI 103 513 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 102 103 514 12 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 70 77 78
(code_label:HI 514 102 107 13 242 "" [1 uses])

(note:HI 107 514 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 105 107 106 13 ./CStatUtilities.c:151 (parallel [
            (set (reg/f:DI 60 [ ivtmp.207 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 106 105 294 13 ./CStatUtilities.c:151 (set (reg/v:DF 63 [ minEl ])
        (reg/v:DF 78 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 78 [ minEl.208 ])
        (nil)))

(insn:HI 294 106 295 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 295 294 265 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 41)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 294 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 265 295 263 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 263 265 264 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 264 263 234 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 575)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 263 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 234 264 232 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:HI 232 234 233 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 233 232 203 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 576)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 232 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 203 233 201 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 201 203 202 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 202 201 172 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 577)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 201 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 172 202 170 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:HI 170 172 171 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 171 170 141 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 578)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 170 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 70 77
(note:HI 141 171 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:HI 139 141 140 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 70)
        (nil)))

(jump_insn:HI 140 139 116 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 579)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 139 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 116 140 112 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 112 116 113 19 ("./CStatUtilities.c") 149)

(insn:HI 113 112 119 19 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 119 113 120 19 ("./CStatUtilities.c") 151)

(insn:HI 120 119 121 19 ./CStatUtilities.c:151 (set (reg/v:DF 79 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 121 120 122 19 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 63 [ minEl ])
            (reg/v:DF 79 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 120 (nil))
    (nil))

(jump_insn:HI 122 121 127 19 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 517)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 121 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 79

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 127 122 126 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:HI 126 127 519 20 ./CStatUtilities.c:151 (set (reg/v:DF 79 [ minEl.208 ])
        (reg/v:DF 63 [ minEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ minEl ])
        (nil)))

(jump_insn:HI 519 126 520 20 (set (pc)
        (label_ref 518)) 548 {jump} (nil)
    (nil))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79

(barrier:HI 520 519 517)

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 79
(code_label:HI 517 520 130 21 243 "" [1 uses])

(note:HI 130 517 129 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:HI 129 130 518 21 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 79
(code_label:HI 518 129 134 22 244 "" [1 uses])

(note:HI 134 518 132 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 132 134 133 22 ./CStatUtilities.c:151 (parallel [
            (set (reg/f:DI 60 [ ivtmp.207 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 133 132 579 22 ./CStatUtilities.c:151 (set (reg/v:DF 63 [ minEl ])
        (reg/v:DF 79 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 79 [ minEl.208 ])
        (nil)))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 579 133 147 23 273 "" [1 uses])

(note:HI 147 579 143 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note:HI 143 147 144 23 ("./CStatUtilities.c") 149)

(insn:HI 144 143 150 23 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 150 144 151 23 ("./CStatUtilities.c") 151)

(insn:HI 151 150 152 23 ./CStatUtilities.c:151 (set (reg/v:DF 80 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 152 151 153 23 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 63 [ minEl ])
            (reg/v:DF 80 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 151 (nil))
    (nil))

(jump_insn:HI 153 152 158 23 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 521)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 152 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 80

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 158 153 157 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:HI 157 158 523 24 ./CStatUtilities.c:151 (set (reg/v:DF 80 [ minEl.208 ])
        (reg/v:DF 63 [ minEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ minEl ])
        (nil)))

(jump_insn:HI 523 157 524 24 (set (pc)
        (label_ref 522)) 548 {jump} (nil)
    (nil))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80

(barrier:HI 524 523 521)

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 80
(code_label:HI 521 524 161 25 245 "" [1 uses])

(note:HI 161 521 160 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:HI 160 161 522 25 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 80
(code_label:HI 522 160 165 26 246 "" [1 uses])

(note:HI 165 522 163 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:HI 163 165 164 26 ./CStatUtilities.c:151 (parallel [
            (set (reg/f:DI 60 [ ivtmp.207 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 164 163 578 26 ./CStatUtilities.c:151 (set (reg/v:DF 63 [ minEl ])
        (reg/v:DF 80 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 80 [ minEl.208 ])
        (nil)))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 578 164 178 27 272 "" [1 uses])

(note:HI 178 578 174 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note:HI 174 178 175 27 ("./CStatUtilities.c") 149)

(insn:HI 175 174 181 27 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 181 175 182 27 ("./CStatUtilities.c") 151)

(insn:HI 182 181 183 27 ./CStatUtilities.c:151 (set (reg/v:DF 81 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 183 182 184 27 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 63 [ minEl ])
            (reg/v:DF 81 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 182 (nil))
    (nil))

(jump_insn:HI 184 183 189 27 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 525)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 183 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 81

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 189 184 188 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:HI 188 189 527 28 ./CStatUtilities.c:151 (set (reg/v:DF 81 [ minEl.208 ])
        (reg/v:DF 63 [ minEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ minEl ])
        (nil)))

(jump_insn:HI 527 188 528 28 (set (pc)
        (label_ref 526)) 548 {jump} (nil)
    (nil))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81

(barrier:HI 528 527 525)

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 81
(code_label:HI 525 528 192 29 247 "" [1 uses])

(note:HI 192 525 191 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:HI 191 192 526 29 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 81
(code_label:HI 526 191 196 30 248 "" [1 uses])

(note:HI 196 526 194 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn:HI 194 196 195 30 ./CStatUtilities.c:151 (parallel [
            (set (reg/f:DI 60 [ ivtmp.207 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 195 194 577 30 ./CStatUtilities.c:151 (set (reg/v:DF 63 [ minEl ])
        (reg/v:DF 81 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 81 [ minEl.208 ])
        (nil)))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 577 195 209 31 271 "" [1 uses])

(note:HI 209 577 205 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note:HI 205 209 206 31 ("./CStatUtilities.c") 149)

(insn:HI 206 205 212 31 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 212 206 213 31 ("./CStatUtilities.c") 151)

(insn:HI 213 212 214 31 ./CStatUtilities.c:151 (set (reg/v:DF 82 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 214 213 215 31 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 63 [ minEl ])
            (reg/v:DF 82 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 213 (nil))
    (nil))

(jump_insn:HI 215 214 220 31 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 529)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 214 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 82

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 220 215 219 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:HI 219 220 531 32 ./CStatUtilities.c:151 (set (reg/v:DF 82 [ minEl.208 ])
        (reg/v:DF 63 [ minEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ minEl ])
        (nil)))

(jump_insn:HI 531 219 532 32 (set (pc)
        (label_ref 530)) 548 {jump} (nil)
    (nil))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82

(barrier:HI 532 531 529)

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 82
(code_label:HI 529 532 223 33 249 "" [1 uses])

(note:HI 223 529 222 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:HI 222 223 530 33 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 82
(code_label:HI 530 222 227 34 250 "" [1 uses])

(note:HI 227 530 225 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:HI 225 227 226 34 ./CStatUtilities.c:151 (parallel [
            (set (reg/f:DI 60 [ ivtmp.207 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 226 225 576 34 ./CStatUtilities.c:151 (set (reg/v:DF 63 [ minEl ])
        (reg/v:DF 82 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 82 [ minEl.208 ])
        (nil)))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 576 226 240 35 270 "" [1 uses])

(note:HI 240 576 236 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note:HI 236 240 237 35 ("./CStatUtilities.c") 149)

(insn:HI 237 236 243 35 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 243 237 244 35 ("./CStatUtilities.c") 151)

(insn:HI 244 243 245 35 ./CStatUtilities.c:151 (set (reg/v:DF 83 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 245 244 246 35 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 63 [ minEl ])
            (reg/v:DF 83 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 244 (nil))
    (nil))

(jump_insn:HI 246 245 251 35 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 533)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 245 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 83

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 251 246 250 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn:HI 250 251 535 36 ./CStatUtilities.c:151 (set (reg/v:DF 83 [ minEl.208 ])
        (reg/v:DF 63 [ minEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ minEl ])
        (nil)))

(jump_insn:HI 535 250 536 36 (set (pc)
        (label_ref 534)) 548 {jump} (nil)
    (nil))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83

(barrier:HI 536 535 533)

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 83
(code_label:HI 533 536 254 37 251 "" [1 uses])

(note:HI 254 533 253 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn:HI 253 254 534 37 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 83
(code_label:HI 534 253 258 38 252 "" [1 uses])

(note:HI 258 534 256 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:HI 256 258 257 38 ./CStatUtilities.c:151 (parallel [
            (set (reg/f:DI 60 [ ivtmp.207 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 257 256 575 38 ./CStatUtilities.c:151 (set (reg/v:DF 63 [ minEl ])
        (reg/v:DF 83 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 83 [ minEl.208 ])
        (nil)))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(code_label:HI 575 257 271 39 269 "" [1 uses])

(note:HI 271 575 267 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note:HI 267 271 268 39 ("./CStatUtilities.c") 149)

(insn:HI 268 267 274 39 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg/v:SI 77 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 274 268 275 39 ("./CStatUtilities.c") 151)

(insn:HI 275 274 276 39 ./CStatUtilities.c:151 (set (reg/v:DF 84 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 276 275 277 39 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 63 [ minEl ])
            (reg/v:DF 84 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 275 (nil))
    (nil))

(jump_insn:HI 277 276 282 39 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 537)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 276 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77 84

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77
(note:HI 282 277 281 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn:HI 281 282 539 40 ./CStatUtilities.c:151 (set (reg/v:DF 84 [ minEl.208 ])
        (reg/v:DF 63 [ minEl ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 63 [ minEl ])
        (nil)))

(jump_insn:HI 539 281 540 40 (set (pc)
        (label_ref 538)) 548 {jump} (nil)
    (nil))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84

(barrier:HI 540 539 537)

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 66 77 84
(code_label:HI 537 540 285 41 253 "" [1 uses])

(note:HI 285 537 284 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn:HI 284 285 538 41 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 66 77 84
(code_label:HI 538 284 289 42 254 "" [1 uses])

(note:HI 289 538 287 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:HI 287 289 288 42 ./CStatUtilities.c:151 (parallel [
            (set (reg/f:DI 60 [ ivtmp.207 ])
                (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 288 287 541 42 ./CStatUtilities.c:151 (set (reg/v:DF 63 [ minEl ])
        (reg/v:DF 84 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 84 [ minEl.208 ])
        (nil)))

(jump_insn:HI 541 288 542 42 (set (pc)
        (label_ref 41)) 548 {jump} (nil)
    (nil))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

(barrier:HI 542 541 37)

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 60 62 66 71
(code_label:HI 37 542 38 43 201 "" [2 uses])

(note:HI 38 37 485 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn:HI 485 38 303 43 ./CStatUtilities.c:151 (parallel [
            (set (reg/f:DI 72)
                (plus:DI (reg/f:DI 60 [ ivtmp.207 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 60 [ ivtmp.207 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 303 485 304 43 ("./CStatUtilities.c") 149)

(insn:HI 304 303 310 43 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 73 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 310 304 311 43 ("./CStatUtilities.c") 151)

(insn:HI 311 310 312 43 ./CStatUtilities.c:151 (set (reg/v:DF 75 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 485 (nil))
    (nil))

(insn:HI 312 311 313 43 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 59 [ minEl.208 ])
            (reg/v:DF 75 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 311 (nil))
    (nil))

(jump_insn:HI 313 312 318 43 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 543)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 312 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 66 71 72 73 75

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 62 66 71 72
(note:HI 318 313 317 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn:HI 317 318 545 44 ./CStatUtilities.c:151 (set (reg/v:DF 75 [ minEl.208 ])
        (reg/v:DF 59 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 59 [ minEl.208 ])
        (nil)))

(jump_insn:HI 545 317 546 44 (set (pc)
        (label_ref 544)) 548 {jump} (nil)
    (nil))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 75

(barrier:HI 546 545 543)

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 73 75
(code_label:HI 543 546 321 45 255 "" [1 uses])

(note:HI 321 543 320 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn:HI 320 321 544 45 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 73 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 73 [ i ])
        (nil)))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 75

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 75
(code_label:HI 544 320 325 46 256 "" [1 uses])

(note:HI 325 544 323 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(note:HI 323 325 329 46 NOTE_INSN_DELETED)

(note:HI 329 323 330 46 ("./CStatUtilities.c") 149)

(insn:HI 330 329 336 46 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 85 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 336 330 337 46 ("./CStatUtilities.c") 151)

(insn:HI 337 336 338 46 ./CStatUtilities.c:151 (set (reg/v:DF 87 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 16 [0x10])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 338 337 339 46 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 75 [ minEl.208 ])
            (reg/v:DF 87 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 337 (nil))
    (nil))

(jump_insn:HI 339 338 344 46 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 547)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 338 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 75 85 87

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 75
(note:HI 344 339 343 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn:HI 343 344 549 47 ./CStatUtilities.c:151 (set (reg/v:DF 87 [ minEl.208 ])
        (reg/v:DF 75 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 75 [ minEl.208 ])
        (nil)))

(jump_insn:HI 549 343 550 47 (set (pc)
        (label_ref 548)) 548 {jump} (nil)
    (nil))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 87

(barrier:HI 550 549 547)

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 85 87
(code_label:HI 547 550 347 48 257 "" [1 uses])

(note:HI 347 547 346 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn:HI 346 347 548 48 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 85 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 85 [ i ])
        (nil)))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 87

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 87
(code_label:HI 548 346 351 49 258 "" [1 uses])

(note:HI 351 548 349 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note:HI 349 351 355 49 NOTE_INSN_DELETED)

(note:HI 355 349 356 49 ("./CStatUtilities.c") 149)

(insn:HI 356 355 362 49 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 89 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 362 356 363 49 ("./CStatUtilities.c") 151)

(insn:HI 363 362 364 49 ./CStatUtilities.c:151 (set (reg/v:DF 91 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 24 [0x18])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 364 363 365 49 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 87 [ minEl.208 ])
            (reg/v:DF 91 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 363 (nil))
    (nil))

(jump_insn:HI 365 364 370 49 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 551)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 364 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 49, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 87 89 91

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 87
(note:HI 370 365 369 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn:HI 369 370 553 50 ./CStatUtilities.c:151 (set (reg/v:DF 91 [ minEl.208 ])
        (reg/v:DF 87 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 87 [ minEl.208 ])
        (nil)))

(jump_insn:HI 553 369 554 50 (set (pc)
        (label_ref 552)) 548 {jump} (nil)
    (nil))
;; End of basic block 50, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 91

(barrier:HI 554 553 551)

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 89 91
(code_label:HI 551 554 373 51 259 "" [1 uses])

(note:HI 373 551 372 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn:HI 372 373 552 51 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 89 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 89 [ i ])
        (nil)))
;; End of basic block 51, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 91

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 91
(code_label:HI 552 372 377 52 260 "" [1 uses])

(note:HI 377 552 375 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(note:HI 375 377 381 52 NOTE_INSN_DELETED)

(note:HI 381 375 382 52 ("./CStatUtilities.c") 149)

(insn:HI 382 381 388 52 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 93 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 388 382 389 52 ("./CStatUtilities.c") 151)

(insn:HI 389 388 390 52 ./CStatUtilities.c:151 (set (reg/v:DF 95 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 32 [0x20])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 390 389 391 52 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 91 [ minEl.208 ])
            (reg/v:DF 95 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 389 (nil))
    (nil))

(jump_insn:HI 391 390 396 52 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 555)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 390 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 52, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 91 93 95

;; Start of basic block 53, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 91
(note:HI 396 391 395 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn:HI 395 396 557 53 ./CStatUtilities.c:151 (set (reg/v:DF 95 [ minEl.208 ])
        (reg/v:DF 91 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 91 [ minEl.208 ])
        (nil)))

(jump_insn:HI 557 395 558 53 (set (pc)
        (label_ref 556)) 548 {jump} (nil)
    (nil))
;; End of basic block 53, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 95

(barrier:HI 558 557 555)

;; Start of basic block 54, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 93 95
(code_label:HI 555 558 399 54 261 "" [1 uses])

(note:HI 399 555 398 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn:HI 398 399 556 54 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 93 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 93 [ i ])
        (nil)))
;; End of basic block 54, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 95

;; Start of basic block 55, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 95
(code_label:HI 556 398 403 55 262 "" [1 uses])

(note:HI 403 556 401 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(note:HI 401 403 407 55 NOTE_INSN_DELETED)

(note:HI 407 401 408 55 ("./CStatUtilities.c") 149)

(insn:HI 408 407 414 55 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 97 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 414 408 415 55 ("./CStatUtilities.c") 151)

(insn:HI 415 414 416 55 ./CStatUtilities.c:151 (set (reg/v:DF 99 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 40 [0x28])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 416 415 417 55 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 95 [ minEl.208 ])
            (reg/v:DF 99 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 415 (nil))
    (nil))

(jump_insn:HI 417 416 422 55 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 559)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 416 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 55, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 95 97 99

;; Start of basic block 56, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 95
(note:HI 422 417 421 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn:HI 421 422 561 56 ./CStatUtilities.c:151 (set (reg/v:DF 99 [ minEl.208 ])
        (reg/v:DF 95 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 95 [ minEl.208 ])
        (nil)))

(jump_insn:HI 561 421 562 56 (set (pc)
        (label_ref 560)) 548 {jump} (nil)
    (nil))
;; End of basic block 56, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 99

(barrier:HI 562 561 559)

;; Start of basic block 57, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 97 99
(code_label:HI 559 562 425 57 263 "" [1 uses])

(note:HI 425 559 424 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn:HI 424 425 560 57 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 97 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 97 [ i ])
        (nil)))
;; End of basic block 57, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 99

;; Start of basic block 58, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 99
(code_label:HI 560 424 429 58 264 "" [1 uses])

(note:HI 429 560 427 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(note:HI 427 429 433 58 NOTE_INSN_DELETED)

(note:HI 433 427 434 58 ("./CStatUtilities.c") 149)

(insn:HI 434 433 440 58 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 101 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 440 434 441 58 ("./CStatUtilities.c") 151)

(insn:HI 441 440 442 58 ./CStatUtilities.c:151 (set (reg/v:DF 103 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 48 [0x30])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 442 441 443 58 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 99 [ minEl.208 ])
            (reg/v:DF 103 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 441 (nil))
    (nil))

(jump_insn:HI 443 442 448 58 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 563)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 442 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 58, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 99 101 103

;; Start of basic block 59, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 99
(note:HI 448 443 447 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn:HI 447 448 565 59 ./CStatUtilities.c:151 (set (reg/v:DF 103 [ minEl.208 ])
        (reg/v:DF 99 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 99 [ minEl.208 ])
        (nil)))

(jump_insn:HI 565 447 566 59 (set (pc)
        (label_ref 564)) 548 {jump} (nil)
    (nil))
;; End of basic block 59, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 103

(barrier:HI 566 565 563)

;; Start of basic block 60, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71 72 101 103
(code_label:HI 563 566 451 60 265 "" [1 uses])

(note:HI 451 563 450 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn:HI 450 451 564 60 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 101 [ i ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 101 [ i ])
        (nil)))
;; End of basic block 60, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 103

;; Start of basic block 61, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 71 72 103
(code_label:HI 564 450 455 61 266 "" [1 uses])

(note:HI 455 564 453 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(note:HI 453 455 459 61 NOTE_INSN_DELETED)

(note:HI 459 453 460 61 ("./CStatUtilities.c") 149)

(insn:HI 460 459 466 61 ./CStatUtilities.c:149 (parallel [
            (set (reg/v:SI 77 [ i ])
                (plus:SI (reg:SI 71)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 71)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 466 460 467 61 ("./CStatUtilities.c") 151)

(insn:HI 467 466 468 61 ./CStatUtilities.c:151 (set (reg/v:DF 106 [ minEl.208 ])
        (mem:DF (plus:DI (reg/f:DI 72)
                (const_int 56 [0x38])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 468 467 469 61 ./CStatUtilities.c:151 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 103 [ minEl.208 ])
            (reg/v:DF 106 [ minEl.208 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 467 (nil))
    (nil))

(jump_insn:HI 469 468 474 61 ./CStatUtilities.c:151 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 567)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 468 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5556 [0x15b4])
            (nil))))
;; End of basic block 61, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 103 106

;; Start of basic block 62, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 103
(note:HI 474 469 473 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn:HI 473 474 569 62 ./CStatUtilities.c:151 (set (reg/v:DF 106 [ minEl.208 ])
        (reg/v:DF 103 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 103 [ minEl.208 ])
        (nil)))

(jump_insn:HI 569 473 570 62 (set (pc)
        (label_ref 568)) 548 {jump} (nil)
    (nil))
;; End of basic block 62, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 106

(barrier:HI 570 569 567)

;; Start of basic block 63, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 72 77 106
(code_label:HI 567 570 477 63 267 "" [1 uses])

(note:HI 477 567 476 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn:HI 476 477 568 63 ./CStatUtilities.c:151 (set (reg/v:SI 62 [ minIdx ])
        (reg/v:SI 77 [ i ])) 40 {*movsi_1} (nil)
    (nil))
;; End of basic block 63, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 106

;; Start of basic block 64, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 72 77 106
(code_label:HI 568 476 481 64 268 "" [1 uses])

(note:HI 481 568 479 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn:HI 479 481 480 64 ./CStatUtilities.c:151 (parallel [
            (set (reg/f:DI 60 [ ivtmp.207 ])
                (plus:DI (reg/f:DI 72)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 72)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 480 479 571 64 ./CStatUtilities.c:151 (set (reg/v:DF 63 [ minEl ])
        (reg/v:DF 106 [ minEl.208 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 106 [ minEl.208 ])
        (nil)))

(jump_insn:HI 571 480 572 64 (set (pc)
        (label_ref 41)) 548 {jump} (nil)
    (nil))
;; End of basic block 64, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 62 63 66 77

(barrier:HI 572 571 0)


;; Function mean (mean)



Pass 0

  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6383 MMX_REGS:6383 FP_TOP_SSE_REGS:6383 FP_SECOND_SSE_REGS:6383 FLOAT_SSE_REGS:6383 FLOAT_INT_REGS:4419 INT_SSE_REGS:6383 FLOAT_INT_SSE_REGS:6383 ALL_REGS:6383 MEM:1874
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9412 MMX_REGS:9412 FP_TOP_SSE_REGS:9412 FP_SECOND_SSE_REGS:9412 FLOAT_SSE_REGS:9412 FLOAT_INT_REGS:6516 INT_SSE_REGS:9412 FLOAT_INT_SSE_REGS:9412 ALL_REGS:9412 MEM:2494
  Register 65 costs: AREG:3108 DREG:3108 CREG:3108 BREG:3108 SIREG:3108 DIREG:3108 AD_REGS:3108 Q_REGS:3108 NON_Q_REGS:3108 INDEX_REGS:3108 LEGACY_REGS:3108 GENERAL_REGS:3108 FP_TOP_REG:4884 FP_SECOND_REG:4884 FLOAT_REGS:4884 SSE_REGS:222 FP_TOP_SSE_REGS:4884 FP_SECOND_SSE_REGS:4884 FLOAT_SSE_REGS:4884 FLOAT_INT_REGS:4884 INT_SSE_REGS:3108 FLOAT_INT_SSE_REGS:4884 ALL_REGS:4884 MEM:1887
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 75 costs: AREG:41653 DREG:41653 CREG:41653 BREG:41653 SIREG:41653 DIREG:41653 AD_REGS:41653 Q_REGS:41653 NON_Q_REGS:43540 INDEX_REGS:41653 LEGACY_REGS:43540 GENERAL_REGS:43540 FP_TOP_REG:67149 FP_SECOND_REG:67149 FLOAT_REGS:67149 SSE_REGS:222 FP_TOP_SSE_REGS:67149 FP_SECOND_SSE_REGS:67149 FLOAT_SSE_REGS:67149 FLOAT_INT_REGS:67149 INT_SSE_REGS:41653 FLOAT_INT_SSE_REGS:67149 ALL_REGS:69480 MEM:26162

  Register 62 pref DIREG, else GENERAL_REGS
  Register 63 pref SIREG, else GENERAL_REGS
  Register 65 pref SSE_REGS or none
  Register 70 pref GENERAL_REGS or none
  Register 73 pref GENERAL_REGS or none
  Register 74 pref GENERAL_REGS or none
  Register 75 pref SSE_REGS or none


Pass 1

  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6383 MMX_REGS:6383 FP_TOP_SSE_REGS:6383 FP_SECOND_SSE_REGS:6383 FLOAT_SSE_REGS:6383 FLOAT_INT_REGS:4419 INT_SSE_REGS:6383 FLOAT_INT_SSE_REGS:6383 ALL_REGS:6383 MEM:1874
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9412 MMX_REGS:9412 FP_TOP_SSE_REGS:9412 FP_SECOND_SSE_REGS:9412 FLOAT_SSE_REGS:9412 FLOAT_INT_REGS:6516 INT_SSE_REGS:9412 FLOAT_INT_SSE_REGS:9412 ALL_REGS:9412 MEM:2494
  Register 65 costs: AREG:3108 DREG:3108 CREG:3108 BREG:3108 SIREG:3108 DIREG:3108 AD_REGS:3108 Q_REGS:3108 NON_Q_REGS:3108 INDEX_REGS:3108 LEGACY_REGS:3108 GENERAL_REGS:3108 FP_TOP_REG:4884 FP_SECOND_REG:4884 FLOAT_REGS:4884 SSE_REGS:222 FP_TOP_SSE_REGS:4884 FP_SECOND_SSE_REGS:4884 FLOAT_SSE_REGS:4884 FLOAT_INT_REGS:4884 INT_SSE_REGS:3108 FLOAT_INT_SSE_REGS:4884 ALL_REGS:4884 MEM:1887
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 75 costs: AREG:41653 DREG:41653 CREG:41653 BREG:41653 SIREG:41653 DIREG:41653 AD_REGS:41653 Q_REGS:41653 NON_Q_REGS:43540 INDEX_REGS:41653 LEGACY_REGS:43540 GENERAL_REGS:43540 FP_TOP_REG:67149 FP_SECOND_REG:67149 FLOAT_REGS:67149 SSE_REGS:222 FP_TOP_SSE_REGS:67149 FP_SECOND_SSE_REGS:67149 FLOAT_SSE_REGS:67149 FLOAT_INT_REGS:67149 INT_SSE_REGS:41653 FLOAT_INT_SSE_REGS:67149 ALL_REGS:69480 MEM:26162

97 registers.

Register 62 used 5 times across 29 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 63 used 7 times across 63 insns; set 1 time; user var; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 65 used 2 times across 2 insns in block 2; set 1 time; SSE_REGS or none.

Register 70 used 10 times across 21 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 73 used 19 times across 120 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 74 used 30 times across 58 insns; set 9 times; dies in 0 places; GENERAL_REGS or none; pointer.

Register 75 used 35 times across 308 insns; set 18 times; user var; SSE_REGS or none.

20 basic blocks, 32 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  3 [90.0%]  1 [10.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  0 [10.0%]  (fallthru)
Successors:  2 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 75

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  1 [100.0%]  (fallthru) 18 [10.0%]  (loop_exit) 3 [10.0%]  17 [10.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  4 [90.0%]  (fallthru,dfs_back) 2 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  3 [90.0%]  (fallthru,dfs_back)
Successors:  5 [87.5%]  (fallthru) 18 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
Invalid sum of incoming frequencies 900, should be 771

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  4 [87.5%]  (fallthru)
Successors:  6 [85.7%]  (fallthru) 17 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  5 [85.7%]  (fallthru)
Successors:  7 [83.3%]  (fallthru) 16 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  6 [83.3%]  (fallthru)
Successors:  8 [80.0%]  (fallthru) 15 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  7 [80.0%]  (fallthru)
Successors:  9 [75.0%]  (fallthru) 14 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  8 [75.0%]  (fallthru)
Successors:  10 [66.7%]  (fallthru) 13 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  9 [66.7%]  (fallthru)
Successors:  11 [50.0%]  (fallthru) 12 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 73 74 75
Invalid sum of incoming frequencies 300, should be 900

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
Successors:  12 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Invalid sum of incoming frequencies 450, should be 900

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 10 [50.0%] 
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Invalid sum of incoming frequencies 1350, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 9 [33.3%] 
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Invalid sum of incoming frequencies 1050, should be 900

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 8 [25.0%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Invalid sum of incoming frequencies 1050, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 7 [20.0%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Invalid sum of incoming frequencies 1035, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 6 [16.7%] 
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Invalid sum of incoming frequencies 1020, should be 900

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 5 [14.3%] 
Successors:  18 [90.0%]  (fallthru,dfs_back) 2 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Invalid sum of incoming frequencies 1007, should be 900

Basic block 18 prev 17, next 19, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  17 [90.0%]  (fallthru,dfs_back) 19 [100.0%]  4 [12.5%] 
Successors:  19 [90.0%]  (fallthru,dfs_back) 2 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 19 prev 18, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  18 [90.0%]  (fallthru,dfs_back)
Successors:  18 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75

;; Register 65 in 21.
(note:HI 1 0 7 ("./CStatUtilities.c") 188)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 7 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 7 4 0 ./CStatUtilities.c:188 (set (reg/v/f:DI 62 [ a ])
        (reg:DI 5 di [ a ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))

(insn:HI 4 3 5 0 ./CStatUtilities.c:188 (set (reg/v:SI 63 [ n ])
        (reg:SI 4 si [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))

(note:HI 5 4 9 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 9 5 10 0 ("./CStatUtilities.c") 192)

(insn:HI 10 9 11 0 ./CStatUtilities.c:192 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 63 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(jump_insn:HI 11 10 13 0 ./CStatUtilities.c:192 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63
(note:HI 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 14 13 51 1 ./CStatUtilities.c:192 (set (reg/v:DF 75 [ m ])
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 75

(note:HI 51 14 52 NOTE_INSN_LOOP_BEG)

(note:HI 52 51 31 NOTE_INSN_LOOP_END)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 75
(code_label:HI 31 52 32 2 293 "" [3 uses])

(note:HI 32 31 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 33 32 34 2 ./CStatUtilities.c:192 (set (reg:DF 65)
        (float:DF (reg/v:SI 63 [ n ]))) 175 {*floatsidf2_sse} (nil)
    (expr_list:REG_DEAD (reg/v:SI 63 [ n ])
        (nil)))

(note:HI 34 33 38 2 NOTE_INSN_DELETED)

(note:HI 38 34 39 2 NOTE_INSN_FUNCTION_END)

(note:HI 39 38 41 2 ("./CStatUtilities.c") 196)

(insn:HI 41 39 47 2 ./CStatUtilities.c:196 (set (reg/i:DF 21 xmm0 [ <result> ])
        (div:DF (reg/v:DF 75 [ m ])
            (reg:DF 65))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:DF 65)
        (expr_list:REG_DEAD (reg/v:DF 75 [ m ])
            (nil))))

(insn:HI 47 41 17 2 ./CStatUtilities.c:196 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 41 (nil))
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63
(code_label:HI 17 47 18 3 291 "" [1 uses])

(note:HI 18 17 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 20 18 58 3 ./CStatUtilities.c:192 (set (reg/v:DF 75 [ m ])
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 58 20 59 3 NOTE_INSN_DELETED)

(insn:HI 59 58 60 3 (parallel [
            (set (reg:SI 70)
                (plus:SI (reg/v:SI 63 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 60 59 63 3 (parallel [
            (set (reg:SI 70)
                (and:SI (reg:SI 70)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 59 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 63 60 64 3 ("./CStatUtilities.c") 193)

(insn:HI 64 63 65 3 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (mem:DF (reg/v/f:DI 62 [ a ]) [6 S8 A64])
            (reg/v:DF 75 [ m ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 20 (nil))
    (nil))

(note:HI 65 64 66 3 ("./CStatUtilities.c") 192)

(insn:HI 66 65 67 3 ./CStatUtilities.c:192 (set (reg/v:SI 73 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 67 66 68 3 ./CStatUtilities.c:192 (parallel [
            (set (reg/f:DI 74 [ ivtmp.242 ])
                (plus:DI (reg/v/f:DI 62 [ a ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 68 67 69 3 ./CStatUtilities.c:192 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 73 [ i ])
            (reg/v:SI 63 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 66 (nil))
    (nil))

(jump_insn:HI 69 68 209 3 ./CStatUtilities.c:192 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 31)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 68 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
(note:HI 209 69 207 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 207 209 208 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 208 207 190 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 22)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 207 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
(note:HI 190 208 188 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 188 190 189 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 189 188 171 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 340)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 188 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
(note:HI 171 189 169 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 169 171 170 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 170 169 152 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 341)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 169 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
(note:HI 152 170 150 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 150 152 151 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 151 150 133 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 342)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 150 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
(note:HI 133 151 131 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 131 133 132 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 132 131 114 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 343)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 131 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
(note:HI 114 132 112 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 112 114 113 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 113 112 95 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 344)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 112 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 70 73 74 75
(note:HI 95 113 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 93 95 94 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 70)
        (nil)))

(jump_insn:HI 94 93 85 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 345)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 93 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 73 74 75

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 75
(note:HI 85 94 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note:HI 78 85 79 11 ("./CStatUtilities.c") 193)

(insn:HI 79 78 80 11 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (plus:DI (reg/v/f:DI 62 [ a ])
                    (const_int 8 [0x8])) [6 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 80 79 81 11 ("./CStatUtilities.c") 192)

(insn:HI 81 80 82 11 ./CStatUtilities.c:192 (set (reg/v:SI 73 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 82 81 345 11 ./CStatUtilities.c:192 (parallel [
            (set (reg/f:DI 74 [ ivtmp.242 ])
                (plus:DI (reg/v/f:DI 62 [ a ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 62 [ a ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
(code_label:HI 345 82 104 12 327 "" [1 uses])

(note:HI 104 345 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 97 104 98 12 ("./CStatUtilities.c") 193)

(insn:HI 98 97 99 12 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (reg/f:DI 74 [ ivtmp.242 ]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 99 98 100 12 ("./CStatUtilities.c") 192)

(insn:HI 100 99 101 12 ./CStatUtilities.c:192 (parallel [
            (set (reg/v:SI 73 [ i ])
                (plus:SI (reg/v:SI 73 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 101 100 344 12 ./CStatUtilities.c:192 (parallel [
            (set (reg/f:DI 74 [ ivtmp.242 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
(code_label:HI 344 101 123 13 326 "" [1 uses])

(note:HI 123 344 116 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 116 123 117 13 ("./CStatUtilities.c") 193)

(insn:HI 117 116 118 13 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (reg/f:DI 74 [ ivtmp.242 ]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 118 117 119 13 ("./CStatUtilities.c") 192)

(insn:HI 119 118 120 13 ./CStatUtilities.c:192 (parallel [
            (set (reg/v:SI 73 [ i ])
                (plus:SI (reg/v:SI 73 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 120 119 343 13 ./CStatUtilities.c:192 (parallel [
            (set (reg/f:DI 74 [ ivtmp.242 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
(code_label:HI 343 120 142 14 325 "" [1 uses])

(note:HI 142 343 135 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 135 142 136 14 ("./CStatUtilities.c") 193)

(insn:HI 136 135 137 14 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (reg/f:DI 74 [ ivtmp.242 ]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 137 136 138 14 ("./CStatUtilities.c") 192)

(insn:HI 138 137 139 14 ./CStatUtilities.c:192 (parallel [
            (set (reg/v:SI 73 [ i ])
                (plus:SI (reg/v:SI 73 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 139 138 342 14 ./CStatUtilities.c:192 (parallel [
            (set (reg/f:DI 74 [ ivtmp.242 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
(code_label:HI 342 139 161 15 324 "" [1 uses])

(note:HI 161 342 154 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 154 161 155 15 ("./CStatUtilities.c") 193)

(insn:HI 155 154 156 15 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (reg/f:DI 74 [ ivtmp.242 ]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 156 155 157 15 ("./CStatUtilities.c") 192)

(insn:HI 157 156 158 15 ./CStatUtilities.c:192 (parallel [
            (set (reg/v:SI 73 [ i ])
                (plus:SI (reg/v:SI 73 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 158 157 341 15 ./CStatUtilities.c:192 (parallel [
            (set (reg/f:DI 74 [ ivtmp.242 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
(code_label:HI 341 158 180 16 323 "" [1 uses])

(note:HI 180 341 173 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 173 180 174 16 ("./CStatUtilities.c") 193)

(insn:HI 174 173 175 16 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (reg/f:DI 74 [ ivtmp.242 ]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 175 174 176 16 ("./CStatUtilities.c") 192)

(insn:HI 176 175 177 16 ./CStatUtilities.c:192 (parallel [
            (set (reg/v:SI 73 [ i ])
                (plus:SI (reg/v:SI 73 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 177 176 340 16 ./CStatUtilities.c:192 (parallel [
            (set (reg/f:DI 74 [ ivtmp.242 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
(code_label:HI 340 177 199 17 322 "" [1 uses])

(note:HI 199 340 192 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 192 199 193 17 ("./CStatUtilities.c") 193)

(insn:HI 193 192 194 17 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (reg/f:DI 74 [ ivtmp.242 ]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 194 193 195 17 ("./CStatUtilities.c") 192)

(insn:HI 195 194 196 17 ./CStatUtilities.c:192 (parallel [
            (set (reg/v:SI 73 [ i ])
                (plus:SI (reg/v:SI 73 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 196 195 197 17 ./CStatUtilities.c:192 (parallel [
            (set (reg/f:DI 74 [ ivtmp.242 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 197 196 198 17 ./CStatUtilities.c:192 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 73 [ i ])
            (reg/v:SI 63 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 195 (nil))
    (nil))

(jump_insn:HI 198 197 22 17 ./CStatUtilities.c:192 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 31)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 197 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
(code_label:HI 22 198 23 18 294 "" [2 uses])

(note:HI 23 22 24 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 24 23 25 18 ("./CStatUtilities.c") 193)

(insn:HI 25 24 26 18 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (reg/f:DI 74 [ ivtmp.242 ]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(note:HI 26 25 211 18 ("./CStatUtilities.c") 192)

(note:HI 211 26 212 18 ("./CStatUtilities.c") 193)

(insn:HI 212 211 213 18 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 8 [0x8])) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 25 (nil))
    (nil))

(note:HI 213 212 225 18 ("./CStatUtilities.c") 192)

(note:HI 225 213 226 18 ("./CStatUtilities.c") 193)

(insn:HI 226 225 227 18 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 16 [0x10])) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 212 (nil))
    (nil))

(note:HI 227 226 239 18 ("./CStatUtilities.c") 192)

(note:HI 239 227 240 18 ("./CStatUtilities.c") 193)

(insn:HI 240 239 241 18 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 24 [0x18])) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 226 (nil))
    (nil))

(note:HI 241 240 253 18 ("./CStatUtilities.c") 192)

(note:HI 253 241 254 18 ("./CStatUtilities.c") 193)

(insn:HI 254 253 255 18 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 32 [0x20])) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 240 (nil))
    (nil))

(note:HI 255 254 267 18 ("./CStatUtilities.c") 192)

(note:HI 267 255 268 18 ("./CStatUtilities.c") 193)

(insn:HI 268 267 269 18 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 40 [0x28])) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 254 (nil))
    (nil))

(note:HI 269 268 281 18 ("./CStatUtilities.c") 192)

(note:HI 281 269 282 18 ("./CStatUtilities.c") 193)

(insn:HI 282 281 283 18 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 48 [0x30])) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 268 (nil))
    (nil))

(note:HI 283 282 295 18 ("./CStatUtilities.c") 192)

(note:HI 295 283 296 18 ("./CStatUtilities.c") 193)

(insn:HI 296 295 297 18 ./CStatUtilities.c:193 (set (reg/v:DF 75 [ m ])
        (plus:DF (reg/v:DF 75 [ m ])
            (mem:DF (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 56 [0x38])) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 282 (nil))
    (nil))

(note:HI 297 296 298 18 ("./CStatUtilities.c") 192)

(insn:HI 298 297 299 18 ./CStatUtilities.c:192 (parallel [
            (set (reg/v:SI 73 [ i ])
                (plus:SI (reg/v:SI 73 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 299 298 300 18 ./CStatUtilities.c:192 (parallel [
            (set (reg/f:DI 74 [ ivtmp.242 ])
                (plus:DI (reg/f:DI 74 [ ivtmp.242 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 300 299 301 18 ./CStatUtilities.c:192 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 73 [ i ])
            (reg/v:SI 63 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 298 (nil))
    (nil))

(jump_insn:HI 301 300 306 18 ./CStatUtilities.c:192 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 31)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 300 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75
(note:HI 306 301 338 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 338 306 339 19 (set (pc)
        (label_ref 22)) 548 {jump} (nil)
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 73 74 75

(barrier:HI 339 338 0)


;; Function compareIndexedData (compareIndexedData)



Pass 0

  Register 58 costs: AREG:21710 DREG:21710 CREG:21710 BREG:21710 SIREG:21710 DIREG:21710 AD_REGS:21710 Q_REGS:21710 NON_Q_REGS:38710 INDEX_REGS:21710 LEGACY_REGS:38710 GENERAL_REGS:38710 FP_TOP_REG:35070 FP_SECOND_REG:35070 FLOAT_REGS:35070 SSE_REGS:0 FP_TOP_SSE_REGS:35070 FP_SECOND_SSE_REGS:35070 FLOAT_SSE_REGS:35070 FLOAT_INT_REGS:35070 INT_SSE_REGS:21710 FLOAT_INT_SSE_REGS:35070 ALL_REGS:56070 MEM:16690
  Register 59 costs: AREG:21710 DREG:21710 CREG:21710 BREG:21710 SIREG:21710 DIREG:21710 AD_REGS:21710 Q_REGS:21710 NON_Q_REGS:38710 INDEX_REGS:21710 LEGACY_REGS:38710 GENERAL_REGS:38710 FP_TOP_REG:35070 FP_SECOND_REG:35070 FLOAT_REGS:35070 SSE_REGS:0 FP_TOP_SSE_REGS:35070 FP_SECOND_SSE_REGS:35070 FLOAT_SSE_REGS:35070 FLOAT_INT_REGS:35070 INT_SSE_REGS:21710 FLOAT_INT_SSE_REGS:35070 ALL_REGS:56070 MEM:16360
  Register 60 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:34710 MMX_REGS:34710 FP_TOP_SSE_REGS:34710 FP_SECOND_SSE_REGS:34710 FLOAT_SSE_REGS:34710 FLOAT_INT_REGS:24030 INT_SSE_REGS:34710 FLOAT_INT_SSE_REGS:34710 ALL_REGS:34710 MEM:9680
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:8000
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1000 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:8000
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:22780 INT_SSE_REGS:22780 FLOAT_INT_SSE_REGS:22780 ALL_REGS:22780 MEM:6700

  Register 58 pref SSE_REGS or none
  Register 59 pref SSE_REGS or none
  Register 60 pref AREG, else GENERAL_REGS
  Register 62 pref DIREG, else GENERAL_REGS
  Register 63 pref SIREG, else GENERAL_REGS
  Register 64 pref GENERAL_REGS or none


Pass 1

  Register 58 costs: AREG:21710 DREG:21710 CREG:21710 BREG:21710 SIREG:21710 DIREG:21710 AD_REGS:21710 Q_REGS:21710 NON_Q_REGS:38710 INDEX_REGS:21710 LEGACY_REGS:38710 GENERAL_REGS:38710 FP_TOP_REG:35070 FP_SECOND_REG:35070 FLOAT_REGS:35070 SSE_REGS:0 FP_TOP_SSE_REGS:35070 FP_SECOND_SSE_REGS:35070 FLOAT_SSE_REGS:35070 FLOAT_INT_REGS:35070 INT_SSE_REGS:21710 FLOAT_INT_SSE_REGS:35070 ALL_REGS:56070 MEM:16690
  Register 59 costs: AREG:21710 DREG:21710 CREG:21710 BREG:21710 SIREG:21710 DIREG:21710 AD_REGS:21710 Q_REGS:21710 NON_Q_REGS:38710 INDEX_REGS:21710 LEGACY_REGS:38710 GENERAL_REGS:38710 FP_TOP_REG:35070 FP_SECOND_REG:35070 FLOAT_REGS:35070 SSE_REGS:0 FP_TOP_SSE_REGS:35070 FP_SECOND_SSE_REGS:35070 FLOAT_SSE_REGS:35070 FLOAT_INT_REGS:35070 INT_SSE_REGS:21710 FLOAT_INT_SSE_REGS:35070 ALL_REGS:56070 MEM:16360
  Register 60 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:34710 MMX_REGS:34710 FP_TOP_SSE_REGS:34710 FP_SECOND_SSE_REGS:34710 FLOAT_SSE_REGS:34710 FLOAT_INT_REGS:24030 INT_SSE_REGS:34710 FLOAT_INT_SSE_REGS:34710 ALL_REGS:34710 MEM:9680
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:8000
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1000 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:8000
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 FLOAT_INT_REGS:22780 INT_SSE_REGS:22780 FLOAT_INT_SSE_REGS:22780 ALL_REGS:22780 MEM:6700

66 registers.

Register 58 used 3 times across 5 insns; set 1 time; user var; SSE_REGS or none.

Register 59 used 3 times across 6 insns; set 1 time; user var; SSE_REGS or none.

Register 60 used 3 times across 10 insns; set 2 times; 4 bytes; pref AREG, else GENERAL_REGS.

Register 62 used 2 times across 3 insns in block 0; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 63 used 2 times across 3 insns in block 0; set 1 time; user var; pref SIREG, else GENERAL_REGS; pointer.

Register 64 used 2 times across 2 insns in block 1; set 1 time; 1 bytes; GENERAL_REGS or none.

3 basic blocks, 5 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [33.0%]  1 [67.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 60

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 6700, maybe hot.
Predecessors:  0 [67.0%]  (fallthru)
Successors:  2 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

Basic block 2 prev 1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  1 [100.0%]  (fallthru) 0 [33.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Register 62 in 5.
;; Register 63 in 4.
;; Register 64 in 0.
(note:HI 1 0 7 ("./CStatUtilities.c") 246)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 7 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 7 4 0 ./CStatUtilities.c:246 (set (reg/v/f:DI 62 [ e1 ])
        (reg:DI 5 di [ e1 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ e1 ])
        (nil)))

(insn:HI 4 3 5 0 ./CStatUtilities.c:246 (set (reg/v/f:DI 63 [ e2 ])
        (reg:DI 4 si [ e2 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 4 si [ e2 ])
        (nil)))

(note:HI 5 4 9 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 9 5 10 0 ("./CStatUtilities.c") 247)

(insn:HI 10 9 11 0 ./CStatUtilities.c:247 (set (reg/v:DF 59 [ v1 ])
        (mem/s:DF (reg/v/f:DI 62 [ e1 ]) [6 <variable>.signal+0 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 3 (nil))
    (expr_list:REG_DEAD (reg/v/f:DI 62 [ e1 ])
        (nil)))

(note:HI 11 10 12 0 ("./CStatUtilities.c") 248)

(insn:HI 12 11 13 0 ./CStatUtilities.c:248 (set (reg/v:DF 58 [ v2 ])
        (mem/s:DF (reg/v/f:DI 63 [ e2 ]) [6 <variable>.signal+0 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 4 (nil))
    (expr_list:REG_DEAD (reg/v/f:DI 63 [ e2 ])
        (nil)))

(note:HI 13 12 21 0 ("./CStatUtilities.c") 250)

(insn:HI 21 13 14 0 ./CStatUtilities.c:250 (set (reg:SI 60 [ D.5346 ])
        (const_int -1 [0xffffffffffffffff])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 14 21 15 0 ./CStatUtilities.c:250 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 58 [ v2 ])
            (reg/v:DF 59 [ v1 ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 10 (insn_list:REG_DEP_TRUE 12 (nil)))
    (nil))

(jump_insn:HI 15 14 25 0 ./CStatUtilities.c:250 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 29)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 60

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59
(note:HI 25 15 26 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 26 25 27 1 ./CStatUtilities.c:250 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 59 [ v1 ])
            (reg/v:DF 58 [ v2 ]))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 59 [ v1 ])
        (expr_list:REG_DEAD (reg/v:DF 58 [ v2 ])
            (nil))))

(insn:HI 27 26 28 1 ./CStatUtilities.c:250 (set (reg:QI 64)
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0x0]))) 527 {*setcc_1} (insn_list:REG_DEP_TRUE 26 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_EQUAL (gt:QI (reg/v:DF 59 [ v1 ])
                (reg/v:DF 58 [ v2 ]))
            (nil))))

(insn:HI 28 27 29 1 ./CStatUtilities.c:250 (parallel [
            (set (reg:SI 60 [ D.5346 ])
                (zero_extend:SI (reg:QI 64)))
            (clobber (reg:CC 17 flags))
        ]) 108 {*zero_extendqisi2_movzbw_and} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:QI 64)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60
(code_label:HI 29 28 30 2 333 "" [1 uses])

(note:HI 30 29 34 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 34 30 35 2 NOTE_INSN_FUNCTION_END)

(note:HI 35 34 37 2 ("./CStatUtilities.c") 253)

(insn:HI 37 35 43 2 ./CStatUtilities.c:253 (set (reg/i:SI 0 ax [ <result> ])
        (reg:SI 60 [ D.5346 ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 60 [ D.5346 ])
        (nil)))

(insn:HI 43 37 0 2 ./CStatUtilities.c:253 (use (reg/i:SI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 37 (nil))
    (nil))
;; End of basic block 2, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function ran0 (ran0)



Pass 0

  Register 60 costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 INDEX_REGS:6000 LEGACY_REGS:6000 GENERAL_REGS:6000 SSE_REGS:84000 MMX_REGS:84000 FP_TOP_SSE_REGS:84000 FP_SECOND_SSE_REGS:84000 FLOAT_SSE_REGS:84000 FLOAT_INT_REGS:60000 INT_SSE_REGS:84000 FLOAT_INT_SSE_REGS:84000 ALL_REGS:84000 MEM:24000
  Register 61 costs: AREG:2000 DREG:0 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:91000 MMX_REGS:91000 FP_TOP_SSE_REGS:91000 FP_SECOND_SSE_REGS:91000 FLOAT_SSE_REGS:91000 FLOAT_INT_REGS:63000 INT_SSE_REGS:91000 FLOAT_INT_SSE_REGS:91000 ALL_REGS:91000 MEM:22000
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:56550 MMX_REGS:56550 FP_TOP_SSE_REGS:56550 FP_SECOND_SSE_REGS:56550 FLOAT_SSE_REGS:56550 FLOAT_INT_REGS:39150 INT_SSE_REGS:56550 FLOAT_INT_SSE_REGS:56550 ALL_REGS:56550 MEM:17400
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 68 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:28000 MMX_REGS:28000 FP_TOP_SSE_REGS:28000 FP_SECOND_SSE_REGS:28000 FLOAT_SSE_REGS:28000 FLOAT_INT_REGS:20000 INT_SSE_REGS:28000 FLOAT_INT_SSE_REGS:28000 ALL_REGS:28000 MEM:8000
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 74 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:28000 MMX_REGS:28000 FP_TOP_SSE_REGS:28000 FP_SECOND_SSE_REGS:28000 FLOAT_SSE_REGS:28000 FLOAT_INT_REGS:20000 INT_SSE_REGS:28000 FLOAT_INT_SSE_REGS:28000 ALL_REGS:28000 MEM:9000
  Register 76 costs: AREG:52000 DREG:52000 CREG:52000 BREG:52000 SIREG:52000 DIREG:52000 AD_REGS:52000 Q_REGS:52000 NON_Q_REGS:52000 INDEX_REGS:52000 LEGACY_REGS:52000 GENERAL_REGS:52000 FP_TOP_REG:84000 FP_SECOND_REG:84000 FLOAT_REGS:84000 SSE_REGS:0 FP_TOP_SSE_REGS:84000 FP_SECOND_SSE_REGS:84000 FLOAT_SSE_REGS:84000 FLOAT_INT_REGS:84000 INT_SSE_REGS:52000 FLOAT_INT_SSE_REGS:84000 ALL_REGS:84000 MEM:31000
  Register 80 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:106650 MMX_REGS:106650 FP_TOP_SSE_REGS:106650 FP_SECOND_SSE_REGS:106650 FLOAT_SSE_REGS:106650 FLOAT_INT_REGS:74450 INT_SSE_REGS:106650 FLOAT_INT_SSE_REGS:106650 ALL_REGS:106650 MEM:29500

  Register 60 pref GENERAL_REGS or none
  Register 61 pref DREG, else GENERAL_REGS
  Register 64 pref DIREG, else GENERAL_REGS
  Register 66 pref GENERAL_REGS or none
  Register 68 pref GENERAL_REGS or none
  Register 69 pref GENERAL_REGS or none
  Register 72 pref GENERAL_REGS or none
  Register 74 pref GENERAL_REGS or none
  Register 76 pref SSE_REGS or none
  Register 80 pref GENERAL_REGS or none


Pass 1

  Register 60 costs: AREG:8000 DREG:8000 CREG:8000 BREG:8000 SIREG:8000 DIREG:8000 AD_REGS:8000 Q_REGS:8000 NON_Q_REGS:8000 INDEX_REGS:8000 LEGACY_REGS:8000 GENERAL_REGS:8000 SSE_REGS:86000 MMX_REGS:86000 FP_TOP_SSE_REGS:86000 FP_SECOND_SSE_REGS:86000 FLOAT_SSE_REGS:86000 FLOAT_INT_REGS:62000 INT_SSE_REGS:86000 FLOAT_INT_SSE_REGS:86000 ALL_REGS:86000 MEM:26000
  Register 61 costs: AREG:4000 DREG:2000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 INDEX_REGS:4000 LEGACY_REGS:4000 GENERAL_REGS:4000 SSE_REGS:93000 MMX_REGS:93000 FP_TOP_SSE_REGS:93000 FP_SECOND_SSE_REGS:93000 FLOAT_SSE_REGS:93000 FLOAT_INT_REGS:65000 INT_SSE_REGS:93000 FLOAT_INT_SSE_REGS:93000 ALL_REGS:93000 MEM:24000
  Register 64 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:56550 MMX_REGS:56550 FP_TOP_SSE_REGS:56550 FP_SECOND_SSE_REGS:56550 FLOAT_SSE_REGS:56550 FLOAT_INT_REGS:39150 INT_SSE_REGS:56550 FLOAT_INT_SSE_REGS:56550 ALL_REGS:56550 MEM:17400
  Register 66 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:28000 MMX_REGS:28000 FP_TOP_SSE_REGS:28000 FP_SECOND_SSE_REGS:28000 FLOAT_SSE_REGS:28000 FLOAT_INT_REGS:20000 INT_SSE_REGS:28000 FLOAT_INT_SSE_REGS:28000 ALL_REGS:28000 MEM:9000
  Register 68 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:28000 MMX_REGS:28000 FP_TOP_SSE_REGS:28000 FP_SECOND_SSE_REGS:28000 FLOAT_SSE_REGS:28000 FLOAT_INT_REGS:20000 INT_SSE_REGS:28000 FLOAT_INT_SSE_REGS:28000 ALL_REGS:28000 MEM:8000
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 74 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:28000 MMX_REGS:28000 FP_TOP_SSE_REGS:28000 FP_SECOND_SSE_REGS:28000 FLOAT_SSE_REGS:28000 FLOAT_INT_REGS:20000 INT_SSE_REGS:28000 FLOAT_INT_SSE_REGS:28000 ALL_REGS:28000 MEM:9000
  Register 76 costs: AREG:52000 DREG:52000 CREG:52000 BREG:52000 SIREG:52000 DIREG:52000 AD_REGS:52000 Q_REGS:52000 NON_Q_REGS:52000 INDEX_REGS:52000 LEGACY_REGS:52000 GENERAL_REGS:52000 FP_TOP_REG:84000 FP_SECOND_REG:84000 FLOAT_REGS:84000 SSE_REGS:0 FP_TOP_SSE_REGS:84000 FP_SECOND_SSE_REGS:84000 FLOAT_SSE_REGS:84000 FLOAT_INT_REGS:84000 INT_SSE_REGS:52000 FLOAT_INT_SSE_REGS:84000 ALL_REGS:84000 MEM:31000
  Register 80 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:106650 MMX_REGS:106650 FP_TOP_SSE_REGS:106650 FP_SECOND_SSE_REGS:106650 FLOAT_SSE_REGS:106650 FLOAT_INT_REGS:74450 INT_SSE_REGS:106650 FLOAT_INT_SSE_REGS:106650 ALL_REGS:106650 MEM:29500

82 registers.

Register 60 used 6 times across 10 insns in block 0; set 2 times; GENERAL_REGS or none.

Register 61 used 7 times across 10 insns in block 0; set 3 times; user var; pref DREG, else GENERAL_REGS.

Register 64 used 5 times across 19 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 66 used 2 times across 4 insns in block 0; set 1 time; GENERAL_REGS or none.

Register 68 used 2 times across 2 insns in block 0; set 1 time; GENERAL_REGS or none.

Register 69 used 2 times across 2 insns in block 0; set 1 time; GENERAL_REGS or none.

Register 72 used 2 times across 2 insns in block 0; set 1 time; GENERAL_REGS or none.

Register 74 used 2 times across 2 insns in block 2; set 1 time; GENERAL_REGS or none.

Register 76 used 4 times across 4 insns in block 2; set 2 times; SSE_REGS or none.

Register 80 used 10 times across 13 insns; set 3 times; GENERAL_REGS or none.

3 basic blocks, 5 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [65.0%]  1 [35.0%]  (fallthru)
Registers live at start: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 3505, maybe hot.
Predecessors:  0 [35.0%]  (fallthru)
Successors:  2 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80

Basic block 2 prev 1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  0 [65.0%]  1 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Register 60 in 2.
;; Register 61 in 1.
;; Register 66 in 1.
;; Register 68 in 0.
;; Register 69 in 0.
;; Register 72 in 1.
;; Register 74 in 0.
;; Register 76 in 21.
(note:HI 1 0 6 ("./CStatUtilities.c") 380)

;; Start of basic block 0, registers live: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 6 4 0 ./CStatUtilities.c:380 (set (reg/v/f:DI 64 [ idum ])
        (reg:DI 5 di [ idum ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ idum ])
        (nil)))

(note:HI 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 8 4 9 0 ("./CStatUtilities.c") 385)

(note:HI 9 8 10 0 NOTE_INSN_DELETED)

(insn:HI 10 9 11 0 ./CStatUtilities.c:385 (parallel [
            (set (reg:DI 60 [ temp.296 ])
                (xor:DI (mem:DI (reg/v/f:DI 64 [ idum ]) [12 S8 A64])
                    (const_int 123459876 [0x75bd924])))
            (clobber (reg:CC 17 flags))
        ]) 337 {*xordi_1_rex64} (insn_list:REG_DEP_TRUE 3 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 11 10 12 0 ("./CStatUtilities.c") 386)

(insn:HI 12 11 13 0 ./CStatUtilities.c:386 (set (reg:DI 66)
        (const_int 4730756183288445817 [0x41a705af1fe3fb79])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (const_int 4730756183288445817 [0x41a705af1fe3fb79])
        (nil)))

(insn:HI 13 12 14 0 ./CStatUtilities.c:386 (parallel [
            (set (reg/v:DI 61 [ k ])
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 60 [ temp.296 ]))
                            (sign_extend:TI (reg:DI 66)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) 269 {*smuldi3_highpart_rex64} (insn_list:REG_DEP_TRUE 10 (insn_list:REG_DEP_TRUE 12 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (scratch:DI)
            (expr_list:REG_DEAD (reg:DI 66)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (scratch:DI)
                        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 60 [ temp.296 ]))
                                        (const_int 4730756183288445817 [0x41a705af1fe3fb79]))
                                    (const_int 64 [0x40])))
                            (nil))))))))

(insn:HI 14 13 15 0 ./CStatUtilities.c:386 (parallel [
            (set (reg/v:DI 61 [ k ])
                (ashiftrt:DI (reg/v:DI 61 [ k ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 15 14 16 0 ./CStatUtilities.c:386 (parallel [
            (set (reg:DI 68)
                (ashiftrt:DI (reg:DI 60 [ temp.296 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 16 15 17 0 ./CStatUtilities.c:386 (parallel [
            (set (reg/v:DI 61 [ k ])
                (minus:DI (reg/v:DI 61 [ k ])
                    (reg:DI 68)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 14 (insn_list:REG_DEP_TRUE 15 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 68)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (div:DI (reg:DI 60 [ temp.296 ])
                        (const_int 127773 [0x1f31d]))
                    (nil))))))

(note:HI 17 16 18 0 ("./CStatUtilities.c") 387)

(insn:HI 18 17 19 0 ./CStatUtilities.c:387 (parallel [
            (set (reg:DI 69)
                (mult:DI (reg/v:DI 61 [ k ])
                    (const_int 127773 [0x1f31d])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 16 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 19 18 20 0 ./CStatUtilities.c:387 (parallel [
            (set (reg:DI 60 [ temp.296 ])
                (minus:DI (reg:DI 60 [ temp.296 ])
                    (reg:DI 69)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 69)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 20 19 21 0 ./CStatUtilities.c:387 (parallel [
            (set (reg:DI 80 [ temp.297 ])
                (mult:DI (reg:DI 60 [ temp.296 ])
                    (const_int 16807 [0x41a7])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 19 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 60 [ temp.296 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 21 20 22 0 ./CStatUtilities.c:387 (parallel [
            (set (reg:DI 72)
                (mult:DI (reg/v:DI 61 [ k ])
                    (const_int 2836 [0xb14])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:DI 61 [ k ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 22 21 62 0 NOTE_INSN_DELETED)

(insn:HI 62 22 23 0 ./CStatUtilities.c:387 (parallel [
            (set (reg:DI 80 [ temp.297 ])
                (minus:DI (reg:DI 80 [ temp.297 ])
                    (reg:DI 72)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 21 (insn_list:REG_DEP_TRUE 20 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_DEAD (reg:DI 72)
                (nil)))))

(insn:HI 23 62 24 0 ./CStatUtilities.c:387 (set (mem:DI (reg/v/f:DI 64 [ idum ]) [12 S8 A64])
        (reg:DI 80 [ temp.297 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 62 (nil))
    (nil))

(note:HI 24 23 25 0 ("./CStatUtilities.c") 389)

(insn:HI 25 24 26 0 ./CStatUtilities.c:389 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 80 [ temp.297 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(jump_insn:HI 26 25 28 0 ./CStatUtilities.c:389 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 25 (nil))
    (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 6495 [0x195f])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80
(note:HI 28 26 29 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(note:HI 29 28 61 1 NOTE_INSN_DELETED)

(insn:HI 61 29 30 1 ./CStatUtilities.c:389 (parallel [
            (set (reg:DI 80 [ temp.297 ])
                (plus:DI (reg:DI 80 [ temp.297 ])
                    (const_int 2147483647 [0x7fffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 30 61 31 1 ./CStatUtilities.c:389 (set (mem:DI (reg/v/f:DI 64 [ idum ]) [12 S8 A64])
        (reg:DI 80 [ temp.297 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 61 (nil))
    (expr_list:REG_EQUAL (plus:DI (reg:DI 59 [ temp.297 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 80
(code_label:HI 31 30 32 2 336 "" [1 uses])

(note:HI 32 31 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 33 32 35 2 ("./CStatUtilities.c") 390)

(note:HI 35 33 36 2 ("./CStatUtilities.c") 391)

(insn:HI 36 35 37 2 ./CStatUtilities.c:391 (parallel [
            (set (reg:DI 74)
                (xor:DI (reg:DI 80 [ temp.297 ])
                    (const_int 123459876 [0x75bd924])))
            (clobber (reg:CC 17 flags))
        ]) 337 {*xordi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem:DI (reg/v/f:DI 64 [ idum ]) [12 S8 A64])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 37 36 38 2 ./CStatUtilities.c:391 (set (mem:DI (reg/v/f:DI 64 [ idum ]) [12 S8 A64])
        (reg:DI 74)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 36 (nil))
    (expr_list:REG_DEAD (reg:DI 74)
        (expr_list:REG_DEAD (reg/v/f:DI 64 [ idum ])
            (expr_list:REG_EQUAL (xor:DI (reg:DI 80 [ temp.297 ])
                    (const_int 123459876 [0x75bd924]))
                (nil)))))

(insn:HI 38 37 39 2 ./CStatUtilities.c:391 (set (reg:DF 76)
        (float:DF (reg:DI 80 [ temp.297 ]))) 178 {*floatdidf2_sse} (nil)
    (expr_list:REG_DEAD (reg:DI 80 [ temp.297 ])
        (nil)))

(note:HI 39 38 40 2 NOTE_INSN_DELETED)

(insn:HI 40 39 41 2 ./CStatUtilities.c:391 (set (reg:DF 76)
        (mult:DF (reg:DF 76)
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 38 (nil))
    (nil))

(note:HI 41 40 45 2 NOTE_INSN_DELETED)

(note:HI 45 41 46 2 NOTE_INSN_FUNCTION_END)

(note:HI 46 45 48 2 ("./CStatUtilities.c") 394)

(insn:HI 48 46 54 2 ./CStatUtilities.c:394 (set (reg/i:SF 21 xmm0 [ <result> ])
        (float_truncate:SF (reg:DF 76))) 129 {*truncdfsf_fast_sse} (insn_list:REG_DEP_TRUE 40 (nil))
    (expr_list:REG_DEAD (reg:DF 76)
        (nil)))

(insn:HI 54 48 0 2 ./CStatUtilities.c:394 (use (reg/i:SF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 48 (nil))
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function ran1 (ran1)



Pass 0

  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24700 MMX_REGS:24700 INT_SSE_REGS:24700 MEM:6475
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2769 MMX_REGS:2769 FP_TOP_SSE_REGS:2769 FP_SECOND_SSE_REGS:2769 FLOAT_SSE_REGS:2769 FLOAT_INT_REGS:1917 INT_SSE_REGS:2769 FLOAT_INT_SSE_REGS:2769 ALL_REGS:2769 MEM:762
  Register 65 costs: AREG:500 DREG:0 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:22750 MMX_REGS:22750 FP_TOP_SSE_REGS:22750 FP_SECOND_SSE_REGS:22750 FLOAT_SSE_REGS:22750 FLOAT_INT_REGS:15750 INT_SSE_REGS:22750 FLOAT_INT_SSE_REGS:22750 ALL_REGS:22750 MEM:5500
  Register 66 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:22275 MMX_REGS:22275 FP_TOP_SSE_REGS:22275 FP_SECOND_SSE_REGS:22275 FLOAT_SSE_REGS:22275 FLOAT_INT_REGS:15575 INT_SSE_REGS:22275 FLOAT_INT_SSE_REGS:22275 ALL_REGS:22275 MEM:5950
  Register 68 costs: AREG:82 DREG:0 CREG:82 BREG:82 SIREG:82 DIREG:82 AD_REGS:82 Q_REGS:82 NON_Q_REGS:82 INDEX_REGS:82 LEGACY_REGS:82 GENERAL_REGS:82 SSE_REGS:3731 MMX_REGS:3731 FP_TOP_SSE_REGS:3731 FP_SECOND_SSE_REGS:3731 FLOAT_SSE_REGS:3731 FLOAT_INT_REGS:2583 INT_SSE_REGS:3731 FLOAT_INT_SSE_REGS:3731 ALL_REGS:3731 MEM:902
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 INT_SSE_REGS:1066 MEM:246
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1599 MMX_REGS:1599 FP_TOP_SSE_REGS:1599 FP_SECOND_SSE_REGS:1599 FLOAT_SSE_REGS:1599 FLOAT_INT_REGS:1107 INT_SSE_REGS:1599 FLOAT_INT_SSE_REGS:1599 ALL_REGS:1599 MEM:451
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:250
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-41 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3536 MMX_REGS:3536 FP_TOP_SSE_REGS:3536 FP_SECOND_SSE_REGS:3536 FLOAT_SSE_REGS:3536 FLOAT_INT_REGS:2448 INT_SSE_REGS:3536 FLOAT_INT_SSE_REGS:3536 ALL_REGS:3536 MEM:1088
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13325 MMX_REGS:13325 FP_TOP_SSE_REGS:13325 FP_SECOND_SSE_REGS:13325 FLOAT_SSE_REGS:13325 FLOAT_INT_REGS:9225 INT_SSE_REGS:13325 FLOAT_INT_SSE_REGS:13325 ALL_REGS:13325 MEM:3100
  Register 78 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:7000 MMX_REGS:7000 FP_TOP_SSE_REGS:7000 FP_SECOND_SSE_REGS:7000 FLOAT_SSE_REGS:7000 FLOAT_INT_REGS:5000 INT_SSE_REGS:7000 FLOAT_INT_SSE_REGS:7000 ALL_REGS:7000 MEM:2000
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:250 INDEX_REGS:0 LEGACY_REGS:250 GENERAL_REGS:250 SSE_REGS:3250 MMX_REGS:3250 FP_TOP_SSE_REGS:3250 FP_SECOND_SSE_REGS:3250 FLOAT_SSE_REGS:3250 FLOAT_INT_REGS:2250 INT_SSE_REGS:3250 FLOAT_INT_SSE_REGS:3250 ALL_REGS:3250 MEM:1000
  Register 87 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 89 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 FP_TOP_SSE_REGS:1066 FP_SECOND_SSE_REGS:1066 FLOAT_SSE_REGS:1066 FLOAT_INT_REGS:738 INT_SSE_REGS:1066 FLOAT_INT_SSE_REGS:1066 ALL_REGS:1066 MEM:287
  Register 91 costs: AREG:82 DREG:82 CREG:82 BREG:82 SIREG:82 DIREG:82 AD_REGS:82 Q_REGS:82 NON_Q_REGS:82 INDEX_REGS:82 LEGACY_REGS:82 GENERAL_REGS:82 SSE_REGS:1148 MMX_REGS:1148 FP_TOP_SSE_REGS:1148 FP_SECOND_SSE_REGS:1148 FLOAT_SSE_REGS:1148 FLOAT_INT_REGS:820 INT_SSE_REGS:1148 FLOAT_INT_SSE_REGS:1148 ALL_REGS:1148 MEM:328
  Register 92 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 FP_TOP_SSE_REGS:1066 FP_SECOND_SSE_REGS:1066 FLOAT_SSE_REGS:1066 FLOAT_INT_REGS:738 INT_SSE_REGS:1066 FLOAT_INT_SSE_REGS:1066 ALL_REGS:1066 MEM:287
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 FP_TOP_SSE_REGS:1066 FP_SECOND_SSE_REGS:1066 FLOAT_SSE_REGS:1066 FLOAT_INT_REGS:738 INT_SSE_REGS:1066 FLOAT_INT_SSE_REGS:1066 ALL_REGS:1066 MEM:287
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:208 MMX_REGS:208 FP_TOP_SSE_REGS:208 FP_SECOND_SSE_REGS:208 FLOAT_SSE_REGS:208 FLOAT_INT_REGS:144 INT_SSE_REGS:208 FLOAT_INT_SSE_REGS:208 ALL_REGS:208 MEM:56
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3198 MMX_REGS:3198 FP_TOP_SSE_REGS:3198 FP_SECOND_SSE_REGS:3198 FLOAT_SSE_REGS:3198 FLOAT_INT_REGS:2214 INT_SSE_REGS:3198 FLOAT_INT_SSE_REGS:3198 ALL_REGS:3198 MEM:902
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 FP_TOP_SSE_REGS:1066 FP_SECOND_SSE_REGS:1066 FLOAT_SSE_REGS:1066 FLOAT_INT_REGS:738 INT_SSE_REGS:1066 FLOAT_INT_SSE_REGS:1066 ALL_REGS:1066 MEM:287
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:164 INDEX_REGS:0 LEGACY_REGS:164 GENERAL_REGS:164 SSE_REGS:1599 MMX_REGS:1599 FP_TOP_SSE_REGS:1599 FP_SECOND_SSE_REGS:1599 FLOAT_SSE_REGS:1599 FLOAT_INT_REGS:1107 INT_SSE_REGS:1599 FLOAT_INT_SSE_REGS:1599 ALL_REGS:1599 MEM:492
  Register 106 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 FP_TOP_SSE_REGS:1066 FP_SECOND_SSE_REGS:1066 FLOAT_SSE_REGS:1066 FLOAT_INT_REGS:738 INT_SSE_REGS:1066 FLOAT_INT_SSE_REGS:1066 ALL_REGS:1066 MEM:328
  Register 107 costs: AREG:2214 DREG:2214 CREG:2214 BREG:2214 SIREG:2214 DIREG:2214 AD_REGS:2214 Q_REGS:2214 NON_Q_REGS:2214 INDEX_REGS:2214 LEGACY_REGS:2214 GENERAL_REGS:2214 FP_TOP_REG:3526 FP_SECOND_REG:3526 FLOAT_REGS:3526 SSE_REGS:82 FP_TOP_SSE_REGS:3526 FP_SECOND_SSE_REGS:3526 FLOAT_SSE_REGS:3526 FLOAT_INT_REGS:3526 INT_SSE_REGS:2214 FLOAT_INT_SSE_REGS:3526 ALL_REGS:3526 MEM:1353
  Register 109 costs: AREG:615 DREG:615 CREG:615 BREG:615 SIREG:615 DIREG:615 AD_REGS:615 Q_REGS:615 NON_Q_REGS:1312 INDEX_REGS:615 LEGACY_REGS:1312 GENERAL_REGS:1312 FP_TOP_REG:943 FP_SECOND_REG:943 FLOAT_REGS:943 SSE_REGS:82 FP_TOP_SSE_REGS:943 FP_SECOND_SSE_REGS:943 FLOAT_SSE_REGS:943 FLOAT_INT_REGS:943 INT_SSE_REGS:615 FLOAT_INT_SSE_REGS:943 ALL_REGS:1804 MEM:574
  Register 111 costs: AREG:82 DREG:82 CREG:82 BREG:82 SIREG:82 DIREG:82 AD_REGS:82 Q_REGS:82 NON_Q_REGS:82 INDEX_REGS:82 LEGACY_REGS:82 GENERAL_REGS:82 SSE_REGS:4463 MMX_REGS:4463 FP_TOP_SSE_REGS:4463 FP_SECOND_SSE_REGS:4463 FLOAT_SSE_REGS:4463 FLOAT_INT_REGS:3115 INT_SSE_REGS:4463 FLOAT_INT_SSE_REGS:4463 ALL_REGS:4463 MEM:1200
  Register 114 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 115 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8125 MMX_REGS:8125 INT_SSE_REGS:8125 MEM:2125
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19500 MMX_REGS:19500 FP_TOP_SSE_REGS:19500 FP_SECOND_SSE_REGS:19500 FLOAT_SSE_REGS:19500 FLOAT_INT_REGS:13500 INT_SSE_REGS:19500 FLOAT_INT_SSE_REGS:19500 ALL_REGS:19500 MEM:5000
  Register 117 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:21625 MMX_REGS:21625 FP_TOP_SSE_REGS:21625 FP_SECOND_SSE_REGS:21625 FLOAT_SSE_REGS:21625 FLOAT_INT_REGS:15125 INT_SSE_REGS:21625 FLOAT_INT_SSE_REGS:21625 ALL_REGS:21625 MEM:5750
  Register 120 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:7000 MMX_REGS:7000 FP_TOP_SSE_REGS:7000 FP_SECOND_SSE_REGS:7000 FLOAT_SSE_REGS:7000 FLOAT_INT_REGS:5000 INT_SSE_REGS:7000 FLOAT_INT_SSE_REGS:7000 ALL_REGS:7000 MEM:2000
  Register 122 costs: AREG:500 DREG:0 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:22750 MMX_REGS:22750 FP_TOP_SSE_REGS:22750 FP_SECOND_SSE_REGS:22750 FLOAT_SSE_REGS:22750 FLOAT_INT_REGS:15750 INT_SSE_REGS:22750 FLOAT_INT_SSE_REGS:22750 ALL_REGS:22750 MEM:5500
  Register 123 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 125 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 127 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19500 MMX_REGS:19500 FP_TOP_SSE_REGS:19500 FP_SECOND_SSE_REGS:19500 FLOAT_SSE_REGS:19500 FLOAT_INT_REGS:13500 INT_SSE_REGS:19500 FLOAT_INT_SSE_REGS:19500 ALL_REGS:19500 MEM:5000
  Register 128 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 130 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:21625 MMX_REGS:21625 FP_TOP_SSE_REGS:21625 FP_SECOND_SSE_REGS:21625 FLOAT_SSE_REGS:21625 FLOAT_INT_REGS:15125 INT_SSE_REGS:21625 FLOAT_INT_SSE_REGS:21625 ALL_REGS:21625 MEM:5750
  Register 131 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:250 INDEX_REGS:0 LEGACY_REGS:250 GENERAL_REGS:250 SSE_REGS:3250 MMX_REGS:3250 FP_TOP_SSE_REGS:3250 FP_SECOND_SSE_REGS:3250 FLOAT_SSE_REGS:3250 FLOAT_INT_REGS:2250 INT_SSE_REGS:3250 FLOAT_INT_SSE_REGS:3250 ALL_REGS:3250 MEM:1000
  Register 132 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8125 MMX_REGS:8125 INT_SSE_REGS:8125 MEM:2125
  Register 134 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:7000 MMX_REGS:7000 FP_TOP_SSE_REGS:7000 FP_SECOND_SSE_REGS:7000 FLOAT_SSE_REGS:7000 FLOAT_INT_REGS:5000 INT_SSE_REGS:7000 FLOAT_INT_SSE_REGS:7000 ALL_REGS:7000 MEM:2000
  Register 136 costs: AREG:500 DREG:0 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:22750 MMX_REGS:22750 FP_TOP_SSE_REGS:22750 FP_SECOND_SSE_REGS:22750 FLOAT_SSE_REGS:22750 FLOAT_INT_REGS:15750 INT_SSE_REGS:22750 FLOAT_INT_SSE_REGS:22750 ALL_REGS:22750 MEM:5500
  Register 137 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 139 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 141 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19500 MMX_REGS:19500 FP_TOP_SSE_REGS:19500 FP_SECOND_SSE_REGS:19500 FLOAT_SSE_REGS:19500 FLOAT_INT_REGS:13500 INT_SSE_REGS:19500 FLOAT_INT_SSE_REGS:19500 ALL_REGS:19500 MEM:5000
  Register 142 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 143 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:21625 MMX_REGS:21625 FP_TOP_SSE_REGS:21625 FP_SECOND_SSE_REGS:21625 FLOAT_SSE_REGS:21625 FLOAT_INT_REGS:15125 INT_SSE_REGS:21625 FLOAT_INT_SSE_REGS:21625 ALL_REGS:21625 MEM:5750
  Register 144 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:250 INDEX_REGS:0 LEGACY_REGS:250 GENERAL_REGS:250 SSE_REGS:3250 MMX_REGS:3250 FP_TOP_SSE_REGS:3250 FP_SECOND_SSE_REGS:3250 FLOAT_SSE_REGS:3250 FLOAT_INT_REGS:2250 INT_SSE_REGS:3250 FLOAT_INT_SSE_REGS:3250 ALL_REGS:3250 MEM:1000
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8125 MMX_REGS:8125 INT_SSE_REGS:8125 MEM:2125
  Register 147 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:7000 MMX_REGS:7000 FP_TOP_SSE_REGS:7000 FP_SECOND_SSE_REGS:7000 FLOAT_SSE_REGS:7000 FLOAT_INT_REGS:5000 INT_SSE_REGS:7000 FLOAT_INT_SSE_REGS:7000 ALL_REGS:7000 MEM:2000
  Register 149 costs: AREG:500 DREG:0 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:22750 MMX_REGS:22750 FP_TOP_SSE_REGS:22750 FP_SECOND_SSE_REGS:22750 FLOAT_SSE_REGS:22750 FLOAT_INT_REGS:15750 INT_SSE_REGS:22750 FLOAT_INT_SSE_REGS:22750 ALL_REGS:22750 MEM:5500
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 152 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 154 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19500 MMX_REGS:19500 FP_TOP_SSE_REGS:19500 FP_SECOND_SSE_REGS:19500 FLOAT_SSE_REGS:19500 FLOAT_INT_REGS:13500 INT_SSE_REGS:19500 FLOAT_INT_SSE_REGS:19500 ALL_REGS:19500 MEM:5000
  Register 155 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 156 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:250 INDEX_REGS:0 LEGACY_REGS:250 GENERAL_REGS:250 SSE_REGS:3250 MMX_REGS:3250 FP_TOP_SSE_REGS:3250 FP_SECOND_SSE_REGS:3250 FLOAT_SSE_REGS:3250 FLOAT_INT_REGS:2250 INT_SSE_REGS:3250 FLOAT_INT_SSE_REGS:3250 ALL_REGS:3250 MEM:1000
  Register 164 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:375

  Register 62 pref GENERAL_REGS or none
  Register 63 pref GENERAL_REGS or none
  Register 65 pref DREG, else GENERAL_REGS
  Register 66 pref GENERAL_REGS or none
  Register 68 pref DREG, else GENERAL_REGS
  Register 69 pref GENERAL_REGS or none
  Register 70 pref GENERAL_REGS or none
  Register 71 pref GENERAL_REGS or none
  Register 74 pref DIREG, else GENERAL_REGS
  Register 76 pref GENERAL_REGS or none
  Register 78 pref GENERAL_REGS or none
  Register 79 pref GENERAL_REGS or none
  Register 82 pref GENERAL_REGS or none
  Register 83 pref INDEX_REGS, else GENERAL_REGS
  Register 87 pref GENERAL_REGS or none
  Register 89 pref GENERAL_REGS or none
  Register 91 pref GENERAL_REGS or none
  Register 92 pref GENERAL_REGS or none
  Register 95 pref GENERAL_REGS or none
  Register 96 pref GENERAL_REGS or none
  Register 98 pref GENERAL_REGS or none
  Register 100 pref GENERAL_REGS or none
  Register 102 pref INDEX_REGS, else GENERAL_REGS
  Register 106 pref GENERAL_REGS or none
  Register 107 pref SSE_REGS or none
  Register 109 pref SSE_REGS or none
  Register 111 pref GENERAL_REGS or none
  Register 114 pref GENERAL_REGS or none
  Register 115 pref GENERAL_REGS or none
  Register 116 pref GENERAL_REGS or none
  Register 117 pref GENERAL_REGS or none
  Register 120 pref GENERAL_REGS or none
  Register 122 pref DREG, else GENERAL_REGS
  Register 123 pref GENERAL_REGS or none
  Register 125 pref GENERAL_REGS or none
  Register 127 pref GENERAL_REGS or none
  Register 128 pref GENERAL_REGS or none
  Register 130 pref GENERAL_REGS or none
  Register 131 pref INDEX_REGS, else GENERAL_REGS
  Register 132 pref GENERAL_REGS or none
  Register 134 pref GENERAL_REGS or none
  Register 136 pref DREG, else GENERAL_REGS
  Register 137 pref GENERAL_REGS or none
  Register 139 pref GENERAL_REGS or none
  Register 141 pref GENERAL_REGS or none
  Register 142 pref GENERAL_REGS or none
  Register 143 pref GENERAL_REGS or none
  Register 144 pref INDEX_REGS, else GENERAL_REGS
  Register 145 pref GENERAL_REGS or none
  Register 147 pref GENERAL_REGS or none
  Register 149 pref DREG, else GENERAL_REGS
  Register 150 pref GENERAL_REGS or none
  Register 152 pref GENERAL_REGS or none
  Register 154 pref GENERAL_REGS or none
  Register 155 pref GENERAL_REGS or none
  Register 156 pref INDEX_REGS, else GENERAL_REGS
  Register 164 pref GENERAL_REGS or none


Pass 1

  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24700 MMX_REGS:24700 INT_SSE_REGS:24700 MEM:6475
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2769 MMX_REGS:2769 FP_TOP_SSE_REGS:2769 FP_SECOND_SSE_REGS:2769 FLOAT_SSE_REGS:2769 FLOAT_INT_REGS:1917 INT_SSE_REGS:2769 FLOAT_INT_SSE_REGS:2769 ALL_REGS:2769 MEM:762
  Register 65 costs: AREG:1000 DREG:500 CREG:1000 BREG:1000 SIREG:1000 DIREG:1000 AD_REGS:1000 Q_REGS:1000 NON_Q_REGS:1000 INDEX_REGS:1000 LEGACY_REGS:1000 GENERAL_REGS:1000 SSE_REGS:23250 MMX_REGS:23250 FP_TOP_SSE_REGS:23250 FP_SECOND_SSE_REGS:23250 FLOAT_SSE_REGS:23250 FLOAT_INT_REGS:16250 INT_SSE_REGS:23250 FLOAT_INT_SSE_REGS:23250 ALL_REGS:23250 MEM:6000
  Register 66 costs: AREG:1000 DREG:1000 CREG:1000 BREG:1000 SIREG:1000 DIREG:1000 AD_REGS:1000 Q_REGS:1000 NON_Q_REGS:1000 INDEX_REGS:1000 LEGACY_REGS:1000 GENERAL_REGS:1000 SSE_REGS:22775 MMX_REGS:22775 FP_TOP_SSE_REGS:22775 FP_SECOND_SSE_REGS:22775 FLOAT_SSE_REGS:22775 FLOAT_INT_REGS:16075 INT_SSE_REGS:22775 FLOAT_INT_SSE_REGS:22775 ALL_REGS:22775 MEM:6450
  Register 68 costs: AREG:164 DREG:82 CREG:164 BREG:164 SIREG:164 DIREG:164 AD_REGS:164 Q_REGS:164 NON_Q_REGS:164 INDEX_REGS:164 LEGACY_REGS:164 GENERAL_REGS:164 SSE_REGS:3813 MMX_REGS:3813 FP_TOP_SSE_REGS:3813 FP_SECOND_SSE_REGS:3813 FLOAT_SSE_REGS:3813 FLOAT_INT_REGS:2665 INT_SSE_REGS:3813 FLOAT_INT_SSE_REGS:3813 ALL_REGS:3813 MEM:984
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 INT_SSE_REGS:1066 MEM:246
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1599 MMX_REGS:1599 FP_TOP_SSE_REGS:1599 FP_SECOND_SSE_REGS:1599 FLOAT_SSE_REGS:1599 FLOAT_INT_REGS:1107 INT_SSE_REGS:1599 FLOAT_INT_SSE_REGS:1599 ALL_REGS:1599 MEM:451
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:975 MMX_REGS:975 FP_TOP_SSE_REGS:975 FP_SECOND_SSE_REGS:975 FLOAT_SSE_REGS:975 FLOAT_INT_REGS:675 INT_SSE_REGS:975 FLOAT_INT_SSE_REGS:975 ALL_REGS:975 MEM:250
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-41 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3536 MMX_REGS:3536 FP_TOP_SSE_REGS:3536 FP_SECOND_SSE_REGS:3536 FLOAT_SSE_REGS:3536 FLOAT_INT_REGS:2448 INT_SSE_REGS:3536 FLOAT_INT_SSE_REGS:3536 ALL_REGS:3536 MEM:1088
  Register 76 costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 INDEX_REGS:2000 LEGACY_REGS:2000 GENERAL_REGS:2000 SSE_REGS:15325 MMX_REGS:15325 FP_TOP_SSE_REGS:15325 FP_SECOND_SSE_REGS:15325 FLOAT_SSE_REGS:15325 FLOAT_INT_REGS:11225 INT_SSE_REGS:15325 FLOAT_INT_SSE_REGS:15325 ALL_REGS:15325 MEM:5100
  Register 78 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:7000 MMX_REGS:7000 FP_TOP_SSE_REGS:7000 FP_SECOND_SSE_REGS:7000 FLOAT_SSE_REGS:7000 FLOAT_INT_REGS:5000 INT_SSE_REGS:7000 FLOAT_INT_SSE_REGS:7000 ALL_REGS:7000 MEM:2000
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:250 INDEX_REGS:0 LEGACY_REGS:250 GENERAL_REGS:250 SSE_REGS:3250 MMX_REGS:3250 FP_TOP_SSE_REGS:3250 FP_SECOND_SSE_REGS:3250 FLOAT_SSE_REGS:3250 FLOAT_INT_REGS:2250 INT_SSE_REGS:3250 FLOAT_INT_SSE_REGS:3250 ALL_REGS:3250 MEM:1000
  Register 87 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:650 MMX_REGS:650 FP_TOP_SSE_REGS:650 FP_SECOND_SSE_REGS:650 FLOAT_SSE_REGS:650 FLOAT_INT_REGS:450 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:650 ALL_REGS:650 MEM:200
  Register 89 costs: AREG:82 DREG:82 CREG:82 BREG:82 SIREG:82 DIREG:82 AD_REGS:82 Q_REGS:82 NON_Q_REGS:82 INDEX_REGS:82 LEGACY_REGS:82 GENERAL_REGS:82 SSE_REGS:1148 MMX_REGS:1148 FP_TOP_SSE_REGS:1148 FP_SECOND_SSE_REGS:1148 FLOAT_SSE_REGS:1148 FLOAT_INT_REGS:820 INT_SSE_REGS:1148 FLOAT_INT_SSE_REGS:1148 ALL_REGS:1148 MEM:369
  Register 91 costs: AREG:82 DREG:82 CREG:82 BREG:82 SIREG:82 DIREG:82 AD_REGS:82 Q_REGS:82 NON_Q_REGS:82 INDEX_REGS:82 LEGACY_REGS:82 GENERAL_REGS:82 SSE_REGS:1148 MMX_REGS:1148 FP_TOP_SSE_REGS:1148 FP_SECOND_SSE_REGS:1148 FLOAT_SSE_REGS:1148 FLOAT_INT_REGS:820 INT_SSE_REGS:1148 FLOAT_INT_SSE_REGS:1148 ALL_REGS:1148 MEM:328
  Register 92 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 FP_TOP_SSE_REGS:1066 FP_SECOND_SSE_REGS:1066 FLOAT_SSE_REGS:1066 FLOAT_INT_REGS:738 INT_SSE_REGS:1066 FLOAT_INT_SSE_REGS:1066 ALL_REGS:1066 MEM:287
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 FP_TOP_SSE_REGS:1066 FP_SECOND_SSE_REGS:1066 FLOAT_SSE_REGS:1066 FLOAT_INT_REGS:738 INT_SSE_REGS:1066 FLOAT_INT_SSE_REGS:1066 ALL_REGS:1066 MEM:287
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:208 MMX_REGS:208 FP_TOP_SSE_REGS:208 FP_SECOND_SSE_REGS:208 FLOAT_SSE_REGS:208 FLOAT_INT_REGS:144 INT_SSE_REGS:208 FLOAT_INT_SSE_REGS:208 ALL_REGS:208 MEM:56
  Register 98 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3198 MMX_REGS:3198 FP_TOP_SSE_REGS:3198 FP_SECOND_SSE_REGS:3198 FLOAT_SSE_REGS:3198 FLOAT_INT_REGS:2214 INT_SSE_REGS:3198 FLOAT_INT_SSE_REGS:3198 ALL_REGS:3198 MEM:902
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 FP_TOP_SSE_REGS:1066 FP_SECOND_SSE_REGS:1066 FLOAT_SSE_REGS:1066 FLOAT_INT_REGS:738 INT_SSE_REGS:1066 FLOAT_INT_SSE_REGS:1066 ALL_REGS:1066 MEM:287
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:164 INDEX_REGS:0 LEGACY_REGS:164 GENERAL_REGS:164 SSE_REGS:1599 MMX_REGS:1599 FP_TOP_SSE_REGS:1599 FP_SECOND_SSE_REGS:1599 FLOAT_SSE_REGS:1599 FLOAT_INT_REGS:1107 INT_SSE_REGS:1599 FLOAT_INT_SSE_REGS:1599 ALL_REGS:1599 MEM:492
  Register 106 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1066 MMX_REGS:1066 FP_TOP_SSE_REGS:1066 FP_SECOND_SSE_REGS:1066 FLOAT_SSE_REGS:1066 FLOAT_INT_REGS:738 INT_SSE_REGS:1066 FLOAT_INT_SSE_REGS:1066 ALL_REGS:1066 MEM:328
  Register 107 costs: AREG:2214 DREG:2214 CREG:2214 BREG:2214 SIREG:2214 DIREG:2214 AD_REGS:2214 Q_REGS:2214 NON_Q_REGS:2214 INDEX_REGS:2214 LEGACY_REGS:2214 GENERAL_REGS:2214 FP_TOP_REG:3526 FP_SECOND_REG:3526 FLOAT_REGS:3526 SSE_REGS:82 FP_TOP_SSE_REGS:3526 FP_SECOND_SSE_REGS:3526 FLOAT_SSE_REGS:3526 FLOAT_INT_REGS:3526 INT_SSE_REGS:2214 FLOAT_INT_SSE_REGS:3526 ALL_REGS:3526 MEM:1353
  Register 109 costs: AREG:615 DREG:615 CREG:615 BREG:615 SIREG:615 DIREG:615 AD_REGS:615 Q_REGS:615 NON_Q_REGS:1312 INDEX_REGS:615 LEGACY_REGS:1312 GENERAL_REGS:1312 FP_TOP_REG:943 FP_SECOND_REG:943 FLOAT_REGS:943 SSE_REGS:82 FP_TOP_SSE_REGS:943 FP_SECOND_SSE_REGS:943 FLOAT_SSE_REGS:943 FLOAT_INT_REGS:943 INT_SSE_REGS:615 FLOAT_INT_SSE_REGS:943 ALL_REGS:1804 MEM:574
  Register 111 costs: AREG:164 DREG:164 CREG:164 BREG:164 SIREG:164 DIREG:164 AD_REGS:164 Q_REGS:164 NON_Q_REGS:164 INDEX_REGS:164 LEGACY_REGS:164 GENERAL_REGS:164 SSE_REGS:4545 MMX_REGS:4545 FP_TOP_SSE_REGS:4545 FP_SECOND_SSE_REGS:4545 FLOAT_SSE_REGS:4545 FLOAT_INT_REGS:3197 INT_SSE_REGS:4545 FLOAT_INT_SSE_REGS:4545 ALL_REGS:4545 MEM:1282
  Register 114 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 115 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8125 MMX_REGS:8125 INT_SSE_REGS:8125 MEM:2125
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19500 MMX_REGS:19500 FP_TOP_SSE_REGS:19500 FP_SECOND_SSE_REGS:19500 FLOAT_SSE_REGS:19500 FLOAT_INT_REGS:13500 INT_SSE_REGS:19500 FLOAT_INT_SSE_REGS:19500 ALL_REGS:19500 MEM:5000
  Register 117 costs: AREG:1000 DREG:1000 CREG:1000 BREG:1000 SIREG:1000 DIREG:1000 AD_REGS:1000 Q_REGS:1000 NON_Q_REGS:1000 INDEX_REGS:1000 LEGACY_REGS:1000 GENERAL_REGS:1000 SSE_REGS:22125 MMX_REGS:22125 FP_TOP_SSE_REGS:22125 FP_SECOND_SSE_REGS:22125 FLOAT_SSE_REGS:22125 FLOAT_INT_REGS:15625 INT_SSE_REGS:22125 FLOAT_INT_SSE_REGS:22125 ALL_REGS:22125 MEM:6250
  Register 120 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:7000 MMX_REGS:7000 FP_TOP_SSE_REGS:7000 FP_SECOND_SSE_REGS:7000 FLOAT_SSE_REGS:7000 FLOAT_INT_REGS:5000 INT_SSE_REGS:7000 FLOAT_INT_SSE_REGS:7000 ALL_REGS:7000 MEM:2000
  Register 122 costs: AREG:1000 DREG:500 CREG:1000 BREG:1000 SIREG:1000 DIREG:1000 AD_REGS:1000 Q_REGS:1000 NON_Q_REGS:1000 INDEX_REGS:1000 LEGACY_REGS:1000 GENERAL_REGS:1000 SSE_REGS:23250 MMX_REGS:23250 FP_TOP_SSE_REGS:23250 FP_SECOND_SSE_REGS:23250 FLOAT_SSE_REGS:23250 FLOAT_INT_REGS:16250 INT_SSE_REGS:23250 FLOAT_INT_SSE_REGS:23250 ALL_REGS:23250 MEM:6000
  Register 123 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 125 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 127 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19500 MMX_REGS:19500 FP_TOP_SSE_REGS:19500 FP_SECOND_SSE_REGS:19500 FLOAT_SSE_REGS:19500 FLOAT_INT_REGS:13500 INT_SSE_REGS:19500 FLOAT_INT_SSE_REGS:19500 ALL_REGS:19500 MEM:5000
  Register 128 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 130 costs: AREG:1000 DREG:1000 CREG:1000 BREG:1000 SIREG:1000 DIREG:1000 AD_REGS:1000 Q_REGS:1000 NON_Q_REGS:1000 INDEX_REGS:1000 LEGACY_REGS:1000 GENERAL_REGS:1000 SSE_REGS:22125 MMX_REGS:22125 FP_TOP_SSE_REGS:22125 FP_SECOND_SSE_REGS:22125 FLOAT_SSE_REGS:22125 FLOAT_INT_REGS:15625 INT_SSE_REGS:22125 FLOAT_INT_SSE_REGS:22125 ALL_REGS:22125 MEM:6250
  Register 131 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:250 INDEX_REGS:0 LEGACY_REGS:250 GENERAL_REGS:250 SSE_REGS:3250 MMX_REGS:3250 FP_TOP_SSE_REGS:3250 FP_SECOND_SSE_REGS:3250 FLOAT_SSE_REGS:3250 FLOAT_INT_REGS:2250 INT_SSE_REGS:3250 FLOAT_INT_SSE_REGS:3250 ALL_REGS:3250 MEM:1000
  Register 132 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8125 MMX_REGS:8125 INT_SSE_REGS:8125 MEM:2125
  Register 134 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:7000 MMX_REGS:7000 FP_TOP_SSE_REGS:7000 FP_SECOND_SSE_REGS:7000 FLOAT_SSE_REGS:7000 FLOAT_INT_REGS:5000 INT_SSE_REGS:7000 FLOAT_INT_SSE_REGS:7000 ALL_REGS:7000 MEM:2000
  Register 136 costs: AREG:1000 DREG:500 CREG:1000 BREG:1000 SIREG:1000 DIREG:1000 AD_REGS:1000 Q_REGS:1000 NON_Q_REGS:1000 INDEX_REGS:1000 LEGACY_REGS:1000 GENERAL_REGS:1000 SSE_REGS:23250 MMX_REGS:23250 FP_TOP_SSE_REGS:23250 FP_SECOND_SSE_REGS:23250 FLOAT_SSE_REGS:23250 FLOAT_INT_REGS:16250 INT_SSE_REGS:23250 FLOAT_INT_SSE_REGS:23250 ALL_REGS:23250 MEM:6000
  Register 137 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 139 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 141 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19500 MMX_REGS:19500 FP_TOP_SSE_REGS:19500 FP_SECOND_SSE_REGS:19500 FLOAT_SSE_REGS:19500 FLOAT_INT_REGS:13500 INT_SSE_REGS:19500 FLOAT_INT_SSE_REGS:19500 ALL_REGS:19500 MEM:5000
  Register 142 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 143 costs: AREG:1000 DREG:1000 CREG:1000 BREG:1000 SIREG:1000 DIREG:1000 AD_REGS:1000 Q_REGS:1000 NON_Q_REGS:1000 INDEX_REGS:1000 LEGACY_REGS:1000 GENERAL_REGS:1000 SSE_REGS:22125 MMX_REGS:22125 FP_TOP_SSE_REGS:22125 FP_SECOND_SSE_REGS:22125 FLOAT_SSE_REGS:22125 FLOAT_INT_REGS:15625 INT_SSE_REGS:22125 FLOAT_INT_SSE_REGS:22125 ALL_REGS:22125 MEM:6250
  Register 144 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:250 INDEX_REGS:0 LEGACY_REGS:250 GENERAL_REGS:250 SSE_REGS:3250 MMX_REGS:3250 FP_TOP_SSE_REGS:3250 FP_SECOND_SSE_REGS:3250 FLOAT_SSE_REGS:3250 FLOAT_INT_REGS:2250 INT_SSE_REGS:3250 FLOAT_INT_SSE_REGS:3250 ALL_REGS:3250 MEM:1000
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:8125 MMX_REGS:8125 INT_SSE_REGS:8125 MEM:2125
  Register 147 costs: AREG:500 DREG:500 CREG:500 BREG:500 SIREG:500 DIREG:500 AD_REGS:500 Q_REGS:500 NON_Q_REGS:500 INDEX_REGS:500 LEGACY_REGS:500 GENERAL_REGS:500 SSE_REGS:7000 MMX_REGS:7000 FP_TOP_SSE_REGS:7000 FP_SECOND_SSE_REGS:7000 FLOAT_SSE_REGS:7000 FLOAT_INT_REGS:5000 INT_SSE_REGS:7000 FLOAT_INT_SSE_REGS:7000 ALL_REGS:7000 MEM:2000
  Register 149 costs: AREG:1000 DREG:500 CREG:1000 BREG:1000 SIREG:1000 DIREG:1000 AD_REGS:1000 Q_REGS:1000 NON_Q_REGS:1000 INDEX_REGS:1000 LEGACY_REGS:1000 GENERAL_REGS:1000 SSE_REGS:23250 MMX_REGS:23250 FP_TOP_SSE_REGS:23250 FP_SECOND_SSE_REGS:23250 FLOAT_SSE_REGS:23250 FLOAT_INT_REGS:16250 INT_SSE_REGS:23250 FLOAT_INT_SSE_REGS:23250 ALL_REGS:23250 MEM:6000
  Register 150 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 152 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 154 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19500 MMX_REGS:19500 FP_TOP_SSE_REGS:19500 FP_SECOND_SSE_REGS:19500 FLOAT_SSE_REGS:19500 FLOAT_INT_REGS:13500 INT_SSE_REGS:19500 FLOAT_INT_SSE_REGS:19500 ALL_REGS:19500 MEM:5000
  Register 155 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6500 MMX_REGS:6500 FP_TOP_SSE_REGS:6500 FP_SECOND_SSE_REGS:6500 FLOAT_SSE_REGS:6500 FLOAT_INT_REGS:4500 INT_SSE_REGS:6500 FLOAT_INT_SSE_REGS:6500 ALL_REGS:6500 MEM:1750
  Register 156 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:250 INDEX_REGS:0 LEGACY_REGS:250 GENERAL_REGS:250 SSE_REGS:3250 MMX_REGS:3250 FP_TOP_SSE_REGS:3250 FP_SECOND_SSE_REGS:3250 FLOAT_SSE_REGS:3250 FLOAT_INT_REGS:2250 INT_SSE_REGS:3250 FLOAT_INT_SSE_REGS:3250 ALL_REGS:3250 MEM:1000
  Register 164 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:375

165 registers.

Register 62 used 9 times across 150 insns; set 2 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 63 used 6 times across 8 insns; set 2 times; GENERAL_REGS or none.

Register 65 used 7 times across 10 insns in block 3; set 3 times; user var; pref DREG, else GENERAL_REGS.

Register 66 used 9 times across 21 insns; set 3 times; dies in 2 places; GENERAL_REGS or none.

Register 68 used 7 times across 10 insns in block 6; set 3 times; user var; pref DREG, else GENERAL_REGS.

Register 69 used 2 times across 2 insns in block 8; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 70 used 3 times across 5 insns in block 8; set 1 time; GENERAL_REGS or none.

Register 71 used 3 times across 4 insns in block 2; set 1 time; GENERAL_REGS or none.

Register 74 used 9 times across 114 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 76 used 5 times across 146 insns; set 1 time; dies in 0 places; GENERAL_REGS or none.

Register 78 used 2 times across 2 insns in block 3; set 1 time; GENERAL_REGS or none.

Register 79 used 2 times across 2 insns in block 3; set 1 time; GENERAL_REGS or none.

Register 82 used 2 times across 2 insns in block 3; set 1 time; GENERAL_REGS or none.

Register 83 used 2 times across 2 insns in block 4; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 87 used 2 times across 4 insns in block 5; set 1 time; GENERAL_REGS or none.

Register 89 used 2 times across 4 insns in block 6; set 1 time; GENERAL_REGS or none.

Register 91 used 2 times across 2 insns in block 6; set 1 time; GENERAL_REGS or none.

Register 92 used 2 times across 2 insns in block 6; set 1 time; GENERAL_REGS or none.

Register 95 used 2 times across 2 insns in block 6; set 1 time; GENERAL_REGS or none.

Register 96 used 2 times across 2 insns in block 7; set 1 time; GENERAL_REGS or none.

Register 98 used 6 times across 6 insns in block 8; set 2 times; GENERAL_REGS or none.

Register 100 used 2 times across 3 insns in block 8; set 1 time; GENERAL_REGS or none.

Register 102 used 3 times across 5 insns in block 8; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 106 used 2 times across 2 insns in block 8; set 1 time; GENERAL_REGS or none.

Register 107 used 4 times across 5 insns in block 8; set 2 times; SSE_REGS or none.

Register 109 used 2 times across 2 insns in block 8; set 1 time; SSE_REGS or none.

Register 111 used 9 times across 16 insns; set 3 times; dies in 2 places; GENERAL_REGS or none.

Register 114 used 2 times across 3 insns in block 3; set 1 time; GENERAL_REGS or none.

Register 115 used 3 times across 16 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 116 used 6 times across 7 insns in block 3; set 2 times; GENERAL_REGS or none.

Register 117 used 7 times across 15 insns; set 2 times; GENERAL_REGS or none.

Register 120 used 2 times across 2 insns in block 9; set 1 time; GENERAL_REGS or none.

Register 122 used 7 times across 10 insns in block 9; set 3 times; user var; pref DREG, else GENERAL_REGS.

Register 123 used 2 times across 2 insns in block 9; set 1 time; GENERAL_REGS or none.

Register 125 used 2 times across 2 insns in block 9; set 1 time; GENERAL_REGS or none.

Register 127 used 6 times across 7 insns in block 9; set 2 times; GENERAL_REGS or none.

Register 128 used 2 times across 3 insns in block 9; set 1 time; GENERAL_REGS or none.

Register 130 used 7 times across 14 insns; set 2 times; GENERAL_REGS or none.

Register 131 used 2 times across 2 insns in block 10; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 132 used 3 times across 16 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 134 used 2 times across 2 insns in block 11; set 1 time; GENERAL_REGS or none.

Register 136 used 7 times across 10 insns in block 11; set 3 times; user var; pref DREG, else GENERAL_REGS.

Register 137 used 2 times across 2 insns in block 11; set 1 time; GENERAL_REGS or none.

Register 139 used 2 times across 2 insns in block 11; set 1 time; GENERAL_REGS or none.

Register 141 used 6 times across 7 insns in block 11; set 2 times; GENERAL_REGS or none.

Register 142 used 2 times across 3 insns in block 11; set 1 time; GENERAL_REGS or none.

Register 143 used 7 times across 14 insns; set 2 times; GENERAL_REGS or none.

Register 144 used 2 times across 2 insns in block 12; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 145 used 3 times across 16 insns; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 147 used 2 times across 2 insns in block 13; set 1 time; GENERAL_REGS or none.

Register 149 used 7 times across 10 insns in block 13; set 3 times; user var; pref DREG, else GENERAL_REGS.

Register 150 used 2 times across 2 insns in block 13; set 1 time; GENERAL_REGS or none.

Register 152 used 2 times across 2 insns in block 13; set 1 time; GENERAL_REGS or none.

Register 154 used 6 times across 7 insns in block 13; set 2 times; GENERAL_REGS or none.

Register 155 used 2 times across 3 insns in block 13; set 1 time; GENERAL_REGS or none.

Register 156 used 2 times across 2 insns in block 14; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 164 used 4 times across 10 insns in block 2; set 2 times; GENERAL_REGS or none.

17 basic blocks, 26 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 413, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [21.0%]  1 [79.0%]  (fallthru)
Registers live at start: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 326, maybe hot.
Predecessors:  0 [79.0%]  (fallthru)
Successors:  6 [50.0%]  2 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 250, maybe hot.
Predecessors:  0 [21.0%]  1 [50.0%]  (fallthru)
Successors:  3 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 2500, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 16 [100.0%] 
Successors:  9 [50.0%]  4 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 117
Invalid sum of incoming frequencies 2688, should be 2500

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 1250, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
Successors:  9 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 117
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 117

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 250, maybe hot.
Predecessors:  15 [2.5%]  (loop_exit)
Successors:  6 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111
Invalid sum of incoming frequencies 63, should be 250

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 413, maybe hot.
Predecessors:  1 [50.0%]  5 [100.0%]  (fallthru)
Successors:  8 [79.0%]  7 [21.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 74

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 87, maybe hot.
Predecessors:  6 [21.0%]  (fallthru)
Successors:  8 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 413, maybe hot.
Predecessors:  6 [79.0%]  7 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

Basic block 9 prev 8, next 10, loop_depth 1, count 0, freq 2500, maybe hot.
Predecessors:  3 [50.0%]  4 [100.0%] 
Successors:  11 [50.0%]  10 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 117
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 115 130

Basic block 10 prev 9, next 11, loop_depth 1, count 0, freq 1250, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
Successors:  11 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 115 130
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 130

Basic block 11 prev 10, next 12, loop_depth 1, count 0, freq 2500, maybe hot.
Predecessors:  9 [50.0%]  10 [100.0%]  (fallthru)
Successors:  13 [50.0%]  12 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 130
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 132 143

Basic block 12 prev 11, next 13, loop_depth 1, count 0, freq 1250, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 132 143
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 143

Basic block 13 prev 12, next 14, loop_depth 1, count 0, freq 2500, maybe hot.
Predecessors:  11 [50.0%]  12 [100.0%]  (fallthru)
Successors:  15 [50.0%]  14 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 143
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76 145

Basic block 14 prev 13, next 15, loop_depth 1, count 0, freq 1250, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76 145
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76

Basic block 15 prev 14, next 16, loop_depth 1, count 0, freq 2500, maybe hot.
Predecessors:  13 [50.0%]  14 [100.0%]  (fallthru)
Successors:  16 [97.5%]  (fallthru,dfs_back) 5 [2.5%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76

Basic block 16 prev 15, next -2, loop_depth 1, count 0, freq 2438, maybe hot.
Predecessors:  15 [97.5%]  (fallthru,dfs_back)
Successors:  3 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76

;; Register 65 in 1.
;; Register 68 in 1.
;; Register 69 in 0.
;; Register 70 in 2.
;; Register 71 in 1.
;; Register 78 in 0.
;; Register 79 in 0.
;; Register 82 in 1.
;; Register 83 in 0.
;; Register 87 in 0.
;; Register 89 in 1.
;; Register 91 in 0.
;; Register 92 in 0.
;; Register 95 in 1.
;; Register 96 in 0.
;; Register 98 in 0.
;; Register 100 in 1.
;; Register 102 in 0.
;; Register 106 in 1.
;; Register 107 in 22.
;; Register 109 in 21.
;; Register 114 in 1.
;; Register 116 in 0.
;; Register 120 in 0.
;; Register 122 in 1.
;; Register 123 in 0.
;; Register 125 in 1.
;; Register 127 in 0.
;; Register 128 in 1.
;; Register 131 in 0.
;; Register 134 in 0.
;; Register 136 in 1.
;; Register 137 in 0.
;; Register 139 in 1.
;; Register 141 in 0.
;; Register 142 in 1.
;; Register 144 in 0.
;; Register 147 in 0.
;; Register 149 in 1.
;; Register 150 in 0.
;; Register 152 in 1.
;; Register 154 in 0.
;; Register 155 in 1.
;; Register 156 in 0.
;; Register 164 in 0.
(note:HI 1 0 10 ("./CStatUtilities.c") 406)

;; Start of basic block 0, registers live: 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 10 1 7 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 7 10 8 0 ./CStatUtilities.c:406 (set (reg/v/f:DI 74 [ idum ])
        (reg:DI 5 di [ idum ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ idum ])
        (nil)))

(note:HI 8 7 12 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 12 8 13 0 ("./CStatUtilities.c") 413)

(insn:HI 13 12 14 0 ./CStatUtilities.c:413 (set (reg:DI 111 [ D.5495 ])
        (mem:DI (reg/v/f:DI 74 [ idum ]) [12 S8 A64])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 7 (nil))
    (nil))

(insn:HI 14 13 15 0 ./CStatUtilities.c:413 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 111 [ D.5495 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 13 (nil))
    (nil))

(jump_insn:HI 15 14 17 0 ./CStatUtilities.c:413 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111
(note:HI 17 15 18 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 18 17 19 1 ./CStatUtilities.c:413 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:DI (symbol_ref:DI ("iy.5485") [flags 0x2] <var_decl 0x2b4e9c830790 iy>) [12 iy+0 S8 A64])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(jump_insn:HI 19 18 20 1 ./CStatUtilities.c:413 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111
(code_label:HI 20 19 21 2 340 "" [1 uses])

(note:HI 21 20 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 22 21 23 2 ("./CStatUtilities.c") 415)

(insn:HI 23 22 325 2 ./CStatUtilities.c:415 (parallel [
            (set (reg:DI 71 [ D.5495 ])
                (neg:DI (reg:DI 111 [ D.5495 ])))
            (clobber (reg:CC 17 flags))
        ]) 363 {*negdi2_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 111 [ D.5495 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 325 23 324 2 ./CStatUtilities.c:416 (set (reg:DI 164)
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 324 325 326 2 ./CStatUtilities.c:416 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 71 [ D.5495 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(insn:HI 326 324 327 2 ./CStatUtilities.c:416 (set (reg:DI 164)
        (if_then_else:DI (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (reg:DI 71 [ D.5495 ])
            (reg:DI 164))) 742 {*movdicc_c_rex64} (nil)
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_DEAD (reg:DI 71 [ D.5495 ])
            (nil))))

(insn:HI 327 326 28 2 ./CStatUtilities.c:416 (set (mem:DI (reg/v/f:DI 74 [ idum ]) [12 S8 A64])
        (reg:DI 164)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 164)
        (nil)))

(note:HI 28 327 34 2 ("./CStatUtilities.c") 416)

(note:HI 34 28 38 2 ("./CStatUtilities.c") 418)

(insn:HI 38 34 39 2 ./CStatUtilities.c:418 (set (reg:DI 66 [ idum__lsm.326 ])
        (mem:DI (reg/v/f:DI 74 [ idum ]) [12 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 39 38 173 2 ./CStatUtilities.c:418 (set (reg/v:SI 62 [ j.343 ])
        (const_int 39 [0x27])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 173 39 163 2 (set (reg:DI 76)
        (const_int 4730756183288445817 [0x41a705af1fe3fb79])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (const_int 4730756183288445817 [0x41a705af1fe3fb79])
        (nil)))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76

(note:HI 163 173 40 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76
(code_label:HI 40 163 41 3 346 "" [1 uses])

(note:HI 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 42 41 44 3 ("./CStatUtilities.c") 422)

(insn:HI 44 42 45 3 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 65 [ k.339 ])
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 66 [ idum__lsm.326 ]))
                            (sign_extend:TI (reg:DI 76)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) 269 {*smuldi3_highpart_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (scratch:DI)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_UNUSED (scratch:DI)
                    (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 66 [ idum__lsm.326 ]))
                                    (const_int 4730756183288445817 [0x41a705af1fe3fb79]))
                                (const_int 64 [0x40])))
                        (nil)))))))

(insn:HI 45 44 46 3 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 65 [ k.339 ])
                (ashiftrt:DI (reg/v:DI 65 [ k.339 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (insn_list:REG_DEP_TRUE 44 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 46 45 47 3 ./CStatUtilities.c:422 (parallel [
            (set (reg:DI 78)
                (ashiftrt:DI (reg:DI 66 [ idum__lsm.326 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 47 46 48 3 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 65 [ k.339 ])
                (minus:DI (reg/v:DI 65 [ k.339 ])
                    (reg:DI 78)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 45 (insn_list:REG_DEP_TRUE 46 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 78)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (div:DI (reg:DI 66 [ idum__lsm.326 ])
                        (const_int 127773 [0x1f31d]))
                    (nil))))))

(note:HI 48 47 49 3 ("./CStatUtilities.c") 423)

(insn:HI 49 48 50 3 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 79)
                (mult:DI (reg/v:DI 65 [ k.339 ])
                    (const_int 127773 [0x1f31d])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 47 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 50 49 51 3 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 66 [ idum__lsm.326 ])
                (minus:DI (reg:DI 66 [ idum__lsm.326 ])
                    (reg:DI 79)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 49 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 79)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 51 50 52 3 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 116 [ idum__lsm.326 ])
                (mult:DI (reg:DI 66 [ idum__lsm.326 ])
                    (const_int 16807 [0x41a7])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 50 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 66 [ idum__lsm.326 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 52 51 53 3 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 82)
                (mult:DI (reg/v:DI 65 [ k.339 ])
                    (const_int 2836 [0xb14])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:DI 65 [ k.339 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 53 52 54 3 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 116 [ idum__lsm.326 ])
                (minus:DI (reg:DI 116 [ idum__lsm.326 ])
                    (reg:DI 82)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 51 (insn_list:REG_DEP_TRUE 52 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 82)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 54 53 178 3 ("./CStatUtilities.c") 425)

(insn:HI 178 54 179 3 ./CStatUtilities.c:426 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg:DI 116 [ idum__lsm.326 ])
                    (const_int 2147483647 [0x7fffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 53 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 179 178 180 3 ./CStatUtilities.c:426 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 116 [ idum__lsm.326 ])
            (const_int -1 [0xffffffffffffffff]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(insn:HI 180 179 59 3 ./CStatUtilities.c:426 (set (reg:DI 117 [ idum__lsm.326 ])
        (if_then_else:DI (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (reg:DI 114)
            (reg:DI 116 [ idum__lsm.326 ]))) 742 {*movdicc_c_rex64} (insn_list:REG_DEP_TRUE 178 (insn_list:REG_DEP_TRUE 179 (nil)))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_DEAD (reg:DI 114)
            (expr_list:REG_DEAD (reg:DI 116 [ idum__lsm.326 ])
                (nil)))))

(note:HI 59 180 63 3 ("./CStatUtilities.c") 426)

(note:HI 63 59 64 3 ("./CStatUtilities.c") 428)

(insn:HI 64 63 65 3 ./CStatUtilities.c:428 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 62 [ j.343 ])
            (const_int 31 [0x1f]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 65 64 68 3 ./CStatUtilities.c:428 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 64 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 117

(note:HI 68 65 67 ("./CStatUtilities.c") 429)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 117
(note:HI 67 68 69 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 69 67 71 4 ./CStatUtilities.c:429 (set (reg:DI 83 [ j.343 ])
        (sign_extend:DI (reg/v:SI 62 [ j.343 ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 71 69 322 4 ./CStatUtilities.c:429 (set (mem/s:DI (plus:DI (mult:DI (reg:DI 83 [ j.343 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("iv.5486") [flags 0x2] <var_decl 0x2b4e9c8309a0 iv>)) [12 iv S8 A64])
        (reg:DI 117 [ idum__lsm.326 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 69 (nil))
    (expr_list:REG_DEAD (reg:DI 83 [ j.343 ])
        (nil)))

(jump_insn:HI 322 71 323 4 (set (pc)
        (label_ref 72)) 548 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 117

(barrier:HI 323 322 164)

(note:HI 164 323 319 NOTE_INSN_LOOP_END)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 74
(code_label:HI 319 164 184 5 367 "" [1 uses])

(note:HI 184 319 81 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 81 184 82 5 ./CStatUtilities.c:420 (set (mem:DI (reg/v/f:DI 74 [ idum ]) [12 S8 A64])
        (reg:DI 66 [ idum__lsm.326 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 66 [ idum__lsm.326 ])
        (nil)))

(note:HI 82 81 84 5 ("./CStatUtilities.c") 431)

(insn:HI 84 82 85 5 ./CStatUtilities.c:431 (set (reg:DI 87 [ iv ])
        (mem/s:DI (symbol_ref:DI ("iv.5486") [flags 0x2] <var_decl 0x2b4e9c8309a0 iv>) [12 iv+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/s:DI (symbol_ref:DI ("iv.5486") [flags 0x2] <var_decl 0x2b4e9c8309a0 iv>) [12 iv+0 S8 A64])
        (nil)))

(insn:HI 85 84 166 5 ./CStatUtilities.c:431 (set (mem/c/i:DI (symbol_ref:DI ("iy.5485") [flags 0x2] <var_decl 0x2b4e9c830790 iy>) [12 iy+0 S8 A64])
        (reg:DI 87 [ iv ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 84 (nil))
    (expr_list:REG_DEAD (reg:DI 87 [ iv ])
        (nil)))

(insn:HI 166 85 86 5 (set (reg:DI 111 [ D.5495 ])
        (mem:DI (reg/v/f:DI 74 [ idum ]) [12 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74 111
(code_label:HI 86 166 87 6 342 "" [1 uses])

(note:HI 87 86 88 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note:HI 88 87 90 6 ("./CStatUtilities.c") 434)

(insn:HI 90 88 91 6 ./CStatUtilities.c:434 (set (reg:DI 89)
        (const_int 4730756183288445817 [0x41a705af1fe3fb79])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (const_int 4730756183288445817 [0x41a705af1fe3fb79])
        (nil)))

(insn:HI 91 90 92 6 ./CStatUtilities.c:434 (parallel [
            (set (reg/v:DI 68 [ k ])
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 111 [ D.5495 ]))
                            (sign_extend:TI (reg:DI 89)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) 269 {*smuldi3_highpart_rex64} (insn_list:REG_DEP_TRUE 90 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (scratch:DI)
            (expr_list:REG_DEAD (reg:DI 89)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_UNUSED (scratch:DI)
                        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 111 [ D.5495 ]))
                                        (const_int 4730756183288445817 [0x41a705af1fe3fb79]))
                                    (const_int 64 [0x40])))
                            (nil))))))))

(insn:HI 92 91 93 6 ./CStatUtilities.c:434 (parallel [
            (set (reg/v:DI 68 [ k ])
                (ashiftrt:DI (reg/v:DI 68 [ k ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (insn_list:REG_DEP_TRUE 91 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 93 92 94 6 ./CStatUtilities.c:434 (parallel [
            (set (reg:DI 91)
                (ashiftrt:DI (reg:DI 111 [ D.5495 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 94 93 95 6 ./CStatUtilities.c:434 (parallel [
            (set (reg/v:DI 68 [ k ])
                (minus:DI (reg/v:DI 68 [ k ])
                    (reg:DI 91)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 92 (insn_list:REG_DEP_TRUE 93 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 91)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (div:DI (reg:DI 111 [ D.5495 ])
                        (const_int 127773 [0x1f31d]))
                    (nil))))))

(note:HI 95 94 96 6 ("./CStatUtilities.c") 435)

(insn:HI 96 95 97 6 ./CStatUtilities.c:435 (parallel [
            (set (reg:DI 92)
                (mult:DI (reg/v:DI 68 [ k ])
                    (const_int 127773 [0x1f31d])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 94 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 97 96 98 6 ./CStatUtilities.c:435 (parallel [
            (set (reg:DI 111 [ D.5495 ])
                (minus:DI (reg:DI 111 [ D.5495 ])
                    (reg:DI 92)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 96 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 92)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 98 97 99 6 ./CStatUtilities.c:435 (parallel [
            (set (reg:DI 63 [ temp.341 ])
                (mult:DI (reg:DI 111 [ D.5495 ])
                    (const_int 16807 [0x41a7])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 97 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 111 [ D.5495 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 99 98 100 6 ./CStatUtilities.c:435 (parallel [
            (set (reg:DI 95)
                (mult:DI (reg/v:DI 68 [ k ])
                    (const_int 2836 [0xb14])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:DI 68 [ k ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 100 99 101 6 ./CStatUtilities.c:435 (parallel [
            (set (reg:DI 63 [ temp.341 ])
                (minus:DI (reg:DI 63 [ temp.341 ])
                    (reg:DI 95)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 98 (insn_list:REG_DEP_TRUE 99 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 95)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 101 100 102 6 ./CStatUtilities.c:435 (set (mem:DI (reg/v/f:DI 74 [ idum ]) [12 S8 A64])
        (reg:DI 63 [ temp.341 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 100 (nil))
    (nil))

(note:HI 102 101 103 6 ("./CStatUtilities.c") 437)

(insn:HI 103 102 104 6 ./CStatUtilities.c:437 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 63 [ temp.341 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(jump_insn:HI 104 103 107 6 ./CStatUtilities.c:437 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 103 (nil))
    (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 74

(note:HI 107 104 106 ("./CStatUtilities.c") 438)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 74
(note:HI 106 107 108 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 108 106 109 7 ./CStatUtilities.c:438 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg:DI 63 [ temp.341 ])
                    (const_int 2147483647 [0x7fffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem:DI (reg/v/f:DI 74 [ idum ]) [12 S8 A64])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_DEAD (reg:DI 63 [ temp.341 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(insn:HI 109 108 110 7 ./CStatUtilities.c:438 (set (mem:DI (reg/v/f:DI 74 [ idum ]) [12 S8 A64])
        (reg:DI 96)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 108 (nil))
    (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_EQUAL (plus:DI (reg:DI 63 [ temp.341 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 74
(code_label:HI 110 109 111 8 352 "" [1 uses])

(note:HI 111 110 112 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note:HI 112 111 113 8 ("./CStatUtilities.c") 440)

(insn:HI 113 112 115 8 ./CStatUtilities.c:440 (set (reg:DI 98 [ iy ])
        (mem/c/i:DI (symbol_ref:DI ("iy.5485") [flags 0x2] <var_decl 0x2b4e9c830790 iy>) [12 iy+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 115 113 116 8 ./CStatUtilities.c:440 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg:DI 98 [ iy ])
                    (const_int 67108863 [0x3ffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 113 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 116 115 117 8 ./CStatUtilities.c:440 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 98 [ iy ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(insn:HI 117 116 118 8 ./CStatUtilities.c:440 (set (reg:DI 98 [ iy ])
        (if_then_else:DI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (reg:DI 100)
            (reg:DI 98 [ iy ]))) 742 {*movdicc_c_rex64} (insn_list:REG_DEP_TRUE 115 (insn_list:REG_DEP_TRUE 116 (nil)))
    (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (expr_list:REG_DEAD (reg:DI 100)
            (nil))))

(note:HI 118 117 119 8 NOTE_INSN_DELETED)

(insn:HI 119 118 120 8 ./CStatUtilities.c:440 (parallel [
            (set (subreg:DI (reg/v:SI 69 [ j ]) 0)
                (lshiftrt:DI (reg:DI 98 [ iy ])
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ]) 468 {*lshrdi3_1_rex64} (insn_list:REG_DEP_TRUE 117 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 98 [ iy ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 120 119 121 8 ("./CStatUtilities.c") 441)

(insn:HI 121 120 123 8 ./CStatUtilities.c:441 (set (reg:DI 102 [ j ])
        (sign_extend:DI (reg/v:SI 69 [ j ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 119 (nil))
    (expr_list:REG_DEAD (reg/v:SI 69 [ j ])
        (nil)))

(insn:HI 123 121 124 8 ./CStatUtilities.c:441 (set (reg:DI 70 [ D.5505 ])
        (mem/s:DI (plus:DI (mult:DI (reg:DI 102 [ j ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("iv.5486") [flags 0x2] <var_decl 0x2b4e9c8309a0 iv>)) [12 iv S8 A64])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 121 (nil))
    (nil))

(insn:HI 124 123 125 8 ./CStatUtilities.c:441 (set (mem/c/i:DI (symbol_ref:DI ("iy.5485") [flags 0x2] <var_decl 0x2b4e9c830790 iy>) [12 iy+0 S8 A64])
        (reg:DI 70 [ D.5505 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 123 (nil))
    (nil))

(note:HI 125 124 128 8 ("./CStatUtilities.c") 442)

(insn:HI 128 125 129 8 ./CStatUtilities.c:442 (set (reg:DI 106)
        (mem:DI (reg/v/f:DI 74 [ idum ]) [12 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/s:DI (plus:DI (mult:DI (reg:DI 102 [ j ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("iv.5486") [flags 0x2] <var_decl 0x2b4e9c8309a0 iv>)) [12 iv S8 A64])
        (expr_list:REG_DEAD (reg/v/f:DI 74 [ idum ])
            (nil))))

(insn:HI 129 128 130 8 ./CStatUtilities.c:442 (set (mem/s:DI (plus:DI (mult:DI (reg:DI 102 [ j ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("iv.5486") [flags 0x2] <var_decl 0x2b4e9c8309a0 iv>)) [12 iv S8 A64])
        (reg:DI 106)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 128 (nil))
    (expr_list:REG_DEAD (reg:DI 106)
        (expr_list:REG_DEAD (reg:DI 102 [ j ])
            (nil))))

(note:HI 130 129 131 8 ("./CStatUtilities.c") 444)

(insn:HI 131 130 132 8 ./CStatUtilities.c:444 (set (reg:DF 107)
        (float:DF (reg:DI 70 [ D.5505 ]))) 178 {*floatdidf2_sse} (nil)
    (expr_list:REG_DEAD (reg:DI 70 [ D.5505 ])
        (nil)))

(note:HI 132 131 133 8 NOTE_INSN_DELETED)

(insn:HI 133 132 181 8 ./CStatUtilities.c:444 (set (reg:DF 107)
        (mult:DF (reg:DF 107)
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 131 (nil))
    (nil))

(note:HI 181 133 148 8 NOTE_INSN_DELETED)

(note:HI 148 181 149 8 NOTE_INSN_FUNCTION_END)

(note:HI 149 148 329 8 ("./CStatUtilities.c") 448)

(insn 329 149 151 8 ./CStatUtilities.c:448 (set (reg:DF 109)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 9.9999987999999995214039927304838784039020538330078125e-1 [0x0.fffffdfc9a9ac8p+0])
        (nil)))

(insn:HI 151 329 157 8 ./CStatUtilities.c:448 (set (reg/i:DF 21 xmm0 [ <result> ])
        (unspec:DF [
                (reg:DF 109)
                (reg:DF 107)
            ] 51)) 759 {*ieee_smindf3} (insn_list:REG_DEP_TRUE 134 (insn_list:REG_DEP_TRUE 133 (nil)))
    (expr_list:REG_DEAD (reg:DF 107)
        (expr_list:REG_DEAD (reg:DF 109)
            (nil))))

(insn:HI 157 151 72 8 ./CStatUtilities.c:448 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 151 (nil))
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 117
(code_label:HI 72 157 73 9 349 "" [2 uses])

(note:HI 73 72 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note:HI 74 73 305 9 ("./CStatUtilities.c") 420)

(insn:HI 305 74 186 9 ./CStatUtilities.c:420 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg/v:SI 62 [ j.343 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 186 305 187 9 ("./CStatUtilities.c") 422)

(insn:HI 187 186 188 9 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 122 [ k.339 ])
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 117 [ idum__lsm.326 ]))
                            (sign_extend:TI (reg:DI 76)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) 269 {*smuldi3_highpart_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (scratch:DI)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_UNUSED (scratch:DI)
                    (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 117 [ idum__lsm.326 ]))
                                    (const_int 4730756183288445817 [0x41a705af1fe3fb79]))
                                (const_int 64 [0x40])))
                        (nil)))))))

(insn:HI 188 187 189 9 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 122 [ k.339 ])
                (ashiftrt:DI (reg/v:DI 122 [ k.339 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (insn_list:REG_DEP_TRUE 187 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 189 188 190 9 ./CStatUtilities.c:422 (parallel [
            (set (reg:DI 120)
                (ashiftrt:DI (reg:DI 117 [ idum__lsm.326 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 190 189 191 9 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 122 [ k.339 ])
                (minus:DI (reg/v:DI 122 [ k.339 ])
                    (reg:DI 120)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 188 (insn_list:REG_DEP_TRUE 189 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 120)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (div:DI (reg:DI 117 [ idum__lsm.326 ])
                        (const_int 127773 [0x1f31d]))
                    (nil))))))

(note:HI 191 190 192 9 ("./CStatUtilities.c") 423)

(insn:HI 192 191 193 9 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 123)
                (mult:DI (reg/v:DI 122 [ k.339 ])
                    (const_int 127773 [0x1f31d])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 190 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 193 192 194 9 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 117 [ idum__lsm.326 ])
                (minus:DI (reg:DI 117 [ idum__lsm.326 ])
                    (reg:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 192 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 123)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 194 193 195 9 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 127 [ idum__lsm.326 ])
                (mult:DI (reg:DI 117 [ idum__lsm.326 ])
                    (const_int 16807 [0x41a7])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 193 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 117 [ idum__lsm.326 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 195 194 196 9 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 125)
                (mult:DI (reg/v:DI 122 [ k.339 ])
                    (const_int 2836 [0xb14])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:DI 122 [ k.339 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 196 195 197 9 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 127 [ idum__lsm.326 ])
                (minus:DI (reg:DI 127 [ idum__lsm.326 ])
                    (reg:DI 125)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 194 (insn_list:REG_DEP_TRUE 195 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 125)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 197 196 199 9 ("./CStatUtilities.c") 425)

(insn:HI 199 197 200 9 ./CStatUtilities.c:426 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg:DI 127 [ idum__lsm.326 ])
                    (const_int 2147483647 [0x7fffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 196 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 200 199 201 9 ./CStatUtilities.c:426 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 127 [ idum__lsm.326 ])
            (const_int -1 [0xffffffffffffffff]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(insn:HI 201 200 202 9 ./CStatUtilities.c:426 (set (reg:DI 130 [ idum__lsm.326 ])
        (if_then_else:DI (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (reg:DI 128)
            (reg:DI 127 [ idum__lsm.326 ]))) 742 {*movdicc_c_rex64} (insn_list:REG_DEP_TRUE 199 (insn_list:REG_DEP_TRUE 200 (nil)))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_DEAD (reg:DI 128)
            (expr_list:REG_DEAD (reg:DI 127 [ idum__lsm.326 ])
                (nil)))))

(note:HI 202 201 203 9 ("./CStatUtilities.c") 426)

(note:HI 203 202 204 9 ("./CStatUtilities.c") 428)

(insn:HI 204 203 205 9 ./CStatUtilities.c:428 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 115)
            (const_int 31 [0x1f]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 305 (nil))
    (nil))

(jump_insn:HI 205 204 213 9 ./CStatUtilities.c:428 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 223)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 204 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 115 130

(note:HI 213 205 211 ("./CStatUtilities.c") 429)

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 115 130
(note:HI 211 213 209 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 209 211 210 10 ./CStatUtilities.c:429 (set (reg:DI 131 [ j.343 ])
        (sign_extend:DI (reg:SI 115))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:SI 115)
        (nil)))

(insn:HI 210 209 223 10 ./CStatUtilities.c:429 (set (mem/s:DI (plus:DI (mult:DI (reg:DI 131 [ j.343 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("iv.5486") [flags 0x2] <var_decl 0x2b4e9c8309a0 iv>)) [12 iv S8 A64])
        (reg:DI 130 [ idum__lsm.326 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 209 (nil))
    (expr_list:REG_DEAD (reg:DI 131 [ j.343 ])
        (nil)))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 130

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 130
(code_label:HI 223 210 219 11 359 "" [1 uses])

(note:HI 219 223 215 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note:HI 215 219 216 11 ("./CStatUtilities.c") 420)

(insn:HI 216 215 226 11 ./CStatUtilities.c:420 (parallel [
            (set (reg/v:SI 132 [ j.343 ])
                (plus:SI (reg/v:SI 62 [ j.343 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 226 216 227 11 ("./CStatUtilities.c") 422)

(insn:HI 227 226 228 11 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 136 [ k.339 ])
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 130 [ idum__lsm.326 ]))
                            (sign_extend:TI (reg:DI 76)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) 269 {*smuldi3_highpart_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (scratch:DI)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_UNUSED (scratch:DI)
                    (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 130 [ idum__lsm.326 ]))
                                    (const_int 4730756183288445817 [0x41a705af1fe3fb79]))
                                (const_int 64 [0x40])))
                        (nil)))))))

(insn:HI 228 227 229 11 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 136 [ k.339 ])
                (ashiftrt:DI (reg/v:DI 136 [ k.339 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (insn_list:REG_DEP_TRUE 227 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 229 228 230 11 ./CStatUtilities.c:422 (parallel [
            (set (reg:DI 134)
                (ashiftrt:DI (reg:DI 130 [ idum__lsm.326 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 230 229 231 11 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 136 [ k.339 ])
                (minus:DI (reg/v:DI 136 [ k.339 ])
                    (reg:DI 134)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 228 (insn_list:REG_DEP_TRUE 229 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 134)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (div:DI (reg:DI 130 [ idum__lsm.326 ])
                        (const_int 127773 [0x1f31d]))
                    (nil))))))

(note:HI 231 230 232 11 ("./CStatUtilities.c") 423)

(insn:HI 232 231 233 11 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 137)
                (mult:DI (reg/v:DI 136 [ k.339 ])
                    (const_int 127773 [0x1f31d])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 230 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 233 232 234 11 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 130 [ idum__lsm.326 ])
                (minus:DI (reg:DI 130 [ idum__lsm.326 ])
                    (reg:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 232 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 137)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 234 233 235 11 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 141 [ idum__lsm.326 ])
                (mult:DI (reg:DI 130 [ idum__lsm.326 ])
                    (const_int 16807 [0x41a7])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 233 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 130 [ idum__lsm.326 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 235 234 236 11 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 139)
                (mult:DI (reg/v:DI 136 [ k.339 ])
                    (const_int 2836 [0xb14])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:DI 136 [ k.339 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 236 235 237 11 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 141 [ idum__lsm.326 ])
                (minus:DI (reg:DI 141 [ idum__lsm.326 ])
                    (reg:DI 139)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 234 (insn_list:REG_DEP_TRUE 235 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 139)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 237 236 239 11 ("./CStatUtilities.c") 425)

(insn:HI 239 237 240 11 ./CStatUtilities.c:426 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg:DI 141 [ idum__lsm.326 ])
                    (const_int 2147483647 [0x7fffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 236 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 240 239 241 11 ./CStatUtilities.c:426 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 141 [ idum__lsm.326 ])
            (const_int -1 [0xffffffffffffffff]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(insn:HI 241 240 242 11 ./CStatUtilities.c:426 (set (reg:DI 143 [ idum__lsm.326 ])
        (if_then_else:DI (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (reg:DI 142)
            (reg:DI 141 [ idum__lsm.326 ]))) 742 {*movdicc_c_rex64} (insn_list:REG_DEP_TRUE 239 (insn_list:REG_DEP_TRUE 240 (nil)))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_DEAD (reg:DI 142)
            (expr_list:REG_DEAD (reg:DI 141 [ idum__lsm.326 ])
                (nil)))))

(note:HI 242 241 243 11 ("./CStatUtilities.c") 426)

(note:HI 243 242 244 11 ("./CStatUtilities.c") 428)

(insn:HI 244 243 245 11 ./CStatUtilities.c:428 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 132 [ j.343 ])
            (const_int 31 [0x1f]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 216 (nil))
    (nil))

(jump_insn:HI 245 244 253 11 ./CStatUtilities.c:428 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 263)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 244 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 132 143

(note:HI 253 245 251 ("./CStatUtilities.c") 429)

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 132 143
(note:HI 251 253 249 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 249 251 250 12 ./CStatUtilities.c:429 (set (reg:DI 144 [ j.343 ])
        (sign_extend:DI (reg/v:SI 132 [ j.343 ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 132 [ j.343 ])
        (nil)))

(insn:HI 250 249 263 12 ./CStatUtilities.c:429 (set (mem/s:DI (plus:DI (mult:DI (reg:DI 144 [ j.343 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("iv.5486") [flags 0x2] <var_decl 0x2b4e9c8309a0 iv>)) [12 iv S8 A64])
        (reg:DI 143 [ idum__lsm.326 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 249 (nil))
    (expr_list:REG_DEAD (reg:DI 144 [ j.343 ])
        (nil)))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 143

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 74 76 143
(code_label:HI 263 250 259 13 361 "" [1 uses])

(note:HI 259 263 255 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 255 259 256 13 ("./CStatUtilities.c") 420)

(insn:HI 256 255 266 13 ./CStatUtilities.c:420 (parallel [
            (set (reg/v:SI 145 [ j.343 ])
                (plus:SI (reg/v:SI 62 [ j.343 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 266 256 267 13 ("./CStatUtilities.c") 422)

(insn:HI 267 266 268 13 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 149 [ k.339 ])
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 143 [ idum__lsm.326 ]))
                            (sign_extend:TI (reg:DI 76)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) 269 {*smuldi3_highpart_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (scratch:DI)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_UNUSED (scratch:DI)
                    (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 143 [ idum__lsm.326 ]))
                                    (const_int 4730756183288445817 [0x41a705af1fe3fb79]))
                                (const_int 64 [0x40])))
                        (nil)))))))

(insn:HI 268 267 269 13 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 149 [ k.339 ])
                (ashiftrt:DI (reg/v:DI 149 [ k.339 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (insn_list:REG_DEP_TRUE 267 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 269 268 270 13 ./CStatUtilities.c:422 (parallel [
            (set (reg:DI 147)
                (ashiftrt:DI (reg:DI 143 [ idum__lsm.326 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) 432 {*ashrdi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 270 269 271 13 ./CStatUtilities.c:422 (parallel [
            (set (reg/v:DI 149 [ k.339 ])
                (minus:DI (reg/v:DI 149 [ k.339 ])
                    (reg:DI 147)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 268 (insn_list:REG_DEP_TRUE 269 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 147)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (div:DI (reg:DI 143 [ idum__lsm.326 ])
                        (const_int 127773 [0x1f31d]))
                    (nil))))))

(note:HI 271 270 272 13 ("./CStatUtilities.c") 423)

(insn:HI 272 271 273 13 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 150)
                (mult:DI (reg/v:DI 149 [ k.339 ])
                    (const_int 127773 [0x1f31d])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 270 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 273 272 274 13 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 143 [ idum__lsm.326 ])
                (minus:DI (reg:DI 143 [ idum__lsm.326 ])
                    (reg:DI 150)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 272 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 150)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 274 273 275 13 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 154 [ idum__lsm.326 ])
                (mult:DI (reg:DI 143 [ idum__lsm.326 ])
                    (const_int 16807 [0x41a7])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (insn_list:REG_DEP_TRUE 273 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 143 [ idum__lsm.326 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 275 274 276 13 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 152)
                (mult:DI (reg/v:DI 149 [ k.339 ])
                    (const_int 2836 [0xb14])))
            (clobber (reg:CC 17 flags))
        ]) 255 {*muldi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:DI 149 [ k.339 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 276 275 277 13 ./CStatUtilities.c:423 (parallel [
            (set (reg:DI 154 [ idum__lsm.326 ])
                (minus:DI (reg:DI 154 [ idum__lsm.326 ])
                    (reg:DI 152)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 274 (insn_list:REG_DEP_TRUE 275 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 152)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 277 276 279 13 ("./CStatUtilities.c") 425)

(insn:HI 279 277 280 13 ./CStatUtilities.c:426 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg:DI 154 [ idum__lsm.326 ])
                    (const_int 2147483647 [0x7fffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 276 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 280 279 281 13 ./CStatUtilities.c:426 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 154 [ idum__lsm.326 ])
            (const_int -1 [0xffffffffffffffff]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(insn:HI 281 280 282 13 ./CStatUtilities.c:426 (set (reg:DI 66 [ idum__lsm.326 ])
        (if_then_else:DI (le (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (reg:DI 155)
            (reg:DI 154 [ idum__lsm.326 ]))) 742 {*movdicc_c_rex64} (insn_list:REG_DEP_TRUE 279 (insn_list:REG_DEP_TRUE 280 (nil)))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_DEAD (reg:DI 155)
            (expr_list:REG_DEAD (reg:DI 154 [ idum__lsm.326 ])
                (nil)))))

(note:HI 282 281 283 13 ("./CStatUtilities.c") 426)

(note:HI 283 282 284 13 ("./CStatUtilities.c") 428)

(insn:HI 284 283 285 13 ./CStatUtilities.c:428 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 145 [ j.343 ])
            (const_int 31 [0x1f]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 256 (nil))
    (nil))

(jump_insn:HI 285 284 293 13 ./CStatUtilities.c:428 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 303)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 284 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76 145

(note:HI 293 285 291 ("./CStatUtilities.c") 429)

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76 145
(note:HI 291 293 289 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 289 291 290 14 ./CStatUtilities.c:429 (set (reg:DI 156 [ j.343 ])
        (sign_extend:DI (reg/v:SI 145 [ j.343 ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 145 [ j.343 ])
        (nil)))

(insn:HI 290 289 303 14 ./CStatUtilities.c:429 (set (mem/s:DI (plus:DI (mult:DI (reg:DI 156 [ j.343 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("iv.5486") [flags 0x2] <var_decl 0x2b4e9c8309a0 iv>)) [12 iv S8 A64])
        (reg:DI 66 [ idum__lsm.326 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 289 (nil))
    (expr_list:REG_DEAD (reg:DI 156 [ j.343 ])
        (nil)))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76
(code_label:HI 303 290 299 15 363 "" [1 uses])

(note:HI 299 303 295 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 295 299 296 15 ("./CStatUtilities.c") 420)

(insn:HI 296 295 297 15 ./CStatUtilities.c:420 (parallel [
            (set (reg/v:SI 62 [ j.343 ])
                (plus:SI (reg/v:SI 62 [ j.343 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 297 296 298 15 ./CStatUtilities.c:420 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 62 [ j.343 ])
            (const_int -1 [0xffffffffffffffff]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 296 (nil))
    (nil))

(jump_insn:HI 298 297 302 15 ./CStatUtilities.c:420 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 319)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 297 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 250 [0xfa])
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76
(note:HI 302 298 320 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 320 302 321 16 (set (pc)
        (label_ref 40)) 548 {jump} (nil)
    (nil))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 66 74 76

(barrier:HI 321 320 0)


;; Function maxAbsDer (maxAbsDer)



Pass 0

  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7540 MMX_REGS:7540 FP_TOP_SSE_REGS:7540 FP_SECOND_SSE_REGS:7540 FLOAT_SSE_REGS:7540 FLOAT_INT_REGS:5220 INT_SSE_REGS:7540 FLOAT_INT_SSE_REGS:7540 ALL_REGS:7540 MEM:2230
  Register 64 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10855 MMX_REGS:10855 FP_TOP_SSE_REGS:10855 FP_SECOND_SSE_REGS:10855 FLOAT_SSE_REGS:10855 FLOAT_INT_REGS:7515 INT_SSE_REGS:10855 FLOAT_INT_SSE_REGS:10855 ALL_REGS:10855 MEM:2827
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2743 MMX_REGS:2743 FP_TOP_SSE_REGS:2743 FP_SECOND_SSE_REGS:2743 FLOAT_SSE_REGS:2743 FLOAT_INT_REGS:1899 INT_SSE_REGS:2743 FLOAT_INT_SSE_REGS:2743 ALL_REGS:2743 MEM:844
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 INT_SSE_REGS:4186 MEM:1077
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 76 costs: SSE_REGS:0 FP_TOP_SSE_REGS:27846 FP_SECOND_SSE_REGS:27846 FLOAT_SSE_REGS:27846 INT_SSE_REGS:58606 FLOAT_INT_SSE_REGS:58606 ALL_REGS:58606 MEM:11566
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 84 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 85 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:55354 MMX_REGS:55354 FP_TOP_SSE_REGS:55354 FP_SECOND_SSE_REGS:55354 FLOAT_SSE_REGS:55354 FLOAT_INT_REGS:38322 INT_SSE_REGS:55354 FLOAT_INT_SSE_REGS:55354 ALL_REGS:55354 MEM:15660
  Register 86 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 88 costs: AREG:33371 DREG:33371 CREG:33371 BREG:33371 SIREG:33371 DIREG:33371 AD_REGS:33371 Q_REGS:33371 NON_Q_REGS:38862 INDEX_REGS:33371 LEGACY_REGS:38862 GENERAL_REGS:38862 FP_TOP_REG:53907 FP_SECOND_REG:53907 FLOAT_REGS:53907 SSE_REGS:0 FP_TOP_SSE_REGS:53907 FP_SECOND_SSE_REGS:53907 FLOAT_SSE_REGS:53907 FLOAT_INT_REGS:53907 INT_SSE_REGS:33371 FLOAT_INT_SSE_REGS:53907 ALL_REGS:60690 MEM:20986
  Register 92 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 98 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 104 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 110 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 116 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 122 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 132 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 135 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 138 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 141 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 144 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 147 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 150 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960

  Register 60 pref GENERAL_REGS or none
  Register 64 pref DREG, else GENERAL_REGS
  Register 66 pref DIREG, else GENERAL_REGS
  Register 67 pref SIREG, else GENERAL_REGS
  Register 70 pref INDEX_REGS, else GENERAL_REGS
  Register 76 pref SSE_REGS or none
  Register 81 pref GENERAL_REGS or none
  Register 84 pref GENERAL_REGS or none
  Register 85 pref GENERAL_REGS or none
  Register 86 pref SSE_REGS or none
  Register 88 pref SSE_REGS or none
  Register 92 pref SSE_REGS or none
  Register 98 pref SSE_REGS or none
  Register 104 pref SSE_REGS or none
  Register 110 pref SSE_REGS or none
  Register 116 pref SSE_REGS or none
  Register 122 pref SSE_REGS or none
  Register 132 pref SSE_REGS or none
  Register 135 pref SSE_REGS or none
  Register 138 pref SSE_REGS or none
  Register 141 pref SSE_REGS or none
  Register 144 pref SSE_REGS or none
  Register 147 pref SSE_REGS or none
  Register 150 pref SSE_REGS or none


Pass 1

  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7540 MMX_REGS:7540 FP_TOP_SSE_REGS:7540 FP_SECOND_SSE_REGS:7540 FLOAT_SSE_REGS:7540 FLOAT_INT_REGS:5220 INT_SSE_REGS:7540 FLOAT_INT_SSE_REGS:7540 ALL_REGS:7540 MEM:2230
  Register 64 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10855 MMX_REGS:10855 FP_TOP_SSE_REGS:10855 FP_SECOND_SSE_REGS:10855 FLOAT_SSE_REGS:10855 FLOAT_INT_REGS:7515 INT_SSE_REGS:10855 FLOAT_INT_SSE_REGS:10855 ALL_REGS:10855 MEM:2827
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2743 MMX_REGS:2743 FP_TOP_SSE_REGS:2743 FP_SECOND_SSE_REGS:2743 FLOAT_SSE_REGS:2743 FLOAT_INT_REGS:1899 INT_SSE_REGS:2743 FLOAT_INT_SSE_REGS:2743 ALL_REGS:2743 MEM:844
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4186 MMX_REGS:4186 INT_SSE_REGS:4186 MEM:1077
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:800
  Register 76 costs: SSE_REGS:0 FP_TOP_SSE_REGS:27846 FP_SECOND_SSE_REGS:27846 FLOAT_SSE_REGS:27846 INT_SSE_REGS:58606 FLOAT_INT_SSE_REGS:58606 ALL_REGS:58606 MEM:11566
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 84 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 85 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:55354 MMX_REGS:55354 FP_TOP_SSE_REGS:55354 FP_SECOND_SSE_REGS:55354 FLOAT_SSE_REGS:55354 FLOAT_INT_REGS:38322 INT_SSE_REGS:55354 FLOAT_INT_SSE_REGS:55354 ALL_REGS:55354 MEM:15660
  Register 86 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 88 costs: AREG:33371 DREG:33371 CREG:33371 BREG:33371 SIREG:33371 DIREG:33371 AD_REGS:33371 Q_REGS:33371 NON_Q_REGS:38862 INDEX_REGS:33371 LEGACY_REGS:38862 GENERAL_REGS:38862 FP_TOP_REG:53907 FP_SECOND_REG:53907 FLOAT_REGS:53907 SSE_REGS:0 FP_TOP_SSE_REGS:53907 FP_SECOND_SSE_REGS:53907 FLOAT_SSE_REGS:53907 FLOAT_INT_REGS:53907 INT_SSE_REGS:33371 FLOAT_INT_SSE_REGS:53907 ALL_REGS:60690 MEM:20986
  Register 92 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 98 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 104 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 110 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 116 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 122 costs: AREG:9191 DREG:9191 CREG:9191 BREG:9191 SIREG:9191 DIREG:9191 AD_REGS:9191 Q_REGS:9191 NON_Q_REGS:10908 INDEX_REGS:9191 LEGACY_REGS:10908 GENERAL_REGS:10908 FP_TOP_REG:14847 FP_SECOND_REG:14847 FLOAT_REGS:14847 SSE_REGS:0 FP_TOP_SSE_REGS:14847 FP_SECOND_SSE_REGS:14847 FLOAT_SSE_REGS:14847 FLOAT_INT_REGS:14847 INT_SSE_REGS:9191 FLOAT_INT_SSE_REGS:14847 ALL_REGS:16968 MEM:5959
  Register 132 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 135 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 138 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 141 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 144 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 147 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960
  Register 150 costs: AREG:5850 DREG:5850 CREG:5850 BREG:5850 SIREG:5850 DIREG:5850 AD_REGS:5850 Q_REGS:5850 NON_Q_REGS:7380 INDEX_REGS:5850 LEGACY_REGS:7380 GENERAL_REGS:7380 FP_TOP_REG:9450 FP_SECOND_REG:9450 FLOAT_REGS:9450 SSE_REGS:0 FP_TOP_SSE_REGS:9450 FP_SECOND_SSE_REGS:9450 FLOAT_SSE_REGS:9450 FLOAT_INT_REGS:9450 INT_SSE_REGS:5850 FLOAT_INT_SSE_REGS:9450 ALL_REGS:11340 MEM:3960

153 registers.

Register 60 used 6 times across 32 insns; set 1 time; GENERAL_REGS or none.

Register 64 used 8 times across 113 insns; set 2 times; user var; dies in 0 places; 4 bytes; pref DREG, else GENERAL_REGS.

Register 66 used 2 times across 8 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 67 used 3 times across 6 insns; set 1 time; user var; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 70 used 2 times across 2 insns in block 3; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 76 used 17 times across 212 insns; set 1 time; dies in 0 places; 16 bytes; SSE_REGS or none.

Register 81 used 10 times across 24 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 84 used 19 times across 204 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 85 used 45 times across 102 insns; set 9 times; GENERAL_REGS or none.

Register 86 used 8 times across 11 insns in block 18; set 4 times; SSE_REGS or none.

Register 88 used 31 times across 188 insns; set 16 times; user var; dies in 2 places; SSE_REGS or none.

Register 92 used 8 times across 11 insns in block 18; set 4 times; SSE_REGS or none.

Register 98 used 8 times across 11 insns in block 18; set 4 times; SSE_REGS or none.

Register 104 used 8 times across 11 insns in block 18; set 4 times; SSE_REGS or none.

Register 110 used 8 times across 11 insns in block 18; set 4 times; SSE_REGS or none.

Register 116 used 8 times across 11 insns in block 18; set 4 times; SSE_REGS or none.

Register 122 used 8 times across 11 insns in block 18; set 4 times; SSE_REGS or none.

Register 132 used 6 times across 6 insns in block 11; set 3 times; SSE_REGS or none.

Register 135 used 6 times across 6 insns in block 12; set 3 times; SSE_REGS or none.

Register 138 used 6 times across 6 insns in block 13; set 3 times; SSE_REGS or none.

Register 141 used 6 times across 6 insns in block 14; set 3 times; SSE_REGS or none.

Register 144 used 6 times across 6 insns in block 15; set 3 times; SSE_REGS or none.

Register 147 used 6 times across 6 insns in block 16; set 3 times; SSE_REGS or none.

Register 150 used 6 times across 6 insns in block 17; set 3 times; SSE_REGS or none.

20 basic blocks, 32 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  3 [90.0%]  1 [10.0%]  (fallthru)
Registers live at start: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 67

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  0 [10.0%]  (fallthru)
Successors:  2 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  1 [100.0%]  (fallthru) 18 [10.0%]  (loop_exit) 3 [10.0%]  17 [10.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  4 [90.0%]  (fallthru,dfs_back) 2 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  3 [90.0%]  (fallthru,dfs_back)
Successors:  5 [87.5%]  (fallthru) 18 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
Invalid sum of incoming frequencies 900, should be 771

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  4 [87.5%]  (fallthru)
Successors:  6 [85.7%]  (fallthru) 17 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  5 [85.7%]  (fallthru)
Successors:  7 [83.3%]  (fallthru) 16 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  6 [83.3%]  (fallthru)
Successors:  8 [80.0%]  (fallthru) 15 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  7 [80.0%]  (fallthru)
Successors:  9 [75.0%]  (fallthru) 14 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  8 [75.0%]  (fallthru)
Successors:  10 [66.7%]  (fallthru) 13 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  9 [66.7%]  (fallthru)
Successors:  11 [50.0%]  (fallthru) 12 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 84 85 88
Invalid sum of incoming frequencies 300, should be 900

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
Successors:  12 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Invalid sum of incoming frequencies 450, should be 900

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 10 [50.0%] 
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Invalid sum of incoming frequencies 1350, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 9 [33.3%] 
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Invalid sum of incoming frequencies 1050, should be 900

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 8 [25.0%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Invalid sum of incoming frequencies 1050, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 7 [20.0%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Invalid sum of incoming frequencies 1035, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 6 [16.7%] 
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Invalid sum of incoming frequencies 1020, should be 900

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 5 [14.3%] 
Successors:  18 [90.0%]  (fallthru,dfs_back) 2 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Invalid sum of incoming frequencies 1007, should be 900

Basic block 18 prev 17, next 19, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  17 [90.0%]  (fallthru,dfs_back) 19 [100.0%]  4 [12.5%] 
Successors:  19 [90.0%]  (fallthru,dfs_back) 2 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 19 prev 18, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  18 [90.0%]  (fallthru,dfs_back)
Successors:  18 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88

;; Register 70 in 0.
;; Register 86 in 21.
;; Register 92 in 22.
;; Register 98 in 21.
;; Register 104 in 22.
;; Register 110 in 21.
;; Register 116 in 22.
;; Register 122 in 21.
;; Register 132 in 21.
;; Register 135 in 21.
;; Register 138 in 21.
;; Register 141 in 21.
;; Register 144 in 21.
;; Register 147 in 21.
;; Register 150 in 21.
(note:HI 1 0 9 ("./CStatUtilities.c") 454)

;; Start of basic block 0, registers live: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 9 1 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 4 9 5 0 ./CStatUtilities.c:454 (set (reg/v/f:DI 66 [ sllr ])
        (reg:DI 5 di [ sllr ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ sllr ])
        (nil)))

(insn:HI 5 4 6 0 ./CStatUtilities.c:454 (set (reg/v:SI 67 [ start ])
        (reg:SI 4 si [ start ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ start ])
        (nil)))

(insn:HI 6 5 7 0 ./CStatUtilities.c:454 (set (reg/v:SI 64 [ n ])
        (reg:SI 1 dx [ end ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 1 dx [ end ])
        (nil)))

(note:HI 7 6 11 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 11 7 12 0 ("./CStatUtilities.c") 455)

(insn:HI 12 11 13 0 ./CStatUtilities.c:455 (parallel [
            (set (reg/v:SI 64 [ n ])
                (minus:SI (reg/v:SI 64 [ n ])
                    (reg/v:SI 67 [ start ])))
            (clobber (reg:CC 17 flags))
        ]) 242 {*subsi_1} (insn_list:REG_DEP_TRUE 5 (insn_list:REG_DEP_TRUE 6 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 13 12 14 0 ("./CStatUtilities.c") 460)

(insn:HI 14 13 15 0 ./CStatUtilities.c:460 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 64 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 12 (nil))
    (nil))

(jump_insn:HI 15 14 17 0 ./CStatUtilities.c:460 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 67

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 17 15 18 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 18 17 73 1 ./CStatUtilities.c:460 (set (reg/v:DF 88 [ maxAbsDer ])
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

(note:HI 73 18 74 NOTE_INSN_LOOP_BEG)

(note:HI 74 73 53 NOTE_INSN_LOOP_END)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
(code_label:HI 53 74 54 2 372 "" [3 uses])

(note:HI 54 53 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 58 54 59 2 NOTE_INSN_FUNCTION_END)

(note:HI 59 58 61 2 ("./CStatUtilities.c") 467)

(insn:HI 61 59 67 2 ./CStatUtilities.c:467 (set (reg/i:DF 21 xmm0 [ <result> ])
        (reg/v:DF 88 [ maxAbsDer ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 88 [ maxAbsDer ])
        (nil)))

(insn:HI 67 61 21 2 ./CStatUtilities.c:467 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 61 (nil))
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 66 67
(code_label:HI 21 67 22 3 370 "" [1 uses])

(note:HI 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 23 22 24 3 NOTE_INSN_DELETED)

(insn:HI 24 23 25 3 ./CStatUtilities.c:460 (set (reg:DI 70 [ start ])
        (sign_extend:DI (reg/v:SI 67 [ start ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 67 [ start ])
        (nil)))

(note:HI 25 24 26 3 NOTE_INSN_DELETED)

(insn:HI 26 25 28 3 ./CStatUtilities.c:460 (set (reg:DI 60 [ ivtmp.382 ])
        (plus:DI (plus:DI (mult:DI (reg:DI 70 [ start ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 66 [ sllr ]))
            (const_int 8 [0x8]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 24 (nil))
    (expr_list:REG_DEAD (reg:DI 70 [ start ])
        (expr_list:REG_DEAD (reg/v/f:DI 66 [ sllr ])
            (nil))))

(note:HI 28 26 76 3 NOTE_INSN_DELETED)

(insn:HI 76 28 83 3 (set (reg:V2DF 76)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [6 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(note:HI 83 76 84 3 NOTE_INSN_DELETED)

(insn:HI 84 83 85 3 (parallel [
            (set (reg:SI 81)
                (plus:SI (reg/v:SI 64 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 85 84 88 3 (parallel [
            (set (reg:SI 81)
                (and:SI (reg:SI 81)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 84 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 88 85 89 3 ("./CStatUtilities.c") 454)

(note:HI 89 88 90 3 ("./CStatUtilities.c") 462)

(insn:HI 90 89 91 3 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (mem:DF (reg:DI 60 [ ivtmp.382 ]) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 26 (nil))
    (nil))

(insn:HI 91 90 92 3 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (minus:DF (reg/v:DF 88 [ maxAbsDer ])
            (mem:DF (plus:DI (reg:DI 60 [ ivtmp.382 ])
                    (const_int -8 [0xfffffffffffffff8])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 90 (nil))
    (nil))

(insn:HI 92 91 94 3 ./CStatUtilities.c:462 (parallel [
            (set (reg/v:DF 88 [ maxAbsDer ])
                (abs:DF (reg/v:DF 88 [ maxAbsDer ])))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 76 (insn_list:REG_DEP_TRUE 91 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 72))
                (nil)))))

(insn:HI 94 92 95 3 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (unspec:DF [
                (reg/v:DF 88 [ maxAbsDer ])
                (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [6 S8 A64])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 92 (nil))
    (nil))

(note:HI 95 94 96 3 ("./CStatUtilities.c") 460)

(insn:HI 96 95 97 3 ./CStatUtilities.c:460 (set (reg/v:SI 84 [ j ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 97 96 98 3 ./CStatUtilities.c:460 (parallel [
            (set (reg:DI 85 [ ivtmp.382 ])
                (plus:DI (reg:DI 60 [ ivtmp.382 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 98 97 99 3 ./CStatUtilities.c:460 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 84 [ j ])
            (reg/v:SI 64 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 96 (nil))
    (nil))

(jump_insn:HI 99 98 274 3 ./CStatUtilities.c:460 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 53)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 98 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
(note:HI 274 99 272 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 272 274 273 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 273 272 250 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 29)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 272 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
(note:HI 250 273 248 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 248 250 249 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 249 248 226 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 440)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 248 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
(note:HI 226 249 224 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 224 226 225 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 225 224 202 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 441)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 224 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
(note:HI 202 225 200 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 200 202 201 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 201 200 178 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 442)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 200 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
(note:HI 178 201 176 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 176 178 177 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 177 176 154 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 443)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 176 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
(note:HI 154 177 152 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 152 154 153 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 153 152 130 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 444)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 152 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 81 84 85 88
(note:HI 130 153 128 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 128 130 129 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 81)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 81)
        (nil)))

(jump_insn:HI 129 128 120 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 445)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 128 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 84 85 88

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 64 76 85 88
(note:HI 120 129 108 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note:HI 108 120 109 11 ("./CStatUtilities.c") 454)

(note:HI 109 108 110 11 ("./CStatUtilities.c") 462)

(insn:HI 110 109 111 11 ./CStatUtilities.c:462 (set (reg:DF 132)
        (mem:DF (plus:DI (reg:DI 60 [ ivtmp.382 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 111 110 112 11 ./CStatUtilities.c:462 (set (reg:DF 132)
        (minus:DF (reg:DF 132)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int -8 [0xfffffffffffffff8])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 110 (nil))
    (expr_list:REG_DEAD (reg:DI 85 [ ivtmp.382 ])
        (nil)))

(insn:HI 112 111 114 11 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 132)
                (abs:DF (reg:DF 132)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 111 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 133))
                (nil)))))

(insn:HI 114 112 115 11 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (unspec:DF [
                (reg:DF 132)
                (reg/v:DF 88 [ maxAbsDer ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 112 (nil))
    (expr_list:REG_DEAD (reg:DF 132)
        (nil)))

(note:HI 115 114 116 11 ("./CStatUtilities.c") 460)

(insn:HI 116 115 117 11 ./CStatUtilities.c:460 (set (reg/v:SI 84 [ j ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 117 116 445 11 ./CStatUtilities.c:460 (parallel [
            (set (reg:DI 85 [ ivtmp.382 ])
                (plus:DI (reg:DI 60 [ ivtmp.382 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 60 [ ivtmp.382 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
(code_label:HI 445 117 144 12 409 "" [1 uses])

(note:HI 144 445 132 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 132 144 133 12 ("./CStatUtilities.c") 454)

(note:HI 133 132 134 12 ("./CStatUtilities.c") 462)

(insn:HI 134 133 135 12 ./CStatUtilities.c:462 (set (reg:DF 135)
        (mem:DF (reg:DI 85 [ ivtmp.382 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 135 134 136 12 ./CStatUtilities.c:462 (set (reg:DF 135)
        (minus:DF (reg:DF 135)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int -8 [0xfffffffffffffff8])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 134 (nil))
    (nil))

(insn:HI 136 135 138 12 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 135)
                (abs:DF (reg:DF 135)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 135 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 136))
                (nil)))))

(insn:HI 138 136 139 12 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (unspec:DF [
                (reg:DF 135)
                (reg/v:DF 88 [ maxAbsDer ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 136 (nil))
    (expr_list:REG_DEAD (reg:DF 135)
        (nil)))

(note:HI 139 138 140 12 ("./CStatUtilities.c") 460)

(insn:HI 140 139 141 12 ./CStatUtilities.c:460 (parallel [
            (set (reg/v:SI 84 [ j ])
                (plus:SI (reg/v:SI 84 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 141 140 444 12 ./CStatUtilities.c:460 (parallel [
            (set (reg:DI 85 [ ivtmp.382 ])
                (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
(code_label:HI 444 141 168 13 408 "" [1 uses])

(note:HI 168 444 156 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 156 168 157 13 ("./CStatUtilities.c") 454)

(note:HI 157 156 158 13 ("./CStatUtilities.c") 462)

(insn:HI 158 157 159 13 ./CStatUtilities.c:462 (set (reg:DF 138)
        (mem:DF (reg:DI 85 [ ivtmp.382 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 159 158 160 13 ./CStatUtilities.c:462 (set (reg:DF 138)
        (minus:DF (reg:DF 138)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int -8 [0xfffffffffffffff8])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 158 (nil))
    (nil))

(insn:HI 160 159 162 13 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 138)
                (abs:DF (reg:DF 138)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 159 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 139))
                (nil)))))

(insn:HI 162 160 163 13 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (unspec:DF [
                (reg:DF 138)
                (reg/v:DF 88 [ maxAbsDer ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 160 (nil))
    (expr_list:REG_DEAD (reg:DF 138)
        (nil)))

(note:HI 163 162 164 13 ("./CStatUtilities.c") 460)

(insn:HI 164 163 165 13 ./CStatUtilities.c:460 (parallel [
            (set (reg/v:SI 84 [ j ])
                (plus:SI (reg/v:SI 84 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 165 164 443 13 ./CStatUtilities.c:460 (parallel [
            (set (reg:DI 85 [ ivtmp.382 ])
                (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
(code_label:HI 443 165 192 14 407 "" [1 uses])

(note:HI 192 443 180 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 180 192 181 14 ("./CStatUtilities.c") 454)

(note:HI 181 180 182 14 ("./CStatUtilities.c") 462)

(insn:HI 182 181 183 14 ./CStatUtilities.c:462 (set (reg:DF 141)
        (mem:DF (reg:DI 85 [ ivtmp.382 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 183 182 184 14 ./CStatUtilities.c:462 (set (reg:DF 141)
        (minus:DF (reg:DF 141)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int -8 [0xfffffffffffffff8])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 182 (nil))
    (nil))

(insn:HI 184 183 186 14 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 141)
                (abs:DF (reg:DF 141)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 183 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 142))
                (nil)))))

(insn:HI 186 184 187 14 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (unspec:DF [
                (reg:DF 141)
                (reg/v:DF 88 [ maxAbsDer ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 184 (nil))
    (expr_list:REG_DEAD (reg:DF 141)
        (nil)))

(note:HI 187 186 188 14 ("./CStatUtilities.c") 460)

(insn:HI 188 187 189 14 ./CStatUtilities.c:460 (parallel [
            (set (reg/v:SI 84 [ j ])
                (plus:SI (reg/v:SI 84 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 189 188 442 14 ./CStatUtilities.c:460 (parallel [
            (set (reg:DI 85 [ ivtmp.382 ])
                (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
(code_label:HI 442 189 216 15 406 "" [1 uses])

(note:HI 216 442 204 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 204 216 205 15 ("./CStatUtilities.c") 454)

(note:HI 205 204 206 15 ("./CStatUtilities.c") 462)

(insn:HI 206 205 207 15 ./CStatUtilities.c:462 (set (reg:DF 144)
        (mem:DF (reg:DI 85 [ ivtmp.382 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 207 206 208 15 ./CStatUtilities.c:462 (set (reg:DF 144)
        (minus:DF (reg:DF 144)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int -8 [0xfffffffffffffff8])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 206 (nil))
    (nil))

(insn:HI 208 207 210 15 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 144)
                (abs:DF (reg:DF 144)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 207 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 145))
                (nil)))))

(insn:HI 210 208 211 15 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (unspec:DF [
                (reg:DF 144)
                (reg/v:DF 88 [ maxAbsDer ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 208 (nil))
    (expr_list:REG_DEAD (reg:DF 144)
        (nil)))

(note:HI 211 210 212 15 ("./CStatUtilities.c") 460)

(insn:HI 212 211 213 15 ./CStatUtilities.c:460 (parallel [
            (set (reg/v:SI 84 [ j ])
                (plus:SI (reg/v:SI 84 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 213 212 441 15 ./CStatUtilities.c:460 (parallel [
            (set (reg:DI 85 [ ivtmp.382 ])
                (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
(code_label:HI 441 213 240 16 405 "" [1 uses])

(note:HI 240 441 228 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 228 240 229 16 ("./CStatUtilities.c") 454)

(note:HI 229 228 230 16 ("./CStatUtilities.c") 462)

(insn:HI 230 229 231 16 ./CStatUtilities.c:462 (set (reg:DF 147)
        (mem:DF (reg:DI 85 [ ivtmp.382 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 231 230 232 16 ./CStatUtilities.c:462 (set (reg:DF 147)
        (minus:DF (reg:DF 147)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int -8 [0xfffffffffffffff8])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 230 (nil))
    (nil))

(insn:HI 232 231 234 16 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 147)
                (abs:DF (reg:DF 147)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 231 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 148))
                (nil)))))

(insn:HI 234 232 235 16 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (unspec:DF [
                (reg:DF 147)
                (reg/v:DF 88 [ maxAbsDer ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 232 (nil))
    (expr_list:REG_DEAD (reg:DF 147)
        (nil)))

(note:HI 235 234 236 16 ("./CStatUtilities.c") 460)

(insn:HI 236 235 237 16 ./CStatUtilities.c:460 (parallel [
            (set (reg/v:SI 84 [ j ])
                (plus:SI (reg/v:SI 84 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 237 236 440 16 ./CStatUtilities.c:460 (parallel [
            (set (reg:DI 85 [ ivtmp.382 ])
                (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
(code_label:HI 440 237 264 17 404 "" [1 uses])

(note:HI 264 440 252 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 252 264 253 17 ("./CStatUtilities.c") 454)

(note:HI 253 252 254 17 ("./CStatUtilities.c") 462)

(insn:HI 254 253 255 17 ./CStatUtilities.c:462 (set (reg:DF 150)
        (mem:DF (reg:DI 85 [ ivtmp.382 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 255 254 256 17 ./CStatUtilities.c:462 (set (reg:DF 150)
        (minus:DF (reg:DF 150)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int -8 [0xfffffffffffffff8])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 254 (nil))
    (nil))

(insn:HI 256 255 258 17 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 150)
                (abs:DF (reg:DF 150)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 255 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 151))
                (nil)))))

(insn:HI 258 256 259 17 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (unspec:DF [
                (reg:DF 150)
                (reg/v:DF 88 [ maxAbsDer ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 256 (nil))
    (expr_list:REG_DEAD (reg:DF 150)
        (nil)))

(note:HI 259 258 260 17 ("./CStatUtilities.c") 460)

(insn:HI 260 259 261 17 ./CStatUtilities.c:460 (parallel [
            (set (reg/v:SI 84 [ j ])
                (plus:SI (reg/v:SI 84 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 261 260 262 17 ./CStatUtilities.c:460 (parallel [
            (set (reg:DI 85 [ ivtmp.382 ])
                (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 262 261 263 17 ./CStatUtilities.c:460 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 84 [ j ])
            (reg/v:SI 64 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 260 (nil))
    (nil))

(jump_insn:HI 263 262 29 17 ./CStatUtilities.c:460 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 53)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 262 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
(code_label:HI 29 263 30 18 373 "" [2 uses])

(note:HI 30 29 31 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 31 30 33 18 ("./CStatUtilities.c") 454)

(note:HI 33 31 34 18 ("./CStatUtilities.c") 462)

(insn:HI 34 33 35 18 ./CStatUtilities.c:462 (set (reg:DF 86)
        (mem:DF (reg:DI 85 [ ivtmp.382 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 35 34 37 18 ./CStatUtilities.c:462 (set (reg:DF 86)
        (minus:DF (reg:DF 86)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int -8 [0xfffffffffffffff8])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 34 (nil))
    (nil))

(insn:HI 37 35 79 18 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 86)
                (abs:DF (reg:DF 86)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 35 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 87))
                (nil)))))

(insn:HI 79 37 48 18 ./CStatUtilities.c:462 (set (reg:DF 86)
        (unspec:DF [
                (reg:DF 86)
                (reg/v:DF 88 [ maxAbsDer ])
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 37 (nil))
    (expr_list:REG_DEAD (reg/v:DF 88 [ maxAbsDer ])
        (nil)))

(note:HI 48 79 409 18 ("./CStatUtilities.c") 460)

(note:HI 409 48 276 18 NOTE_INSN_DELETED)

(note:HI 276 409 277 18 ("./CStatUtilities.c") 454)

(note:HI 277 276 278 18 ("./CStatUtilities.c") 462)

(insn:HI 278 277 279 18 ./CStatUtilities.c:462 (set (reg:DF 92)
        (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 279 278 280 18 ./CStatUtilities.c:462 (set (reg:DF 92)
        (minus:DF (reg:DF 92)
            (mem:DF (reg:DI 85 [ ivtmp.382 ]) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 278 (nil))
    (nil))

(insn:HI 280 279 282 18 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 92)
                (abs:DF (reg:DF 92)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 279 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 93))
                (nil)))))

(insn:HI 282 280 283 18 ./CStatUtilities.c:462 (set (reg:DF 92)
        (unspec:DF [
                (reg:DF 92)
                (reg:DF 86)
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 79 (insn_list:REG_DEP_TRUE 280 (nil)))
    (expr_list:REG_DEAD (reg:DF 86)
        (nil)))

(note:HI 283 282 285 18 ("./CStatUtilities.c") 460)

(note:HI 285 283 295 18 NOTE_INSN_DELETED)

(note:HI 295 285 296 18 ("./CStatUtilities.c") 454)

(note:HI 296 295 297 18 ("./CStatUtilities.c") 462)

(insn:HI 297 296 298 18 ./CStatUtilities.c:462 (set (reg:DF 98)
        (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                (const_int 16 [0x10])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 298 297 299 18 ./CStatUtilities.c:462 (set (reg:DF 98)
        (minus:DF (reg:DF 98)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 8 [0x8])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 297 (nil))
    (nil))

(insn:HI 299 298 301 18 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 98)
                (abs:DF (reg:DF 98)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 298 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 99))
                (nil)))))

(insn:HI 301 299 302 18 ./CStatUtilities.c:462 (set (reg:DF 98)
        (unspec:DF [
                (reg:DF 98)
                (reg:DF 92)
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 282 (insn_list:REG_DEP_TRUE 299 (nil)))
    (expr_list:REG_DEAD (reg:DF 92)
        (nil)))

(note:HI 302 301 304 18 ("./CStatUtilities.c") 460)

(note:HI 304 302 314 18 NOTE_INSN_DELETED)

(note:HI 314 304 315 18 ("./CStatUtilities.c") 454)

(note:HI 315 314 316 18 ("./CStatUtilities.c") 462)

(insn:HI 316 315 317 18 ./CStatUtilities.c:462 (set (reg:DF 104)
        (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                (const_int 24 [0x18])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 317 316 318 18 ./CStatUtilities.c:462 (set (reg:DF 104)
        (minus:DF (reg:DF 104)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 16 [0x10])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 316 (nil))
    (nil))

(insn:HI 318 317 320 18 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 104)
                (abs:DF (reg:DF 104)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 317 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 105))
                (nil)))))

(insn:HI 320 318 321 18 ./CStatUtilities.c:462 (set (reg:DF 104)
        (unspec:DF [
                (reg:DF 104)
                (reg:DF 98)
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 301 (insn_list:REG_DEP_TRUE 318 (nil)))
    (expr_list:REG_DEAD (reg:DF 98)
        (nil)))

(note:HI 321 320 323 18 ("./CStatUtilities.c") 460)

(note:HI 323 321 333 18 NOTE_INSN_DELETED)

(note:HI 333 323 334 18 ("./CStatUtilities.c") 454)

(note:HI 334 333 335 18 ("./CStatUtilities.c") 462)

(insn:HI 335 334 336 18 ./CStatUtilities.c:462 (set (reg:DF 110)
        (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                (const_int 32 [0x20])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 336 335 337 18 ./CStatUtilities.c:462 (set (reg:DF 110)
        (minus:DF (reg:DF 110)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 24 [0x18])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 335 (nil))
    (nil))

(insn:HI 337 336 339 18 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 110)
                (abs:DF (reg:DF 110)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 336 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 111))
                (nil)))))

(insn:HI 339 337 340 18 ./CStatUtilities.c:462 (set (reg:DF 110)
        (unspec:DF [
                (reg:DF 110)
                (reg:DF 104)
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 320 (insn_list:REG_DEP_TRUE 337 (nil)))
    (expr_list:REG_DEAD (reg:DF 104)
        (nil)))

(note:HI 340 339 342 18 ("./CStatUtilities.c") 460)

(note:HI 342 340 352 18 NOTE_INSN_DELETED)

(note:HI 352 342 353 18 ("./CStatUtilities.c") 454)

(note:HI 353 352 354 18 ("./CStatUtilities.c") 462)

(insn:HI 354 353 355 18 ./CStatUtilities.c:462 (set (reg:DF 116)
        (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                (const_int 40 [0x28])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 355 354 356 18 ./CStatUtilities.c:462 (set (reg:DF 116)
        (minus:DF (reg:DF 116)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 32 [0x20])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 354 (nil))
    (nil))

(insn:HI 356 355 358 18 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 116)
                (abs:DF (reg:DF 116)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 355 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 117))
                (nil)))))

(insn:HI 358 356 359 18 ./CStatUtilities.c:462 (set (reg:DF 116)
        (unspec:DF [
                (reg:DF 116)
                (reg:DF 110)
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 339 (insn_list:REG_DEP_TRUE 356 (nil)))
    (expr_list:REG_DEAD (reg:DF 110)
        (nil)))

(note:HI 359 358 361 18 ("./CStatUtilities.c") 460)

(note:HI 361 359 371 18 NOTE_INSN_DELETED)

(note:HI 371 361 372 18 ("./CStatUtilities.c") 454)

(note:HI 372 371 373 18 ("./CStatUtilities.c") 462)

(insn:HI 373 372 374 18 ./CStatUtilities.c:462 (set (reg:DF 122)
        (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                (const_int 48 [0x30])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 374 373 375 18 ./CStatUtilities.c:462 (set (reg:DF 122)
        (minus:DF (reg:DF 122)
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 40 [0x28])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 373 (nil))
    (nil))

(insn:HI 375 374 377 18 ./CStatUtilities.c:462 (parallel [
            (set (reg:DF 122)
                (abs:DF (reg:DF 122)))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 374 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 123))
                (nil)))))

(insn:HI 377 375 378 18 ./CStatUtilities.c:462 (set (reg:DF 122)
        (unspec:DF [
                (reg:DF 122)
                (reg:DF 116)
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 358 (insn_list:REG_DEP_TRUE 375 (nil)))
    (expr_list:REG_DEAD (reg:DF 116)
        (nil)))

(note:HI 378 377 380 18 ("./CStatUtilities.c") 460)

(note:HI 380 378 390 18 NOTE_INSN_DELETED)

(note:HI 390 380 391 18 ("./CStatUtilities.c") 454)

(note:HI 391 390 392 18 ("./CStatUtilities.c") 462)

(insn:HI 392 391 393 18 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                (const_int 56 [0x38])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 393 392 394 18 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (minus:DF (reg/v:DF 88 [ maxAbsDer ])
            (mem:DF (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 48 [0x30])) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 392 (nil))
    (nil))

(insn:HI 394 393 396 18 ./CStatUtilities.c:462 (parallel [
            (set (reg/v:DF 88 [ maxAbsDer ])
                (abs:DF (reg/v:DF 88 [ maxAbsDer ])))
            (use (reg:V2DF 76))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 393 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 129))
                (nil)))))

(insn:HI 396 394 397 18 ./CStatUtilities.c:462 (set (reg/v:DF 88 [ maxAbsDer ])
        (unspec:DF [
                (reg/v:DF 88 [ maxAbsDer ])
                (reg:DF 122)
            ] 52)) 760 {*ieee_smaxdf3} (insn_list:REG_DEP_TRUE 377 (insn_list:REG_DEP_TRUE 394 (nil)))
    (expr_list:REG_DEAD (reg:DF 122)
        (nil)))

(note:HI 397 396 398 18 ("./CStatUtilities.c") 460)

(insn:HI 398 397 399 18 ./CStatUtilities.c:460 (parallel [
            (set (reg/v:SI 84 [ j ])
                (plus:SI (reg/v:SI 84 [ j ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 399 398 400 18 ./CStatUtilities.c:460 (parallel [
            (set (reg:DI 85 [ ivtmp.382 ])
                (plus:DI (reg:DI 85 [ ivtmp.382 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 400 399 401 18 ./CStatUtilities.c:460 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 84 [ j ])
            (reg/v:SI 64 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 398 (nil))
    (nil))

(jump_insn:HI 401 400 406 18 ./CStatUtilities.c:460 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 53)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 400 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88
(note:HI 406 401 438 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 438 406 439 19 (set (pc)
        (label_ref 29)) 548 {jump} (nil)
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 76 84 85 88

(barrier:HI 439 438 0)


;; Function approxfun (approxfun)



Pass 0

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:150 INDEX_REGS:0 LEGACY_REGS:150 GENERAL_REGS:150 SSE_REGS:2275 MMX_REGS:2275 FP_TOP_SSE_REGS:2275 FP_SECOND_SSE_REGS:2275 FLOAT_SSE_REGS:2275 FLOAT_INT_REGS:1575 INT_SSE_REGS:2275 FLOAT_INT_SSE_REGS:2275 ALL_REGS:2275 MEM:700
  Register 59 costs: AREG:2275 DREG:2275 CREG:2275 BREG:2275 SIREG:2275 DIREG:2275 AD_REGS:2275 Q_REGS:2275 NON_Q_REGS:3975 INDEX_REGS:2275 LEGACY_REGS:3975 GENERAL_REGS:3975 FP_TOP_REG:3675 FP_SECOND_REG:3675 FLOAT_REGS:3675 SSE_REGS:0 FP_TOP_SSE_REGS:3675 FP_SECOND_SSE_REGS:3675 FLOAT_SSE_REGS:3675 FLOAT_INT_REGS:3675 INT_SSE_REGS:2275 FLOAT_INT_SSE_REGS:3675 ALL_REGS:5775 MEM:1775
  Register 60 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:950
  Register 62 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:37050 MMX_REGS:37050 INT_SSE_REGS:37050 MEM:10900
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:33800 MMX_REGS:33800 INT_SSE_REGS:33800 MEM:9350
  Register 64 costs: AREG:650 DREG:650 CREG:650 BREG:650 SIREG:650 DIREG:650 AD_REGS:650 Q_REGS:650 NON_Q_REGS:1075 INDEX_REGS:650 LEGACY_REGS:1075 GENERAL_REGS:1075 FP_TOP_REG:1050 FP_SECOND_REG:1050 FLOAT_REGS:1050 SSE_REGS:0 FP_TOP_SSE_REGS:1050 FP_SECOND_SSE_REGS:1050 FLOAT_SSE_REGS:1050 FLOAT_INT_REGS:1050 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:1050 ALL_REGS:1575 MEM:450
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1200
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 67 costs: AREG:1950 DREG:1950 CREG:1950 BREG:1950 SIREG:1950 DIREG:1950 AD_REGS:1950 Q_REGS:1950 NON_Q_REGS:22656 INDEX_REGS:1950 LEGACY_REGS:22656 GENERAL_REGS:22656 FP_TOP_REG:3150 FP_SECOND_REG:3150 FLOAT_REGS:3150 SSE_REGS:0 FP_TOP_SSE_REGS:3150 FP_SECOND_SSE_REGS:3150 FLOAT_SSE_REGS:3150 FLOAT_INT_REGS:3150 INT_SSE_REGS:1950 FLOAT_INT_SSE_REGS:3150 ALL_REGS:28728 MEM:5413
  Register 69 costs: AREG:23075 DREG:23075 CREG:23075 BREG:23075 SIREG:23075 DIREG:23075 AD_REGS:23075 Q_REGS:23075 NON_Q_REGS:33530 INDEX_REGS:23075 LEGACY_REGS:33530 GENERAL_REGS:33530 FP_TOP_REG:37275 FP_SECOND_REG:37275 FLOAT_REGS:37275 SSE_REGS:0 FP_TOP_SSE_REGS:37275 FP_SECOND_SSE_REGS:37275 FLOAT_SSE_REGS:37275 FLOAT_INT_REGS:37275 INT_SSE_REGS:23075 FLOAT_INT_SSE_REGS:37275 ALL_REGS:50190 MEM:15185
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-615 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:37362 MMX_REGS:37362 FP_TOP_SSE_REGS:37362 FP_SECOND_SSE_REGS:37362 FLOAT_SSE_REGS:37362 FLOAT_INT_REGS:25866 INT_SSE_REGS:37362 FLOAT_INT_SSE_REGS:37362 ALL_REGS:37362 MEM:11496
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-615 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19929 MMX_REGS:19929 FP_TOP_SSE_REGS:19929 FP_SECOND_SSE_REGS:19929 FLOAT_SSE_REGS:19929 FLOAT_INT_REGS:13797 INT_SSE_REGS:19929 FLOAT_INT_SSE_REGS:19929 ALL_REGS:19929 MEM:6132
  Register 72 costs: AREG:0 DREG:-615 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18590 MMX_REGS:18590 INT_SSE_REGS:18590 MEM:5520
  Register 73 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:12000 INDEX_REGS:5200 LEGACY_REGS:12000 GENERAL_REGS:12000 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:16800 MEM:4800
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:800 INDEX_REGS:0 LEGACY_REGS:800 GENERAL_REGS:800 SSE_REGS:7800 MMX_REGS:7800 FP_TOP_SSE_REGS:7800 FP_SECOND_SSE_REGS:7800 FLOAT_SSE_REGS:7800 FLOAT_INT_REGS:5400 INT_SSE_REGS:7800 FLOAT_INT_SSE_REGS:7800 ALL_REGS:7800 MEM:2400
  Register 75 costs: AREG:1800 DREG:1800 CREG:1800 BREG:1800 SIREG:1800 DIREG:1800 AD_REGS:1800 Q_REGS:1800 NON_Q_REGS:1800 INDEX_REGS:1800 LEGACY_REGS:1800 GENERAL_REGS:1800 SSE_REGS:36900 MMX_REGS:36900 FP_TOP_SSE_REGS:36900 FP_SECOND_SSE_REGS:36900 FLOAT_SSE_REGS:36900 FLOAT_INT_REGS:26100 INT_SSE_REGS:36900 FLOAT_INT_SSE_REGS:36900 ALL_REGS:36900 MEM:10800
  Register 76 costs: AREG:1800 DREG:1800 CREG:1800 BREG:1800 SIREG:1800 DIREG:1800 AD_REGS:1800 Q_REGS:1800 NON_Q_REGS:1800 INDEX_REGS:1800 LEGACY_REGS:1800 GENERAL_REGS:1800 SSE_REGS:25200 MMX_REGS:25200 FP_TOP_SSE_REGS:25200 FP_SECOND_SSE_REGS:25200 FLOAT_SSE_REGS:25200 FLOAT_INT_REGS:18000 INT_SSE_REGS:25200 FLOAT_INT_SSE_REGS:25200 ALL_REGS:25200 MEM:7200
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:58500 MMX_REGS:58500 INT_SSE_REGS:58500 MEM:13500
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1800 INDEX_REGS:0 LEGACY_REGS:1800 GENERAL_REGS:1800 SSE_REGS:23400 MMX_REGS:23400 FP_TOP_SSE_REGS:23400 FP_SECOND_SSE_REGS:23400 FLOAT_SSE_REGS:23400 FLOAT_INT_REGS:16200 INT_SSE_REGS:23400 FLOAT_INT_SSE_REGS:23400 ALL_REGS:23400 MEM:7200
  Register 80 costs: AREG:11700 DREG:11700 CREG:11700 BREG:11700 SIREG:11700 DIREG:11700 AD_REGS:11700 Q_REGS:11700 NON_Q_REGS:27000 INDEX_REGS:11700 LEGACY_REGS:27000 GENERAL_REGS:27000 FP_TOP_REG:18900 FP_SECOND_REG:18900 FLOAT_REGS:18900 SSE_REGS:0 FP_TOP_SSE_REGS:18900 FP_SECOND_SSE_REGS:18900 FLOAT_SSE_REGS:18900 FLOAT_INT_REGS:18900 INT_SSE_REGS:11700 FLOAT_INT_SSE_REGS:18900 ALL_REGS:37800 MEM:10800
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:400 INDEX_REGS:0 LEGACY_REGS:400 GENERAL_REGS:400 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1200
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:1950 MMX_REGS:1950 FP_TOP_SSE_REGS:1950 FP_SECOND_SSE_REGS:1950 FLOAT_SSE_REGS:1950 FLOAT_INT_REGS:1350 INT_SSE_REGS:1950 FLOAT_INT_SSE_REGS:1950 ALL_REGS:1950 MEM:600

  Register 58 pref INDEX_REGS, else GENERAL_REGS
  Register 59 pref SSE_REGS or none
  Register 60 pref SSE_REGS or none
  Register 62 pref GENERAL_REGS or none
  Register 63 pref GENERAL_REGS or none
  Register 64 pref SSE_REGS or none
  Register 65 pref INDEX_REGS, else GENERAL_REGS
  Register 66 pref INDEX_REGS, else GENERAL_REGS
  Register 67 pref SSE_REGS, else FLOAT_INT_SSE_REGS
  Register 69 pref SSE_REGS or none
  Register 70 pref DIREG, else GENERAL_REGS
  Register 71 pref SIREG, else GENERAL_REGS
  Register 72 pref DREG, else GENERAL_REGS
  Register 73 pref SSE_REGS or none
  Register 74 pref INDEX_REGS, else GENERAL_REGS
  Register 75 pref GENERAL_REGS or none
  Register 76 pref GENERAL_REGS or none
  Register 78 pref GENERAL_REGS or none
  Register 79 pref INDEX_REGS, else GENERAL_REGS
  Register 80 pref SSE_REGS or none
  Register 81 pref GENERAL_REGS or none
  Register 82 pref INDEX_REGS, else GENERAL_REGS
  Register 83 pref INDEX_REGS, else GENERAL_REGS


Pass 1

  Register 58 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:150 INDEX_REGS:0 LEGACY_REGS:150 GENERAL_REGS:150 SSE_REGS:2275 MMX_REGS:2275 FP_TOP_SSE_REGS:2275 FP_SECOND_SSE_REGS:2275 FLOAT_SSE_REGS:2275 FLOAT_INT_REGS:1575 INT_SSE_REGS:2275 FLOAT_INT_SSE_REGS:2275 ALL_REGS:2275 MEM:700
  Register 59 costs: AREG:2275 DREG:2275 CREG:2275 BREG:2275 SIREG:2275 DIREG:2275 AD_REGS:2275 Q_REGS:2275 NON_Q_REGS:3975 INDEX_REGS:2275 LEGACY_REGS:3975 GENERAL_REGS:3975 FP_TOP_REG:3675 FP_SECOND_REG:3675 FLOAT_REGS:3675 SSE_REGS:0 FP_TOP_SSE_REGS:3675 FP_SECOND_SSE_REGS:3675 FLOAT_SSE_REGS:3675 FLOAT_INT_REGS:3675 INT_SSE_REGS:2275 FLOAT_INT_SSE_REGS:3675 ALL_REGS:5775 MEM:1775
  Register 60 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:2150 INDEX_REGS:1300 LEGACY_REGS:2150 GENERAL_REGS:2150 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:3150 MEM:950
  Register 62 costs: AREG:1800 DREG:1800 CREG:1800 BREG:1800 SIREG:1800 DIREG:1800 AD_REGS:1800 Q_REGS:1800 NON_Q_REGS:1800 INDEX_REGS:1800 LEGACY_REGS:1800 GENERAL_REGS:1800 SSE_REGS:38850 MMX_REGS:38850 INT_SSE_REGS:38850 MEM:11800
  Register 63 costs: AREG:1800 DREG:1800 CREG:1800 BREG:1800 SIREG:1800 DIREG:1800 AD_REGS:1800 Q_REGS:1800 NON_Q_REGS:1800 INDEX_REGS:1800 LEGACY_REGS:1800 GENERAL_REGS:1800 SSE_REGS:35600 MMX_REGS:35600 INT_SSE_REGS:35600 MEM:10250
  Register 64 costs: AREG:650 DREG:650 CREG:650 BREG:650 SIREG:650 DIREG:650 AD_REGS:650 Q_REGS:650 NON_Q_REGS:1075 INDEX_REGS:650 LEGACY_REGS:1075 GENERAL_REGS:1075 FP_TOP_REG:1050 FP_SECOND_REG:1050 FLOAT_REGS:1050 SSE_REGS:0 FP_TOP_SSE_REGS:1050 FP_SECOND_SSE_REGS:1050 FLOAT_SSE_REGS:1050 FLOAT_INT_REGS:1050 INT_SSE_REGS:650 FLOAT_INT_SSE_REGS:1050 ALL_REGS:1575 MEM:450
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1200
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:100 INDEX_REGS:0 LEGACY_REGS:100 GENERAL_REGS:100 SSE_REGS:1300 MMX_REGS:1300 FP_TOP_SSE_REGS:1300 FP_SECOND_SSE_REGS:1300 FLOAT_SSE_REGS:1300 FLOAT_INT_REGS:900 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:1300 ALL_REGS:1300 MEM:400
  Register 67 costs: AREG:1950 DREG:1950 CREG:1950 BREG:1950 SIREG:1950 DIREG:1950 AD_REGS:1950 Q_REGS:1950 NON_Q_REGS:22656 INDEX_REGS:1950 LEGACY_REGS:22656 GENERAL_REGS:22656 FP_TOP_REG:3150 FP_SECOND_REG:3150 FLOAT_REGS:3150 SSE_REGS:0 FP_TOP_SSE_REGS:3150 FP_SECOND_SSE_REGS:3150 FLOAT_SSE_REGS:3150 FLOAT_INT_REGS:3150 INT_SSE_REGS:1950 FLOAT_INT_SSE_REGS:3150 ALL_REGS:28728 MEM:5413
  Register 69 costs: AREG:23075 DREG:23075 CREG:23075 BREG:23075 SIREG:23075 DIREG:23075 AD_REGS:23075 Q_REGS:23075 NON_Q_REGS:33530 INDEX_REGS:23075 LEGACY_REGS:33530 GENERAL_REGS:33530 FP_TOP_REG:37275 FP_SECOND_REG:37275 FLOAT_REGS:37275 SSE_REGS:0 FP_TOP_SSE_REGS:37275 FP_SECOND_SSE_REGS:37275 FLOAT_SSE_REGS:37275 FLOAT_INT_REGS:37275 INT_SSE_REGS:23075 FLOAT_INT_SSE_REGS:37275 ALL_REGS:50190 MEM:15185
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-615 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:37362 MMX_REGS:37362 FP_TOP_SSE_REGS:37362 FP_SECOND_SSE_REGS:37362 FLOAT_SSE_REGS:37362 FLOAT_INT_REGS:25866 INT_SSE_REGS:37362 FLOAT_INT_SSE_REGS:37362 ALL_REGS:37362 MEM:11496
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-615 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:19929 MMX_REGS:19929 FP_TOP_SSE_REGS:19929 FP_SECOND_SSE_REGS:19929 FLOAT_SSE_REGS:19929 FLOAT_INT_REGS:13797 INT_SSE_REGS:19929 FLOAT_INT_SSE_REGS:19929 ALL_REGS:19929 MEM:6132
  Register 72 costs: AREG:0 DREG:-615 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18590 MMX_REGS:18590 INT_SSE_REGS:18590 MEM:5520
  Register 73 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:12000 INDEX_REGS:5200 LEGACY_REGS:12000 GENERAL_REGS:12000 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:16800 MEM:4800
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:800 INDEX_REGS:0 LEGACY_REGS:800 GENERAL_REGS:800 SSE_REGS:7800 MMX_REGS:7800 FP_TOP_SSE_REGS:7800 FP_SECOND_SSE_REGS:7800 FLOAT_SSE_REGS:7800 FLOAT_INT_REGS:5400 INT_SSE_REGS:7800 FLOAT_INT_SSE_REGS:7800 ALL_REGS:7800 MEM:2400
  Register 75 costs: AREG:3600 DREG:3600 CREG:3600 BREG:3600 SIREG:3600 DIREG:3600 AD_REGS:3600 Q_REGS:3600 NON_Q_REGS:3600 INDEX_REGS:3600 LEGACY_REGS:3600 GENERAL_REGS:3600 SSE_REGS:38700 MMX_REGS:38700 FP_TOP_SSE_REGS:38700 FP_SECOND_SSE_REGS:38700 FLOAT_SSE_REGS:38700 FLOAT_INT_REGS:27900 INT_SSE_REGS:38700 FLOAT_INT_SSE_REGS:38700 ALL_REGS:38700 MEM:11700
  Register 76 costs: AREG:1800 DREG:1800 CREG:1800 BREG:1800 SIREG:1800 DIREG:1800 AD_REGS:1800 Q_REGS:1800 NON_Q_REGS:1800 INDEX_REGS:1800 LEGACY_REGS:1800 GENERAL_REGS:1800 SSE_REGS:25200 MMX_REGS:25200 FP_TOP_SSE_REGS:25200 FP_SECOND_SSE_REGS:25200 FLOAT_SSE_REGS:25200 FLOAT_INT_REGS:18000 INT_SSE_REGS:25200 FLOAT_INT_SSE_REGS:25200 ALL_REGS:25200 MEM:7200
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:58500 MMX_REGS:58500 INT_SSE_REGS:58500 MEM:13500
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1800 INDEX_REGS:0 LEGACY_REGS:1800 GENERAL_REGS:1800 SSE_REGS:23400 MMX_REGS:23400 FP_TOP_SSE_REGS:23400 FP_SECOND_SSE_REGS:23400 FLOAT_SSE_REGS:23400 FLOAT_INT_REGS:16200 INT_SSE_REGS:23400 FLOAT_INT_SSE_REGS:23400 ALL_REGS:23400 MEM:7200
  Register 80 costs: AREG:11700 DREG:11700 CREG:11700 BREG:11700 SIREG:11700 DIREG:11700 AD_REGS:11700 Q_REGS:11700 NON_Q_REGS:27000 INDEX_REGS:11700 LEGACY_REGS:27000 GENERAL_REGS:27000 FP_TOP_REG:18900 FP_SECOND_REG:18900 FLOAT_REGS:18900 SSE_REGS:0 FP_TOP_SSE_REGS:18900 FP_SECOND_SSE_REGS:18900 FLOAT_SSE_REGS:18900 FLOAT_INT_REGS:18900 INT_SSE_REGS:11700 FLOAT_INT_SSE_REGS:18900 ALL_REGS:37800 MEM:10800
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:26000 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:18000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:7000
  Register 82 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:400 INDEX_REGS:0 LEGACY_REGS:400 GENERAL_REGS:400 SSE_REGS:3900 MMX_REGS:3900 FP_TOP_SSE_REGS:3900 FP_SECOND_SSE_REGS:3900 FLOAT_SSE_REGS:3900 FLOAT_INT_REGS:2700 INT_SSE_REGS:3900 FLOAT_INT_SSE_REGS:3900 ALL_REGS:3900 MEM:1200
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:200 INDEX_REGS:0 LEGACY_REGS:200 GENERAL_REGS:200 SSE_REGS:1950 MMX_REGS:1950 FP_TOP_SSE_REGS:1950 FP_SECOND_SSE_REGS:1950 FLOAT_SSE_REGS:1950 FLOAT_INT_REGS:1350 INT_SSE_REGS:1950 FLOAT_INT_SSE_REGS:1950 ALL_REGS:1950 MEM:600

91 registers.

Register 58 used 3 times across 10 insns; set 1 time; dies in 2 places; pref INDEX_REGS, else GENERAL_REGS.

Register 59 used 5 times across 13 insns; set 2 times; SSE_REGS or none.

Register 60 used 4 times across 7 insns; set 1 time; SSE_REGS or none.

Register 62 used 6 times across 21 insns; set 2 times; user var; 4 bytes; GENERAL_REGS or none.

Register 63 used 5 times across 44 insns; set 2 times; user var; 4 bytes; GENERAL_REGS or none.

Register 64 used 3 times across 8 insns in block 18; set 1 time; SSE_REGS or none.

Register 65 used 2 times across 5 insns; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 66 used 3 times across 5 insns; set 1 time; dies in 2 places; pref INDEX_REGS, else GENERAL_REGS.

Register 67 used 13 times across 42 insns; set 9 times; pref SSE_REGS, else FLOAT_INT_SSE_REGS.

Register 69 used 11 times across 50 insns; set 3 times; user var; SSE_REGS or none.

Register 70 used 7 times across 39 insns; set 1 time; user var; pref DIREG, else GENERAL_REGS; pointer.

Register 71 used 8 times across 45 insns; set 1 time; user var; dies in 5 places; pref SIREG, else GENERAL_REGS; pointer.

Register 72 used 3 times across 11 insns; set 1 time; user var; 4 bytes; pref DREG, else GENERAL_REGS.

Register 73 used 2 times across 4 insns in block 5; set 1 time; SSE_REGS or none.

Register 74 used 3 times across 4 insns in block 7; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 75 used 3 times across 3 insns in block 9; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 76 used 2 times across 2 insns in block 9; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 78 used 6 times across 9 insns; set 2 times; dies in 2 places; 4 bytes; GENERAL_REGS or none.

Register 79 used 2 times across 2 insns in block 9; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 80 used 2 times across 2 insns in block 9; set 1 time; SSE_REGS or none.

Register 81 used 2 times across 2 insns in block 13; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 82 used 3 times across 3 insns in block 14; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 83 used 3 times across 3 insns in block 16; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

19 basic blocks, 28 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 6158, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [99.0%]  1 [1.0%]  (fallthru)
Registers live at start: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 62, maybe hot.
Predecessors:  0 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 6097, maybe hot.
Predecessors:  0 [99.0%] 
Successors:  4 [19.0%]  3 [81.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 4938, maybe hot.
Predecessors:  2 [81.0%]  (fallthru)
Successors:  5 [81.0%]  4 [19.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 2097, maybe hot.
Predecessors:  2 [19.0%]  3 [19.0%]  (fallthru)
Successors:  19 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 4000, maybe hot.
Predecessors:  3 [81.0%] 
Successors:  7 [50.0%]  6 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 2000, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
Successors:  19 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 2000, maybe hot.
Predecessors:  5 [50.0%] 
Successors:  13 [50.0%]  8 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 65 69 70 71

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
Successors:  19 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

Basic block 9 prev 8, next 10, loop_depth 1, count 0, freq 9000, maybe hot.
Predecessors:  13 [90.0%] 
Successors:  11 [50.0%]  10 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71 78

Basic block 10 prev 9, next 11, loop_depth 1, count 0, freq 4500, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
Successors:  13 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 70 71 78
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71

Basic block 11 prev 10, next 13, loop_depth 1, count 0, freq 4500, maybe hot.
Predecessors:  9 [50.0%] 
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 69 70 71 78
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71

Basic block 13 prev 11, next 14, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 7 [50.0%]  10 [100.0%] 
Successors:  9 [90.0%]  14 [10.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  13 [10.0%]  (fallthru,loop_exit)
Successors:  16 [50.0%]  15 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 69 70 71

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
Successors:  19 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  14 [50.0%] 
Successors:  18 [50.0%]  17 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 69 70 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 60 66 69 71

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 250, maybe hot.
Predecessors:  16 [50.0%]  (fallthru)
Successors:  19 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 250, maybe hot.
Predecessors:  16 [50.0%] 
Successors:  19 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 60 66 69 71
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

Basic block 19 prev 18, next -2, loop_depth 0, count 0, freq 6097, maybe hot.
Predecessors:  18 [100.0%]  (fallthru) 4 [100.0%]  6 [100.0%]  8 [100.0%]  15 [100.0%]  17 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Register 64 in 21.
;; Register 73 in 21.
;; Register 74 in 0.
;; Register 75 in 1.
;; Register 76 in 0.
;; Register 79 in 0.
;; Register 80 in 21.
;; Register 81 in 0.
;; Register 82 in 0.
;; Register 83 in 0.
(note:HI 1 0 9 ("./CStatUtilities.c") 327)

;; Start of basic block 0, registers live: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
(note:HI 9 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 9 4 0 ./CStatUtilities.c:327 (set (reg/v:DF 69 [ v ])
        (reg:DF 21 xmm0 [ v ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ v ])
        (nil)))

(insn:HI 4 3 5 0 ./CStatUtilities.c:327 (set (reg/v/f:DI 70 [ x ])
        (reg:DI 5 di [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))

(insn:HI 5 4 6 0 ./CStatUtilities.c:327 (set (reg/v/f:DI 71 [ y ])
        (reg:DI 4 si [ y ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 4 si [ y ])
        (nil)))

(insn:HI 6 5 7 0 ./CStatUtilities.c:327 (set (reg/v:SI 72 [ n ])
        (reg:SI 1 dx [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 1 dx [ n ])
        (nil)))

(note:HI 7 6 11 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 11 7 12 0 ("./CStatUtilities.c") 331)

(insn:HI 12 11 13 0 ./CStatUtilities.c:331 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 72 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 6 (nil))
    (nil))

(jump_insn:HI 13 12 16 0 ./CStatUtilities.c:331 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72

(note:HI 16 13 15 ("./CStatUtilities.c") 333)

;; Start of basic block 1, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 15 16 17 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 17 15 18 1 ./CStatUtilities.c:333 (set (reg:SI 2 cx)
        (const_int 333 [0x14d])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 18 17 19 1 ./CStatUtilities.c:333 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2] <string_cst 0x2b4e9cb78440>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 19 18 20 1 ./CStatUtilities.c:333 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2] <string_cst 0x2b4e9c8bf540>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 20 19 21 1 ./CStatUtilities.c:333 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b4e9c5c1e70 stderr>) [17 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 21 20 22 1 ./CStatUtilities.c:333 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 22 21 23 1 ./CStatUtilities.c:333 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b4e9c45e700 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 17 (insn_list:REG_DEP_TRUE 18 (insn_list:REG_DEP_TRUE 19 (insn_list:REG_DEP_TRUE 20 (insn_list:REG_DEP_TRUE 21 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(note:HI 23 22 24 1 ("./CStatUtilities.c") 334)

(insn:HI 24 23 25 1 ./CStatUtilities.c:334 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 25 24 26 1 ./CStatUtilities.c:334 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b4e9c475100 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 24 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 1, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 26 25 27)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72
(code_label:HI 27 26 28 2 412 "" [1 uses])

(note:HI 28 27 29 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 29 28 30 2 ("./CStatUtilities.c") 337)

(insn:HI 30 29 31 2 ./CStatUtilities.c:337 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 70 [ x ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(jump_insn:HI 31 30 160 2 ./CStatUtilities.c:337 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 35)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 30 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72
(note:HI 160 31 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 32 160 33 3 ./CStatUtilities.c:337 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 71 [ y ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(jump_insn:HI 33 32 35 3 ./CStatUtilities.c:337 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8100 [0x1fa4])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(code_label:HI 35 33 36 4 416 "" [1 uses])

(note:HI 36 35 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 37 36 181 4 ./CStatUtilities.c:337 (set (reg:DF 67 [ D.5437 ])
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 181 37 182 4 (set (pc)
        (label_ref 144)) 548 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

(barrier:HI 182 181 40)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72
(code_label:HI 40 182 41 5 414 "" [1 uses])

(note:HI 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 42 41 43 5 ("./CStatUtilities.c") 347)

(insn:HI 43 42 44 5 ./CStatUtilities.c:347 (set (reg:DF 73)
        (mem:DF (reg/v/f:DI 70 [ x ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 70 [ x ]) [6 S8 A64])
        (nil)))

(insn:HI 44 43 45 5 ./CStatUtilities.c:347 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 73)
            (reg/v:DF 69 [ v ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 43 (nil))
    (expr_list:REG_DEAD (reg:DF 73)
        (nil)))

(jump_insn:HI 45 44 50 5 ./CStatUtilities.c:347 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 54)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 44 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 71
(note:HI 50 45 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 51 50 183 6 ./CStatUtilities.c:347 (set (reg:DF 67 [ D.5437 ])
        (mem:DF (reg/v/f:DI 71 [ y ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 71 [ y ])
        (nil)))

(jump_insn:HI 183 51 184 6 (set (pc)
        (label_ref 144)) 548 {jump} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

(barrier:HI 184 183 54)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 70 71 72
(code_label:HI 54 184 55 7 418 "" [1 uses])

(note:HI 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 56 55 57 7 ("./CStatUtilities.c") 343)

(insn:HI 57 56 58 7 ./CStatUtilities.c:343 (parallel [
            (set (reg/v:SI 62 [ j ])
                (plus:SI (reg/v:SI 72 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 72 [ n ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 58 57 59 7 ("./CStatUtilities.c") 348)

(insn:HI 59 58 60 7 ./CStatUtilities.c:348 (set (reg:DI 74 [ j ])
        (sign_extend:DI (reg/v:SI 62 [ j ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 57 (nil))
    (nil))

(insn:HI 60 59 65 7 ./CStatUtilities.c:348 (parallel [
            (set (reg:DI 65 [ D.5446 ])
                (ashift:DI (reg:DI 74 [ j ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 59 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 65 60 61 7 ./CStatUtilities.c:348 (set (reg/v:SI 63 [ i ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 61 65 62 7 ./CStatUtilities.c:348 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 69 [ v ])
            (mem:DF (plus:DI (mult:DI (reg:DI 74 [ j ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 70 [ x ])) [6 S8 A64]))) 31 {*cmpfp_iu_sse} (nil)
    (expr_list:REG_DEAD (reg:DI 74 [ j ])
        (nil)))

(jump_insn:HI 62 61 69 7 ./CStatUtilities.c:348 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 197)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 61 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 65 69 70 71

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 71
(note:HI 69 62 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 70 69 188 8 ./CStatUtilities.c:348 (set (reg:DF 67 [ D.5437 ])
        (mem:DF (plus:DI (reg/v/f:DI 71 [ y ])
                (reg:DI 65 [ D.5446 ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 71 [ y ])
        (expr_list:REG_DEAD (reg:DI 65 [ D.5446 ])
            (nil))))

(jump_insn:HI 188 70 189 8 (set (pc)
        (label_ref 144)) 548 {jump} (nil)
    (nil))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

(barrier:HI 189 188 174)

(note:HI 174 189 73 NOTE_INSN_LOOP_BEG)

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71
(code_label:HI 73 174 74 9 424 "" [1 uses])

(note:HI 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note:HI 75 74 76 9 ("./CStatUtilities.c") 353)

(insn:HI 76 75 77 9 ./CStatUtilities.c:353 (parallel [
            (set (reg:SI 75)
                (plus:SI (reg/v:SI 62 [ j ])
                    (reg/v:SI 63 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 77 76 78 9 ./CStatUtilities.c:353 (parallel [
            (set (reg:SI 76)
                (lshiftrt:SI (reg:SI 75)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 476 {*lshrsi3_1} (insn_list:REG_DEP_TRUE 76 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 78 77 79 9 ./CStatUtilities.c:353 (parallel [
            (set (reg:SI 78)
                (plus:SI (reg:SI 76)
                    (reg:SI 75)))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 77 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 76)
            (expr_list:REG_DEAD (reg:SI 75)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(insn:HI 79 78 81 9 ./CStatUtilities.c:353 (parallel [
            (set (reg:SI 78)
                (ashiftrt:SI (reg:SI 78)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 441 {*ashrsi3_1_one_bit} (insn_list:REG_DEP_TRUE 78 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 75)
                    (const_int 2 [0x2]))
                (nil)))))

(note:HI 81 79 82 9 ("./CStatUtilities.c") 354)

(insn:HI 82 81 83 9 ./CStatUtilities.c:354 (set (reg:DI 79 [ ij ])
        (sign_extend:DI (reg:SI 78))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 79 (nil))
    (nil))

(insn:HI 83 82 84 9 ./CStatUtilities.c:354 (set (reg:DF 80)
        (mem:DF (plus:DI (mult:DI (reg:DI 79 [ ij ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 82 (nil))
    (expr_list:REG_DEAD (reg:DI 79 [ ij ])
        (nil)))

(insn:HI 84 83 85 9 ./CStatUtilities.c:354 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 80)
            (reg/v:DF 69 [ v ]))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 83 (nil))
    (expr_list:REG_DEAD (reg:DF 80)
        (nil)))

(jump_insn:HI 85 84 90 9 ./CStatUtilities.c:354 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 94)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 84 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71 78

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 69 70 71 78
(note:HI 90 85 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 91 90 190 10 ./CStatUtilities.c:354 (set (reg/v:SI 62 [ j ])
        (reg:SI 78)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 78)
        (nil)))

(jump_insn:HI 190 91 191 10 (set (pc)
        (label_ref:DI 197)) 548 {jump} (nil)
    (nil))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71

(barrier:HI 191 190 94)

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 69 70 71 78
(code_label:HI 94 191 95 11 425 "" [1 uses])

(note:HI 95 94 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 96 95 197 11 ./CStatUtilities.c:354 (set (reg/v:SI 63 [ i ])
        (reg:SI 78)) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 78)
        (nil)))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71
(code_label:HI 197 96 196 13 440 "" [2 uses])

(note:HI 196 197 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 99 196 100 13 ("./CStatUtilities.c") 352)

(insn:HI 100 99 101 13 ./CStatUtilities.c:352 (parallel [
            (set (reg:SI 81)
                (plus:SI (reg/v:SI 62 [ j ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 101 100 102 13 ./CStatUtilities.c:352 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 63 [ i ])
            (reg:SI 81))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 100 (nil))
    (expr_list:REG_DEAD (reg:SI 81)
        (nil)))

(jump_insn:HI 102 101 175 13 ./CStatUtilities.c:352 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 101 (nil))
    (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71

(note:HI 175 102 105 NOTE_INSN_LOOP_END)

(note:HI 105 175 104 ("./CStatUtilities.c") 362)

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 62 63 69 70 71
(note:HI 104 105 106 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 106 104 107 14 ./CStatUtilities.c:362 (set (reg:DI 82 [ j ])
        (sign_extend:DI (reg/v:SI 62 [ j ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 62 [ j ])
        (nil)))

(insn:HI 107 106 108 14 ./CStatUtilities.c:362 (parallel [
            (set (reg:DI 58 [ temp.424 ])
                (ashift:DI (reg:DI 82 [ j ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 106 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 108 107 109 14 ./CStatUtilities.c:362 (set (reg:DF 59 [ temp.422 ])
        (mem:DF (plus:DI (mult:DI (reg:DI 82 [ j ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DI 82 [ j ])
        (nil)))

(jump_insn:HI 109 108 114 14 ./CStatUtilities.c:362 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 59 [ temp.422 ])
                        (reg/v:DF 69 [ v ]))
                    (label_ref:DI 118)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 108 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (nil)))))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 69 70 71

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 71
(note:HI 114 109 115 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:HI 115 114 192 15 ./CStatUtilities.c:362 (set (reg:DF 67 [ D.5437 ])
        (mem:DF (plus:DI (reg/v/f:DI 71 [ y ])
                (reg:DI 58 [ temp.424 ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 71 [ y ])
        (expr_list:REG_DEAD (reg:DI 58 [ temp.424 ])
            (nil))))

(jump_insn:HI 192 115 193 15 (set (pc)
        (label_ref 144)) 548 {jump} (nil)
    (nil))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

(barrier:HI 193 192 118)

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 63 69 70 71
(code_label:HI 118 193 119 16 429 "" [1 uses])

(note:HI 119 118 120 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 120 119 121 16 ("./CStatUtilities.c") 363)

(insn:HI 121 120 122 16 ./CStatUtilities.c:363 (set (reg:DI 83 [ i ])
        (sign_extend:DI (reg/v:SI 63 [ i ]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v:SI 63 [ i ])
        (nil)))

(insn:HI 122 121 123 16 ./CStatUtilities.c:363 (parallel [
            (set (reg:DI 66 [ D.5440 ])
                (ashift:DI (reg:DI 83 [ i ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 121 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 123 122 124 16 ./CStatUtilities.c:363 (set (reg:DF 60 [ temp.421 ])
        (mem:DF (plus:DI (mult:DI (reg:DI 83 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 70 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DI 83 [ i ])
        (expr_list:REG_DEAD (reg/v/f:DI 70 [ x ])
            (nil))))

(jump_insn:HI 124 123 129 16 ./CStatUtilities.c:363 (parallel [
            (set (pc)
                (if_then_else (ne (reg:DF 60 [ temp.421 ])
                        (reg/v:DF 69 [ v ]))
                    (label_ref:DI 133)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 123 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
                        (nil)))))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 60 66 69 71

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 71
(note:HI 129 124 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:HI 130 129 194 17 ./CStatUtilities.c:363 (set (reg:DF 67 [ D.5437 ])
        (mem:DF (plus:DI (reg/v/f:DI 71 [ y ])
                (reg:DI 66 [ D.5440 ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 71 [ y ])
        (expr_list:REG_DEAD (reg:DI 66 [ D.5440 ])
            (nil))))

(jump_insn:HI 194 130 195 17 (set (pc)
        (label_ref 144)) 548 {jump} (nil)
    (nil))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

(barrier:HI 195 194 133)

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 58 59 60 66 69 71
(code_label:HI 133 195 134 18 432 "" [1 uses])

(note:HI 134 133 135 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 135 134 136 18 ("./CStatUtilities.c") 366)

(insn:HI 136 135 137 18 ./CStatUtilities.c:366 (set (reg:DF 64 [ D.5457 ])
        (mem:DF (plus:DI (reg/v/f:DI 71 [ y ])
                (reg:DI 66 [ D.5440 ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DI 66 [ D.5440 ])
        (nil)))

(insn:HI 137 136 138 18 ./CStatUtilities.c:366 (set (reg:DF 67 [ D.5437 ])
        (mem:DF (plus:DI (reg/v/f:DI 71 [ y ])
                (reg:DI 58 [ temp.424 ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 71 [ y ])
        (expr_list:REG_DEAD (reg:DI 58 [ temp.424 ])
            (nil))))

(insn:HI 138 137 139 18 ./CStatUtilities.c:366 (set (reg:DF 67 [ D.5437 ])
        (minus:DF (reg:DF 67 [ D.5437 ])
            (reg:DF 64 [ D.5457 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 136 (insn_list:REG_DEP_TRUE 137 (nil)))
    (nil))

(insn:HI 139 138 140 18 ./CStatUtilities.c:366 (set (reg/v:DF 69 [ v ])
        (minus:DF (reg/v:DF 69 [ v ])
            (reg:DF 60 [ temp.421 ]))) 619 {*fop_df_1_sse} (nil)
    (nil))

(insn:HI 140 139 141 18 ./CStatUtilities.c:366 (set (reg:DF 59 [ temp.422 ])
        (minus:DF (reg:DF 59 [ temp.422 ])
            (reg:DF 60 [ temp.421 ]))) 619 {*fop_df_1_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 60 [ temp.421 ])
        (nil)))

(insn:HI 141 140 142 18 ./CStatUtilities.c:366 (set (reg/v:DF 69 [ v ])
        (div:DF (reg/v:DF 69 [ v ])
            (reg:DF 59 [ temp.422 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 139 (insn_list:REG_DEP_TRUE 140 (nil)))
    (expr_list:REG_DEAD (reg:DF 59 [ temp.422 ])
        (nil)))

(insn:HI 142 141 143 18 ./CStatUtilities.c:366 (set (reg:DF 67 [ D.5437 ])
        (mult:DF (reg:DF 67 [ D.5437 ])
            (reg/v:DF 69 [ v ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 138 (insn_list:REG_DEP_TRUE 141 (nil)))
    (expr_list:REG_DEAD (reg/v:DF 69 [ v ])
        (nil)))

(insn:HI 143 142 144 18 ./CStatUtilities.c:366 (set (reg:DF 67 [ D.5437 ])
        (plus:DF (reg:DF 64 [ D.5457 ])
            (reg:DF 67 [ D.5437 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 142 (nil))
    (expr_list:REG_DEAD (reg:DF 64 [ D.5457 ])
        (nil)))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67
(code_label:HI 144 143 145 19 417 "" [5 uses])

(note:HI 145 144 149 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 149 145 150 19 NOTE_INSN_FUNCTION_END)

(note:HI 150 149 152 19 ("./CStatUtilities.c") 367)

(insn:HI 152 150 158 19 ./CStatUtilities.c:367 (set (reg/i:DF 21 xmm0 [ <result> ])
        (reg:DF 67 [ D.5437 ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 67 [ D.5437 ])
        (nil)))

(insn:HI 158 152 0 19 ./CStatUtilities.c:367 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 152 (nil))
    (nil))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function quantileNormalize (quantileNormalize)



Pass 0

  Register 59 costs: AREG:12961 DREG:12961 CREG:12961 BREG:12961 SIREG:12961 DIREG:12961 AD_REGS:12961 Q_REGS:12961 NON_Q_REGS:13488 INDEX_REGS:12961 LEGACY_REGS:13488 GENERAL_REGS:13488 FP_TOP_REG:20937 FP_SECOND_REG:20937 FLOAT_REGS:20937 SSE_REGS:0 FP_TOP_SSE_REGS:20937 FP_SECOND_SSE_REGS:20937 FLOAT_SSE_REGS:20937 FLOAT_INT_REGS:20937 INT_SSE_REGS:12961 FLOAT_INT_SSE_REGS:20937 ALL_REGS:21588 MEM:8100
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4407 MMX_REGS:4407 FP_TOP_SSE_REGS:4407 FP_SECOND_SSE_REGS:4407 FLOAT_SSE_REGS:4407 FLOAT_INT_REGS:3051 INT_SSE_REGS:4407 FLOAT_INT_SSE_REGS:4407 ALL_REGS:4407 MEM:1023
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7150 MMX_REGS:7150 FP_TOP_SSE_REGS:7150 FP_SECOND_SSE_REGS:7150 FLOAT_SSE_REGS:7150 FLOAT_INT_REGS:4950 INT_SSE_REGS:7150 FLOAT_INT_SSE_REGS:7150 ALL_REGS:7150 MEM:1709
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1404 MMX_REGS:1404 FP_TOP_SSE_REGS:1404 FP_SECOND_SSE_REGS:1404 FLOAT_SSE_REGS:1404 FLOAT_INT_REGS:972 INT_SSE_REGS:1404 FLOAT_INT_SSE_REGS:1404 ALL_REGS:1404 MEM:327
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1404 MMX_REGS:1404 FP_TOP_SSE_REGS:1404 FP_SECOND_SSE_REGS:1404 FLOAT_SSE_REGS:1404 FLOAT_INT_REGS:972 INT_SSE_REGS:1404 FLOAT_INT_SSE_REGS:1404 ALL_REGS:1404 MEM:327
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11479 MMX_REGS:11479 FP_TOP_SSE_REGS:11479 FP_SECOND_SSE_REGS:11479 FLOAT_SSE_REGS:11479 FLOAT_INT_REGS:7947 INT_SSE_REGS:11479 FLOAT_INT_SSE_REGS:11479 ALL_REGS:11479 MEM:3132
  Register 67 costs: AREG:-6 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6773 MMX_REGS:6773 FP_TOP_SSE_REGS:6773 FP_SECOND_SSE_REGS:6773 FLOAT_SSE_REGS:6773 FLOAT_INT_REGS:4689 INT_SSE_REGS:6773 FLOAT_INT_SSE_REGS:6773 ALL_REGS:6773 MEM:2075
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:872 INDEX_REGS:0 LEGACY_REGS:872 GENERAL_REGS:872 SSE_REGS:8632 MMX_REGS:8632 FP_TOP_SSE_REGS:8632 FP_SECOND_SSE_REGS:8632 FLOAT_SSE_REGS:8632 FLOAT_INT_REGS:5976 INT_SSE_REGS:8632 FLOAT_INT_SSE_REGS:8632 ALL_REGS:8632 MEM:2434
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6240 MMX_REGS:6240 FP_TOP_SSE_REGS:6240 FP_SECOND_SSE_REGS:6240 FLOAT_SSE_REGS:6240 FLOAT_INT_REGS:4320 INT_SSE_REGS:6240 FLOAT_INT_SSE_REGS:6240 ALL_REGS:6240 MEM:1830
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:966 INDEX_REGS:0 LEGACY_REGS:966 GENERAL_REGS:966 SSE_REGS:13505 MMX_REGS:13505 FP_TOP_SSE_REGS:13505 FP_SECOND_SSE_REGS:13505 FLOAT_SSE_REGS:13505 FLOAT_INT_REGS:9349 INT_SSE_REGS:13505 FLOAT_INT_SSE_REGS:13505 ALL_REGS:13505 MEM:4086
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:124 INDEX_REGS:0 LEGACY_REGS:124 GENERAL_REGS:124 SSE_REGS:1755 MMX_REGS:1755 FP_TOP_SSE_REGS:1755 FP_SECOND_SSE_REGS:1755 FLOAT_SSE_REGS:1755 FLOAT_INT_REGS:1215 INT_SSE_REGS:1755 FLOAT_INT_SSE_REGS:1755 ALL_REGS:1755 MEM:470
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17355 MMX_REGS:17355 FP_TOP_SSE_REGS:17355 FP_SECOND_SSE_REGS:17355 FLOAT_SSE_REGS:17355 FLOAT_INT_REGS:12015 INT_SSE_REGS:17355 FLOAT_INT_SSE_REGS:17355 ALL_REGS:17355 MEM:4912
  Register 78 costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 INDEX_REGS:12 LEGACY_REGS:12 GENERAL_REGS:12 SSE_REGS:1559 MMX_REGS:1559 FP_TOP_SSE_REGS:1559 FP_SECOND_SSE_REGS:1559 FLOAT_SSE_REGS:1559 FLOAT_INT_REGS:1083 INT_SSE_REGS:1559 FLOAT_INT_SSE_REGS:1559 ALL_REGS:1559 MEM:369
  Register 79 costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:24 INDEX_REGS:12 LEGACY_REGS:24 GENERAL_REGS:24 SSE_REGS:1689 MMX_REGS:1689 FP_TOP_SSE_REGS:1689 FP_SECOND_SSE_REGS:1689 FLOAT_SSE_REGS:1689 FLOAT_INT_REGS:1173 INT_SSE_REGS:1689 FLOAT_INT_SSE_REGS:1689 ALL_REGS:1689 MEM:411
  Register 80 costs: AREG:403 DREG:403 CREG:403 BREG:403 SIREG:403 DIREG:403 AD_REGS:403 Q_REGS:403 NON_Q_REGS:8614 INDEX_REGS:403 LEGACY_REGS:8614 GENERAL_REGS:8614 FP_TOP_REG:651 FP_SECOND_REG:651 FLOAT_REGS:651 SSE_REGS:0 FP_TOP_SSE_REGS:651 FP_SECOND_SSE_REGS:651 FLOAT_SSE_REGS:651 FLOAT_INT_REGS:651 INT_SSE_REGS:403 FLOAT_INT_SSE_REGS:651 ALL_REGS:10794 MEM:2180
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7150 MMX_REGS:7150 FP_TOP_SSE_REGS:7150 FP_SECOND_SSE_REGS:7150 FLOAT_SSE_REGS:7150 FLOAT_INT_REGS:4950 INT_SSE_REGS:7150 FLOAT_INT_SSE_REGS:7150 ALL_REGS:7150 MEM:1709
  Register 84 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-3 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:117 MMX_REGS:117 FP_TOP_SSE_REGS:117 FP_SECOND_SSE_REGS:117 FLOAT_SSE_REGS:117 FLOAT_INT_REGS:81 INT_SSE_REGS:117 FLOAT_INT_SSE_REGS:117 ALL_REGS:117 MEM:33
  Register 85 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6682 MMX_REGS:6682 FP_TOP_SSE_REGS:6682 FP_SECOND_SSE_REGS:6682 FLOAT_SSE_REGS:6682 FLOAT_INT_REGS:4626 INT_SSE_REGS:6682 FLOAT_INT_SSE_REGS:6682 ALL_REGS:6682 MEM:2056
  Register 87 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1534 MMX_REGS:1534 FP_TOP_SSE_REGS:1534 FP_SECOND_SSE_REGS:1534 FLOAT_SSE_REGS:1534 FLOAT_INT_REGS:1062 INT_SSE_REGS:1534 FLOAT_INT_SSE_REGS:1534 ALL_REGS:1534 MEM:360
  Register 90 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-6 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:234 MMX_REGS:234 FP_TOP_SSE_REGS:234 FP_SECOND_SSE_REGS:234 FLOAT_SSE_REGS:234 FLOAT_INT_REGS:162 INT_SSE_REGS:234 FLOAT_INT_SSE_REGS:234 ALL_REGS:234 MEM:54
  Register 92 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-6 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1378 MMX_REGS:1378 FP_TOP_SSE_REGS:1378 FP_SECOND_SSE_REGS:1378 FLOAT_SSE_REGS:1378 FLOAT_INT_REGS:954 INT_SSE_REGS:1378 FLOAT_INT_SSE_REGS:1378 ALL_REGS:1378 MEM:424
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-6 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9217 MMX_REGS:9217 INT_SSE_REGS:9217 MEM:2413
  Register 94 costs: AREG:0 DREG:-6 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6357 MMX_REGS:6357 INT_SSE_REGS:6357 MEM:1582
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:156 MMX_REGS:156 FP_TOP_SSE_REGS:156 FP_SECOND_SSE_REGS:156 FLOAT_SSE_REGS:156 FLOAT_INT_REGS:108 INT_SSE_REGS:156 FLOAT_INT_SSE_REGS:156 ALL_REGS:156 MEM:42
  Register 97 costs: AREG:-9 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2054 MMX_REGS:2054 FP_TOP_SSE_REGS:2054 FP_SECOND_SSE_REGS:2054 FLOAT_SSE_REGS:2054 FLOAT_INT_REGS:1422 INT_SSE_REGS:2054 FLOAT_INT_SSE_REGS:2054 ALL_REGS:2054 MEM:629
  Register 99 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4368 MMX_REGS:4368 FP_TOP_SSE_REGS:4368 FP_SECOND_SSE_REGS:4368 FLOAT_SSE_REGS:4368 FLOAT_INT_REGS:3024 INT_SSE_REGS:4368 FLOAT_INT_SSE_REGS:4368 ALL_REGS:4368 MEM:1344
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:800
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 103 costs: AREG:806 DREG:806 CREG:806 BREG:806 SIREG:806 DIREG:806 AD_REGS:806 Q_REGS:806 NON_Q_REGS:806 INDEX_REGS:806 LEGACY_REGS:806 GENERAL_REGS:806 FP_TOP_REG:1302 FP_SECOND_REG:1302 FLOAT_REGS:1302 SSE_REGS:0 FP_TOP_SSE_REGS:1302 FP_SECOND_SSE_REGS:1302 FLOAT_SSE_REGS:1302 FLOAT_INT_REGS:1302 INT_SSE_REGS:806 FLOAT_INT_SSE_REGS:1302 ALL_REGS:1302 MEM:465
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:31 INDEX_REGS:0 LEGACY_REGS:31 GENERAL_REGS:31 SSE_REGS:805 MMX_REGS:805 FP_TOP_SSE_REGS:805 FP_SECOND_SSE_REGS:805 FLOAT_SSE_REGS:805 FLOAT_INT_REGS:557 INT_SSE_REGS:805 FLOAT_INT_SSE_REGS:805 ALL_REGS:805 MEM:248
  Register 105 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 109 costs: AREG:-113 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4407 MMX_REGS:4407 FP_TOP_SSE_REGS:4407 FP_SECOND_SSE_REGS:4407 FLOAT_SSE_REGS:4407 FLOAT_INT_REGS:3051 INT_SSE_REGS:4407 FLOAT_INT_SSE_REGS:4407 ALL_REGS:4407 MEM:1356
  Register 120 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:74
  Register 125 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3159 MMX_REGS:3159 FP_TOP_SSE_REGS:3159 FP_SECOND_SSE_REGS:3159 FLOAT_SSE_REGS:3159 FLOAT_INT_REGS:2187 INT_SSE_REGS:3159 FLOAT_INT_SSE_REGS:3159 ALL_REGS:3159 MEM:784
  Register 130 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3159 MMX_REGS:3159 FP_TOP_SSE_REGS:3159 FP_SECOND_SSE_REGS:3159 FLOAT_SSE_REGS:3159 FLOAT_INT_REGS:2187 INT_SSE_REGS:3159 FLOAT_INT_SSE_REGS:3159 ALL_REGS:3159 MEM:784
  Register 135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3159 MMX_REGS:3159 FP_TOP_SSE_REGS:3159 FP_SECOND_SSE_REGS:3159 FLOAT_SSE_REGS:3159 FLOAT_INT_REGS:2187 INT_SSE_REGS:3159 FLOAT_INT_SSE_REGS:3159 ALL_REGS:3159 MEM:784
  Register 140 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 143 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 144 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9126 MMX_REGS:9126 FP_TOP_SSE_REGS:9126 FP_SECOND_SSE_REGS:9126 FLOAT_SSE_REGS:9126 FLOAT_INT_REGS:6318 INT_SSE_REGS:9126 FLOAT_INT_SSE_REGS:9126 ALL_REGS:9126 MEM:2697
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:40443 MMX_REGS:40443 FP_TOP_SSE_REGS:40443 FP_SECOND_SSE_REGS:40443 FLOAT_SSE_REGS:40443 FLOAT_INT_REGS:27999 INT_SSE_REGS:40443 FLOAT_INT_SSE_REGS:40443 ALL_REGS:40443 MEM:10871
  Register 146 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 147 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 148 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:55354 MMX_REGS:55354 FP_TOP_SSE_REGS:55354 FP_SECOND_SSE_REGS:55354 FLOAT_SSE_REGS:55354 FLOAT_INT_REGS:38322 INT_SSE_REGS:55354 FLOAT_INT_SSE_REGS:55354 ALL_REGS:55354 MEM:15750
  Register 151 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 153 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 155 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 157 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 159 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 161 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 163 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 165 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 167 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 169 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 171 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 173 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 175 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 179 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 183 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 187 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 191 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 195 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 199 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 203 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 205 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7150 MMX_REGS:7150 FP_TOP_SSE_REGS:7150 FP_SECOND_SSE_REGS:7150 FLOAT_SSE_REGS:7150 FLOAT_INT_REGS:4950 INT_SSE_REGS:7150 FLOAT_INT_SSE_REGS:7150 ALL_REGS:7150 MEM:1709
  Register 206 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11479 MMX_REGS:11479 FP_TOP_SSE_REGS:11479 FP_SECOND_SSE_REGS:11479 FLOAT_SSE_REGS:11479 FLOAT_INT_REGS:7947 INT_SSE_REGS:11479 FLOAT_INT_SSE_REGS:11479 ALL_REGS:11479 MEM:3132
  Register 207 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 210 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 213 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 216 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 219 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 222 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 225 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 228 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 231 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:31 INDEX_REGS:0 LEGACY_REGS:31 GENERAL_REGS:31 SSE_REGS:805 MMX_REGS:805 FP_TOP_SSE_REGS:805 FP_SECOND_SSE_REGS:805 FLOAT_SSE_REGS:805 FLOAT_INT_REGS:557 INT_SSE_REGS:805 FLOAT_INT_SSE_REGS:805 ALL_REGS:805 MEM:248
  Register 236 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 237 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 241 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 242 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 246 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 247 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 251 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 252 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 256 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 257 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 261 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 262 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 266 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 267 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 269 costs: AREG:124 DREG:124 CREG:124 BREG:124 SIREG:124 DIREG:124 AD_REGS:124 Q_REGS:124 NON_Q_REGS:124 INDEX_REGS:124 LEGACY_REGS:124 GENERAL_REGS:124 SSE_REGS:2464 MMX_REGS:2464 FP_TOP_SSE_REGS:2464 FP_SECOND_SSE_REGS:2464 FLOAT_SSE_REGS:2464 FLOAT_INT_REGS:1744 INT_SSE_REGS:2464 FLOAT_INT_SSE_REGS:2464 ALL_REGS:2464 MEM:785
  Register 271 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1054 INDEX_REGS:0 LEGACY_REGS:1054 GENERAL_REGS:1054 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1302 MEM:248
  Register 272 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:62 INDEX_REGS:0 LEGACY_REGS:62 GENERAL_REGS:62 SSE_REGS:806 MMX_REGS:806 FP_TOP_SSE_REGS:806 FP_SECOND_SSE_REGS:806 FLOAT_SSE_REGS:806 FLOAT_INT_REGS:558 INT_SSE_REGS:806 FLOAT_INT_SSE_REGS:806 ALL_REGS:806 MEM:248
  Register 273 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:741 MMX_REGS:741 FP_TOP_SSE_REGS:741 FP_SECOND_SSE_REGS:741 FLOAT_SSE_REGS:741 FLOAT_INT_REGS:513 INT_SSE_REGS:741 FLOAT_INT_SSE_REGS:741 ALL_REGS:741 MEM:177
  Register 274 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:315
  Register 290 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 291 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 293 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 294 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 296 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 297 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 299 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 300 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 302 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 303 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 305 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 306 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 308 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 309 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 310 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 311 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 312 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 313 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 314 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 315 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 316 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 317 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 318 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 319 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 320 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 321 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 322 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 323 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 324 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 325 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 326 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 327 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 328 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 329 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 330 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720

  Register 59 pref SSE_REGS or none
  Register 60 pref GENERAL_REGS or none
  Register 61 pref GENERAL_REGS or none
  Register 63 pref GENERAL_REGS or none
  Register 65 pref GENERAL_REGS or none
  Register 66 pref GENERAL_REGS or none
  Register 67 pref AREG, else GENERAL_REGS
  Register 70 pref INDEX_REGS, else GENERAL_REGS
  Register 72 pref GENERAL_REGS or none
  Register 73 pref INDEX_REGS, else GENERAL_REGS
  Register 75 pref INDEX_REGS, else GENERAL_REGS
  Register 76 pref GENERAL_REGS or none
  Register 78 pref GENERAL_REGS or none
  Register 79 pref INDEX_REGS, else GENERAL_REGS
  Register 80 pref SSE_REGS, else FLOAT_INT_SSE_REGS
  Register 81 pref GENERAL_REGS or none
  Register 84 pref DIREG, else GENERAL_REGS
  Register 85 pref GENERAL_REGS or none
  Register 87 pref GENERAL_REGS or none
  Register 90 pref DIREG, else GENERAL_REGS
  Register 92 pref DIREG, else GENERAL_REGS
  Register 93 pref SIREG, else GENERAL_REGS
  Register 94 pref DREG, else GENERAL_REGS
  Register 95 pref GENERAL_REGS or none
  Register 97 pref AREG, else GENERAL_REGS
  Register 99 pref AREG, else GENERAL_REGS
  Register 100 pref FLOAT_INT_SSE_REGS or none
  Register 102 pref INDEX_REGS, else GENERAL_REGS
  Register 103 pref SSE_REGS or none
  Register 104 pref INDEX_REGS, else GENERAL_REGS
  Register 105 pref INDEX_REGS, else GENERAL_REGS
  Register 107 pref FLOAT_INT_SSE_REGS or none
  Register 109 pref AREG, else GENERAL_REGS
  Register 120 pref GENERAL_REGS or none
  Register 125 pref GENERAL_REGS or none
  Register 130 pref GENERAL_REGS or none
  Register 135 pref GENERAL_REGS or none
  Register 140 pref GENERAL_REGS or none
  Register 143 pref GENERAL_REGS or none
  Register 144 pref DIREG, else GENERAL_REGS
  Register 145 pref GENERAL_REGS or none
  Register 146 pref GENERAL_REGS or none
  Register 147 pref FLOAT_INT_SSE_REGS or none
  Register 148 pref GENERAL_REGS or none
  Register 151 pref FLOAT_INT_SSE_REGS or none
  Register 153 pref GENERAL_REGS or none
  Register 155 pref FLOAT_INT_SSE_REGS or none
  Register 157 pref GENERAL_REGS or none
  Register 159 pref FLOAT_INT_SSE_REGS or none
  Register 161 pref GENERAL_REGS or none
  Register 163 pref FLOAT_INT_SSE_REGS or none
  Register 165 pref GENERAL_REGS or none
  Register 167 pref FLOAT_INT_SSE_REGS or none
  Register 169 pref GENERAL_REGS or none
  Register 171 pref FLOAT_INT_SSE_REGS or none
  Register 173 pref GENERAL_REGS or none
  Register 175 pref FLOAT_INT_SSE_REGS or none
  Register 179 pref INDEX_REGS, else GENERAL_REGS
  Register 183 pref INDEX_REGS, else GENERAL_REGS
  Register 187 pref INDEX_REGS, else GENERAL_REGS
  Register 191 pref INDEX_REGS, else GENERAL_REGS
  Register 195 pref INDEX_REGS, else GENERAL_REGS
  Register 199 pref INDEX_REGS, else GENERAL_REGS
  Register 203 pref INDEX_REGS, else GENERAL_REGS
  Register 205 pref GENERAL_REGS or none
  Register 206 pref GENERAL_REGS or none
  Register 207 pref INDEX_REGS, else GENERAL_REGS
  Register 210 pref INDEX_REGS, else GENERAL_REGS
  Register 213 pref INDEX_REGS, else GENERAL_REGS
  Register 216 pref INDEX_REGS, else GENERAL_REGS
  Register 219 pref INDEX_REGS, else GENERAL_REGS
  Register 222 pref INDEX_REGS, else GENERAL_REGS
  Register 225 pref INDEX_REGS, else GENERAL_REGS
  Register 228 pref INDEX_REGS, else GENERAL_REGS
  Register 231 pref INDEX_REGS, else GENERAL_REGS
  Register 236 pref FLOAT_INT_SSE_REGS or none
  Register 237 pref INDEX_REGS, else GENERAL_REGS
  Register 241 pref FLOAT_INT_SSE_REGS or none
  Register 242 pref INDEX_REGS, else GENERAL_REGS
  Register 246 pref FLOAT_INT_SSE_REGS or none
  Register 247 pref INDEX_REGS, else GENERAL_REGS
  Register 251 pref FLOAT_INT_SSE_REGS or none
  Register 252 pref INDEX_REGS, else GENERAL_REGS
  Register 256 pref FLOAT_INT_SSE_REGS or none
  Register 257 pref INDEX_REGS, else GENERAL_REGS
  Register 261 pref FLOAT_INT_SSE_REGS or none
  Register 262 pref INDEX_REGS, else GENERAL_REGS
  Register 266 pref FLOAT_INT_SSE_REGS or none
  Register 267 pref INDEX_REGS, else GENERAL_REGS
  Register 269 pref GENERAL_REGS or none
  Register 271 pref FLOAT_INT_SSE_REGS or none
  Register 272 pref INDEX_REGS, else GENERAL_REGS
  Register 273 pref GENERAL_REGS or none
  Register 274 pref GENERAL_REGS or none
  Register 290 pref FLOAT_INT_SSE_REGS or none
  Register 291 pref INDEX_REGS, else GENERAL_REGS
  Register 293 pref FLOAT_INT_SSE_REGS or none
  Register 294 pref INDEX_REGS, else GENERAL_REGS
  Register 296 pref FLOAT_INT_SSE_REGS or none
  Register 297 pref INDEX_REGS, else GENERAL_REGS
  Register 299 pref FLOAT_INT_SSE_REGS or none
  Register 300 pref INDEX_REGS, else GENERAL_REGS
  Register 302 pref FLOAT_INT_SSE_REGS or none
  Register 303 pref INDEX_REGS, else GENERAL_REGS
  Register 305 pref FLOAT_INT_SSE_REGS or none
  Register 306 pref INDEX_REGS, else GENERAL_REGS
  Register 308 pref FLOAT_INT_SSE_REGS or none
  Register 309 pref INDEX_REGS, else GENERAL_REGS
  Register 310 pref INDEX_REGS, else GENERAL_REGS
  Register 311 pref INDEX_REGS, else GENERAL_REGS
  Register 312 pref INDEX_REGS, else GENERAL_REGS
  Register 313 pref INDEX_REGS, else GENERAL_REGS
  Register 314 pref INDEX_REGS, else GENERAL_REGS
  Register 315 pref INDEX_REGS, else GENERAL_REGS
  Register 316 pref INDEX_REGS, else GENERAL_REGS
  Register 317 pref INDEX_REGS, else GENERAL_REGS
  Register 318 pref INDEX_REGS, else GENERAL_REGS
  Register 319 pref INDEX_REGS, else GENERAL_REGS
  Register 320 pref INDEX_REGS, else GENERAL_REGS
  Register 321 pref INDEX_REGS, else GENERAL_REGS
  Register 322 pref INDEX_REGS, else GENERAL_REGS
  Register 323 pref INDEX_REGS, else GENERAL_REGS
  Register 324 pref FLOAT_INT_SSE_REGS or none
  Register 325 pref FLOAT_INT_SSE_REGS or none
  Register 326 pref FLOAT_INT_SSE_REGS or none
  Register 327 pref FLOAT_INT_SSE_REGS or none
  Register 328 pref FLOAT_INT_SSE_REGS or none
  Register 329 pref FLOAT_INT_SSE_REGS or none
  Register 330 pref FLOAT_INT_SSE_REGS or none


Pass 1

  Register 59 costs: AREG:12961 DREG:12961 CREG:12961 BREG:12961 SIREG:12961 DIREG:12961 AD_REGS:12961 Q_REGS:12961 NON_Q_REGS:13488 INDEX_REGS:12961 LEGACY_REGS:13488 GENERAL_REGS:13488 FP_TOP_REG:20937 FP_SECOND_REG:20937 FLOAT_REGS:20937 SSE_REGS:0 FP_TOP_SSE_REGS:20937 FP_SECOND_SSE_REGS:20937 FLOAT_SSE_REGS:20937 FLOAT_INT_REGS:20937 INT_SSE_REGS:12961 FLOAT_INT_SSE_REGS:20937 ALL_REGS:21588 MEM:8100
  Register 60 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4407 MMX_REGS:4407 FP_TOP_SSE_REGS:4407 FP_SECOND_SSE_REGS:4407 FLOAT_SSE_REGS:4407 FLOAT_INT_REGS:3051 INT_SSE_REGS:4407 FLOAT_INT_SSE_REGS:4407 ALL_REGS:4407 MEM:1023
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7150 MMX_REGS:7150 FP_TOP_SSE_REGS:7150 FP_SECOND_SSE_REGS:7150 FLOAT_SSE_REGS:7150 FLOAT_INT_REGS:4950 INT_SSE_REGS:7150 FLOAT_INT_SSE_REGS:7150 ALL_REGS:7150 MEM:1709
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1404 MMX_REGS:1404 FP_TOP_SSE_REGS:1404 FP_SECOND_SSE_REGS:1404 FLOAT_SSE_REGS:1404 FLOAT_INT_REGS:972 INT_SSE_REGS:1404 FLOAT_INT_SSE_REGS:1404 ALL_REGS:1404 MEM:327
  Register 65 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1404 MMX_REGS:1404 FP_TOP_SSE_REGS:1404 FP_SECOND_SSE_REGS:1404 FLOAT_SSE_REGS:1404 FLOAT_INT_REGS:972 INT_SSE_REGS:1404 FLOAT_INT_SSE_REGS:1404 ALL_REGS:1404 MEM:327
  Register 66 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11479 MMX_REGS:11479 FP_TOP_SSE_REGS:11479 FP_SECOND_SSE_REGS:11479 FLOAT_SSE_REGS:11479 FLOAT_INT_REGS:7947 INT_SSE_REGS:11479 FLOAT_INT_SSE_REGS:11479 ALL_REGS:11479 MEM:3132
  Register 67 costs: AREG:-6 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6773 MMX_REGS:6773 FP_TOP_SSE_REGS:6773 FP_SECOND_SSE_REGS:6773 FLOAT_SSE_REGS:6773 FLOAT_INT_REGS:4689 INT_SSE_REGS:6773 FLOAT_INT_SSE_REGS:6773 ALL_REGS:6773 MEM:2075
  Register 70 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:872 INDEX_REGS:0 LEGACY_REGS:872 GENERAL_REGS:872 SSE_REGS:8632 MMX_REGS:8632 FP_TOP_SSE_REGS:8632 FP_SECOND_SSE_REGS:8632 FLOAT_SSE_REGS:8632 FLOAT_INT_REGS:5976 INT_SSE_REGS:8632 FLOAT_INT_SSE_REGS:8632 ALL_REGS:8632 MEM:2434
  Register 72 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6240 MMX_REGS:6240 FP_TOP_SSE_REGS:6240 FP_SECOND_SSE_REGS:6240 FLOAT_SSE_REGS:6240 FLOAT_INT_REGS:4320 INT_SSE_REGS:6240 FLOAT_INT_SSE_REGS:6240 ALL_REGS:6240 MEM:1830
  Register 73 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:966 INDEX_REGS:0 LEGACY_REGS:966 GENERAL_REGS:966 SSE_REGS:13505 MMX_REGS:13505 FP_TOP_SSE_REGS:13505 FP_SECOND_SSE_REGS:13505 FLOAT_SSE_REGS:13505 FLOAT_INT_REGS:9349 INT_SSE_REGS:13505 FLOAT_INT_SSE_REGS:13505 ALL_REGS:13505 MEM:4086
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:124 INDEX_REGS:0 LEGACY_REGS:124 GENERAL_REGS:124 SSE_REGS:1755 MMX_REGS:1755 FP_TOP_SSE_REGS:1755 FP_SECOND_SSE_REGS:1755 FLOAT_SSE_REGS:1755 FLOAT_INT_REGS:1215 INT_SSE_REGS:1755 FLOAT_INT_SSE_REGS:1755 ALL_REGS:1755 MEM:470
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:17355 MMX_REGS:17355 FP_TOP_SSE_REGS:17355 FP_SECOND_SSE_REGS:17355 FLOAT_SSE_REGS:17355 FLOAT_INT_REGS:12015 INT_SSE_REGS:17355 FLOAT_INT_SSE_REGS:17355 ALL_REGS:17355 MEM:4912
  Register 78 costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 INDEX_REGS:12 LEGACY_REGS:12 GENERAL_REGS:12 SSE_REGS:1559 MMX_REGS:1559 FP_TOP_SSE_REGS:1559 FP_SECOND_SSE_REGS:1559 FLOAT_SSE_REGS:1559 FLOAT_INT_REGS:1083 INT_SSE_REGS:1559 FLOAT_INT_SSE_REGS:1559 ALL_REGS:1559 MEM:369
  Register 79 costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:24 INDEX_REGS:12 LEGACY_REGS:24 GENERAL_REGS:24 SSE_REGS:1689 MMX_REGS:1689 FP_TOP_SSE_REGS:1689 FP_SECOND_SSE_REGS:1689 FLOAT_SSE_REGS:1689 FLOAT_INT_REGS:1173 INT_SSE_REGS:1689 FLOAT_INT_SSE_REGS:1689 ALL_REGS:1689 MEM:411
  Register 80 costs: AREG:403 DREG:403 CREG:403 BREG:403 SIREG:403 DIREG:403 AD_REGS:403 Q_REGS:403 NON_Q_REGS:8614 INDEX_REGS:403 LEGACY_REGS:8614 GENERAL_REGS:8614 FP_TOP_REG:651 FP_SECOND_REG:651 FLOAT_REGS:651 SSE_REGS:0 FP_TOP_SSE_REGS:651 FP_SECOND_SSE_REGS:651 FLOAT_SSE_REGS:651 FLOAT_INT_REGS:651 INT_SSE_REGS:403 FLOAT_INT_SSE_REGS:651 ALL_REGS:10794 MEM:2180
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7150 MMX_REGS:7150 FP_TOP_SSE_REGS:7150 FP_SECOND_SSE_REGS:7150 FLOAT_SSE_REGS:7150 FLOAT_INT_REGS:4950 INT_SSE_REGS:7150 FLOAT_INT_SSE_REGS:7150 ALL_REGS:7150 MEM:1709
  Register 84 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-3 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:117 MMX_REGS:117 FP_TOP_SSE_REGS:117 FP_SECOND_SSE_REGS:117 FLOAT_SSE_REGS:117 FLOAT_INT_REGS:81 INT_SSE_REGS:117 FLOAT_INT_SSE_REGS:117 ALL_REGS:117 MEM:33
  Register 85 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6682 MMX_REGS:6682 FP_TOP_SSE_REGS:6682 FP_SECOND_SSE_REGS:6682 FLOAT_SSE_REGS:6682 FLOAT_INT_REGS:4626 INT_SSE_REGS:6682 FLOAT_INT_SSE_REGS:6682 ALL_REGS:6682 MEM:2056
  Register 87 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1534 MMX_REGS:1534 FP_TOP_SSE_REGS:1534 FP_SECOND_SSE_REGS:1534 FLOAT_SSE_REGS:1534 FLOAT_INT_REGS:1062 INT_SSE_REGS:1534 FLOAT_INT_SSE_REGS:1534 ALL_REGS:1534 MEM:360
  Register 90 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-6 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:234 MMX_REGS:234 FP_TOP_SSE_REGS:234 FP_SECOND_SSE_REGS:234 FLOAT_SSE_REGS:234 FLOAT_INT_REGS:162 INT_SSE_REGS:234 FLOAT_INT_SSE_REGS:234 ALL_REGS:234 MEM:54
  Register 92 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-6 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1378 MMX_REGS:1378 FP_TOP_SSE_REGS:1378 FP_SECOND_SSE_REGS:1378 FLOAT_SSE_REGS:1378 FLOAT_INT_REGS:954 INT_SSE_REGS:1378 FLOAT_INT_SSE_REGS:1378 ALL_REGS:1378 MEM:424
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-6 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9217 MMX_REGS:9217 INT_SSE_REGS:9217 MEM:2413
  Register 94 costs: AREG:0 DREG:-6 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6357 MMX_REGS:6357 INT_SSE_REGS:6357 MEM:1582
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:156 MMX_REGS:156 FP_TOP_SSE_REGS:156 FP_SECOND_SSE_REGS:156 FLOAT_SSE_REGS:156 FLOAT_INT_REGS:108 INT_SSE_REGS:156 FLOAT_INT_SSE_REGS:156 ALL_REGS:156 MEM:42
  Register 97 costs: AREG:-9 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2054 MMX_REGS:2054 FP_TOP_SSE_REGS:2054 FP_SECOND_SSE_REGS:2054 FLOAT_SSE_REGS:2054 FLOAT_INT_REGS:1422 INT_SSE_REGS:2054 FLOAT_INT_SSE_REGS:2054 ALL_REGS:2054 MEM:629
  Register 99 costs: AREG:-112 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4368 MMX_REGS:4368 FP_TOP_SSE_REGS:4368 FP_SECOND_SSE_REGS:4368 FLOAT_SSE_REGS:4368 FLOAT_INT_REGS:3024 INT_SSE_REGS:4368 FLOAT_INT_SSE_REGS:4368 ALL_REGS:4368 MEM:1344
  Register 100 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:800
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 103 costs: AREG:806 DREG:806 CREG:806 BREG:806 SIREG:806 DIREG:806 AD_REGS:806 Q_REGS:806 NON_Q_REGS:806 INDEX_REGS:806 LEGACY_REGS:806 GENERAL_REGS:806 FP_TOP_REG:1302 FP_SECOND_REG:1302 FLOAT_REGS:1302 SSE_REGS:0 FP_TOP_SSE_REGS:1302 FP_SECOND_SSE_REGS:1302 FLOAT_SSE_REGS:1302 FLOAT_INT_REGS:1302 INT_SSE_REGS:806 FLOAT_INT_SSE_REGS:1302 ALL_REGS:1302 MEM:465
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:31 INDEX_REGS:0 LEGACY_REGS:31 GENERAL_REGS:31 SSE_REGS:805 MMX_REGS:805 FP_TOP_SSE_REGS:805 FP_SECOND_SSE_REGS:805 FLOAT_SSE_REGS:805 FLOAT_INT_REGS:557 INT_SSE_REGS:805 FLOAT_INT_SSE_REGS:805 ALL_REGS:805 MEM:248
  Register 105 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 109 costs: AREG:-113 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4407 MMX_REGS:4407 FP_TOP_SSE_REGS:4407 FP_SECOND_SSE_REGS:4407 FLOAT_SSE_REGS:4407 FLOAT_INT_REGS:3051 INT_SSE_REGS:4407 FLOAT_INT_SSE_REGS:4407 ALL_REGS:4407 MEM:1356
  Register 120 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:299 MMX_REGS:299 FP_TOP_SSE_REGS:299 FP_SECOND_SSE_REGS:299 FLOAT_SSE_REGS:299 FLOAT_INT_REGS:207 INT_SSE_REGS:299 FLOAT_INT_SSE_REGS:299 ALL_REGS:299 MEM:74
  Register 125 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3159 MMX_REGS:3159 FP_TOP_SSE_REGS:3159 FP_SECOND_SSE_REGS:3159 FLOAT_SSE_REGS:3159 FLOAT_INT_REGS:2187 INT_SSE_REGS:3159 FLOAT_INT_SSE_REGS:3159 ALL_REGS:3159 MEM:784
  Register 130 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3159 MMX_REGS:3159 FP_TOP_SSE_REGS:3159 FP_SECOND_SSE_REGS:3159 FLOAT_SSE_REGS:3159 FLOAT_INT_REGS:2187 INT_SSE_REGS:3159 FLOAT_INT_SSE_REGS:3159 ALL_REGS:3159 MEM:784
  Register 135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:3159 MMX_REGS:3159 FP_TOP_SSE_REGS:3159 FP_SECOND_SSE_REGS:3159 FLOAT_SSE_REGS:3159 FLOAT_INT_REGS:2187 INT_SSE_REGS:3159 FLOAT_INT_SSE_REGS:3159 ALL_REGS:3159 MEM:784
  Register 140 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 143 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 144 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:9126 MMX_REGS:9126 FP_TOP_SSE_REGS:9126 FP_SECOND_SSE_REGS:9126 FLOAT_SSE_REGS:9126 FLOAT_INT_REGS:6318 INT_SSE_REGS:9126 FLOAT_INT_SSE_REGS:9126 ALL_REGS:9126 MEM:2697
  Register 145 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:40443 MMX_REGS:40443 FP_TOP_SSE_REGS:40443 FP_SECOND_SSE_REGS:40443 FLOAT_SSE_REGS:40443 FLOAT_INT_REGS:27999 INT_SSE_REGS:40443 FLOAT_INT_SSE_REGS:40443 ALL_REGS:40443 MEM:10871
  Register 146 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:36660 MMX_REGS:36660 FP_TOP_SSE_REGS:36660 FP_SECOND_SSE_REGS:36660 FLOAT_SSE_REGS:36660 FLOAT_INT_REGS:25380 INT_SSE_REGS:36660 FLOAT_INT_SSE_REGS:36660 ALL_REGS:36660 MEM:9908
  Register 147 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 148 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:55354 MMX_REGS:55354 FP_TOP_SSE_REGS:55354 FP_SECOND_SSE_REGS:55354 FLOAT_SSE_REGS:55354 FLOAT_INT_REGS:38322 INT_SSE_REGS:55354 FLOAT_INT_SSE_REGS:55354 ALL_REGS:55354 MEM:15750
  Register 151 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 153 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 155 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 157 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 159 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 161 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 163 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 165 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 167 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 169 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 171 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 173 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2626 MMX_REGS:2626 FP_TOP_SSE_REGS:2626 FP_SECOND_SSE_REGS:2626 FLOAT_SSE_REGS:2626 FLOAT_INT_REGS:1818 INT_SSE_REGS:2626 FLOAT_INT_SSE_REGS:2626 ALL_REGS:2626 MEM:808
  Register 175 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 179 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 183 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 187 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 191 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 195 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 199 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 203 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 205 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:7150 MMX_REGS:7150 FP_TOP_SSE_REGS:7150 FP_SECOND_SSE_REGS:7150 FLOAT_SSE_REGS:7150 FLOAT_INT_REGS:4950 INT_SSE_REGS:7150 FLOAT_INT_SSE_REGS:7150 ALL_REGS:7150 MEM:1709
  Register 206 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:11479 MMX_REGS:11479 FP_TOP_SSE_REGS:11479 FP_SECOND_SSE_REGS:11479 FLOAT_SSE_REGS:11479 FLOAT_INT_REGS:7947 INT_SSE_REGS:11479 FLOAT_INT_SSE_REGS:11479 ALL_REGS:11479 MEM:3132
  Register 207 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 210 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 213 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 216 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 219 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 222 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 225 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 228 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:32 INDEX_REGS:0 LEGACY_REGS:32 GENERAL_REGS:32 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 231 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:31 INDEX_REGS:0 LEGACY_REGS:31 GENERAL_REGS:31 SSE_REGS:805 MMX_REGS:805 FP_TOP_SSE_REGS:805 FP_SECOND_SSE_REGS:805 FLOAT_SSE_REGS:805 FLOAT_INT_REGS:557 INT_SSE_REGS:805 FLOAT_INT_SSE_REGS:805 ALL_REGS:805 MEM:248
  Register 236 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 237 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 241 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 242 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 246 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 247 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 251 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 252 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 256 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 257 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 261 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 262 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 266 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1088 INDEX_REGS:0 LEGACY_REGS:1088 GENERAL_REGS:1088 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1344 MEM:256
  Register 267 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:64 INDEX_REGS:0 LEGACY_REGS:64 GENERAL_REGS:64 SSE_REGS:832 MMX_REGS:832 FP_TOP_SSE_REGS:832 FP_SECOND_SSE_REGS:832 FLOAT_SSE_REGS:832 FLOAT_INT_REGS:576 INT_SSE_REGS:832 FLOAT_INT_SSE_REGS:832 ALL_REGS:832 MEM:256
  Register 269 costs: AREG:124 DREG:124 CREG:124 BREG:124 SIREG:124 DIREG:124 AD_REGS:124 Q_REGS:124 NON_Q_REGS:124 INDEX_REGS:124 LEGACY_REGS:124 GENERAL_REGS:124 SSE_REGS:2464 MMX_REGS:2464 FP_TOP_SSE_REGS:2464 FP_SECOND_SSE_REGS:2464 FLOAT_SSE_REGS:2464 FLOAT_INT_REGS:1744 INT_SSE_REGS:2464 FLOAT_INT_SSE_REGS:2464 ALL_REGS:2464 MEM:785
  Register 271 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1054 INDEX_REGS:0 LEGACY_REGS:1054 GENERAL_REGS:1054 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1302 MEM:248
  Register 272 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:62 INDEX_REGS:0 LEGACY_REGS:62 GENERAL_REGS:62 SSE_REGS:806 MMX_REGS:806 FP_TOP_SSE_REGS:806 FP_SECOND_SSE_REGS:806 FLOAT_SSE_REGS:806 FLOAT_INT_REGS:558 INT_SSE_REGS:806 FLOAT_INT_SSE_REGS:806 ALL_REGS:806 MEM:248
  Register 273 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:741 MMX_REGS:741 FP_TOP_SSE_REGS:741 FP_SECOND_SSE_REGS:741 FLOAT_SSE_REGS:741 FLOAT_INT_REGS:513 INT_SSE_REGS:741 FLOAT_INT_SSE_REGS:741 ALL_REGS:741 MEM:177
  Register 274 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:1170 MMX_REGS:1170 FP_TOP_SSE_REGS:1170 FP_SECOND_SSE_REGS:1170 FLOAT_SSE_REGS:1170 FLOAT_INT_REGS:810 INT_SSE_REGS:1170 FLOAT_INT_SSE_REGS:1170 ALL_REGS:1170 MEM:315
  Register 290 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 291 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 293 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 294 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 296 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 297 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 299 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 300 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 302 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 303 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 305 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 306 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 308 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:952 INDEX_REGS:0 LEGACY_REGS:952 GENERAL_REGS:952 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:1176 MEM:224
  Register 309 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:56 INDEX_REGS:0 LEGACY_REGS:56 GENERAL_REGS:56 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 310 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 311 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 312 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 313 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 314 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 315 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 316 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 317 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 318 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 319 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 320 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 321 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 322 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 323 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:28 INDEX_REGS:0 LEGACY_REGS:28 GENERAL_REGS:28 SSE_REGS:728 MMX_REGS:728 FP_TOP_SSE_REGS:728 FP_SECOND_SSE_REGS:728 FLOAT_SSE_REGS:728 FLOAT_INT_REGS:504 INT_SSE_REGS:728 FLOAT_INT_SSE_REGS:728 ALL_REGS:728 MEM:224
  Register 324 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 325 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 326 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 327 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 328 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 329 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 330 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720

333 registers.

Register 59 used 34 times across 184 insns; set 17 times; user var; SSE_REGS or none.

Register 60 used 4 times across 270 insns; set 2 times; user var; dies in 0 places; crosses 3 calls; 4 bytes; GENERAL_REGS or none.

Register 61 used 19 times across 148 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 63 used 4 times across 206 insns; set 2 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 65 used 4 times across 322 insns; set 2 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 66 used 30 times across 72 insns; set 9 times; dies in 0 places; GENERAL_REGS or none; pointer.

Register 67 used 19 times across 438 insns; set 1 time; crosses 6 calls; pref AREG, else GENERAL_REGS; pointer.

Register 70 used 8 times across 268 insns; set 2 times; dies in 0 places; crosses 3 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 72 used 5 times across 31 insns; set 1 time; GENERAL_REGS or none.

Register 73 used 35 times across 320 insns; set 2 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 75 used 5 times across 204 insns; set 2 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 76 used 45 times across 88 insns; set 9 times; GENERAL_REGS or none.

Register 78 used 2 times across 136 insns; set 1 time; dies in 0 places; crosses 3 calls; GENERAL_REGS or none.

Register 79 used 4 times across 137 insns; set 1 time; dies in 0 places; crosses 3 calls; pref INDEX_REGS, else GENERAL_REGS.

Register 80 used 17 times across 74 insns; set 1 time; user var; dies in 0 places; pref SSE_REGS, else FLOAT_INT_SSE_REGS.

Register 81 used 19 times across 176 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 84 used 2 times across 479 insns; set 1 time; user var; crosses 19 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 85 used 17 times across 91 insns; set 1 time; dies in 0 places; GENERAL_REGS or none.

Register 87 used 2 times across 135 insns; set 1 time; dies in 0 places; crosses 3 calls; GENERAL_REGS or none.

Register 90 used 3 times across 7 insns; set 1 time; crosses 1 call; pref DIREG, else GENERAL_REGS.

Register 92 used 2 times across 155 insns; set 1 time; user var; dies in 0 places; crosses 5 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 93 used 14 times across 418 insns; set 1 time; user var; dies in 0 places; crosses 5 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 94 used 20 times across 490 insns; set 1 time; user var; dies in 0 places; crosses 21 calls; 4 bytes; pref DREG, else GENERAL_REGS.

Register 95 used 2 times across 2 insns in block 0; set 1 time; GENERAL_REGS or none.

Register 97 used 5 times across 484 insns; set 1 time; crosses 20 calls; pref AREG, else GENERAL_REGS; pointer.

Register 99 used 3 times across 3 insns in block 9; set 1 time; pref AREG, else GENERAL_REGS; pointer.

Register 100 used 2 times across 4 insns in block 93; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 102 used 2 times across 4 insns in block 91; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 103 used 2 times across 2 insns in block 59; set 1 time; SSE_REGS or none.

Register 104 used 2 times across 4 insns in block 59; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 105 used 2 times across 3 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 107 used 2 times across 4 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 109 used 3 times across 3 insns in block 7; set 1 time; pref AREG, else GENERAL_REGS; pointer.

Register 120 used 10 times across 22 insns; set 2 times; crosses 1 call; 4 bytes; GENERAL_REGS or none.

Register 125 used 10 times across 23 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 130 used 10 times across 22 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 135 used 10 times across 22 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 140 used 10 times across 24 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 143 used 2 times across 4 insns in block 108; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 144 used 8 times across 112 insns; set 2 times; pref DIREG, else GENERAL_REGS; pointer.

Register 145 used 33 times across 208 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 146 used 30 times across 102 insns; set 9 times; dies in 0 places; GENERAL_REGS or none.

Register 147 used 2 times across 4 insns in block 108; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 148 used 45 times across 103 insns; set 9 times; GENERAL_REGS or none; pointer.

Register 151 used 2 times across 4 insns in block 108; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 153 used 2 times across 4 insns in block 108; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 155 used 2 times across 4 insns in block 108; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 157 used 2 times across 4 insns in block 108; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 159 used 2 times across 4 insns in block 108; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 161 used 2 times across 4 insns in block 108; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 163 used 2 times across 4 insns in block 108; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 165 used 2 times across 4 insns in block 108; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 167 used 2 times across 4 insns in block 108; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 169 used 2 times across 4 insns in block 108; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 171 used 2 times across 4 insns in block 108; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 173 used 2 times across 4 insns in block 108; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 175 used 2 times across 4 insns in block 108; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 179 used 2 times across 4 insns in block 91; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 183 used 2 times across 4 insns in block 91; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 187 used 2 times across 4 insns in block 91; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 191 used 2 times across 4 insns in block 91; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 195 used 2 times across 4 insns in block 91; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 199 used 2 times across 4 insns in block 91; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 203 used 2 times across 4 insns in block 91; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 205 used 19 times across 148 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 206 used 30 times across 72 insns; set 9 times; dies in 0 places; GENERAL_REGS or none; pointer.

Register 207 used 2 times across 4 insns in block 74; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 210 used 2 times across 4 insns in block 74; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 213 used 2 times across 4 insns in block 74; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 216 used 2 times across 4 insns in block 74; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 219 used 2 times across 4 insns in block 74; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 222 used 2 times across 4 insns in block 74; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 225 used 2 times across 4 insns in block 74; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 228 used 2 times across 4 insns in block 74; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 231 used 2 times across 4 insns in block 76; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 236 used 2 times across 4 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 237 used 2 times across 3 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 241 used 2 times across 4 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 242 used 2 times across 3 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 246 used 2 times across 4 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 247 used 2 times across 3 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 251 used 2 times across 4 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 252 used 2 times across 3 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 256 used 2 times across 4 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 257 used 2 times across 3 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 261 used 2 times across 4 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 262 used 2 times across 3 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 266 used 2 times across 4 insns in block 57; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 267 used 2 times across 3 insns in block 57; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 269 used 6 times across 29 insns; set 1 time; GENERAL_REGS or none.

Register 271 used 2 times across 4 insns in block 42; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 272 used 2 times across 3 insns in block 42; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 273 used 19 times across 148 insns; set 9 times; user var; dies in 0 places; crosses 14 calls; 4 bytes; GENERAL_REGS or none.

Register 274 used 30 times across 72 insns; set 9 times; dies in 0 places; crosses 14 calls; GENERAL_REGS or none; pointer.

Register 290 used 2 times across 2 insns in block 50; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 291 used 2 times across 3 insns in block 50; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 293 used 2 times across 4 insns in block 51; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 294 used 2 times across 3 insns in block 51; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 296 used 2 times across 4 insns in block 52; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 297 used 2 times across 3 insns in block 52; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 299 used 2 times across 4 insns in block 53; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 300 used 2 times across 3 insns in block 53; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 302 used 2 times across 4 insns in block 54; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 303 used 2 times across 3 insns in block 54; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 305 used 2 times across 4 insns in block 55; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 306 used 2 times across 3 insns in block 55; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 308 used 2 times across 4 insns in block 56; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 309 used 2 times across 3 insns in block 56; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 310 used 2 times across 4 insns in block 67; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 311 used 2 times across 4 insns in block 68; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 312 used 2 times across 4 insns in block 69; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 313 used 2 times across 4 insns in block 70; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 314 used 2 times across 4 insns in block 71; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 315 used 2 times across 4 insns in block 72; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 316 used 2 times across 4 insns in block 73; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 317 used 2 times across 4 insns in block 84; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 318 used 2 times across 4 insns in block 85; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 319 used 2 times across 4 insns in block 86; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 320 used 2 times across 4 insns in block 87; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 321 used 2 times across 4 insns in block 88; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 322 used 2 times across 4 insns in block 89; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 323 used 2 times across 4 insns in block 90; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 324 used 2 times across 4 insns in block 101; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 325 used 2 times across 4 insns in block 102; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 326 used 2 times across 4 insns in block 103; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 327 used 2 times across 4 insns in block 104; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 328 used 2 times across 4 insns in block 105; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 329 used 2 times across 4 insns in block 106; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 330 used 2 times across 4 insns in block 107; set 1 time; FLOAT_INT_SSE_REGS or none.

110 basic blocks, 170 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 63, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [99.0%]  1 [1.0%]  (fallthru)
Registers live at start: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 90 92 93 94

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1.
Predecessors:  0 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 62, maybe hot.
Predecessors:  0 [99.0%] 
Successors:  5 [1.0%]  3 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 90 92 93 94
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 92 93 94 97

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 62, maybe hot.
Predecessors:  2 [99.0%]  (fallthru)
Successors:  6 [96.7%]  4 [3.3%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 92 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 92 93 94 97

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 2.
Predecessors:  3 [3.3%]  (fallthru)
Successors:  14 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 1.
Predecessors:  2 [1.0%] 
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 60, maybe hot.
Predecessors:  3 [96.7%] 
Successors:  7 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 92 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97

Basic block 7 prev 6, next 8, loop_depth 1, count 0, freq 1134, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 13 [96.7%]  (dfs_back)
Successors:  9 [99.0%]  8 [1.0%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  7 [1.0%]  (fallthru,loop_exit)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 9 prev 8, next 10, loop_depth 1, count 0, freq 1122, maybe hot.
Predecessors:  7 [99.0%] 
Successors:  12 [1.0%]  (loop_exit) 10 [99.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97

Basic block 10 prev 9, next 11, loop_depth 1, count 0, freq 1111, maybe hot.
Predecessors:  9 [99.0%]  (fallthru)
Successors:  93 [90.0%]  11 [10.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97

Basic block 11 prev 10, next 12, loop_depth 1, count 0, freq 111, maybe hot.
Predecessors:  10 [10.0%]  (fallthru)
Successors:  13 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  9 [1.0%]  (loop_exit)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 13 prev 12, next 14, loop_depth 1, count 0, freq 1111, maybe hot.
Predecessors:  11 [100.0%]  108 [10.0%]  (loop_exit) 93 [10.0%]  107 [10.0%] 
Successors:  7 [96.7%]  (dfs_back) 14 [3.3%]  (fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
Invalid sum of incoming frequencies 402, should be 1111

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 39, maybe hot.
Predecessors:  4 [100.0%]  13 [3.3%]  (fallthru,loop_exit)
Successors:  17 [90.0%]  15 [10.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 4.
Predecessors:  14 [10.0%]  (fallthru)
Successors:  19 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97

Basic block 16 prev 15, next 17, loop_depth 1, count 0, freq 351, maybe hot.
Predecessors:  17 [10.0%]  74 [10.0%]  (loop_exit) 59 [10.0%]  73 [10.0%] 
Successors:  19 [10.0%]  (loop_exit) 17 [90.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97
Invalid sum of incoming frequencies 127, should be 351

Basic block 17 prev 16, next 18, loop_depth 1, count 0, freq 351, maybe hot.
Predecessors:  16 [90.0%]  (fallthru,dfs_back) 14 [90.0%] 
Successors:  16 [10.0%]  18 [90.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97

Basic block 18 prev 17, next 19, loop_depth 1, count 0, freq 316, maybe hot.
Predecessors:  17 [90.0%]  (fallthru)
Successors:  76 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 39, maybe hot.
Predecessors:  16 [10.0%]  (loop_exit) 15 [100.0%] 
Successors:  22 [90.0%]  20 [10.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 4.
Predecessors:  19 [10.0%]  (fallthru)
Successors:  24 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97

Basic block 21 prev 20, next 22, loop_depth 1, count 0, freq 351, maybe hot.
Predecessors:  22 [10.0%]  57 [10.0%]  (loop_exit) 42 [10.0%]  56 [10.0%] 
Successors:  25 [10.0%]  (loop_exit) 22 [90.0%]  (fallthru,dfs_back)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97
Invalid sum of incoming frequencies 127, should be 351

Basic block 22 prev 21, next 23, loop_depth 1, count 0, freq 351, maybe hot.
Predecessors:  21 [90.0%]  (fallthru,dfs_back) 19 [90.0%] 
Successors:  21 [10.0%]  23 [90.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97

Basic block 23 prev 22, next 24, loop_depth 1, count 0, freq 316, maybe hot.
Predecessors:  22 [90.0%]  (fallthru)
Successors:  42 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 39, maybe hot.
Predecessors:  39 [10.0%]  40 [10.0%]  (loop_exit) 25 [10.0%]  20 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 35, maybe hot.
Predecessors:  21 [10.0%]  (loop_exit)
Successors:  26 [90.0%]  (fallthru,dfs_back) 24 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 27, maybe hot.
Predecessors:  25 [90.0%]  (fallthru,dfs_back)
Successors:  27 [87.5%]  (fallthru) 40 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 27, maybe hot.
Predecessors:  26 [87.5%]  (fallthru)
Successors:  28 [85.7%]  (fallthru) 39 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 26, maybe hot.
Predecessors:  27 [85.7%]  (fallthru)
Successors:  29 [83.3%]  (fallthru) 38 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

Basic block 29 prev 28, next 30, loop_depth 0, count 0, freq 24, maybe hot.
Predecessors:  28 [83.3%]  (fallthru)
Successors:  30 [80.0%]  (fallthru) 37 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

Basic block 30 prev 29, next 31, loop_depth 0, count 0, freq 21, maybe hot.
Predecessors:  29 [80.0%]  (fallthru)
Successors:  31 [75.0%]  (fallthru) 36 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

Basic block 31 prev 30, next 32, loop_depth 0, count 0, freq 16, maybe hot.
Predecessors:  30 [75.0%]  (fallthru)
Successors:  32 [66.7%]  (fallthru) 35 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  31 [66.7%]  (fallthru)
Successors:  33 [50.0%]  (fallthru) 34 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 273 274

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  32 [50.0%]  (fallthru)
Successors:  34 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 32 [50.0%] 
Successors:  35 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  34 [100.0%]  (fallthru) 31 [33.3%] 
Successors:  36 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  35 [100.0%]  (fallthru) 30 [25.0%] 
Successors:  37 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

Basic block 37 prev 36, next 38, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  36 [100.0%]  (fallthru) 29 [20.0%] 
Successors:  38 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

Basic block 38 prev 37, next 39, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  37 [100.0%]  (fallthru) 28 [16.7%] 
Successors:  39 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

Basic block 39 prev 38, next 40, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  38 [100.0%]  (fallthru) 27 [14.3%] 
Successors:  40 [90.0%]  (fallthru,dfs_back) 24 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

Basic block 40 prev 39, next 41, loop_depth 1, count 0, freq 36, maybe hot.
Predecessors:  39 [90.0%]  (fallthru,dfs_back) 41 [100.0%]  26 [12.5%] 
Successors:  41 [90.0%]  (fallthru,dfs_back) 24 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

Basic block 41 prev 40, next 42, loop_depth 1, count 0, freq 32, maybe hot.
Predecessors:  40 [90.0%]  (fallthru,dfs_back)
Successors:  40 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

Basic block 42 prev 41, next 43, loop_depth 1, count 0, freq 316, maybe hot.
Predecessors:  23 [100.0%] 
Successors:  43 [90.0%]  (fallthru,dfs_back) 21 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

Basic block 43 prev 42, next 44, loop_depth 1, count 0, freq 243, maybe hot.
Predecessors:  42 [90.0%]  (fallthru,dfs_back)
Successors:  44 [87.5%]  (fallthru) 57 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

Basic block 44 prev 43, next 45, loop_depth 1, count 0, freq 237, maybe hot.
Predecessors:  43 [87.5%]  (fallthru)
Successors:  45 [85.7%]  (fallthru) 56 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

Basic block 45 prev 44, next 46, loop_depth 1, count 0, freq 227, maybe hot.
Predecessors:  44 [85.7%]  (fallthru)
Successors:  46 [83.3%]  (fallthru) 55 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

Basic block 46 prev 45, next 47, loop_depth 1, count 0, freq 213, maybe hot.
Predecessors:  45 [83.3%]  (fallthru)
Successors:  47 [80.0%]  (fallthru) 54 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

Basic block 47 prev 46, next 48, loop_depth 1, count 0, freq 189, maybe hot.
Predecessors:  46 [80.0%]  (fallthru)
Successors:  48 [75.0%]  (fallthru) 53 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

Basic block 48 prev 47, next 49, loop_depth 1, count 0, freq 142, maybe hot.
Predecessors:  47 [75.0%]  (fallthru)
Successors:  49 [66.7%]  (fallthru) 52 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

Basic block 49 prev 48, next 50, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  48 [66.7%]  (fallthru)
Successors:  50 [50.0%]  (fallthru) 51 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 269
Invalid sum of incoming frequencies 95, should be 284

Basic block 50 prev 49, next 51, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  49 [50.0%]  (fallthru)
Successors:  51 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 84 85 93 94 97 269
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Invalid sum of incoming frequencies 142, should be 284

Basic block 51 prev 50, next 52, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  50 [100.0%]  (fallthru) 49 [50.0%] 
Successors:  52 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Invalid sum of incoming frequencies 426, should be 284

Basic block 52 prev 51, next 53, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  51 [100.0%]  (fallthru) 48 [33.3%] 
Successors:  53 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

Basic block 53 prev 52, next 54, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  52 [100.0%]  (fallthru) 47 [25.0%] 
Successors:  54 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

Basic block 54 prev 53, next 55, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  53 [100.0%]  (fallthru) 46 [20.0%] 
Successors:  55 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

Basic block 55 prev 54, next 56, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  54 [100.0%]  (fallthru) 45 [16.7%] 
Successors:  56 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

Basic block 56 prev 55, next 57, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  55 [100.0%]  (fallthru) 44 [14.3%] 
Successors:  57 [90.0%]  (fallthru,dfs_back) 21 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

Basic block 57 prev 56, next 58, loop_depth 2, count 0, freq 320, maybe hot.
Predecessors:  56 [90.0%]  (fallthru,dfs_back) 58 [100.0%]  43 [12.5%] 
Successors:  58 [90.0%]  (fallthru,dfs_back) 21 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Invalid sum of incoming frequencies 574, should be 320

Basic block 58 prev 57, next 59, loop_depth 2, count 0, freq 288, maybe hot.
Predecessors:  57 [90.0%]  (fallthru,dfs_back)
Successors:  57 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

Basic block 59 prev 58, next 60, loop_depth 1, count 0, freq 316, maybe hot.
Predecessors:  90 [10.0%]  76 [10.0%]  91 [10.0%]  (loop_exit)
Successors:  60 [90.0%]  (fallthru,dfs_back) 16 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
Invalid sum of incoming frequencies 92, should be 316

Basic block 60 prev 59, next 61, loop_depth 1, count 0, freq 243, maybe hot.
Predecessors:  59 [90.0%]  (fallthru,dfs_back)
Successors:  61 [87.5%]  (fallthru) 74 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

Basic block 61 prev 60, next 62, loop_depth 1, count 0, freq 237, maybe hot.
Predecessors:  60 [87.5%]  (fallthru)
Successors:  62 [85.7%]  (fallthru) 73 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

Basic block 62 prev 61, next 63, loop_depth 1, count 0, freq 227, maybe hot.
Predecessors:  61 [85.7%]  (fallthru)
Successors:  63 [83.3%]  (fallthru) 72 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

Basic block 63 prev 62, next 64, loop_depth 1, count 0, freq 213, maybe hot.
Predecessors:  62 [83.3%]  (fallthru)
Successors:  64 [80.0%]  (fallthru) 71 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

Basic block 64 prev 63, next 65, loop_depth 1, count 0, freq 189, maybe hot.
Predecessors:  63 [80.0%]  (fallthru)
Successors:  65 [75.0%]  (fallthru) 70 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

Basic block 65 prev 64, next 66, loop_depth 1, count 0, freq 142, maybe hot.
Predecessors:  64 [75.0%]  (fallthru)
Successors:  66 [66.7%]  (fallthru) 69 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

Basic block 66 prev 65, next 67, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  65 [66.7%]  (fallthru)
Successors:  67 [50.0%]  (fallthru) 68 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Invalid sum of incoming frequencies 95, should be 284

Basic block 67 prev 66, next 68, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  66 [50.0%]  (fallthru)
Successors:  68 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Invalid sum of incoming frequencies 142, should be 284

Basic block 68 prev 67, next 69, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  67 [100.0%]  (fallthru) 66 [50.0%] 
Successors:  69 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Invalid sum of incoming frequencies 426, should be 284

Basic block 69 prev 68, next 70, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  68 [100.0%]  (fallthru) 65 [33.3%] 
Successors:  70 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

Basic block 70 prev 69, next 71, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  69 [100.0%]  (fallthru) 64 [25.0%] 
Successors:  71 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

Basic block 71 prev 70, next 72, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  70 [100.0%]  (fallthru) 63 [20.0%] 
Successors:  72 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

Basic block 72 prev 71, next 73, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  71 [100.0%]  (fallthru) 62 [16.7%] 
Successors:  73 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

Basic block 73 prev 72, next 74, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  72 [100.0%]  (fallthru) 61 [14.3%] 
Successors:  74 [90.0%]  (fallthru,dfs_back) 16 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

Basic block 74 prev 73, next 75, loop_depth 2, count 0, freq 320, maybe hot.
Predecessors:  73 [90.0%]  (fallthru,dfs_back) 75 [100.0%]  60 [12.5%] 
Successors:  75 [90.0%]  (fallthru,dfs_back) 16 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Invalid sum of incoming frequencies 574, should be 320

Basic block 75 prev 74, next 76, loop_depth 2, count 0, freq 288, maybe hot.
Predecessors:  74 [90.0%]  (fallthru,dfs_back)
Successors:  74 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

Basic block 76 prev 75, next 77, loop_depth 1, count 0, freq 316, maybe hot.
Predecessors:  18 [100.0%] 
Successors:  77 [90.0%]  (fallthru,dfs_back) 59 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

Basic block 77 prev 76, next 78, loop_depth 1, count 0, freq 243, maybe hot.
Predecessors:  76 [90.0%]  (fallthru,dfs_back)
Successors:  78 [87.5%]  (fallthru) 91 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

Basic block 78 prev 77, next 79, loop_depth 1, count 0, freq 237, maybe hot.
Predecessors:  77 [87.5%]  (fallthru)
Successors:  79 [85.7%]  (fallthru) 90 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

Basic block 79 prev 78, next 80, loop_depth 1, count 0, freq 227, maybe hot.
Predecessors:  78 [85.7%]  (fallthru)
Successors:  80 [83.3%]  (fallthru) 89 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

Basic block 80 prev 79, next 81, loop_depth 1, count 0, freq 213, maybe hot.
Predecessors:  79 [83.3%]  (fallthru)
Successors:  81 [80.0%]  (fallthru) 88 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

Basic block 81 prev 80, next 82, loop_depth 1, count 0, freq 189, maybe hot.
Predecessors:  80 [80.0%]  (fallthru)
Successors:  82 [75.0%]  (fallthru) 87 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

Basic block 82 prev 81, next 83, loop_depth 1, count 0, freq 142, maybe hot.
Predecessors:  81 [75.0%]  (fallthru)
Successors:  83 [66.7%]  (fallthru) 86 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

Basic block 83 prev 82, next 84, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  82 [66.7%]  (fallthru)
Successors:  84 [50.0%]  (fallthru) 85 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Invalid sum of incoming frequencies 95, should be 284

Basic block 84 prev 83, next 85, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  83 [50.0%]  (fallthru)
Successors:  85 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Invalid sum of incoming frequencies 142, should be 284

Basic block 85 prev 84, next 86, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  84 [100.0%]  (fallthru) 83 [50.0%] 
Successors:  86 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Invalid sum of incoming frequencies 426, should be 284

Basic block 86 prev 85, next 87, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  85 [100.0%]  (fallthru) 82 [33.3%] 
Successors:  87 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

Basic block 87 prev 86, next 88, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  86 [100.0%]  (fallthru) 81 [25.0%] 
Successors:  88 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

Basic block 88 prev 87, next 89, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  87 [100.0%]  (fallthru) 80 [20.0%] 
Successors:  89 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

Basic block 89 prev 88, next 90, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  88 [100.0%]  (fallthru) 79 [16.7%] 
Successors:  90 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

Basic block 90 prev 89, next 91, loop_depth 1, count 0, freq 284, maybe hot.
Predecessors:  89 [100.0%]  (fallthru) 78 [14.3%] 
Successors:  91 [90.0%]  (fallthru,dfs_back) 59 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

Basic block 91 prev 90, next 92, loop_depth 2, count 0, freq 320, maybe hot.
Predecessors:  90 [90.0%]  (fallthru,dfs_back) 92 [100.0%]  77 [12.5%] 
Successors:  92 [90.0%]  (fallthru,dfs_back) 59 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Invalid sum of incoming frequencies 574, should be 320

Basic block 92 prev 91, next 93, loop_depth 2, count 0, freq 288, maybe hot.
Predecessors:  91 [90.0%]  (fallthru,dfs_back)
Successors:  91 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

Basic block 93 prev 92, next 94, loop_depth 1, count 0, freq 1000, maybe hot.
Predecessors:  10 [90.0%] 
Successors:  94 [90.0%]  (fallthru,dfs_back) 13 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

Basic block 94 prev 93, next 95, loop_depth 1, count 0, freq 771, maybe hot.
Predecessors:  93 [90.0%]  (fallthru,dfs_back)
Successors:  95 [87.5%]  (fallthru) 108 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
Invalid sum of incoming frequencies 900, should be 771

Basic block 95 prev 94, next 96, loop_depth 1, count 0, freq 750, maybe hot.
Predecessors:  94 [87.5%]  (fallthru)
Successors:  96 [85.7%]  (fallthru) 107 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

Basic block 96 prev 95, next 97, loop_depth 1, count 0, freq 720, maybe hot.
Predecessors:  95 [85.7%]  (fallthru)
Successors:  97 [83.3%]  (fallthru) 106 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

Basic block 97 prev 96, next 98, loop_depth 1, count 0, freq 675, maybe hot.
Predecessors:  96 [83.3%]  (fallthru)
Successors:  98 [80.0%]  (fallthru) 105 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

Basic block 98 prev 97, next 99, loop_depth 1, count 0, freq 600, maybe hot.
Predecessors:  97 [80.0%]  (fallthru)
Successors:  99 [75.0%]  (fallthru) 104 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

Basic block 99 prev 98, next 100, loop_depth 1, count 0, freq 450, maybe hot.
Predecessors:  98 [75.0%]  (fallthru)
Successors:  100 [66.7%]  (fallthru) 103 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

Basic block 100 prev 99, next 101, loop_depth 1, count 0, freq 900, maybe hot.
Predecessors:  99 [66.7%]  (fallthru)
Successors:  101 [50.0%]  (fallthru) 102 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 144 145 146 148
Invalid sum of incoming frequencies 300, should be 900

Basic block 101 prev 100, next 102, loop_depth 1, count 0, freq 900, maybe hot.
Predecessors:  100 [50.0%]  (fallthru)
Successors:  102 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 144 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Invalid sum of incoming frequencies 450, should be 900

Basic block 102 prev 101, next 103, loop_depth 1, count 0, freq 900, maybe hot.
Predecessors:  101 [100.0%]  (fallthru) 100 [50.0%] 
Successors:  103 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Invalid sum of incoming frequencies 1350, should be 900

Basic block 103 prev 102, next 104, loop_depth 1, count 0, freq 900, maybe hot.
Predecessors:  102 [100.0%]  (fallthru) 99 [33.3%] 
Successors:  104 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Invalid sum of incoming frequencies 1050, should be 900

Basic block 104 prev 103, next 105, loop_depth 1, count 0, freq 900, maybe hot.
Predecessors:  103 [100.0%]  (fallthru) 98 [25.0%] 
Successors:  105 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Invalid sum of incoming frequencies 1050, should be 900

Basic block 105 prev 104, next 106, loop_depth 1, count 0, freq 900, maybe hot.
Predecessors:  104 [100.0%]  (fallthru) 97 [20.0%] 
Successors:  106 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Invalid sum of incoming frequencies 1035, should be 900

Basic block 106 prev 105, next 107, loop_depth 1, count 0, freq 900, maybe hot.
Predecessors:  105 [100.0%]  (fallthru) 96 [16.7%] 
Successors:  107 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Invalid sum of incoming frequencies 1020, should be 900

Basic block 107 prev 106, next 108, loop_depth 1, count 0, freq 900, maybe hot.
Predecessors:  106 [100.0%]  (fallthru) 95 [14.3%] 
Successors:  108 [90.0%]  (fallthru,dfs_back) 13 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Invalid sum of incoming frequencies 1007, should be 900

Basic block 108 prev 107, next 109, loop_depth 2, count 0, freq 1013, maybe hot.
Predecessors:  107 [90.0%]  (fallthru,dfs_back) 109 [100.0%]  94 [12.5%] 
Successors:  109 [90.0%]  (fallthru,dfs_back) 13 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 109 prev 108, next -2, loop_depth 2, count 0, freq 911, maybe hot.
Predecessors:  108 [90.0%]  (fallthru,dfs_back)
Successors:  108 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148

;; Register 95 in 0.
;; Register 99 in 0.
;; Register 100 in 0.
;; Register 102 in 0.
;; Register 103 in 21.
;; Register 104 in 0.
;; Register 105 in 1.
;; Register 107 in 0.
;; Register 109 in 0.
;; Register 143 in 1.
;; Register 147 in 0.
;; Register 151 in 0.
;; Register 153 in 1.
;; Register 155 in 0.
;; Register 157 in 1.
;; Register 159 in 0.
;; Register 161 in 1.
;; Register 163 in 0.
;; Register 165 in 1.
;; Register 167 in 0.
;; Register 169 in 1.
;; Register 171 in 0.
;; Register 173 in 1.
;; Register 175 in 0.
;; Register 179 in 0.
;; Register 183 in 0.
;; Register 187 in 0.
;; Register 191 in 0.
;; Register 195 in 0.
;; Register 199 in 0.
;; Register 203 in 0.
;; Register 207 in 0.
;; Register 210 in 0.
;; Register 213 in 0.
;; Register 216 in 0.
;; Register 219 in 0.
;; Register 222 in 0.
;; Register 225 in 0.
;; Register 228 in 0.
;; Register 231 in 0.
;; Register 236 in 0.
;; Register 237 in 1.
;; Register 241 in 0.
;; Register 242 in 1.
;; Register 246 in 0.
;; Register 247 in 1.
;; Register 251 in 0.
;; Register 252 in 1.
;; Register 256 in 0.
;; Register 257 in 1.
;; Register 261 in 0.
;; Register 262 in 1.
;; Register 266 in 0.
;; Register 267 in 1.
;; Register 271 in 0.
;; Register 272 in 1.
;; Register 290 in 0.
;; Register 291 in 1.
;; Register 293 in 0.
;; Register 294 in 1.
;; Register 296 in 0.
;; Register 297 in 1.
;; Register 299 in 0.
;; Register 300 in 1.
;; Register 302 in 0.
;; Register 303 in 1.
;; Register 305 in 0.
;; Register 306 in 1.
;; Register 308 in 0.
;; Register 309 in 1.
;; Register 310 in 0.
;; Register 311 in 0.
;; Register 312 in 0.
;; Register 313 in 0.
;; Register 314 in 0.
;; Register 315 in 0.
;; Register 316 in 0.
;; Register 317 in 0.
;; Register 318 in 0.
;; Register 319 in 0.
;; Register 320 in 0.
;; Register 321 in 0.
;; Register 322 in 0.
;; Register 323 in 0.
;; Register 324 in 0.
;; Register 325 in 0.
;; Register 326 in 0.
;; Register 327 in 0.
;; Register 328 in 0.
;; Register 329 in 0.
;; Register 330 in 0.
(note:HI 1 0 9 ("./CStatUtilities.c") 262)

;; Start of basic block 0, registers live: 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 9 1 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 4 9 5 0 ./CStatUtilities.c:262 (set (reg/v/f:DI 92 [ m ])
        (reg:DI 5 di [ m ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ m ])
        (nil)))

(insn:HI 5 4 6 0 ./CStatUtilities.c:262 (set (reg/v:SI 93 [ nrows ])
        (reg:SI 4 si [ nrows ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ nrows ])
        (nil)))

(insn:HI 6 5 7 0 ./CStatUtilities.c:262 (set (reg/v:SI 94 [ ncols ])
        (reg:SI 1 dx [ ncols ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 1 dx [ ncols ])
        (nil)))

(note:HI 7 6 11 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 11 7 12 0 ("./CStatUtilities.c") 265)

(insn:HI 12 11 13 0 ./CStatUtilities.c:265 (set (reg:DI 95 [ ncols ])
        (sign_extend:DI (reg/v:SI 94 [ ncols ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 6 (nil))
    (nil))

(insn:HI 13 12 14 0 ./CStatUtilities.c:265 (parallel [
            (set (reg:DI 90 [ D.5383 ])
                (ashift:DI (reg:DI 95 [ ncols ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 95 [ ncols ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 14 13 15 0 ./CStatUtilities.c:265 (set (reg:DI 5 di [ D.5383 ])
        (reg:DI 90 [ D.5383 ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 13 (nil))
    (nil))

(call_insn:HI 15 14 16 0 ./CStatUtilities.c:265 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b4e9c47b400 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ D.5383 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.5383 ]))
        (nil)))

(insn:HI 16 15 18 0 ./CStatUtilities.c:265 (set (reg/f:DI 67 [ ivtmp.545 ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 96)
            (nil))))

(note:HI 18 16 19 0 ("./CStatUtilities.c") 266)

(insn:HI 19 18 20 0 ./CStatUtilities.c:266 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 67 [ ivtmp.545 ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 16 (nil))
    (nil))

(jump_insn:HI 20 19 22 0 ./CStatUtilities.c:266 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 19 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 90 92 93 94

;; Start of basic block 1, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 22 20 23 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 23 22 24 1 ./CStatUtilities.c:266 (set (reg:SI 2 cx)
        (const_int 266 [0x10a])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 24 23 25 1 ./CStatUtilities.c:266 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2] <string_cst 0x2b4e9cb78440>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 25 24 26 1 ./CStatUtilities.c:266 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2] <string_cst 0x2b4e9c8c93f0>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 26 25 27 1 ./CStatUtilities.c:266 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b4e9c5c1e70 stderr>) [17 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 27 26 28 1 ./CStatUtilities.c:266 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 28 27 29 1 ./CStatUtilities.c:266 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b4e9c45e700 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 23 (insn_list:REG_DEP_TRUE 24 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_TRUE 27 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 29 28 30 1 ./CStatUtilities.c:266 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 30 29 31 1 ./CStatUtilities.c:266 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b4e9c475100 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 29 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 1, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 31 30 32)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 90 92 93 94
(code_label:HI 32 31 33 2 446 "" [1 uses])

(note:HI 33 32 34 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 34 33 35 2 ("./CStatUtilities.c") 269)

(insn:HI 35 34 36 2 ./CStatUtilities.c:269 (set (reg:DI 5 di [ D.5383 ])
        (reg:DI 90 [ D.5383 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 90 [ D.5383 ])
        (nil)))

(call_insn:HI 36 35 37 2 ./CStatUtilities.c:269 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b4e9c47b400 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 35 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ D.5383 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.5383 ]))
        (nil)))

(insn:HI 37 36 39 2 ./CStatUtilities.c:269 (set (reg/f:DI 97)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 36 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 97)
            (nil))))

(note:HI 39 37 40 2 ("./CStatUtilities.c") 270)

(insn:HI 40 39 41 2 ./CStatUtilities.c:270 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97)
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 37 (nil))
    (nil))

(jump_insn:HI 41 40 44 2 ./CStatUtilities.c:270 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 40 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 92 93 94 97

(note:HI 44 41 43 ("./CStatUtilities.c") 265)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 92 93 94 97
(note:HI 43 44 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 45 43 46 3 ./CStatUtilities.c:265 (set (reg/v/f:DI 84 [ t ])
        (reg/f:DI 67 [ ivtmp.545 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 46 45 48 3 ("./CStatUtilities.c") 269)

(note:HI 48 46 49 3 ("./CStatUtilities.c") 273)

(insn:HI 49 48 50 3 ./CStatUtilities.c:273 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ ncols ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 50 49 1836 3 ./CStatUtilities.c:273 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 49 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9667 [0x25c3])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 92 93 94 97

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97
(note:HI 1836 50 1837 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1837 1836 1838 4 (set (pc)
        (label_ref 165)) 548 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97

(barrier:HI 1838 1837 54)

;; Start of basic block 5, registers live: 7 [sp] 16 [argp] 20 [frame]
(code_label:HI 54 1838 55 5 448 "" [1 uses])

(note:HI 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 56 55 57 5 ("./CStatUtilities.c") 270)

(insn:HI 57 56 58 5 ./CStatUtilities.c:270 (set (reg:SI 2 cx)
        (const_int 270 [0x10e])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 58 57 59 5 ./CStatUtilities.c:270 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2] <string_cst 0x2b4e9cb78440>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 59 58 60 5 ./CStatUtilities.c:270 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2] <string_cst 0x2b4e9c8c93f0>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 60 59 61 5 ./CStatUtilities.c:270 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b4e9c5c1e70 stderr>) [17 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 61 60 62 5 ./CStatUtilities.c:270 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 62 61 63 5 ./CStatUtilities.c:270 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b4e9c45e700 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 57 (insn_list:REG_DEP_TRUE 58 (insn_list:REG_DEP_TRUE 59 (insn_list:REG_DEP_TRUE 60 (insn_list:REG_DEP_TRUE 61 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 63 62 64 5 ./CStatUtilities.c:270 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 64 63 65 5 ./CStatUtilities.c:270 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b4e9c475100 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 63 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 5, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 65 64 66)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 92 93 94 97
(code_label:HI 66 65 67 6 450 "" [1 uses])

(note:HI 67 66 68 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 68 67 69 6 ./CStatUtilities.c:270 (set (reg:DI 79 [ pretmp.465 ])
        (sign_extend:DI (reg/v:SI 93 [ nrows ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 69 68 70 6 ./CStatUtilities.c:270 (parallel [
            (set (reg:DI 78 [ pretmp.466 ])
                (ashift:DI (reg:DI 79 [ pretmp.465 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 68 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 70 69 71 6 ("./CStatUtilities.c") 277)

(insn:HI 71 70 72 6 ./CStatUtilities.c:277 (parallel [
            (set (reg:DI 87 [ D.5398 ])
                (ashift:DI (reg:DI 79 [ pretmp.465 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 72 71 73 6 ./CStatUtilities.c:277 (set (reg/v:SI 60 [ col.561 ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 73 72 302 6 ./CStatUtilities.c:277 (set (reg:DI 70 [ ivtmp.539 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97

(note:HI 302 73 74 NOTE_INSN_LOOP_BEG)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
(code_label:HI 74 302 75 7 452 "" [1 uses])

(note:HI 75 74 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 76 75 77 7 ("./CStatUtilities.c") 275)

(insn:HI 77 76 78 7 ./CStatUtilities.c:275 (set (reg:DI 5 di [ pretmp.466 ])
        (reg:DI 78 [ pretmp.466 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 78 77 79 7 ./CStatUtilities.c:275 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b4e9c47b400 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 77 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ pretmp.466 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ pretmp.466 ]))
        (nil)))

(insn:HI 79 78 81 7 ./CStatUtilities.c:275 (set (reg/f:DI 109)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 78 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 98)
            (nil))))

(note:HI 81 79 83 7 ("./CStatUtilities.c") 262)

(note:HI 83 81 84 7 ("./CStatUtilities.c") 275)

(insn:HI 84 83 85 7 ./CStatUtilities.c:275 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 70 [ ivtmp.539 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 67 [ ivtmp.545 ])) [24 S8 A64])
        (reg/f:DI 109)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 79 (nil))
    (nil))

(note:HI 85 84 86 7 ("./CStatUtilities.c") 276)

(insn:HI 86 85 87 7 ./CStatUtilities.c:276 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 109)
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))

(jump_insn:HI 87 86 89 7 ./CStatUtilities.c:276 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 86 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97

;; Start of basic block 8, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 89 87 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 90 89 91 8 ./CStatUtilities.c:276 (set (reg:SI 2 cx)
        (const_int 276 [0x114])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 91 90 92 8 ./CStatUtilities.c:276 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2] <string_cst 0x2b4e9cb78440>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 92 91 93 8 ./CStatUtilities.c:276 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2] <string_cst 0x2b4e9c8c93f0>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 93 92 94 8 ./CStatUtilities.c:276 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b4e9c5c1e70 stderr>) [17 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 94 93 95 8 ./CStatUtilities.c:276 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 95 94 96 8 ./CStatUtilities.c:276 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b4e9c45e700 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 90 (insn_list:REG_DEP_TRUE 91 (insn_list:REG_DEP_TRUE 92 (insn_list:REG_DEP_TRUE 93 (insn_list:REG_DEP_TRUE 94 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 96 95 97 8 ./CStatUtilities.c:276 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 97 96 98 8 ./CStatUtilities.c:276 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b4e9c475100 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 96 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 8, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 98 97 99)

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
(code_label:HI 99 98 100 9 453 "" [1 uses])

(note:HI 100 99 101 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note:HI 101 100 102 9 ("./CStatUtilities.c") 277)

(insn:HI 102 101 103 9 ./CStatUtilities.c:277 (set (reg:DI 5 di [ D.5398 ])
        (reg:DI 87 [ D.5398 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 103 102 104 9 ./CStatUtilities.c:277 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b4e9c47b400 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 102 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ D.5398 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ D.5398 ]))
        (nil)))

(insn:HI 104 103 106 9 ./CStatUtilities.c:277 (set (reg/f:DI 99)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 103 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 99)
            (nil))))

(note:HI 106 104 108 9 ("./CStatUtilities.c") 262)

(note:HI 108 106 109 9 ("./CStatUtilities.c") 277)

(insn:HI 109 108 110 9 ./CStatUtilities.c:277 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 70 [ ivtmp.539 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [25 S8 A64])
        (reg/f:DI 99)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 104 (nil))
    (nil))

(note:HI 110 109 111 9 ("./CStatUtilities.c") 278)

(insn:HI 111 110 112 9 ./CStatUtilities.c:278 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99)
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))

(jump_insn:HI 112 111 115 9 ./CStatUtilities.c:278 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 111 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 100 [0x64])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97

(note:HI 115 112 114 ("./CStatUtilities.c") 280)

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
(note:HI 114 115 116 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 116 114 117 10 ./CStatUtilities.c:280 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 93 [ nrows ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 117 116 120 10 ./CStatUtilities.c:280 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 116 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
(note:HI 120 117 317 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 317 120 1839 11 (set (reg/f:DI 144)
        (mem/f:DI (plus:DI (mult:DI (reg:DI 70 [ ivtmp.539 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 67 [ ivtmp.545 ])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn:HI 1839 317 1840 11 (set (pc)
        (label_ref 151)) 548 {jump} (nil)
    (nil))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144

(barrier:HI 1840 1839 121)

;; Start of basic block 12, registers live: 7 [sp] 16 [argp] 20 [frame]
(code_label:HI 121 1840 122 12 455 "" [1 uses])

(note:HI 122 121 123 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 123 122 124 12 ("./CStatUtilities.c") 278)

(insn:HI 124 123 125 12 ./CStatUtilities.c:278 (set (reg:SI 2 cx)
        (const_int 278 [0x116])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 125 124 126 12 ./CStatUtilities.c:278 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2] <string_cst 0x2b4e9cb78440>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 126 125 127 12 ./CStatUtilities.c:278 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2] <string_cst 0x2b4e9c8c93f0>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 127 126 128 12 ./CStatUtilities.c:278 (set (reg:DI 5 di [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b4e9c5c1e70 stderr>) [17 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 128 127 129 12 ./CStatUtilities.c:278 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(call_insn:HI 129 128 130 12 ./CStatUtilities.c:278 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fprintf") [flags 0x41] <function_decl 0x2b4e9c45e700 fprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 124 (insn_list:REG_DEP_TRUE 125 (insn_list:REG_DEP_TRUE 126 (insn_list:REG_DEP_TRUE 127 (insn_list:REG_DEP_TRUE 128 (nil))))))
    (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di [ stderr ])
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ stderr ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn:HI 130 129 131 12 ./CStatUtilities.c:278 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 131 130 132 12 ./CStatUtilities.c:278 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b4e9c475100 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 130 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 12, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 132 131 300)

(note:HI 300 132 301 NOTE_INSN_LOOP_BEG)

(note:HI 301 300 151 NOTE_INSN_LOOP_END)

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144
(code_label:HI 151 301 152 13 458 "" [4 uses])

(note:HI 152 151 153 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 153 152 155 13 ("./CStatUtilities.c") 287)

(insn:HI 155 153 156 13 ./CStatUtilities.c:287 (set (reg:DI 2 cx)
        (symbol_ref:DI ("compareIndexedData") [flags 0x3] <function_decl 0x2b4e9c7f9700 compareIndexedData>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 156 155 157 13 ./CStatUtilities.c:287 (set (reg:DI 1 dx)
        (const_int 16 [0x10])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 157 156 158 13 ./CStatUtilities.c:287 (set (reg:DI 4 si [ pretmp.465 ])
        (reg:DI 79 [ pretmp.465 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 158 157 159 13 ./CStatUtilities.c:287 (set (reg:DI 5 di)
        (reg/f:DI 144)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 144)
        (nil)))

(call_insn:HI 159 158 160 13 ./CStatUtilities.c:287 (call (mem:QI (symbol_ref:DI ("qsort") [flags 0x41] <function_decl 0x2b4e9c73d700 qsort>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 155 (insn_list:REG_DEP_TRUE 156 (insn_list:REG_DEP_TRUE 157 (insn_list:REG_DEP_TRUE 158 (nil)))))
    (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_DEAD (reg:DI 4 si [ pretmp.465 ])
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si [ pretmp.465 ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(note:HI 160 159 161 13 ("./CStatUtilities.c") 273)

(insn:HI 161 160 162 13 ./CStatUtilities.c:273 (parallel [
            (set (reg/v:SI 60 [ col.561 ])
                (plus:SI (reg/v:SI 60 [ col.561 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 162 161 163 13 ./CStatUtilities.c:273 (parallel [
            (set (reg:DI 70 [ ivtmp.539 ])
                (plus:DI (reg:DI 70 [ ivtmp.539 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 163 162 164 13 ./CStatUtilities.c:273 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 60 [ col.561 ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 161 (nil))
    (nil))

(jump_insn:HI 164 163 303 13 ./CStatUtilities.c:273 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 74)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 163 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9667 [0x25c3])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97

(note:HI 303 164 165 NOTE_INSN_LOOP_END)

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97
(code_label:HI 165 303 166 14 451 "" [1 uses])

(note:HI 166 165 167 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 167 166 172 14 ("./CStatUtilities.c") 293)

(insn:HI 172 167 173 14 ./CStatUtilities.c:293 (set (reg/v:SI 65 [ row.550 ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 173 172 168 14 ./CStatUtilities.c:293 (set (reg:DI 73 [ ivtmp.529 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 168 173 169 14 ./CStatUtilities.c:293 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 93 [ nrows ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 169 168 1962 14 ./CStatUtilities.c:293 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 210)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 168 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97
(note:HI 1962 169 1963 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1963 1962 1964 15 (set (pc)
        (label_ref 223)) 548 {jump} (nil)
    (nil))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97

(barrier:HI 1964 1963 304)

(note:HI 304 1964 308 NOTE_INSN_LOOP_BEG)

(note:HI 308 304 305 NOTE_INSN_LOOP_BEG)

(note:HI 305 308 306 NOTE_INSN_LOOP_END)

(note:HI 306 305 307 NOTE_INSN_LOOP_BEG)

(note:HI 307 306 203 NOTE_INSN_LOOP_END)

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97
(code_label:HI 203 307 204 16 466 "" [4 uses])

(note:HI 204 203 205 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 205 204 206 16 ("./CStatUtilities.c") 293)

(insn:HI 206 205 207 16 ./CStatUtilities.c:293 (parallel [
            (set (reg/v:SI 65 [ row.550 ])
                (plus:SI (reg/v:SI 65 [ row.550 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 207 206 208 16 ./CStatUtilities.c:293 (parallel [
            (set (reg:DI 73 [ ivtmp.529 ])
                (plus:DI (reg:DI 73 [ ivtmp.529 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 208 207 209 16 ./CStatUtilities.c:293 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 65 [ row.550 ])
            (reg/v:SI 93 [ nrows ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 206 (nil))
    (nil))

(jump_insn:HI 209 208 210 16 ./CStatUtilities.c:293 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 223)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 208 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97
(code_label:HI 210 209 211 17 462 "" [1 uses])

(note:HI 211 210 212 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 212 211 213 17 ("./CStatUtilities.c") 297)

(insn:HI 213 212 214 17 ./CStatUtilities.c:297 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 94 [ ncols ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 214 213 1924 17 ./CStatUtilities.c:297 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 203)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 213 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97
(note:HI 1924 214 1926 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1926 1924 1927 18 (set (pc)
        (label_ref 1925)) 548 {jump} (nil)
    (nil))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97

(barrier:HI 1927 1926 309)

(note:HI 309 1927 223 76 NOTE_INSN_LOOP_END)

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 93 94 97
(code_label:HI 223 309 224 19 460 "" [2 uses])

(note:HI 224 223 225 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 225 224 230 19 ("./CStatUtilities.c") 307)

(insn:HI 230 225 231 19 ./CStatUtilities.c:307 (set (reg/v:SI 63 [ col.558 ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 231 230 226 19 ./CStatUtilities.c:307 (set (reg:DI 75 [ ivtmp.511 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 226 231 227 19 ./CStatUtilities.c:307 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ ncols ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 227 226 1965 19 ./CStatUtilities.c:307 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 253)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 226 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97
(note:HI 1965 227 1966 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1966 1965 1967 20 (set (pc)
        (label_ref 279)) 548 {jump} (nil)
    (nil))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97

(barrier:HI 1967 1966 310)

(note:HI 310 1967 312 NOTE_INSN_LOOP_BEG)

(note:HI 312 310 311 NOTE_INSN_LOOP_BEG)

(note:HI 311 312 246 NOTE_INSN_LOOP_END)

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97
(code_label:HI 246 311 247 21 472 "" [4 uses])

(note:HI 247 246 248 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note:HI 248 247 249 21 ("./CStatUtilities.c") 307)

(insn:HI 249 248 250 21 ./CStatUtilities.c:307 (parallel [
            (set (reg/v:SI 63 [ col.558 ])
                (plus:SI (reg/v:SI 63 [ col.558 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 250 249 251 21 ./CStatUtilities.c:307 (parallel [
            (set (reg:DI 75 [ ivtmp.511 ])
                (plus:DI (reg:DI 75 [ ivtmp.511 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 251 250 252 21 ./CStatUtilities.c:307 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 63 [ col.558 ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 249 (nil))
    (nil))

(jump_insn:HI 252 251 253 21 ./CStatUtilities.c:307 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 266)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 251 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97
(code_label:HI 253 252 254 22 470 "" [1 uses])

(note:HI 254 253 255 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note:HI 255 254 256 22 ("./CStatUtilities.c") 309)

(insn:HI 256 255 257 22 ./CStatUtilities.c:309 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 93 [ nrows ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 257 256 1928 22 ./CStatUtilities.c:309 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref 246)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 256 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97
(note:HI 1928 257 1930 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1930 1928 1931 23 (set (pc)
        (label_ref 1929)) 548 {jump} (nil)
    (nil))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97

(barrier:HI 1931 1930 260)

(note:HI 260 1931 313 ("./CStatUtilities.c") 311)

(note:HI 313 260 314 42 NOTE_INSN_LOOP_END)

(note:HI 314 313 315 NOTE_INSN_LOOP_BEG)

(note:HI 315 314 279 NOTE_INSN_LOOP_END)

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 97
(code_label:HI 279 315 280 24 468 "" [4 uses])

(note:HI 280 279 281 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note:HI 281 280 282 24 ("./CStatUtilities.c") 318)

(insn:HI 282 281 283 24 ./CStatUtilities.c:318 (set (reg:DI 5 di [ t ])
        (reg/v/f:DI 84 [ t ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 84 [ t ])
        (nil)))

(call_insn:HI 283 282 287 24 ./CStatUtilities.c:318 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 282 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ t ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ t ]))
        (nil)))

(note:HI 287 283 288 24 NOTE_INSN_FUNCTION_END)

(note:HI 288 287 290 24 ("./CStatUtilities.c") 321)

(insn:HI 290 288 296 24 ./CStatUtilities.c:321 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 97)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))

(insn:HI 296 290 266 24 ./CStatUtilities.c:321 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 290 (nil))
    (nil))
;; End of basic block 24, registers live:
 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97
(code_label:HI 266 296 267 25 473 "" [1 uses])

(note:HI 267 266 356 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note:HI 356 267 357 25 NOTE_INSN_DELETED)

(insn:HI 357 356 358 25 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg/v:SI 94 [ ncols ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 358 357 361 25 (parallel [
            (set (reg:SI 120)
                (and:SI (reg:SI 120)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 357 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 361 358 362 25 ("./CStatUtilities.c") 317)

(insn:HI 362 361 363 25 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 67 [ ivtmp.545 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 363 362 364 25 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 362 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 364 363 365 25 ("./CStatUtilities.c") 316)

(insn:HI 365 364 366 25 ./CStatUtilities.c:316 (set (reg/v:SI 273 [ col ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 366 365 367 25 ./CStatUtilities.c:316 (parallel [
            (set (reg/f:DI 274 [ ivtmp.545 ])
                (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 367 366 368 25 ./CStatUtilities.c:316 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 273 [ col ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 365 (nil))
    (nil))

(jump_insn:HI 368 367 515 25 ./CStatUtilities.c:316 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 279)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 367 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
(note:HI 515 368 513 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:HI 513 515 514 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 514 513 495 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 269)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 513 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
(note:HI 495 514 493 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:HI 493 495 494 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 494 493 475 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1932)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 493 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
(note:HI 475 494 473 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:HI 473 475 474 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 474 473 455 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1933)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 473 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
(note:HI 455 474 453 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:HI 453 455 454 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 454 453 435 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1934)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 453 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
(note:HI 435 454 433 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn:HI 433 435 434 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 434 433 415 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1935)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 433 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
(note:HI 415 434 413 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:HI 413 415 414 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 414 413 395 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1936)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 413 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 120 273 274
(note:HI 395 414 393 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:HI 393 395 394 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 120)
        (nil)))

(jump_insn:HI 394 393 385 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1937)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 393 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97 273 274

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 84 94 97
(note:HI 385 394 377 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note:HI 377 385 378 33 ("./CStatUtilities.c") 317)

(insn:HI 378 377 379 33 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                (const_int 8 [0x8])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 379 378 380 33 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 378 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 380 379 381 33 ("./CStatUtilities.c") 316)

(insn:HI 381 380 382 33 ./CStatUtilities.c:316 (set (reg/v:SI 273 [ col ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 382 381 1937 33 ./CStatUtilities.c:316 (parallel [
            (set (reg/f:DI 274 [ ivtmp.545 ])
                (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 67 [ ivtmp.545 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
(code_label:HI 1937 382 405 34 617 "" [1 uses])

(note:HI 405 1937 397 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note:HI 397 405 398 34 ("./CStatUtilities.c") 317)

(insn:HI 398 397 399 34 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 274 [ ivtmp.545 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 399 398 400 34 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 398 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 400 399 401 34 ("./CStatUtilities.c") 316)

(insn:HI 401 400 402 34 ./CStatUtilities.c:316 (parallel [
            (set (reg/v:SI 273 [ col ])
                (plus:SI (reg/v:SI 273 [ col ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 402 401 1936 34 ./CStatUtilities.c:316 (parallel [
            (set (reg/f:DI 274 [ ivtmp.545 ])
                (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
(code_label:HI 1936 402 425 35 616 "" [1 uses])

(note:HI 425 1936 417 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note:HI 417 425 418 35 ("./CStatUtilities.c") 317)

(insn:HI 418 417 419 35 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 274 [ ivtmp.545 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 419 418 420 35 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 418 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 420 419 421 35 ("./CStatUtilities.c") 316)

(insn:HI 421 420 422 35 ./CStatUtilities.c:316 (parallel [
            (set (reg/v:SI 273 [ col ])
                (plus:SI (reg/v:SI 273 [ col ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 422 421 1935 35 ./CStatUtilities.c:316 (parallel [
            (set (reg/f:DI 274 [ ivtmp.545 ])
                (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
(code_label:HI 1935 422 445 36 615 "" [1 uses])

(note:HI 445 1935 437 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note:HI 437 445 438 36 ("./CStatUtilities.c") 317)

(insn:HI 438 437 439 36 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 274 [ ivtmp.545 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 439 438 440 36 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 438 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 440 439 441 36 ("./CStatUtilities.c") 316)

(insn:HI 441 440 442 36 ./CStatUtilities.c:316 (parallel [
            (set (reg/v:SI 273 [ col ])
                (plus:SI (reg/v:SI 273 [ col ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 442 441 1934 36 ./CStatUtilities.c:316 (parallel [
            (set (reg/f:DI 274 [ ivtmp.545 ])
                (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
(code_label:HI 1934 442 465 37 614 "" [1 uses])

(note:HI 465 1934 457 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note:HI 457 465 458 37 ("./CStatUtilities.c") 317)

(insn:HI 458 457 459 37 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 274 [ ivtmp.545 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 459 458 460 37 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 458 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 460 459 461 37 ("./CStatUtilities.c") 316)

(insn:HI 461 460 462 37 ./CStatUtilities.c:316 (parallel [
            (set (reg/v:SI 273 [ col ])
                (plus:SI (reg/v:SI 273 [ col ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 462 461 1933 37 ./CStatUtilities.c:316 (parallel [
            (set (reg/f:DI 274 [ ivtmp.545 ])
                (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
(code_label:HI 1933 462 485 38 613 "" [1 uses])

(note:HI 485 1933 477 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(note:HI 477 485 478 38 ("./CStatUtilities.c") 317)

(insn:HI 478 477 479 38 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 274 [ ivtmp.545 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 479 478 480 38 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 478 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 480 479 481 38 ("./CStatUtilities.c") 316)

(insn:HI 481 480 482 38 ./CStatUtilities.c:316 (parallel [
            (set (reg/v:SI 273 [ col ])
                (plus:SI (reg/v:SI 273 [ col ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 482 481 1932 38 ./CStatUtilities.c:316 (parallel [
            (set (reg/f:DI 274 [ ivtmp.545 ])
                (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
(code_label:HI 1932 482 505 39 612 "" [1 uses])

(note:HI 505 1932 497 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note:HI 497 505 498 39 ("./CStatUtilities.c") 317)

(insn:HI 498 497 499 39 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 274 [ ivtmp.545 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 499 498 500 39 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 498 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 500 499 501 39 ("./CStatUtilities.c") 316)

(insn:HI 501 500 502 39 ./CStatUtilities.c:316 (parallel [
            (set (reg/v:SI 273 [ col ])
                (plus:SI (reg/v:SI 273 [ col ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 502 501 503 39 ./CStatUtilities.c:316 (parallel [
            (set (reg/f:DI 274 [ ivtmp.545 ])
                (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 503 502 504 39 ./CStatUtilities.c:316 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 273 [ col ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 501 (nil))
    (nil))

(jump_insn:HI 504 503 269 39 ./CStatUtilities.c:316 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 279)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 503 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
(code_label:HI 269 504 270 40 475 "" [2 uses])

(note:HI 270 269 271 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(note:HI 271 270 272 40 ("./CStatUtilities.c") 317)

(insn:HI 272 271 273 40 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 274 [ ivtmp.545 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 273 272 274 40 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 272 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 274 273 517 40 ("./CStatUtilities.c") 316)

(note:HI 517 274 518 40 ("./CStatUtilities.c") 317)

(insn:HI 518 517 519 40 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                (const_int 8 [0x8])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 519 518 520 40 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 518 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 520 519 532 40 ("./CStatUtilities.c") 316)

(note:HI 532 520 533 40 ("./CStatUtilities.c") 317)

(insn:HI 533 532 534 40 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                (const_int 16 [0x10])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 534 533 535 40 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 533 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 535 534 547 40 ("./CStatUtilities.c") 316)

(note:HI 547 535 548 40 ("./CStatUtilities.c") 317)

(insn:HI 548 547 549 40 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                (const_int 24 [0x18])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 549 548 550 40 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 548 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 550 549 562 40 ("./CStatUtilities.c") 316)

(note:HI 562 550 563 40 ("./CStatUtilities.c") 317)

(insn:HI 563 562 564 40 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                (const_int 32 [0x20])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 564 563 565 40 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 563 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 565 564 577 40 ("./CStatUtilities.c") 316)

(note:HI 577 565 578 40 ("./CStatUtilities.c") 317)

(insn:HI 578 577 579 40 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                (const_int 40 [0x28])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 579 578 580 40 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 578 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 580 579 592 40 ("./CStatUtilities.c") 316)

(note:HI 592 580 593 40 ("./CStatUtilities.c") 317)

(insn:HI 593 592 594 40 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                (const_int 48 [0x30])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 594 593 595 40 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 593 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 595 594 607 40 ("./CStatUtilities.c") 316)

(note:HI 607 595 608 40 ("./CStatUtilities.c") 317)

(insn:HI 608 607 609 40 ./CStatUtilities.c:317 (set (reg:DI 5 di)
        (mem/f:DI (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                (const_int 56 [0x38])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 609 608 610 40 ./CStatUtilities.c:317 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 608 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(note:HI 610 609 611 40 ("./CStatUtilities.c") 316)

(insn:HI 611 610 612 40 ./CStatUtilities.c:316 (parallel [
            (set (reg/v:SI 273 [ col ])
                (plus:SI (reg/v:SI 273 [ col ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 612 611 613 40 ./CStatUtilities.c:316 (parallel [
            (set (reg/f:DI 274 [ ivtmp.545 ])
                (plus:DI (reg/f:DI 274 [ ivtmp.545 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 613 612 614 40 ./CStatUtilities.c:316 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 273 [ col ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 611 (nil))
    (nil))

(jump_insn:HI 614 613 619 40 ./CStatUtilities.c:316 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 279)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 613 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274
(note:HI 619 614 1902 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1902 619 1903 41 (set (pc)
        (label_ref 269)) 548 {jump} (nil)
    (nil))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 94 97 273 274

(barrier:HI 1903 1902 1929)

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 84 93 94 97
(code_label:HI 1929 1903 259 42 611 "" [1 uses])

(note:HI 259 1929 261 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:HI 261 259 262 42 ./CStatUtilities.c:311 (set (reg:DI 85 [ D.5401 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 75 [ ivtmp.511 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 97)) [25 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 262 261 637 42 ./CStatUtilities.c:311 (parallel [
            (set (reg:DI 269 [ ivtmp.507 ])
                (plus:DI (mem/f:DI (plus:DI (mult:DI (reg:DI 75 [ ivtmp.511 ])
                                (const_int 8 [0x8]))
                            (reg/f:DI 67 [ ivtmp.545 ])) [24 S8 A64])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 637 262 638 42 NOTE_INSN_DELETED)

(insn:HI 638 637 639 42 (parallel [
            (set (reg:SI 125)
                (plus:SI (reg/v:SI 93 [ nrows ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 639 638 642 42 (parallel [
            (set (reg:SI 125)
                (and:SI (reg:SI 125)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 638 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 642 639 643 42 ("./CStatUtilities.c") 311)

(note:HI 643 642 644 42 NOTE_INSN_DELETED)

(insn:HI 644 643 645 42 ./CStatUtilities.c:311 (set (reg:DI 272 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (reg:DI 269 [ ivtmp.507 ]) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 262 (nil))
    (nil))

(insn:HI 645 644 646 42 ./CStatUtilities.c:311 (set (reg:DF 271 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 269 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 269 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 646 645 647 42 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 272 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 271 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 261 (insn_list:REG_DEP_TRUE 644 (insn_list:REG_DEP_TRUE 645 (nil))))
    (expr_list:REG_DEAD (reg:DF 271 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 272 [ <variable>.index ])
            (nil))))

(note:HI 647 646 648 42 ("./CStatUtilities.c") 309)

(insn:HI 648 647 649 42 ./CStatUtilities.c:309 (set (reg/v:SI 81 [ row ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 649 648 650 42 ./CStatUtilities.c:309 (parallel [
            (set (reg:DI 76 [ ivtmp.507 ])
                (plus:DI (reg:DI 269 [ ivtmp.507 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 650 649 651 42 ./CStatUtilities.c:309 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 81 [ row ])
            (reg/v:SI 93 [ nrows ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 648 (nil))
    (nil))

(jump_insn:HI 651 650 812 42 ./CStatUtilities.c:309 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 246)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 650 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
(note:HI 812 651 810 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn:HI 810 812 811 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 811 810 790 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 234)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 810 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
(note:HI 790 811 788 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn:HI 788 790 789 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 789 788 768 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1938)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 788 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
(note:HI 768 789 766 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn:HI 766 768 767 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 767 766 746 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1939)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 766 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
(note:HI 746 767 744 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn:HI 744 746 745 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 745 744 724 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1940)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 744 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
(note:HI 724 745 722 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn:HI 722 724 723 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 723 722 702 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1941)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 722 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
(note:HI 702 723 700 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn:HI 700 702 701 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 701 700 680 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1942)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 700 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269

;; Start of basic block 49, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 125 269
(note:HI 680 701 678 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn:HI 678 680 679 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 125)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 125)
        (nil)))

(jump_insn:HI 679 678 670 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1943)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 678 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 49, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97 269

;; Start of basic block 50, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 84 85 93 94 97 269
(note:HI 670 679 660 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(note:HI 660 670 661 50 ("./CStatUtilities.c") 311)

(note:HI 661 660 662 50 NOTE_INSN_DELETED)

(insn:HI 662 661 663 50 ./CStatUtilities.c:311 (set (reg:DI 291 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (plus:DI (reg:DI 269 [ ivtmp.507 ])
                    (const_int 16 [0x10])) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 663 662 664 50 ./CStatUtilities.c:311 (set (reg:DF 290 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 291 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (expr_list:REG_DEAD (reg:DI 76 [ ivtmp.507 ])
            (nil))))

(insn:HI 664 663 665 50 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 291 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 290 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 662 (insn_list:REG_DEP_TRUE 663 (nil)))
    (expr_list:REG_DEAD (reg:DF 290 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 291 [ <variable>.index ])
            (nil))))

(note:HI 665 664 666 50 ("./CStatUtilities.c") 309)

(insn:HI 666 665 667 50 ./CStatUtilities.c:309 (set (reg/v:SI 81 [ row ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 667 666 1943 50 ./CStatUtilities.c:309 (parallel [
            (set (reg:DI 76 [ ivtmp.507 ])
                (plus:DI (reg:DI 269 [ ivtmp.507 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 269 [ ivtmp.507 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
;; End of basic block 50, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

;; Start of basic block 51, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
(code_label:HI 1943 667 692 51 623 "" [1 uses])

(note:HI 692 1943 682 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(note:HI 682 692 683 51 ("./CStatUtilities.c") 311)

(note:HI 683 682 684 51 NOTE_INSN_DELETED)

(insn:HI 684 683 685 51 ./CStatUtilities.c:311 (set (reg:DI 294 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (reg:DI 76 [ ivtmp.507 ]) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 685 684 686 51 ./CStatUtilities.c:311 (set (reg:DF 293 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 686 685 687 51 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 294 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 293 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 684 (insn_list:REG_DEP_TRUE 685 (nil)))
    (expr_list:REG_DEAD (reg:DF 293 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 294 [ <variable>.index ])
            (nil))))

(note:HI 687 686 688 51 ("./CStatUtilities.c") 309)

(insn:HI 688 687 689 51 ./CStatUtilities.c:309 (parallel [
            (set (reg/v:SI 81 [ row ])
                (plus:SI (reg/v:SI 81 [ row ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 689 688 1942 51 ./CStatUtilities.c:309 (parallel [
            (set (reg:DI 76 [ ivtmp.507 ])
                (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 51, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

;; Start of basic block 52, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
(code_label:HI 1942 689 714 52 622 "" [1 uses])

(note:HI 714 1942 704 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(note:HI 704 714 705 52 ("./CStatUtilities.c") 311)

(note:HI 705 704 706 52 NOTE_INSN_DELETED)

(insn:HI 706 705 707 52 ./CStatUtilities.c:311 (set (reg:DI 297 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (reg:DI 76 [ ivtmp.507 ]) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 707 706 708 52 ./CStatUtilities.c:311 (set (reg:DF 296 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 708 707 709 52 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 297 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 296 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 706 (insn_list:REG_DEP_TRUE 707 (nil)))
    (expr_list:REG_DEAD (reg:DF 296 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 297 [ <variable>.index ])
            (nil))))

(note:HI 709 708 710 52 ("./CStatUtilities.c") 309)

(insn:HI 710 709 711 52 ./CStatUtilities.c:309 (parallel [
            (set (reg/v:SI 81 [ row ])
                (plus:SI (reg/v:SI 81 [ row ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 711 710 1941 52 ./CStatUtilities.c:309 (parallel [
            (set (reg:DI 76 [ ivtmp.507 ])
                (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 52, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

;; Start of basic block 53, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
(code_label:HI 1941 711 736 53 621 "" [1 uses])

(note:HI 736 1941 726 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(note:HI 726 736 727 53 ("./CStatUtilities.c") 311)

(note:HI 727 726 728 53 NOTE_INSN_DELETED)

(insn:HI 728 727 729 53 ./CStatUtilities.c:311 (set (reg:DI 300 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (reg:DI 76 [ ivtmp.507 ]) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 729 728 730 53 ./CStatUtilities.c:311 (set (reg:DF 299 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 730 729 731 53 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 300 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 299 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 728 (insn_list:REG_DEP_TRUE 729 (nil)))
    (expr_list:REG_DEAD (reg:DF 299 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 300 [ <variable>.index ])
            (nil))))

(note:HI 731 730 732 53 ("./CStatUtilities.c") 309)

(insn:HI 732 731 733 53 ./CStatUtilities.c:309 (parallel [
            (set (reg/v:SI 81 [ row ])
                (plus:SI (reg/v:SI 81 [ row ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 733 732 1940 53 ./CStatUtilities.c:309 (parallel [
            (set (reg:DI 76 [ ivtmp.507 ])
                (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 53, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

;; Start of basic block 54, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
(code_label:HI 1940 733 758 54 620 "" [1 uses])

(note:HI 758 1940 748 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(note:HI 748 758 749 54 ("./CStatUtilities.c") 311)

(note:HI 749 748 750 54 NOTE_INSN_DELETED)

(insn:HI 750 749 751 54 ./CStatUtilities.c:311 (set (reg:DI 303 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (reg:DI 76 [ ivtmp.507 ]) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 751 750 752 54 ./CStatUtilities.c:311 (set (reg:DF 302 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 752 751 753 54 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 303 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 302 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 750 (insn_list:REG_DEP_TRUE 751 (nil)))
    (expr_list:REG_DEAD (reg:DF 302 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 303 [ <variable>.index ])
            (nil))))

(note:HI 753 752 754 54 ("./CStatUtilities.c") 309)

(insn:HI 754 753 755 54 ./CStatUtilities.c:309 (parallel [
            (set (reg/v:SI 81 [ row ])
                (plus:SI (reg/v:SI 81 [ row ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 755 754 1939 54 ./CStatUtilities.c:309 (parallel [
            (set (reg:DI 76 [ ivtmp.507 ])
                (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 54, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

;; Start of basic block 55, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
(code_label:HI 1939 755 780 55 619 "" [1 uses])

(note:HI 780 1939 770 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(note:HI 770 780 771 55 ("./CStatUtilities.c") 311)

(note:HI 771 770 772 55 NOTE_INSN_DELETED)

(insn:HI 772 771 773 55 ./CStatUtilities.c:311 (set (reg:DI 306 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (reg:DI 76 [ ivtmp.507 ]) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 773 772 774 55 ./CStatUtilities.c:311 (set (reg:DF 305 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 774 773 775 55 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 306 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 305 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 772 (insn_list:REG_DEP_TRUE 773 (nil)))
    (expr_list:REG_DEAD (reg:DF 305 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 306 [ <variable>.index ])
            (nil))))

(note:HI 775 774 776 55 ("./CStatUtilities.c") 309)

(insn:HI 776 775 777 55 ./CStatUtilities.c:309 (parallel [
            (set (reg/v:SI 81 [ row ])
                (plus:SI (reg/v:SI 81 [ row ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 777 776 1938 55 ./CStatUtilities.c:309 (parallel [
            (set (reg:DI 76 [ ivtmp.507 ])
                (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 55, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

;; Start of basic block 56, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
(code_label:HI 1938 777 802 56 618 "" [1 uses])

(note:HI 802 1938 792 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(note:HI 792 802 793 56 ("./CStatUtilities.c") 311)

(note:HI 793 792 794 56 NOTE_INSN_DELETED)

(insn:HI 794 793 795 56 ./CStatUtilities.c:311 (set (reg:DI 309 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (reg:DI 76 [ ivtmp.507 ]) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 795 794 796 56 ./CStatUtilities.c:311 (set (reg:DF 308 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 796 795 797 56 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 309 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 308 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 794 (insn_list:REG_DEP_TRUE 795 (nil)))
    (expr_list:REG_DEAD (reg:DF 308 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 309 [ <variable>.index ])
            (nil))))

(note:HI 797 796 798 56 ("./CStatUtilities.c") 309)

(insn:HI 798 797 799 56 ./CStatUtilities.c:309 (parallel [
            (set (reg/v:SI 81 [ row ])
                (plus:SI (reg/v:SI 81 [ row ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 799 798 800 56 ./CStatUtilities.c:309 (parallel [
            (set (reg:DI 76 [ ivtmp.507 ])
                (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 800 799 801 56 ./CStatUtilities.c:309 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 81 [ row ])
            (reg/v:SI 93 [ nrows ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 798 (nil))
    (nil))

(jump_insn:HI 801 800 234 56 ./CStatUtilities.c:309 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 246)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 800 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 56, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

;; Start of basic block 57, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
(code_label:HI 234 801 235 57 471 "" [2 uses])

(note:HI 235 234 236 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(note:HI 236 235 237 57 ("./CStatUtilities.c") 311)

(note:HI 237 236 238 57 NOTE_INSN_DELETED)

(insn:HI 238 237 239 57 ./CStatUtilities.c:311 (set (reg:DI 105 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (reg:DI 76 [ ivtmp.507 ]) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 239 238 240 57 ./CStatUtilities.c:311 (set (reg:DF 107 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int -8 [0xfffffffffffffff8])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 240 239 241 57 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 105 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 107 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 238 (insn_list:REG_DEP_TRUE 239 (nil)))
    (expr_list:REG_DEAD (reg:DF 107 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 105 [ <variable>.index ])
            (nil))))

(note:HI 241 240 933 57 ("./CStatUtilities.c") 309)

(note:HI 933 241 814 57 NOTE_INSN_DELETED)

(note:HI 814 933 815 57 ("./CStatUtilities.c") 311)

(note:HI 815 814 816 57 NOTE_INSN_DELETED)

(insn:HI 816 815 817 57 ./CStatUtilities.c:311 (set (reg:DI 237 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 16 [0x10])) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 817 816 818 57 ./CStatUtilities.c:311 (set (reg:DF 236 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 8 [0x8])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 8 [0x8])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 818 817 819 57 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 237 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 236 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 816 (insn_list:REG_DEP_TRUE 817 (nil)))
    (expr_list:REG_DEAD (reg:DF 236 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 237 [ <variable>.index ])
            (nil))))

(note:HI 819 818 821 57 ("./CStatUtilities.c") 309)

(note:HI 821 819 831 57 NOTE_INSN_DELETED)

(note:HI 831 821 832 57 ("./CStatUtilities.c") 311)

(note:HI 832 831 833 57 NOTE_INSN_DELETED)

(insn:HI 833 832 834 57 ./CStatUtilities.c:311 (set (reg:DI 242 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 32 [0x20])) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 834 833 835 57 ./CStatUtilities.c:311 (set (reg:DF 241 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 24 [0x18])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 24 [0x18])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 835 834 836 57 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 242 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 241 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 833 (insn_list:REG_DEP_TRUE 834 (nil)))
    (expr_list:REG_DEAD (reg:DF 241 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 242 [ <variable>.index ])
            (nil))))

(note:HI 836 835 838 57 ("./CStatUtilities.c") 309)

(note:HI 838 836 848 57 NOTE_INSN_DELETED)

(note:HI 848 838 849 57 ("./CStatUtilities.c") 311)

(note:HI 849 848 850 57 NOTE_INSN_DELETED)

(insn:HI 850 849 851 57 ./CStatUtilities.c:311 (set (reg:DI 247 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 48 [0x30])) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 851 850 852 57 ./CStatUtilities.c:311 (set (reg:DF 246 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 40 [0x28])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 40 [0x28])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 852 851 853 57 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 247 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 246 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 850 (insn_list:REG_DEP_TRUE 851 (nil)))
    (expr_list:REG_DEAD (reg:DF 246 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 247 [ <variable>.index ])
            (nil))))

(note:HI 853 852 855 57 ("./CStatUtilities.c") 309)

(note:HI 855 853 865 57 NOTE_INSN_DELETED)

(note:HI 865 855 866 57 ("./CStatUtilities.c") 311)

(note:HI 866 865 867 57 NOTE_INSN_DELETED)

(insn:HI 867 866 868 57 ./CStatUtilities.c:311 (set (reg:DI 252 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 64 [0x40])) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 868 867 869 57 ./CStatUtilities.c:311 (set (reg:DF 251 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 56 [0x38])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 56 [0x38])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 869 868 870 57 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 252 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 251 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 867 (insn_list:REG_DEP_TRUE 868 (nil)))
    (expr_list:REG_DEAD (reg:DF 251 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 252 [ <variable>.index ])
            (nil))))

(note:HI 870 869 872 57 ("./CStatUtilities.c") 309)

(note:HI 872 870 882 57 NOTE_INSN_DELETED)

(note:HI 882 872 883 57 ("./CStatUtilities.c") 311)

(note:HI 883 882 884 57 NOTE_INSN_DELETED)

(insn:HI 884 883 885 57 ./CStatUtilities.c:311 (set (reg:DI 257 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 80 [0x50])) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 885 884 886 57 ./CStatUtilities.c:311 (set (reg:DF 256 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 72 [0x48])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 72 [0x48])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 886 885 887 57 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 257 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 256 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 884 (insn_list:REG_DEP_TRUE 885 (nil)))
    (expr_list:REG_DEAD (reg:DF 256 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 257 [ <variable>.index ])
            (nil))))

(note:HI 887 886 889 57 ("./CStatUtilities.c") 309)

(note:HI 889 887 899 57 NOTE_INSN_DELETED)

(note:HI 899 889 900 57 ("./CStatUtilities.c") 311)

(note:HI 900 899 901 57 NOTE_INSN_DELETED)

(insn:HI 901 900 902 57 ./CStatUtilities.c:311 (set (reg:DI 262 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 96 [0x60])) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 902 901 903 57 ./CStatUtilities.c:311 (set (reg:DF 261 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 88 [0x58])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 88 [0x58])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 903 902 904 57 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 262 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 261 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 901 (insn_list:REG_DEP_TRUE 902 (nil)))
    (expr_list:REG_DEAD (reg:DF 261 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 262 [ <variable>.index ])
            (nil))))

(note:HI 904 903 906 57 ("./CStatUtilities.c") 309)

(note:HI 906 904 916 57 NOTE_INSN_DELETED)

(note:HI 916 906 917 57 ("./CStatUtilities.c") 311)

(note:HI 917 916 918 57 NOTE_INSN_DELETED)

(insn:HI 918 917 919 57 ./CStatUtilities.c:311 (set (reg:DI 267 [ <variable>.index ])
        (sign_extend:DI (mem/s:SI (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 112 [0x70])) [4 <variable>.index+0 S4 A8]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 919 918 920 57 ./CStatUtilities.c:311 (set (reg:DF 266 [ <variable>.signal ])
        (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 104 [0x68])) [6 <variable>.signal+0 S8 A8])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/s:DF (plus:DI (reg:DI 76 [ ivtmp.507 ])
                (const_int 104 [0x68])) [6 <variable>.signal+0 S8 A8])
        (nil)))

(insn:HI 920 919 921 57 ./CStatUtilities.c:311 (set (mem:DF (plus:DI (mult:DI (reg:DI 267 [ <variable>.index ])
                    (const_int 8 [0x8]))
                (reg:DI 85 [ D.5401 ])) [6 S8 A64])
        (reg:DF 266 [ <variable>.signal ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 918 (insn_list:REG_DEP_TRUE 919 (nil)))
    (expr_list:REG_DEAD (reg:DF 266 [ <variable>.signal ])
        (expr_list:REG_DEAD (reg:DI 267 [ <variable>.index ])
            (nil))))

(note:HI 921 920 922 57 ("./CStatUtilities.c") 309)

(insn:HI 922 921 923 57 ./CStatUtilities.c:309 (parallel [
            (set (reg/v:SI 81 [ row ])
                (plus:SI (reg/v:SI 81 [ row ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 923 922 924 57 ./CStatUtilities.c:309 (parallel [
            (set (reg:DI 76 [ ivtmp.507 ])
                (plus:DI (reg:DI 76 [ ivtmp.507 ])
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 924 923 925 57 ./CStatUtilities.c:309 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 81 [ row ])
            (reg/v:SI 93 [ nrows ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 922 (nil))
    (nil))

(jump_insn:HI 925 924 930 57 ./CStatUtilities.c:309 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 246)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 924 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 57, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

;; Start of basic block 58, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97
(note:HI 930 925 1907 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1907 930 1908 58 (set (pc)
        (label_ref 234)) 548 {jump} (nil)
    (nil))
;; End of basic block 58, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 63 67 75 76 81 84 85 93 94 97

(barrier:HI 1908 1907 1914)

;; Start of basic block 59, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 67 73 84 93 94 97
(code_label:HI 1914 1908 1228 59 608 "" [3 uses])

(note:HI 1228 1914 188 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(note:HI 188 1228 189 59 ("./CStatUtilities.c") 300)

(insn:HI 189 188 190 59 ./CStatUtilities.c:300 (set (reg:DF 103)
        (float:DF (reg/v:SI 94 [ ncols ]))) 175 {*floatsidf2_sse} (nil)
    (nil))

(insn:HI 190 189 948 59 ./CStatUtilities.c:300 (set (reg/v:DF 80 [ avg ])
        (div:DF (reg/v:DF 59 [ avg.563 ])
            (reg:DF 103))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 189 (nil))
    (expr_list:REG_DEAD (reg/v:DF 59 [ avg.563 ])
        (expr_list:REG_DEAD (reg:DF 103)
            (nil))))

(note:HI 948 190 949 59 NOTE_INSN_DELETED)

(insn:HI 949 948 950 59 (parallel [
            (set (reg:SI 130)
                (plus:SI (reg/v:SI 94 [ ncols ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 950 949 953 59 (parallel [
            (set (reg:SI 130)
                (and:SI (reg:SI 130)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 949 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 953 950 954 59 ("./CStatUtilities.c") 303)

(insn:HI 954 953 955 59 ./CStatUtilities.c:303 (set (reg:DI 104)
        (mem/f:DI (reg/f:DI 67 [ ivtmp.545 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 67 [ ivtmp.545 ]) [24 S8 A64])
        (nil)))

(insn:HI 955 954 956 59 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 104)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 190 (insn_list:REG_DEP_TRUE 954 (nil)))
    (expr_list:REG_DEAD (reg:DI 104)
        (nil)))

(note:HI 956 955 957 59 ("./CStatUtilities.c") 302)

(insn:HI 957 956 958 59 ./CStatUtilities.c:302 (set (reg/v:SI 205 [ col.559 ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 958 957 959 59 ./CStatUtilities.c:302 (parallel [
            (set (reg/f:DI 206 [ ivtmp.524 ])
                (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 959 958 960 59 ./CStatUtilities.c:302 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 205 [ col.559 ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 957 (nil))
    (nil))

(jump_insn:HI 960 959 1107 59 ./CStatUtilities.c:302 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 203)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 959 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 59, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

;; Start of basic block 60, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
(note:HI 1107 960 1105 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1105 1107 1106 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 1106 1105 1087 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 193)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1105 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 60, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

;; Start of basic block 61, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
(note:HI 1087 1106 1085 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1085 1087 1086 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1086 1085 1067 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1944)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1085 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 61, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

;; Start of basic block 62, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
(note:HI 1067 1086 1065 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1065 1067 1066 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1066 1065 1047 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1945)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1065 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 62, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

;; Start of basic block 63, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
(note:HI 1047 1066 1045 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1045 1047 1046 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1046 1045 1027 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1946)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1045 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 63, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

;; Start of basic block 64, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
(note:HI 1027 1046 1025 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1025 1027 1026 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1026 1025 1007 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1947)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1025 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 64, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

;; Start of basic block 65, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
(note:HI 1007 1026 1005 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1005 1007 1006 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1006 1005 987 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1948)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1005 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 65, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206

;; Start of basic block 66, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 130 205 206
(note:HI 987 1006 985 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn:HI 985 987 986 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 130)
        (nil)))

(jump_insn:HI 986 985 977 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1949)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 985 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 66, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

;; Start of basic block 67, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97
(note:HI 977 986 969 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(note:HI 969 977 970 67 ("./CStatUtilities.c") 303)

(insn:HI 970 969 971 67 ./CStatUtilities.c:303 (set (reg:DI 310)
        (mem/f:DI (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                (const_int 8 [0x8])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                (const_int 8 [0x8])) [24 S8 A64])
        (nil)))

(insn:HI 971 970 972 67 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 310)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 970 (nil))
    (expr_list:REG_DEAD (reg:DI 310)
        (nil)))

(note:HI 972 971 973 67 ("./CStatUtilities.c") 302)

(insn:HI 973 972 974 67 ./CStatUtilities.c:302 (set (reg/v:SI 205 [ col.559 ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 974 973 1949 67 ./CStatUtilities.c:302 (parallel [
            (set (reg/f:DI 206 [ ivtmp.524 ])
                (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 67, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

;; Start of basic block 68, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
(code_label:HI 1949 974 997 68 629 "" [1 uses])

(note:HI 997 1949 989 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(note:HI 989 997 990 68 ("./CStatUtilities.c") 303)

(insn:HI 990 989 991 68 ./CStatUtilities.c:303 (set (reg:DI 311)
        (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])
        (nil)))

(insn:HI 991 990 992 68 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 311)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 990 (nil))
    (expr_list:REG_DEAD (reg:DI 311)
        (nil)))

(note:HI 992 991 993 68 ("./CStatUtilities.c") 302)

(insn:HI 993 992 994 68 ./CStatUtilities.c:302 (parallel [
            (set (reg/v:SI 205 [ col.559 ])
                (plus:SI (reg/v:SI 205 [ col.559 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 994 993 1948 68 ./CStatUtilities.c:302 (parallel [
            (set (reg/f:DI 206 [ ivtmp.524 ])
                (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 68, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

;; Start of basic block 69, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
(code_label:HI 1948 994 1017 69 628 "" [1 uses])

(note:HI 1017 1948 1009 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(note:HI 1009 1017 1010 69 ("./CStatUtilities.c") 303)

(insn:HI 1010 1009 1011 69 ./CStatUtilities.c:303 (set (reg:DI 312)
        (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])
        (nil)))

(insn:HI 1011 1010 1012 69 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 312)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1010 (nil))
    (expr_list:REG_DEAD (reg:DI 312)
        (nil)))

(note:HI 1012 1011 1013 69 ("./CStatUtilities.c") 302)

(insn:HI 1013 1012 1014 69 ./CStatUtilities.c:302 (parallel [
            (set (reg/v:SI 205 [ col.559 ])
                (plus:SI (reg/v:SI 205 [ col.559 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1014 1013 1947 69 ./CStatUtilities.c:302 (parallel [
            (set (reg/f:DI 206 [ ivtmp.524 ])
                (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 69, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

;; Start of basic block 70, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
(code_label:HI 1947 1014 1037 70 627 "" [1 uses])

(note:HI 1037 1947 1029 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(note:HI 1029 1037 1030 70 ("./CStatUtilities.c") 303)

(insn:HI 1030 1029 1031 70 ./CStatUtilities.c:303 (set (reg:DI 313)
        (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])
        (nil)))

(insn:HI 1031 1030 1032 70 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 313)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1030 (nil))
    (expr_list:REG_DEAD (reg:DI 313)
        (nil)))

(note:HI 1032 1031 1033 70 ("./CStatUtilities.c") 302)

(insn:HI 1033 1032 1034 70 ./CStatUtilities.c:302 (parallel [
            (set (reg/v:SI 205 [ col.559 ])
                (plus:SI (reg/v:SI 205 [ col.559 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1034 1033 1946 70 ./CStatUtilities.c:302 (parallel [
            (set (reg/f:DI 206 [ ivtmp.524 ])
                (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 70, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

;; Start of basic block 71, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
(code_label:HI 1946 1034 1057 71 626 "" [1 uses])

(note:HI 1057 1946 1049 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(note:HI 1049 1057 1050 71 ("./CStatUtilities.c") 303)

(insn:HI 1050 1049 1051 71 ./CStatUtilities.c:303 (set (reg:DI 314)
        (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])
        (nil)))

(insn:HI 1051 1050 1052 71 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 314)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1050 (nil))
    (expr_list:REG_DEAD (reg:DI 314)
        (nil)))

(note:HI 1052 1051 1053 71 ("./CStatUtilities.c") 302)

(insn:HI 1053 1052 1054 71 ./CStatUtilities.c:302 (parallel [
            (set (reg/v:SI 205 [ col.559 ])
                (plus:SI (reg/v:SI 205 [ col.559 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1054 1053 1945 71 ./CStatUtilities.c:302 (parallel [
            (set (reg/f:DI 206 [ ivtmp.524 ])
                (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 71, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

;; Start of basic block 72, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
(code_label:HI 1945 1054 1077 72 625 "" [1 uses])

(note:HI 1077 1945 1069 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(note:HI 1069 1077 1070 72 ("./CStatUtilities.c") 303)

(insn:HI 1070 1069 1071 72 ./CStatUtilities.c:303 (set (reg:DI 315)
        (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])
        (nil)))

(insn:HI 1071 1070 1072 72 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 315)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1070 (nil))
    (expr_list:REG_DEAD (reg:DI 315)
        (nil)))

(note:HI 1072 1071 1073 72 ("./CStatUtilities.c") 302)

(insn:HI 1073 1072 1074 72 ./CStatUtilities.c:302 (parallel [
            (set (reg/v:SI 205 [ col.559 ])
                (plus:SI (reg/v:SI 205 [ col.559 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1074 1073 1944 72 ./CStatUtilities.c:302 (parallel [
            (set (reg/f:DI 206 [ ivtmp.524 ])
                (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 72, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

;; Start of basic block 73, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
(code_label:HI 1944 1074 1097 73 624 "" [1 uses])

(note:HI 1097 1944 1089 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(note:HI 1089 1097 1090 73 ("./CStatUtilities.c") 303)

(insn:HI 1090 1089 1091 73 ./CStatUtilities.c:303 (set (reg:DI 316)
        (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])
        (nil)))

(insn:HI 1091 1090 1092 73 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 316)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1090 (nil))
    (expr_list:REG_DEAD (reg:DI 316)
        (nil)))

(note:HI 1092 1091 1093 73 ("./CStatUtilities.c") 302)

(insn:HI 1093 1092 1094 73 ./CStatUtilities.c:302 (parallel [
            (set (reg/v:SI 205 [ col.559 ])
                (plus:SI (reg/v:SI 205 [ col.559 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1094 1093 1095 73 ./CStatUtilities.c:302 (parallel [
            (set (reg/f:DI 206 [ ivtmp.524 ])
                (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1095 1094 1096 73 ./CStatUtilities.c:302 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 205 [ col.559 ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1093 (nil))
    (nil))

(jump_insn:HI 1096 1095 193 73 ./CStatUtilities.c:302 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 203)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1095 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 73, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

;; Start of basic block 74, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
(code_label:HI 193 1096 194 74 465 "" [2 uses])

(note:HI 194 193 195 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(note:HI 195 194 196 74 ("./CStatUtilities.c") 303)

(insn:HI 196 195 197 74 ./CStatUtilities.c:303 (set (reg:DI 207)
        (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 206 [ ivtmp.524 ]) [24 S8 A64])
        (nil)))

(insn:HI 197 196 198 74 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 207)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 196 (nil))
    (expr_list:REG_DEAD (reg:DI 207)
        (nil)))

(note:HI 198 197 1109 74 ("./CStatUtilities.c") 302)

(note:HI 1109 198 1110 74 ("./CStatUtilities.c") 303)

(insn:HI 1110 1109 1111 74 ./CStatUtilities.c:303 (set (reg:DI 210)
        (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 8 [0x8])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 8 [0x8])) [24 S8 A64])
        (nil)))

(insn:HI 1111 1110 1112 74 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 210)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1110 (nil))
    (expr_list:REG_DEAD (reg:DI 210)
        (nil)))

(note:HI 1112 1111 1124 74 ("./CStatUtilities.c") 302)

(note:HI 1124 1112 1125 74 ("./CStatUtilities.c") 303)

(insn:HI 1125 1124 1126 74 ./CStatUtilities.c:303 (set (reg:DI 213)
        (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 16 [0x10])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 16 [0x10])) [24 S8 A64])
        (nil)))

(insn:HI 1126 1125 1127 74 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 213)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1125 (nil))
    (expr_list:REG_DEAD (reg:DI 213)
        (nil)))

(note:HI 1127 1126 1139 74 ("./CStatUtilities.c") 302)

(note:HI 1139 1127 1140 74 ("./CStatUtilities.c") 303)

(insn:HI 1140 1139 1141 74 ./CStatUtilities.c:303 (set (reg:DI 216)
        (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 24 [0x18])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 24 [0x18])) [24 S8 A64])
        (nil)))

(insn:HI 1141 1140 1142 74 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 216)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1140 (nil))
    (expr_list:REG_DEAD (reg:DI 216)
        (nil)))

(note:HI 1142 1141 1154 74 ("./CStatUtilities.c") 302)

(note:HI 1154 1142 1155 74 ("./CStatUtilities.c") 303)

(insn:HI 1155 1154 1156 74 ./CStatUtilities.c:303 (set (reg:DI 219)
        (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 32 [0x20])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 32 [0x20])) [24 S8 A64])
        (nil)))

(insn:HI 1156 1155 1157 74 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 219)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1155 (nil))
    (expr_list:REG_DEAD (reg:DI 219)
        (nil)))

(note:HI 1157 1156 1169 74 ("./CStatUtilities.c") 302)

(note:HI 1169 1157 1170 74 ("./CStatUtilities.c") 303)

(insn:HI 1170 1169 1171 74 ./CStatUtilities.c:303 (set (reg:DI 222)
        (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 40 [0x28])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 40 [0x28])) [24 S8 A64])
        (nil)))

(insn:HI 1171 1170 1172 74 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 222)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1170 (nil))
    (expr_list:REG_DEAD (reg:DI 222)
        (nil)))

(note:HI 1172 1171 1184 74 ("./CStatUtilities.c") 302)

(note:HI 1184 1172 1185 74 ("./CStatUtilities.c") 303)

(insn:HI 1185 1184 1186 74 ./CStatUtilities.c:303 (set (reg:DI 225)
        (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 48 [0x30])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 48 [0x30])) [24 S8 A64])
        (nil)))

(insn:HI 1186 1185 1187 74 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 225)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1185 (nil))
    (expr_list:REG_DEAD (reg:DI 225)
        (nil)))

(note:HI 1187 1186 1199 74 ("./CStatUtilities.c") 302)

(note:HI 1199 1187 1200 74 ("./CStatUtilities.c") 303)

(insn:HI 1200 1199 1201 74 ./CStatUtilities.c:303 (set (reg:DI 228)
        (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 56 [0x38])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                (const_int 56 [0x38])) [24 S8 A64])
        (nil)))

(insn:HI 1201 1200 1202 74 ./CStatUtilities.c:303 (set (mem/s:DF (plus:DI (reg:DI 228)
                (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
        (reg/v:DF 80 [ avg ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1200 (nil))
    (expr_list:REG_DEAD (reg:DI 228)
        (nil)))

(note:HI 1202 1201 1203 74 ("./CStatUtilities.c") 302)

(insn:HI 1203 1202 1204 74 ./CStatUtilities.c:302 (parallel [
            (set (reg/v:SI 205 [ col.559 ])
                (plus:SI (reg/v:SI 205 [ col.559 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1204 1203 1205 74 ./CStatUtilities.c:302 (parallel [
            (set (reg/f:DI 206 [ ivtmp.524 ])
                (plus:DI (reg/f:DI 206 [ ivtmp.524 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1205 1204 1206 74 ./CStatUtilities.c:302 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 205 [ col.559 ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1203 (nil))
    (nil))

(jump_insn:HI 1206 1205 1211 74 ./CStatUtilities.c:302 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 203)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1205 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 74, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

;; Start of basic block 75, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206
(note:HI 1211 1206 1912 75 [bb 75] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1912 1211 1913 75 (set (pc)
        (label_ref 193)) 548 {jump} (nil)
    (nil))
;; End of basic block 75, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 80 84 93 94 97 205 206

(barrier:HI 1913 1912 1925)

;; Start of basic block 76, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 65 67 73 84 93 94 97
(code_label:HI 1925 1913 216 76 610 "" [1 uses])

(note:HI 216 1925 220 76 [bb 76] NOTE_INSN_BASIC_BLOCK)

(insn:HI 220 216 1229 76 ./CStatUtilities.c:297 (set (reg/v:DF 59 [ avg.563 ])
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(note:HI 1229 220 1230 76 NOTE_INSN_DELETED)

(insn:HI 1230 1229 1231 76 (parallel [
            (set (reg:SI 135)
                (plus:SI (reg/v:SI 94 [ ncols ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1231 1230 1234 76 (parallel [
            (set (reg:SI 135)
                (and:SI (reg:SI 135)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 1230 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1234 1231 1235 76 ("./CStatUtilities.c") 298)

(insn:HI 1235 1234 1236 76 ./CStatUtilities.c:298 (set (reg:DI 231)
        (mem/f:DI (reg/f:DI 67 [ ivtmp.545 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 67 [ ivtmp.545 ]) [24 S8 A64])
        (nil)))

(insn:HI 1236 1235 1237 76 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (mem/s:DF (plus:DI (reg:DI 231)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64])
            (reg/v:DF 59 [ avg.563 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 220 (insn_list:REG_DEP_TRUE 1235 (nil)))
    (expr_list:REG_DEAD (reg:DI 231)
        (nil)))

(note:HI 1237 1236 1238 76 ("./CStatUtilities.c") 297)

(insn:HI 1238 1237 1239 76 ./CStatUtilities.c:297 (set (reg/v:SI 61 [ col.560 ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 1239 1238 1240 76 ./CStatUtilities.c:297 (parallel [
            (set (reg/f:DI 66 [ ivtmp.546 ])
                (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1240 1239 1241 76 ./CStatUtilities.c:297 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 61 [ col.560 ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1238 (nil))
    (nil))

(jump_insn:HI 1241 1240 1388 76 ./CStatUtilities.c:297 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1914)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1240 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 76, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

;; Start of basic block 77, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
(note:HI 1388 1241 1386 77 [bb 77] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1386 1388 1387 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 1387 1386 1368 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 176)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1386 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 77, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

;; Start of basic block 78, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
(note:HI 1368 1387 1366 78 [bb 78] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1366 1368 1367 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1367 1366 1348 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1950)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1366 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 78, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

;; Start of basic block 79, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
(note:HI 1348 1367 1346 79 [bb 79] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1346 1348 1347 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1347 1346 1328 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1951)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1346 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 79, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

;; Start of basic block 80, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
(note:HI 1328 1347 1326 80 [bb 80] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1326 1328 1327 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1327 1326 1308 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1952)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1326 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 80, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

;; Start of basic block 81, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
(note:HI 1308 1327 1306 81 [bb 81] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1306 1308 1307 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1307 1306 1288 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1953)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1306 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 81, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

;; Start of basic block 82, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
(note:HI 1288 1307 1286 82 [bb 82] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1286 1288 1287 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1287 1286 1268 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1954)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1286 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 82, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135

;; Start of basic block 83, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97 135
(note:HI 1268 1287 1266 83 [bb 83] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1266 1268 1267 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 135)
        (nil)))

(jump_insn:HI 1267 1266 1258 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1955)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1266 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 83, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

;; Start of basic block 84, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 65 67 73 84 93 94 97
(note:HI 1258 1267 1250 84 [bb 84] NOTE_INSN_BASIC_BLOCK)

(note:HI 1250 1258 1251 84 ("./CStatUtilities.c") 298)

(insn:HI 1251 1250 1252 84 ./CStatUtilities.c:298 (set (reg:DI 317)
        (mem/f:DI (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                (const_int 8 [0x8])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                (const_int 8 [0x8])) [24 S8 A64])
        (nil)))

(insn:HI 1252 1251 1253 84 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 317)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1251 (nil))
    (expr_list:REG_DEAD (reg:DI 317)
        (nil)))

(note:HI 1253 1252 1254 84 ("./CStatUtilities.c") 297)

(insn:HI 1254 1253 1255 84 ./CStatUtilities.c:297 (set (reg/v:SI 61 [ col.560 ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 1255 1254 1955 84 ./CStatUtilities.c:297 (parallel [
            (set (reg/f:DI 66 [ ivtmp.546 ])
                (plus:DI (reg/f:DI 67 [ ivtmp.545 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 84, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

;; Start of basic block 85, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
(code_label:HI 1955 1255 1278 85 635 "" [1 uses])

(note:HI 1278 1955 1270 85 [bb 85] NOTE_INSN_BASIC_BLOCK)

(note:HI 1270 1278 1271 85 ("./CStatUtilities.c") 298)

(insn:HI 1271 1270 1272 85 ./CStatUtilities.c:298 (set (reg:DI 318)
        (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])
        (nil)))

(insn:HI 1272 1271 1273 85 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 318)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1271 (nil))
    (expr_list:REG_DEAD (reg:DI 318)
        (nil)))

(note:HI 1273 1272 1274 85 ("./CStatUtilities.c") 297)

(insn:HI 1274 1273 1275 85 ./CStatUtilities.c:297 (parallel [
            (set (reg/v:SI 61 [ col.560 ])
                (plus:SI (reg/v:SI 61 [ col.560 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1275 1274 1954 85 ./CStatUtilities.c:297 (parallel [
            (set (reg/f:DI 66 [ ivtmp.546 ])
                (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 85, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

;; Start of basic block 86, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
(code_label:HI 1954 1275 1298 86 634 "" [1 uses])

(note:HI 1298 1954 1290 86 [bb 86] NOTE_INSN_BASIC_BLOCK)

(note:HI 1290 1298 1291 86 ("./CStatUtilities.c") 298)

(insn:HI 1291 1290 1292 86 ./CStatUtilities.c:298 (set (reg:DI 319)
        (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])
        (nil)))

(insn:HI 1292 1291 1293 86 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 319)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1291 (nil))
    (expr_list:REG_DEAD (reg:DI 319)
        (nil)))

(note:HI 1293 1292 1294 86 ("./CStatUtilities.c") 297)

(insn:HI 1294 1293 1295 86 ./CStatUtilities.c:297 (parallel [
            (set (reg/v:SI 61 [ col.560 ])
                (plus:SI (reg/v:SI 61 [ col.560 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1295 1294 1953 86 ./CStatUtilities.c:297 (parallel [
            (set (reg/f:DI 66 [ ivtmp.546 ])
                (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 86, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

;; Start of basic block 87, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
(code_label:HI 1953 1295 1318 87 633 "" [1 uses])

(note:HI 1318 1953 1310 87 [bb 87] NOTE_INSN_BASIC_BLOCK)

(note:HI 1310 1318 1311 87 ("./CStatUtilities.c") 298)

(insn:HI 1311 1310 1312 87 ./CStatUtilities.c:298 (set (reg:DI 320)
        (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])
        (nil)))

(insn:HI 1312 1311 1313 87 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 320)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1311 (nil))
    (expr_list:REG_DEAD (reg:DI 320)
        (nil)))

(note:HI 1313 1312 1314 87 ("./CStatUtilities.c") 297)

(insn:HI 1314 1313 1315 87 ./CStatUtilities.c:297 (parallel [
            (set (reg/v:SI 61 [ col.560 ])
                (plus:SI (reg/v:SI 61 [ col.560 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1315 1314 1952 87 ./CStatUtilities.c:297 (parallel [
            (set (reg/f:DI 66 [ ivtmp.546 ])
                (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 87, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

;; Start of basic block 88, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
(code_label:HI 1952 1315 1338 88 632 "" [1 uses])

(note:HI 1338 1952 1330 88 [bb 88] NOTE_INSN_BASIC_BLOCK)

(note:HI 1330 1338 1331 88 ("./CStatUtilities.c") 298)

(insn:HI 1331 1330 1332 88 ./CStatUtilities.c:298 (set (reg:DI 321)
        (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])
        (nil)))

(insn:HI 1332 1331 1333 88 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 321)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1331 (nil))
    (expr_list:REG_DEAD (reg:DI 321)
        (nil)))

(note:HI 1333 1332 1334 88 ("./CStatUtilities.c") 297)

(insn:HI 1334 1333 1335 88 ./CStatUtilities.c:297 (parallel [
            (set (reg/v:SI 61 [ col.560 ])
                (plus:SI (reg/v:SI 61 [ col.560 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1335 1334 1951 88 ./CStatUtilities.c:297 (parallel [
            (set (reg/f:DI 66 [ ivtmp.546 ])
                (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 88, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

;; Start of basic block 89, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
(code_label:HI 1951 1335 1358 89 631 "" [1 uses])

(note:HI 1358 1951 1350 89 [bb 89] NOTE_INSN_BASIC_BLOCK)

(note:HI 1350 1358 1351 89 ("./CStatUtilities.c") 298)

(insn:HI 1351 1350 1352 89 ./CStatUtilities.c:298 (set (reg:DI 322)
        (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])
        (nil)))

(insn:HI 1352 1351 1353 89 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 322)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1351 (nil))
    (expr_list:REG_DEAD (reg:DI 322)
        (nil)))

(note:HI 1353 1352 1354 89 ("./CStatUtilities.c") 297)

(insn:HI 1354 1353 1355 89 ./CStatUtilities.c:297 (parallel [
            (set (reg/v:SI 61 [ col.560 ])
                (plus:SI (reg/v:SI 61 [ col.560 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1355 1354 1950 89 ./CStatUtilities.c:297 (parallel [
            (set (reg/f:DI 66 [ ivtmp.546 ])
                (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 89, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

;; Start of basic block 90, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
(code_label:HI 1950 1355 1378 90 630 "" [1 uses])

(note:HI 1378 1950 1370 90 [bb 90] NOTE_INSN_BASIC_BLOCK)

(note:HI 1370 1378 1371 90 ("./CStatUtilities.c") 298)

(insn:HI 1371 1370 1372 90 ./CStatUtilities.c:298 (set (reg:DI 323)
        (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])
        (nil)))

(insn:HI 1372 1371 1373 90 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 323)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1371 (nil))
    (expr_list:REG_DEAD (reg:DI 323)
        (nil)))

(note:HI 1373 1372 1374 90 ("./CStatUtilities.c") 297)

(insn:HI 1374 1373 1375 90 ./CStatUtilities.c:297 (parallel [
            (set (reg/v:SI 61 [ col.560 ])
                (plus:SI (reg/v:SI 61 [ col.560 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1375 1374 1376 90 ./CStatUtilities.c:297 (parallel [
            (set (reg/f:DI 66 [ ivtmp.546 ])
                (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1376 1375 1377 90 ./CStatUtilities.c:297 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 61 [ col.560 ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1374 (nil))
    (nil))

(jump_insn:HI 1377 1376 176 90 ./CStatUtilities.c:297 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1914)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1376 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 90, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

;; Start of basic block 91, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
(code_label:HI 176 1377 177 91 463 "" [2 uses])

(note:HI 177 176 178 91 [bb 91] NOTE_INSN_BASIC_BLOCK)

(note:HI 178 177 179 91 ("./CStatUtilities.c") 298)

(insn:HI 179 178 180 91 ./CStatUtilities.c:298 (set (reg:DI 102)
        (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 66 [ ivtmp.546 ]) [24 S8 A64])
        (nil)))

(insn:HI 180 179 181 91 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 102)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 179 (nil))
    (expr_list:REG_DEAD (reg:DI 102)
        (nil)))

(note:HI 181 180 1390 91 ("./CStatUtilities.c") 297)

(note:HI 1390 181 1391 91 ("./CStatUtilities.c") 298)

(insn:HI 1391 1390 1392 91 ./CStatUtilities.c:298 (set (reg:DI 179)
        (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 8 [0x8])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 8 [0x8])) [24 S8 A64])
        (nil)))

(insn:HI 1392 1391 1393 91 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 179)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 180 (insn_list:REG_DEP_TRUE 1391 (nil)))
    (expr_list:REG_DEAD (reg:DI 179)
        (nil)))

(note:HI 1393 1392 1405 91 ("./CStatUtilities.c") 297)

(note:HI 1405 1393 1406 91 ("./CStatUtilities.c") 298)

(insn:HI 1406 1405 1407 91 ./CStatUtilities.c:298 (set (reg:DI 183)
        (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 16 [0x10])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 16 [0x10])) [24 S8 A64])
        (nil)))

(insn:HI 1407 1406 1408 91 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 183)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1392 (insn_list:REG_DEP_TRUE 1406 (nil)))
    (expr_list:REG_DEAD (reg:DI 183)
        (nil)))

(note:HI 1408 1407 1420 91 ("./CStatUtilities.c") 297)

(note:HI 1420 1408 1421 91 ("./CStatUtilities.c") 298)

(insn:HI 1421 1420 1422 91 ./CStatUtilities.c:298 (set (reg:DI 187)
        (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 24 [0x18])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 24 [0x18])) [24 S8 A64])
        (nil)))

(insn:HI 1422 1421 1423 91 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 187)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1407 (insn_list:REG_DEP_TRUE 1421 (nil)))
    (expr_list:REG_DEAD (reg:DI 187)
        (nil)))

(note:HI 1423 1422 1435 91 ("./CStatUtilities.c") 297)

(note:HI 1435 1423 1436 91 ("./CStatUtilities.c") 298)

(insn:HI 1436 1435 1437 91 ./CStatUtilities.c:298 (set (reg:DI 191)
        (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 32 [0x20])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 32 [0x20])) [24 S8 A64])
        (nil)))

(insn:HI 1437 1436 1438 91 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 191)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1422 (insn_list:REG_DEP_TRUE 1436 (nil)))
    (expr_list:REG_DEAD (reg:DI 191)
        (nil)))

(note:HI 1438 1437 1450 91 ("./CStatUtilities.c") 297)

(note:HI 1450 1438 1451 91 ("./CStatUtilities.c") 298)

(insn:HI 1451 1450 1452 91 ./CStatUtilities.c:298 (set (reg:DI 195)
        (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 40 [0x28])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 40 [0x28])) [24 S8 A64])
        (nil)))

(insn:HI 1452 1451 1453 91 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 195)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1437 (insn_list:REG_DEP_TRUE 1451 (nil)))
    (expr_list:REG_DEAD (reg:DI 195)
        (nil)))

(note:HI 1453 1452 1465 91 ("./CStatUtilities.c") 297)

(note:HI 1465 1453 1466 91 ("./CStatUtilities.c") 298)

(insn:HI 1466 1465 1467 91 ./CStatUtilities.c:298 (set (reg:DI 199)
        (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 48 [0x30])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 48 [0x30])) [24 S8 A64])
        (nil)))

(insn:HI 1467 1466 1468 91 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 199)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1452 (insn_list:REG_DEP_TRUE 1466 (nil)))
    (expr_list:REG_DEAD (reg:DI 199)
        (nil)))

(note:HI 1468 1467 1480 91 ("./CStatUtilities.c") 297)

(note:HI 1480 1468 1481 91 ("./CStatUtilities.c") 298)

(insn:HI 1481 1480 1482 91 ./CStatUtilities.c:298 (set (reg:DI 203)
        (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 56 [0x38])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                (const_int 56 [0x38])) [24 S8 A64])
        (nil)))

(insn:HI 1482 1481 1483 91 ./CStatUtilities.c:298 (set (reg/v:DF 59 [ avg.563 ])
        (plus:DF (reg/v:DF 59 [ avg.563 ])
            (mem/s:DF (plus:DI (reg:DI 203)
                    (reg:DI 73 [ ivtmp.529 ])) [6 <variable>.signal+0 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 1467 (insn_list:REG_DEP_TRUE 1481 (nil)))
    (expr_list:REG_DEAD (reg:DI 203)
        (nil)))

(note:HI 1483 1482 1484 91 ("./CStatUtilities.c") 297)

(insn:HI 1484 1483 1485 91 ./CStatUtilities.c:297 (parallel [
            (set (reg/v:SI 61 [ col.560 ])
                (plus:SI (reg/v:SI 61 [ col.560 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1485 1484 1486 91 ./CStatUtilities.c:297 (parallel [
            (set (reg/f:DI 66 [ ivtmp.546 ])
                (plus:DI (reg/f:DI 66 [ ivtmp.546 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1486 1485 1487 91 ./CStatUtilities.c:297 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 61 [ col.560 ])
            (reg/v:SI 94 [ ncols ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1484 (nil))
    (nil))

(jump_insn:HI 1487 1486 1492 91 ./CStatUtilities.c:297 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1914)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1486 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 91, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

;; Start of basic block 92, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97
(note:HI 1492 1487 1917 92 [bb 92] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1917 1492 1918 92 (set (pc)
        (label_ref 176)) 548 {jump} (nil)
    (nil))
;; End of basic block 92, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59 61 65 66 67 73 84 93 94 97

(barrier:HI 1918 1917 133)

;; Start of basic block 93, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97
(code_label:HI 133 1918 134 93 457 "" [1 uses])

(note:HI 134 133 135 93 [bb 93] NOTE_INSN_BASIC_BLOCK)

(insn:HI 135 134 136 93 ./CStatUtilities.c:278 (set (reg:DI 72 [ ivtmp.533 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 70 [ ivtmp.539 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 92 [ m ])) [25 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 136 135 1510 93 ./CStatUtilities.c:278 (set (reg/f:DI 144)
        (mem/f:DI (plus:DI (mult:DI (reg:DI 70 [ ivtmp.539 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 67 [ ivtmp.545 ])) [24 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 1510 136 1511 93 NOTE_INSN_DELETED)

(insn:HI 1511 1510 1512 93 (parallel [
            (set (reg:SI 140)
                (plus:SI (reg/v:SI 93 [ nrows ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1512 1511 1515 93 (parallel [
            (set (reg:SI 140)
                (and:SI (reg:SI 140)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 1511 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 1515 1512 1516 93 ("./CStatUtilities.c") 282)

(insn:HI 1516 1515 1517 93 ./CStatUtilities.c:282 (set (reg:DF 100)
        (mem:DF (reg:DI 72 [ ivtmp.533 ]) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 135 (nil))
    (expr_list:REG_EQUIV (mem:DF (reg:DI 72 [ ivtmp.533 ]) [6 S8 A64])
        (nil)))

(insn:HI 1517 1516 1518 93 ./CStatUtilities.c:282 (set (mem/s:DF (reg/f:DI 144) [6 <variable>.signal+0 S8 A8])
        (reg:DF 100)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 136 (insn_list:REG_DEP_TRUE 1516 (nil)))
    (expr_list:REG_DEAD (reg:DF 100)
        (nil)))

(note:HI 1518 1517 1519 93 ("./CStatUtilities.c") 283)

(insn:HI 1519 1518 1520 93 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 144)
                (const_int 8 [0x8])) [4 <variable>.index+0 S4 A8])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 1520 1519 1521 93 ("./CStatUtilities.c") 280)

(insn:HI 1521 1520 1522 93 ./CStatUtilities.c:280 (set (reg/v:SI 145 [ row.551 ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 1522 1521 1523 93 ./CStatUtilities.c:280 (parallel [
            (set (reg:DI 146 [ ivtmp.533 ])
                (plus:DI (reg:DI 72 [ ivtmp.533 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1523 1522 1524 93 ./CStatUtilities.c:280 (parallel [
            (set (reg/f:DI 148 [ ivtmp.535 ])
                (plus:DI (reg/f:DI 144)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1524 1523 1525 93 ./CStatUtilities.c:280 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 145 [ row.551 ])
            (reg/v:SI 93 [ nrows ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1521 (nil))
    (nil))

(jump_insn:HI 1525 1524 1693 93 ./CStatUtilities.c:280 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 151)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1524 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 93, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

;; Start of basic block 94, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
(note:HI 1693 1525 1691 94 [bb 94] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1691 1693 1692 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 1692 1691 1670 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 138)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1691 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 94, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

;; Start of basic block 95, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
(note:HI 1670 1692 1668 95 [bb 95] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1668 1670 1669 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1669 1668 1647 95 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1956)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1668 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 95, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

;; Start of basic block 96, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
(note:HI 1647 1669 1645 96 [bb 96] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1645 1647 1646 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1646 1645 1624 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1957)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1645 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 96, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

;; Start of basic block 97, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
(note:HI 1624 1646 1622 97 [bb 97] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1622 1624 1623 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1623 1622 1601 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1958)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1622 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 97, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

;; Start of basic block 98, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
(note:HI 1601 1623 1599 98 [bb 98] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1599 1601 1600 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1600 1599 1578 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1959)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1599 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 98, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

;; Start of basic block 99, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
(note:HI 1578 1600 1576 99 [bb 99] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1576 1578 1577 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 1577 1576 1555 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1960)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1576 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 99, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148

;; Start of basic block 100, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 140 144 145 146 148
(note:HI 1555 1577 1553 100 [bb 100] NOTE_INSN_BASIC_BLOCK)

(insn:HI 1553 1555 1554 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(jump_insn:HI 1554 1553 1545 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 1961)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1553 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 100, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 144 145 146 148

;; Start of basic block 101, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 72 78 79 84 87 92 93 94 97 144 148
(note:HI 1545 1554 1534 101 [bb 101] NOTE_INSN_BASIC_BLOCK)

(note:HI 1534 1545 1535 101 ("./CStatUtilities.c") 282)

(insn:HI 1535 1534 1536 101 ./CStatUtilities.c:282 (set (reg:DF 324)
        (mem:DF (plus:DI (reg:DI 72 [ ivtmp.533 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 72 [ ivtmp.533 ])
                (const_int 8 [0x8])) [6 S8 A64])
        (nil)))

(insn:HI 1536 1535 1537 101 ./CStatUtilities.c:282 (set (mem/s:DF (plus:DI (reg/f:DI 144)
                (const_int 16 [0x10])) [6 <variable>.signal+0 S8 A8])
        (reg:DF 324)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1535 (nil))
    (expr_list:REG_DEAD (reg:DF 324)
        (nil)))

(note:HI 1537 1536 1538 101 ("./CStatUtilities.c") 283)

(insn:HI 1538 1537 1539 101 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 8 [0x8])) [4 <variable>.index+0 S4 A8])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/f:DI 148 [ ivtmp.535 ])
        (nil)))

(note:HI 1539 1538 1540 101 ("./CStatUtilities.c") 280)

(insn:HI 1540 1539 1541 101 ./CStatUtilities.c:280 (set (reg/v:SI 145 [ row.551 ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 1541 1540 1542 101 ./CStatUtilities.c:280 (parallel [
            (set (reg:DI 146 [ ivtmp.533 ])
                (plus:DI (reg:DI 72 [ ivtmp.533 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 72 [ ivtmp.533 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 1542 1541 1961 101 ./CStatUtilities.c:280 (parallel [
            (set (reg/f:DI 148 [ ivtmp.535 ])
                (plus:DI (reg/f:DI 144)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 101, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148

;; Start of basic block 102, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
(code_label:HI 1961 1542 1568 102 641 "" [1 uses])

(note:HI 1568 1961 1557 102 [bb 102] NOTE_INSN_BASIC_BLOCK)

(note:HI 1557 1568 1558 102 ("./CStatUtilities.c") 282)

(insn:HI 1558 1557 1559 102 ./CStatUtilities.c:282 (set (reg:DF 325)
        (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])
        (nil)))

(insn:HI 1559 1558 1560 102 ./CStatUtilities.c:282 (set (mem/s:DF (reg/f:DI 148 [ ivtmp.535 ]) [6 <variable>.signal+0 S8 A8])
        (reg:DF 325)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1558 (nil))
    (expr_list:REG_DEAD (reg:DF 325)
        (nil)))

(note:HI 1560 1559 1561 102 ("./CStatUtilities.c") 283)

(insn:HI 1561 1560 1562 102 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 8 [0x8])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 145 [ row.551 ])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 1562 1561 1563 102 ("./CStatUtilities.c") 280)

(insn:HI 1563 1562 1564 102 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 145 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1564 1563 1565 102 ./CStatUtilities.c:280 (parallel [
            (set (reg:DI 146 [ ivtmp.533 ])
                (plus:DI (reg:DI 146 [ ivtmp.533 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1565 1564 1960 102 ./CStatUtilities.c:280 (parallel [
            (set (reg/f:DI 148 [ ivtmp.535 ])
                (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 102, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148

;; Start of basic block 103, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
(code_label:HI 1960 1565 1591 103 640 "" [1 uses])

(note:HI 1591 1960 1580 103 [bb 103] NOTE_INSN_BASIC_BLOCK)

(note:HI 1580 1591 1581 103 ("./CStatUtilities.c") 282)

(insn:HI 1581 1580 1582 103 ./CStatUtilities.c:282 (set (reg:DF 326)
        (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])
        (nil)))

(insn:HI 1582 1581 1583 103 ./CStatUtilities.c:282 (set (mem/s:DF (reg/f:DI 148 [ ivtmp.535 ]) [6 <variable>.signal+0 S8 A8])
        (reg:DF 326)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1581 (nil))
    (expr_list:REG_DEAD (reg:DF 326)
        (nil)))

(note:HI 1583 1582 1584 103 ("./CStatUtilities.c") 283)

(insn:HI 1584 1583 1585 103 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 8 [0x8])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 145 [ row.551 ])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 1585 1584 1586 103 ("./CStatUtilities.c") 280)

(insn:HI 1586 1585 1587 103 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 145 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1587 1586 1588 103 ./CStatUtilities.c:280 (parallel [
            (set (reg:DI 146 [ ivtmp.533 ])
                (plus:DI (reg:DI 146 [ ivtmp.533 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1588 1587 1959 103 ./CStatUtilities.c:280 (parallel [
            (set (reg/f:DI 148 [ ivtmp.535 ])
                (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 103, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148

;; Start of basic block 104, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
(code_label:HI 1959 1588 1614 104 639 "" [1 uses])

(note:HI 1614 1959 1603 104 [bb 104] NOTE_INSN_BASIC_BLOCK)

(note:HI 1603 1614 1604 104 ("./CStatUtilities.c") 282)

(insn:HI 1604 1603 1605 104 ./CStatUtilities.c:282 (set (reg:DF 327)
        (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])
        (nil)))

(insn:HI 1605 1604 1606 104 ./CStatUtilities.c:282 (set (mem/s:DF (reg/f:DI 148 [ ivtmp.535 ]) [6 <variable>.signal+0 S8 A8])
        (reg:DF 327)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1604 (nil))
    (expr_list:REG_DEAD (reg:DF 327)
        (nil)))

(note:HI 1606 1605 1607 104 ("./CStatUtilities.c") 283)

(insn:HI 1607 1606 1608 104 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 8 [0x8])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 145 [ row.551 ])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 1608 1607 1609 104 ("./CStatUtilities.c") 280)

(insn:HI 1609 1608 1610 104 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 145 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1610 1609 1611 104 ./CStatUtilities.c:280 (parallel [
            (set (reg:DI 146 [ ivtmp.533 ])
                (plus:DI (reg:DI 146 [ ivtmp.533 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1611 1610 1958 104 ./CStatUtilities.c:280 (parallel [
            (set (reg/f:DI 148 [ ivtmp.535 ])
                (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 104, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148

;; Start of basic block 105, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
(code_label:HI 1958 1611 1637 105 638 "" [1 uses])

(note:HI 1637 1958 1626 105 [bb 105] NOTE_INSN_BASIC_BLOCK)

(note:HI 1626 1637 1627 105 ("./CStatUtilities.c") 282)

(insn:HI 1627 1626 1628 105 ./CStatUtilities.c:282 (set (reg:DF 328)
        (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])
        (nil)))

(insn:HI 1628 1627 1629 105 ./CStatUtilities.c:282 (set (mem/s:DF (reg/f:DI 148 [ ivtmp.535 ]) [6 <variable>.signal+0 S8 A8])
        (reg:DF 328)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1627 (nil))
    (expr_list:REG_DEAD (reg:DF 328)
        (nil)))

(note:HI 1629 1628 1630 105 ("./CStatUtilities.c") 283)

(insn:HI 1630 1629 1631 105 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 8 [0x8])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 145 [ row.551 ])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 1631 1630 1632 105 ("./CStatUtilities.c") 280)

(insn:HI 1632 1631 1633 105 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 145 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1633 1632 1634 105 ./CStatUtilities.c:280 (parallel [
            (set (reg:DI 146 [ ivtmp.533 ])
                (plus:DI (reg:DI 146 [ ivtmp.533 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1634 1633 1957 105 ./CStatUtilities.c:280 (parallel [
            (set (reg/f:DI 148 [ ivtmp.535 ])
                (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 105, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148

;; Start of basic block 106, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
(code_label:HI 1957 1634 1660 106 637 "" [1 uses])

(note:HI 1660 1957 1649 106 [bb 106] NOTE_INSN_BASIC_BLOCK)

(note:HI 1649 1660 1650 106 ("./CStatUtilities.c") 282)

(insn:HI 1650 1649 1651 106 ./CStatUtilities.c:282 (set (reg:DF 329)
        (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])
        (nil)))

(insn:HI 1651 1650 1652 106 ./CStatUtilities.c:282 (set (mem/s:DF (reg/f:DI 148 [ ivtmp.535 ]) [6 <variable>.signal+0 S8 A8])
        (reg:DF 329)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1650 (nil))
    (expr_list:REG_DEAD (reg:DF 329)
        (nil)))

(note:HI 1652 1651 1653 106 ("./CStatUtilities.c") 283)

(insn:HI 1653 1652 1654 106 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 8 [0x8])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 145 [ row.551 ])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 1654 1653 1655 106 ("./CStatUtilities.c") 280)

(insn:HI 1655 1654 1656 106 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 145 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1656 1655 1657 106 ./CStatUtilities.c:280 (parallel [
            (set (reg:DI 146 [ ivtmp.533 ])
                (plus:DI (reg:DI 146 [ ivtmp.533 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1657 1656 1956 106 ./CStatUtilities.c:280 (parallel [
            (set (reg/f:DI 148 [ ivtmp.535 ])
                (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 106, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148

;; Start of basic block 107, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
(code_label:HI 1956 1657 1683 107 636 "" [1 uses])

(note:HI 1683 1956 1672 107 [bb 107] NOTE_INSN_BASIC_BLOCK)

(note:HI 1672 1683 1673 107 ("./CStatUtilities.c") 282)

(insn:HI 1673 1672 1674 107 ./CStatUtilities.c:282 (set (reg:DF 330)
        (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])
        (nil)))

(insn:HI 1674 1673 1675 107 ./CStatUtilities.c:282 (set (mem/s:DF (reg/f:DI 148 [ ivtmp.535 ]) [6 <variable>.signal+0 S8 A8])
        (reg:DF 330)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1673 (nil))
    (expr_list:REG_DEAD (reg:DF 330)
        (nil)))

(note:HI 1675 1674 1676 107 ("./CStatUtilities.c") 283)

(insn:HI 1676 1675 1677 107 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 8 [0x8])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 145 [ row.551 ])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 1677 1676 1678 107 ("./CStatUtilities.c") 280)

(insn:HI 1678 1677 1679 107 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 145 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1679 1678 1680 107 ./CStatUtilities.c:280 (parallel [
            (set (reg:DI 146 [ ivtmp.533 ])
                (plus:DI (reg:DI 146 [ ivtmp.533 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1680 1679 1681 107 ./CStatUtilities.c:280 (parallel [
            (set (reg/f:DI 148 [ ivtmp.535 ])
                (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1681 1680 1682 107 ./CStatUtilities.c:280 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 145 [ row.551 ])
            (reg/v:SI 93 [ nrows ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1678 (nil))
    (nil))

(jump_insn:HI 1682 1681 138 107 ./CStatUtilities.c:280 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 151)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1681 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 107, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148

;; Start of basic block 108, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
(code_label:HI 138 1682 139 108 459 "" [2 uses])

(note:HI 139 138 140 108 [bb 108] NOTE_INSN_BASIC_BLOCK)

(note:HI 140 139 141 108 ("./CStatUtilities.c") 282)

(insn:HI 141 140 142 108 ./CStatUtilities.c:282 (set (reg:DF 147)
        (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg:DI 146 [ ivtmp.533 ]) [6 S8 A64])
        (nil)))

(insn:HI 142 141 143 108 ./CStatUtilities.c:282 (set (mem/s:DF (reg/f:DI 148 [ ivtmp.535 ]) [6 <variable>.signal+0 S8 A8])
        (reg:DF 147)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 141 (nil))
    (expr_list:REG_DEAD (reg:DF 147)
        (nil)))

(note:HI 143 142 144 108 ("./CStatUtilities.c") 283)

(insn:HI 144 143 145 108 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 8 [0x8])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 145 [ row.551 ])) 40 {*movsi_1} (nil)
    (nil))

(note:HI 145 144 1820 108 ("./CStatUtilities.c") 280)

(insn:HI 1820 145 1822 108 ./CStatUtilities.c:280 (parallel [
            (set (reg:SI 143)
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 24 [0x18])) [4 <variable>.index+0 S4 A8])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 1822 1820 1695 108 NOTE_INSN_DELETED)

(note:HI 1695 1822 1696 108 ("./CStatUtilities.c") 282)

(insn:HI 1696 1695 1697 108 ./CStatUtilities.c:282 (set (reg:DF 151)
        (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 8 [0x8])) [6 S8 A64])
        (nil)))

(insn:HI 1697 1696 1698 108 ./CStatUtilities.c:282 (set (mem/s:DF (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 16 [0x10])) [6 <variable>.signal+0 S8 A8])
        (reg:DF 151)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1696 (nil))
    (expr_list:REG_DEAD (reg:DF 151)
        (nil)))

(note:HI 1698 1697 1699 108 ("./CStatUtilities.c") 283)

(insn:HI 1699 1698 1700 108 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 24 [0x18])) [4 <variable>.index+0 S4 A8])
        (reg:SI 143)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1820 (nil))
    (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(note:HI 1700 1699 1701 108 ("./CStatUtilities.c") 280)

(insn:HI 1701 1700 1703 108 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 153 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 40 [0x28])) [4 <variable>.index+0 S4 A8])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 1703 1701 1713 108 NOTE_INSN_DELETED)

(note:HI 1713 1703 1714 108 ("./CStatUtilities.c") 282)

(insn:HI 1714 1713 1715 108 ./CStatUtilities.c:282 (set (reg:DF 155)
        (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 16 [0x10])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 16 [0x10])) [6 S8 A64])
        (nil)))

(insn:HI 1715 1714 1716 108 ./CStatUtilities.c:282 (set (mem/s:DF (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 32 [0x20])) [6 <variable>.signal+0 S8 A8])
        (reg:DF 155)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1714 (nil))
    (expr_list:REG_DEAD (reg:DF 155)
        (nil)))

(note:HI 1716 1715 1717 108 ("./CStatUtilities.c") 283)

(insn:HI 1717 1716 1718 108 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 40 [0x28])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 153 [ row.551 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1701 (nil))
    (expr_list:REG_DEAD (reg/v:SI 153 [ row.551 ])
        (nil)))

(note:HI 1718 1717 1719 108 ("./CStatUtilities.c") 280)

(insn:HI 1719 1718 1721 108 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 157 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 56 [0x38])) [4 <variable>.index+0 S4 A8])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 1721 1719 1731 108 NOTE_INSN_DELETED)

(note:HI 1731 1721 1732 108 ("./CStatUtilities.c") 282)

(insn:HI 1732 1731 1733 108 ./CStatUtilities.c:282 (set (reg:DF 159)
        (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 24 [0x18])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 24 [0x18])) [6 S8 A64])
        (nil)))

(insn:HI 1733 1732 1734 108 ./CStatUtilities.c:282 (set (mem/s:DF (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 48 [0x30])) [6 <variable>.signal+0 S8 A8])
        (reg:DF 159)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1732 (nil))
    (expr_list:REG_DEAD (reg:DF 159)
        (nil)))

(note:HI 1734 1733 1735 108 ("./CStatUtilities.c") 283)

(insn:HI 1735 1734 1736 108 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 56 [0x38])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 157 [ row.551 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1719 (nil))
    (expr_list:REG_DEAD (reg/v:SI 157 [ row.551 ])
        (nil)))

(note:HI 1736 1735 1737 108 ("./CStatUtilities.c") 280)

(insn:HI 1737 1736 1739 108 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 161 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 72 [0x48])) [4 <variable>.index+0 S4 A8])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 1739 1737 1749 108 NOTE_INSN_DELETED)

(note:HI 1749 1739 1750 108 ("./CStatUtilities.c") 282)

(insn:HI 1750 1749 1751 108 ./CStatUtilities.c:282 (set (reg:DF 163)
        (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 32 [0x20])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 32 [0x20])) [6 S8 A64])
        (nil)))

(insn:HI 1751 1750 1752 108 ./CStatUtilities.c:282 (set (mem/s:DF (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 64 [0x40])) [6 <variable>.signal+0 S8 A8])
        (reg:DF 163)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1750 (nil))
    (expr_list:REG_DEAD (reg:DF 163)
        (nil)))

(note:HI 1752 1751 1753 108 ("./CStatUtilities.c") 283)

(insn:HI 1753 1752 1754 108 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 72 [0x48])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 161 [ row.551 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1737 (nil))
    (expr_list:REG_DEAD (reg/v:SI 161 [ row.551 ])
        (nil)))

(note:HI 1754 1753 1755 108 ("./CStatUtilities.c") 280)

(insn:HI 1755 1754 1757 108 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 165 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 88 [0x58])) [4 <variable>.index+0 S4 A8])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 1757 1755 1767 108 NOTE_INSN_DELETED)

(note:HI 1767 1757 1768 108 ("./CStatUtilities.c") 282)

(insn:HI 1768 1767 1769 108 ./CStatUtilities.c:282 (set (reg:DF 167)
        (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 40 [0x28])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 40 [0x28])) [6 S8 A64])
        (nil)))

(insn:HI 1769 1768 1770 108 ./CStatUtilities.c:282 (set (mem/s:DF (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 80 [0x50])) [6 <variable>.signal+0 S8 A8])
        (reg:DF 167)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1768 (nil))
    (expr_list:REG_DEAD (reg:DF 167)
        (nil)))

(note:HI 1770 1769 1771 108 ("./CStatUtilities.c") 283)

(insn:HI 1771 1770 1772 108 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 88 [0x58])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 165 [ row.551 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1755 (nil))
    (expr_list:REG_DEAD (reg/v:SI 165 [ row.551 ])
        (nil)))

(note:HI 1772 1771 1773 108 ("./CStatUtilities.c") 280)

(insn:HI 1773 1772 1775 108 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 169 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 104 [0x68])) [4 <variable>.index+0 S4 A8])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 1775 1773 1785 108 NOTE_INSN_DELETED)

(note:HI 1785 1775 1786 108 ("./CStatUtilities.c") 282)

(insn:HI 1786 1785 1787 108 ./CStatUtilities.c:282 (set (reg:DF 171)
        (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 48 [0x30])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 48 [0x30])) [6 S8 A64])
        (nil)))

(insn:HI 1787 1786 1788 108 ./CStatUtilities.c:282 (set (mem/s:DF (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 96 [0x60])) [6 <variable>.signal+0 S8 A8])
        (reg:DF 171)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1786 (nil))
    (expr_list:REG_DEAD (reg:DF 171)
        (nil)))

(note:HI 1788 1787 1789 108 ("./CStatUtilities.c") 283)

(insn:HI 1789 1788 1790 108 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 104 [0x68])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 169 [ row.551 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1773 (nil))
    (expr_list:REG_DEAD (reg/v:SI 169 [ row.551 ])
        (nil)))

(note:HI 1790 1789 1791 108 ("./CStatUtilities.c") 280)

(insn:HI 1791 1790 1793 108 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 173 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_EQUIV (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 120 [0x78])) [4 <variable>.index+0 S4 A8])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(note:HI 1793 1791 1803 108 NOTE_INSN_DELETED)

(note:HI 1803 1793 1804 108 ("./CStatUtilities.c") 282)

(insn:HI 1804 1803 1805 108 ./CStatUtilities.c:282 (set (reg:DF 175)
        (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 56 [0x38])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg:DI 146 [ ivtmp.533 ])
                (const_int 56 [0x38])) [6 S8 A64])
        (nil)))

(insn:HI 1805 1804 1806 108 ./CStatUtilities.c:282 (set (mem/s:DF (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 112 [0x70])) [6 <variable>.signal+0 S8 A8])
        (reg:DF 175)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 1804 (nil))
    (expr_list:REG_DEAD (reg:DF 175)
        (nil)))

(note:HI 1806 1805 1807 108 ("./CStatUtilities.c") 283)

(insn:HI 1807 1806 1808 108 ./CStatUtilities.c:283 (set (mem/s:SI (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                (const_int 120 [0x78])) [4 <variable>.index+0 S4 A8])
        (reg/v:SI 173 [ row.551 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 1791 (nil))
    (expr_list:REG_DEAD (reg/v:SI 173 [ row.551 ])
        (nil)))

(note:HI 1808 1807 1809 108 ("./CStatUtilities.c") 280)

(insn:HI 1809 1808 1810 108 ./CStatUtilities.c:280 (parallel [
            (set (reg/v:SI 145 [ row.551 ])
                (plus:SI (reg/v:SI 145 [ row.551 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1810 1809 1811 108 ./CStatUtilities.c:280 (parallel [
            (set (reg:DI 146 [ ivtmp.533 ])
                (plus:DI (reg:DI 146 [ ivtmp.533 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1811 1810 1812 108 ./CStatUtilities.c:280 (parallel [
            (set (reg/f:DI 148 [ ivtmp.535 ])
                (plus:DI (reg/f:DI 148 [ ivtmp.535 ])
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 1812 1811 1813 108 ./CStatUtilities.c:280 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 145 [ row.551 ])
            (reg/v:SI 93 [ nrows ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 1809 (nil))
    (nil))

(jump_insn:HI 1813 1812 1818 108 ./CStatUtilities.c:280 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 151)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 1812 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 108, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148

;; Start of basic block 109, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148
(note:HI 1818 1813 1922 109 [bb 109] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 1922 1818 1923 109 (set (pc)
        (label_ref 138)) 548 {jump} (nil)
    (nil))
;; End of basic block 109, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 60 67 70 78 79 84 87 92 93 94 97 144 145 146 148

(barrier:HI 1923 1922 0)


;; Function medianInPlace (medianInPlace)



Pass 0

  Register 59 costs: AREG:18252 DREG:18252 CREG:18252 BREG:18252 SIREG:18252 DIREG:18252 AD_REGS:18252 Q_REGS:18252 NON_Q_REGS:51980 INDEX_REGS:18252 LEGACY_REGS:51980 GENERAL_REGS:51980 FP_TOP_REG:29484 FP_SECOND_REG:29484 FLOAT_REGS:29484 SSE_REGS:0 FP_TOP_SSE_REGS:29484 FP_SECOND_SSE_REGS:29484 FLOAT_SSE_REGS:29484 FLOAT_INT_REGS:29484 INT_SSE_REGS:18252 FLOAT_INT_SSE_REGS:29484 ALL_REGS:71148 MEM:18176
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:39585 MMX_REGS:39585 FP_TOP_SSE_REGS:39585 FP_SECOND_SSE_REGS:39585 FLOAT_SSE_REGS:39585 FLOAT_INT_REGS:27405 INT_SSE_REGS:39585 FLOAT_INT_SSE_REGS:39585 ALL_REGS:39585 MEM:11478
  Register 62 costs: AREG:1404 DREG:1404 CREG:1404 BREG:1404 SIREG:404 DIREG:1404 AD_REGS:1404 Q_REGS:1404 NON_Q_REGS:1404 INDEX_REGS:1404 LEGACY_REGS:1404 GENERAL_REGS:1404 SSE_REGS:73138 MMX_REGS:73138 INT_SSE_REGS:73138 MEM:19668
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-702 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18252 MMX_REGS:18252 FP_TOP_SSE_REGS:18252 FP_SECOND_SSE_REGS:18252 FLOAT_SSE_REGS:18252 FLOAT_INT_REGS:12636 INT_SSE_REGS:18252 FLOAT_INT_SSE_REGS:18252 ALL_REGS:18252 MEM:4914
  Register 66 costs: AREG:702 DREG:702 CREG:702 BREG:702 SIREG:702 DIREG:702 AD_REGS:702 Q_REGS:702 NON_Q_REGS:702 INDEX_REGS:702 LEGACY_REGS:702 GENERAL_REGS:702 SSE_REGS:9828 MMX_REGS:9828 FP_TOP_SSE_REGS:9828 FP_SECOND_SSE_REGS:9828 FLOAT_SSE_REGS:9828 FLOAT_INT_REGS:7020 INT_SSE_REGS:9828 FLOAT_INT_SSE_REGS:9828 ALL_REGS:9828 MEM:2808
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18252 MMX_REGS:18252 INT_SSE_REGS:18252 MEM:4212
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1404 INDEX_REGS:0 LEGACY_REGS:1404 GENERAL_REGS:1404 SSE_REGS:13689 MMX_REGS:13689 FP_TOP_SSE_REGS:13689 FP_SECOND_SSE_REGS:13689 FLOAT_SSE_REGS:13689 FLOAT_INT_REGS:9477 INT_SSE_REGS:13689 FLOAT_INT_SSE_REGS:13689 ALL_REGS:13689 MEM:4212
  Register 74 costs: AREG:702 DREG:702 CREG:702 BREG:702 SIREG:702 DIREG:702 AD_REGS:702 Q_REGS:702 NON_Q_REGS:702 INDEX_REGS:702 LEGACY_REGS:702 GENERAL_REGS:702 SSE_REGS:9828 MMX_REGS:9828 FP_TOP_SSE_REGS:9828 FP_SECOND_SSE_REGS:9828 FLOAT_SSE_REGS:9828 FLOAT_INT_REGS:7020 INT_SSE_REGS:9828 FLOAT_INT_SSE_REGS:9828 ALL_REGS:9828 MEM:2808
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18252 MMX_REGS:18252 INT_SSE_REGS:18252 MEM:4212
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:702 INDEX_REGS:0 LEGACY_REGS:702 GENERAL_REGS:702 SSE_REGS:9126 MMX_REGS:9126 FP_TOP_SSE_REGS:9126 FP_SECOND_SSE_REGS:9126 FLOAT_SSE_REGS:9126 FLOAT_INT_REGS:6318 INT_SSE_REGS:9126 FLOAT_INT_SSE_REGS:9126 ALL_REGS:9126 MEM:2808

  Register 59 pref SSE_REGS or none
  Register 61 pref DIREG, else GENERAL_REGS
  Register 62 pref SIREG, else GENERAL_REGS
  Register 63 pref SIREG, else GENERAL_REGS
  Register 66 pref GENERAL_REGS or none
  Register 67 pref GENERAL_REGS or none
  Register 69 pref INDEX_REGS, else GENERAL_REGS
  Register 74 pref GENERAL_REGS or none
  Register 75 pref GENERAL_REGS or none
  Register 77 pref INDEX_REGS, else GENERAL_REGS


Pass 1

  Register 59 costs: AREG:18252 DREG:18252 CREG:18252 BREG:18252 SIREG:18252 DIREG:18252 AD_REGS:18252 Q_REGS:18252 NON_Q_REGS:51980 INDEX_REGS:18252 LEGACY_REGS:51980 GENERAL_REGS:51980 FP_TOP_REG:29484 FP_SECOND_REG:29484 FLOAT_REGS:29484 SSE_REGS:0 FP_TOP_SSE_REGS:29484 FP_SECOND_SSE_REGS:29484 FLOAT_SSE_REGS:29484 FLOAT_INT_REGS:29484 INT_SSE_REGS:18252 FLOAT_INT_SSE_REGS:29484 ALL_REGS:71148 MEM:18176
  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1000 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:39585 MMX_REGS:39585 FP_TOP_SSE_REGS:39585 FP_SECOND_SSE_REGS:39585 FLOAT_SSE_REGS:39585 FLOAT_INT_REGS:27405 INT_SSE_REGS:39585 FLOAT_INT_SSE_REGS:39585 ALL_REGS:39585 MEM:11478
  Register 62 costs: AREG:1404 DREG:1404 CREG:1404 BREG:1404 SIREG:404 DIREG:1404 AD_REGS:1404 Q_REGS:1404 NON_Q_REGS:1404 INDEX_REGS:1404 LEGACY_REGS:1404 GENERAL_REGS:1404 SSE_REGS:73138 MMX_REGS:73138 INT_SSE_REGS:73138 MEM:19668
  Register 63 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-702 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18252 MMX_REGS:18252 FP_TOP_SSE_REGS:18252 FP_SECOND_SSE_REGS:18252 FLOAT_SSE_REGS:18252 FLOAT_INT_REGS:12636 INT_SSE_REGS:18252 FLOAT_INT_SSE_REGS:18252 ALL_REGS:18252 MEM:4914
  Register 66 costs: AREG:702 DREG:702 CREG:702 BREG:702 SIREG:702 DIREG:702 AD_REGS:702 Q_REGS:702 NON_Q_REGS:702 INDEX_REGS:702 LEGACY_REGS:702 GENERAL_REGS:702 SSE_REGS:9828 MMX_REGS:9828 FP_TOP_SSE_REGS:9828 FP_SECOND_SSE_REGS:9828 FLOAT_SSE_REGS:9828 FLOAT_INT_REGS:7020 INT_SSE_REGS:9828 FLOAT_INT_SSE_REGS:9828 ALL_REGS:9828 MEM:2808
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18252 MMX_REGS:18252 INT_SSE_REGS:18252 MEM:4212
  Register 69 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:1404 INDEX_REGS:0 LEGACY_REGS:1404 GENERAL_REGS:1404 SSE_REGS:13689 MMX_REGS:13689 FP_TOP_SSE_REGS:13689 FP_SECOND_SSE_REGS:13689 FLOAT_SSE_REGS:13689 FLOAT_INT_REGS:9477 INT_SSE_REGS:13689 FLOAT_INT_SSE_REGS:13689 ALL_REGS:13689 MEM:4212
  Register 74 costs: AREG:702 DREG:702 CREG:702 BREG:702 SIREG:702 DIREG:702 AD_REGS:702 Q_REGS:702 NON_Q_REGS:702 INDEX_REGS:702 LEGACY_REGS:702 GENERAL_REGS:702 SSE_REGS:9828 MMX_REGS:9828 FP_TOP_SSE_REGS:9828 FP_SECOND_SSE_REGS:9828 FLOAT_SSE_REGS:9828 FLOAT_INT_REGS:7020 INT_SSE_REGS:9828 FLOAT_INT_SSE_REGS:9828 ALL_REGS:9828 MEM:2808
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18252 MMX_REGS:18252 INT_SSE_REGS:18252 MEM:4212
  Register 77 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:702 INDEX_REGS:0 LEGACY_REGS:702 GENERAL_REGS:702 SSE_REGS:9126 MMX_REGS:9126 FP_TOP_SSE_REGS:9126 FP_SECOND_SSE_REGS:9126 FLOAT_SSE_REGS:9126 FLOAT_INT_REGS:6318 INT_SSE_REGS:9126 FLOAT_INT_SSE_REGS:9126 ALL_REGS:9126 MEM:2808

79 registers.

Register 59 used 8 times across 10 insns; set 5 times; user var; SSE_REGS or none.

Register 61 used 6 times across 26 insns; set 1 time; user var; dies in 3 places; crosses 1 call; pref DIREG, else GENERAL_REGS; pointer.

Register 62 used 9 times across 17 insns; set 1 time; user var; dies in 2 places; crosses 1 call; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 63 used 2 times across 4 insns in block 4; set 1 time; pref SIREG, else GENERAL_REGS.

Register 66 used 2 times across 2 insns in block 5; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 67 used 4 times across 4 insns in block 5; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 69 used 3 times across 3 insns in block 5; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 74 used 2 times across 2 insns in block 6; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 75 used 4 times across 4 insns in block 6; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 77 used 2 times across 2 insns in block 6; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

8 basic blocks, 11 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [71.0%]  1 [29.0%]  (fallthru)
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  0 [29.0%]  (fallthru)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 7100, maybe hot.
Predecessors:  0 [71.0%] 
Successors:  4 [99.0%]  3 [1.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 71, maybe hot.
Predecessors:  2 [1.0%]  (fallthru)
Successors: 
Registers live at start: 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 7 [sp] 16 [argp] 20 [frame]

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 7029, maybe hot.
Predecessors:  2 [99.0%] 
Successors:  6 [50.0%]  5 [50.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 3514, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 3514, maybe hot.
Predecessors:  4 [50.0%] 
Successors:  7 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

Basic block 7 prev 6, next -2, loop_depth 0, count 0, freq 9929, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 1 [100.0%]  5 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Register 63 in 4.
;; Register 66 in 0.
;; Register 67 in 0.
;; Register 69 in 0.
;; Register 74 in 0.
;; Register 75 in 0.
;; Register 77 in 0.
(note:HI 1 0 7 ("./CStatUtilities.c") 164)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 7 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 7 4 0 ./CStatUtilities.c:164 (set (reg/v/f:DI 61 [ a ])
        (reg:DI 5 di [ a ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ a ])
        (nil)))

(insn:HI 4 3 5 0 ./CStatUtilities.c:164 (set (reg/v:SI 62 [ n ])
        (reg:SI 4 si [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))

(note:HI 5 4 9 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 9 5 10 0 ("./CStatUtilities.c") 167)

(insn:HI 10 9 11 0 ./CStatUtilities.c:167 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 62 [ n ])
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(jump_insn:HI 11 10 14 0 ./CStatUtilities.c:167 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62

(note:HI 14 11 13 ("./CStatUtilities.c") 168)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61
(note:HI 13 14 15 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 15 13 88 1 ./CStatUtilities.c:168 (set (reg/v:DF 59 [ median ])
        (mem:DF (reg/v/f:DI 61 [ a ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 61 [ a ])
        (nil)))

(jump_insn:HI 88 15 89 1 (set (pc)
        (label_ref 70)) 548 {jump} (nil)
    (nil))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier:HI 89 88 18)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62
(code_label:HI 18 89 19 2 646 "" [1 uses])

(note:HI 19 18 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 20 19 21 2 ("./CStatUtilities.c") 169)

(insn:HI 21 20 22 2 ./CStatUtilities.c:169 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 62 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 22 21 25 2 ./CStatUtilities.c:169 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 21 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62

(note:HI 25 22 24 ("./CStatUtilities.c") 171)

;; Start of basic block 3, registers live: 7 [sp] 16 [argp] 20 [frame]
(note:HI 24 25 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 26 24 27 3 ./CStatUtilities.c:171 (set (reg:DI 2 cx [ stderr ])
        (mem/f/c/i:DI (symbol_ref:DI ("stderr") [flags 0x40] <var_decl 0x2b4e9c5c1e70 stderr>) [17 stderr+0 S8 A64])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 27 26 28 3 ./CStatUtilities.c:171 (set (reg:DI 1 dx)
        (const_int 54 [0x36])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 28 27 29 3 ./CStatUtilities.c:171 (set (reg:DI 4 si)
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 29 28 30 3 ./CStatUtilities.c:171 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2] <string_cst 0x2b4e9c8d5070>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 30 29 31 3 ./CStatUtilities.c:171 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41] <function_decl 0x2b4e9c460400 __builtin_fwrite>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_TRUE 27 (insn_list:REG_DEP_TRUE 28 (insn_list:REG_DEP_TRUE 29 (nil)))))
    (expr_list:REG_UNUSED (reg:DI 0 ax)
        (expr_list:REG_DEAD (reg:DI 2 cx [ stderr ])
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 5 di)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx [ stderr ]))
                    (nil))))))

(note:HI 31 30 32 3 ("./CStatUtilities.c") 172)

(insn:HI 32 31 33 3 ./CStatUtilities.c:172 (set (reg:SI 5 di)
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(call_insn:HI 33 32 34 3 ./CStatUtilities.c:172 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41] <function_decl 0x2b4e9c475100 exit>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 3, registers live:
 7 [sp] 16 [argp] 20 [frame]

(barrier:HI 34 33 35)

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62
(code_label:HI 35 34 36 4 649 "" [1 uses])

(note:HI 36 35 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 37 36 38 4 ("./CStatUtilities.c") 175)

(insn:HI 38 37 39 4 ./CStatUtilities.c:175 (set (reg:DI 63 [ n ])
        (sign_extend:DI (reg/v:SI 62 [ n ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 39 38 40 4 ./CStatUtilities.c:175 (set (reg:DI 2 cx)
        (symbol_ref:DI ("compareDouble") [flags 0x41] <function_decl 0x2b4e9c7ebc00 compareDouble>)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 40 39 41 4 ./CStatUtilities.c:175 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 41 40 42 4 ./CStatUtilities.c:175 (set (reg:DI 4 si [ n ])
        (reg:DI 63 [ n ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 38 (nil))
    (expr_list:REG_DEAD (reg:DI 63 [ n ])
        (nil)))

(insn:HI 42 41 43 4 ./CStatUtilities.c:175 (set (reg:DI 5 di [ a ])
        (reg/v/f:DI 61 [ a ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 43 42 44 4 ./CStatUtilities.c:175 (call (mem:QI (symbol_ref:DI ("qsort") [flags 0x41] <function_decl 0x2b4e9c73d700 qsort>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 39 (insn_list:REG_DEP_TRUE 40 (insn_list:REG_DEP_TRUE 41 (insn_list:REG_DEP_TRUE 42 (nil)))))
    (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_DEAD (reg:DI 4 si [ n ])
                (expr_list:REG_DEAD (reg:DI 5 di [ a ])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ a ]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si [ n ]))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(note:HI 44 43 45 4 ("./CStatUtilities.c") 177)

(note:HI 45 44 93 4 NOTE_INSN_DELETED)

(insn 93 45 47 4 ./CStatUtilities.c:177 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:SI (reg/v:SI 62 [ n ])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 287 {testsi_1} (nil)
    (nil))

(jump_insn:HI 47 93 50 4 ./CStatUtilities.c:177 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62

(note:HI 50 47 49 ("./CStatUtilities.c") 178)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62
(note:HI 49 50 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 51 49 52 5 ./CStatUtilities.c:178 (parallel [
            (set (reg:SI 66)
                (lshiftrt:SI (reg/v:SI 62 [ n ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 476 {*lshrsi3_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 52 51 53 5 ./CStatUtilities.c:178 (parallel [
            (set (reg:SI 67)
                (plus:SI (reg:SI 66)
                    (reg/v:SI 62 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 51 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 66)
            (expr_list:REG_DEAD (reg/v:SI 62 [ n ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(insn:HI 53 52 54 5 ./CStatUtilities.c:178 (parallel [
            (set (reg:SI 67)
                (ashiftrt:SI (reg:SI 67)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 441 {*ashrsi3_1_one_bit} (insn_list:REG_DEP_TRUE 52 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg/v:SI 62 [ n ])
                    (const_int 2 [0x2]))
                (nil)))))

(insn:HI 54 53 55 5 ./CStatUtilities.c:178 (set (reg:DI 69)
        (sign_extend:DI (reg:SI 67))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 53 (nil))
    (expr_list:REG_DEAD (reg:SI 67)
        (nil)))

(note:HI 55 54 56 5 NOTE_INSN_DELETED)

(insn:HI 56 55 57 5 ./CStatUtilities.c:178 (set (reg/v:DF 59 [ median ])
        (mem:DF (plus:DI (plus:DI (mult:DI (reg:DI 69)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 61 [ a ]))
                (const_int -8 [0xfffffffffffffff8])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 54 (nil))
    (nil))

(insn:HI 57 56 58 5 ./CStatUtilities.c:178 (set (reg/v:DF 59 [ median ])
        (plus:DF (reg/v:DF 59 [ median ])
            (mem:DF (plus:DI (mult:DI (reg:DI 69)
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 61 [ a ])) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 56 (nil))
    (expr_list:REG_DEAD (reg:DI 69)
        (expr_list:REG_DEAD (reg/v/f:DI 61 [ a ])
            (nil))))

(note:HI 58 57 59 5 NOTE_INSN_DELETED)

(insn:HI 59 58 90 5 ./CStatUtilities.c:178 (set (reg/v:DF 59 [ median ])
        (mult:DF (reg/v:DF 59 [ median ])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 57 (nil))
    (nil))

(jump_insn:HI 90 59 91 5 (set (pc)
        (label_ref 70)) 548 {jump} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier:HI 91 90 62)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62
(code_label:HI 62 91 63 6 651 "" [1 uses])

(note:HI 63 62 64 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note:HI 64 63 65 6 ("./CStatUtilities.c") 180)

(insn:HI 65 64 66 6 ./CStatUtilities.c:180 (parallel [
            (set (reg:SI 74)
                (lshiftrt:SI (reg/v:SI 62 [ n ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) 476 {*lshrsi3_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 66 65 67 6 ./CStatUtilities.c:180 (parallel [
            (set (reg:SI 75)
                (plus:SI (reg:SI 74)
                    (reg/v:SI 62 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (insn_list:REG_DEP_TRUE 65 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 74)
            (expr_list:REG_DEAD (reg/v:SI 62 [ n ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))

(insn:HI 67 66 68 6 ./CStatUtilities.c:180 (parallel [
            (set (reg:SI 75)
                (ashiftrt:SI (reg:SI 75)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 441 {*ashrsi3_1_one_bit} (insn_list:REG_DEP_TRUE 66 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg/v:SI 62 [ n ])
                    (const_int 2 [0x2]))
                (nil)))))

(insn:HI 68 67 69 6 ./CStatUtilities.c:180 (set (reg:DI 77)
        (sign_extend:DI (reg:SI 75))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 67 (nil))
    (expr_list:REG_DEAD (reg:SI 75)
        (nil)))

(insn:HI 69 68 70 6 ./CStatUtilities.c:180 (set (reg/v:DF 59 [ median ])
        (mem:DF (plus:DI (mult:DI (reg:DI 77)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 61 [ a ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 68 (nil))
    (expr_list:REG_DEAD (reg:DI 77)
        (expr_list:REG_DEAD (reg/v/f:DI 61 [ a ])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
(code_label:HI 70 69 71 7 648 "" [2 uses])

(note:HI 71 70 75 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 75 71 76 7 NOTE_INSN_FUNCTION_END)

(note:HI 76 75 78 7 ("./CStatUtilities.c") 183)

(insn:HI 78 76 84 7 ./CStatUtilities.c:183 (set (reg/i:DF 21 xmm0 [ <result> ])
        (reg/v:DF 59 [ median ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 59 [ median ])
        (nil)))

(insn:HI 84 78 0 7 ./CStatUtilities.c:183 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 78 (nil))
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function TukeyBiweight (TukeyBiweight)



Pass 0

  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:21164 MMX_REGS:21164 FP_TOP_SSE_REGS:21164 FP_SECOND_SSE_REGS:21164 FLOAT_SSE_REGS:21164 FLOAT_INT_REGS:14652 INT_SSE_REGS:21164 FLOAT_INT_SSE_REGS:21164 ALL_REGS:21164 MEM:5770
  Register 62 costs: AREG:7520 DREG:7520 CREG:7520 BREG:7520 SIREG:7520 DIREG:7520 AD_REGS:7520 Q_REGS:7520 NON_Q_REGS:10954 INDEX_REGS:7520 LEGACY_REGS:10954 GENERAL_REGS:10954 FP_TOP_REG:12096 FP_SECOND_REG:12096 FLOAT_REGS:12096 SSE_REGS:84 FP_TOP_SSE_REGS:12096 FP_SECOND_SSE_REGS:12096 FLOAT_SSE_REGS:12096 FLOAT_INT_REGS:12096 INT_SSE_REGS:7520 FLOAT_INT_SSE_REGS:12096 ALL_REGS:16338 MEM:4980
  Register 63 costs: AREG:13580 DREG:13580 CREG:13580 BREG:13580 SIREG:13580 DIREG:13580 AD_REGS:13580 Q_REGS:13580 NON_Q_REGS:13580 INDEX_REGS:13580 LEGACY_REGS:13580 GENERAL_REGS:13580 FP_TOP_REG:21388 FP_SECOND_REG:21388 FLOAT_REGS:21388 SSE_REGS:892 FP_TOP_SSE_REGS:21388 FP_SECOND_SSE_REGS:21388 FLOAT_SSE_REGS:21388 FLOAT_INT_REGS:21388 INT_SSE_REGS:13580 FLOAT_INT_SSE_REGS:21388 ALL_REGS:21388 MEM:8574
  Register 64 costs: AREG:16537 DREG:16537 CREG:16537 BREG:16537 SIREG:16537 DIREG:16537 AD_REGS:16537 Q_REGS:16537 NON_Q_REGS:18611 INDEX_REGS:16537 LEGACY_REGS:18611 GENERAL_REGS:18611 FP_TOP_REG:26577 FP_SECOND_REG:26577 FLOAT_REGS:26577 SSE_REGS:222 FP_TOP_SSE_REGS:26577 FP_SECOND_SSE_REGS:26577 FLOAT_SSE_REGS:26577 FLOAT_INT_REGS:26577 INT_SSE_REGS:16537 FLOAT_INT_SSE_REGS:26577 ALL_REGS:29139 MEM:10056
  Register 65 costs: AREG:23089 DREG:23089 CREG:23089 BREG:23089 SIREG:23089 DIREG:23089 AD_REGS:23089 Q_REGS:23089 NON_Q_REGS:23276 INDEX_REGS:23089 LEGACY_REGS:23276 GENERAL_REGS:23276 FP_TOP_REG:37161 FP_SECOND_REG:37161 FLOAT_REGS:37161 SSE_REGS:222 FP_TOP_SSE_REGS:37161 FP_SECOND_SSE_REGS:37161 FLOAT_SSE_REGS:37161 FLOAT_INT_REGS:37161 INT_SSE_REGS:23089 FLOAT_INT_SSE_REGS:37161 ALL_REGS:37392 MEM:13564
  Register 66 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3187 INDEX_REGS:1300 LEGACY_REGS:3187 GENERAL_REGS:3187 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4431 MEM:1144
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18668 MMX_REGS:18668 FP_TOP_SSE_REGS:18668 FP_SECOND_SSE_REGS:18668 FLOAT_SSE_REGS:18668 FLOAT_INT_REGS:12924 INT_SSE_REGS:18668 FLOAT_INT_SSE_REGS:18668 ALL_REGS:18668 MEM:4308
  Register 69 costs: AREG:37664 DREG:37664 CREG:37664 BREG:37664 SIREG:37664 DIREG:37664 AD_REGS:37664 Q_REGS:37664 NON_Q_REGS:39551 INDEX_REGS:37664 LEGACY_REGS:39551 GENERAL_REGS:39551 FP_TOP_REG:59392 FP_SECOND_REG:59392 FLOAT_REGS:59392 SSE_REGS:2356 FP_TOP_SSE_REGS:59392 FP_SECOND_SSE_REGS:59392 FLOAT_SSE_REGS:59392 FLOAT_INT_REGS:59392 INT_SSE_REGS:37664 FLOAT_INT_SSE_REGS:59392 ALL_REGS:61723 MEM:21812
  Register 71 costs: AREG:19214 DREG:19214 CREG:19214 BREG:19214 SIREG:19214 DIREG:19214 AD_REGS:19214 Q_REGS:19214 NON_Q_REGS:19214 INDEX_REGS:19214 LEGACY_REGS:19214 GENERAL_REGS:19214 FP_TOP_REG:31038 FP_SECOND_REG:31038 FLOAT_REGS:31038 SSE_REGS:0 FP_TOP_SSE_REGS:31038 FP_SECOND_SSE_REGS:31038 FLOAT_SSE_REGS:31038 FLOAT_INT_REGS:31038 INT_SSE_REGS:19214 FLOAT_INT_SSE_REGS:31038 ALL_REGS:31038 MEM:10646
  Register 72 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:9090 INDEX_REGS:5656 LEGACY_REGS:9090 GENERAL_REGS:9090 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:13130 MEM:4444
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24180 MMX_REGS:24180 FP_TOP_SSE_REGS:24180 FP_SECOND_SSE_REGS:24180 FLOAT_SSE_REGS:24180 FLOAT_INT_REGS:16740 INT_SSE_REGS:24180 FLOAT_INT_SSE_REGS:24180 ALL_REGS:24180 MEM:7229
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18837 MMX_REGS:18837 INT_SSE_REGS:18837 MEM:4780
  Register 77 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3187 INDEX_REGS:1300 LEGACY_REGS:3187 GENERAL_REGS:3187 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4431 MEM:1144
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:666
  Register 80 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24323 MMX_REGS:24323 FP_TOP_SSE_REGS:24323 FP_SECOND_SSE_REGS:24323 FLOAT_SSE_REGS:24323 FLOAT_INT_REGS:16839 INT_SSE_REGS:24323 FLOAT_INT_SSE_REGS:24323 ALL_REGS:24323 MEM:7262
  Register 82 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:8600 INDEX_REGS:5200 LEGACY_REGS:8600 GENERAL_REGS:8600 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:12600 MEM:4000
  Register 86 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:5656 INDEX_REGS:5656 LEGACY_REGS:5656 GENERAL_REGS:5656 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:8888 MEM:3434
  Register 95 costs: SSE_REGS:2356 FP_TOP_SSE_REGS:50245 FP_SECOND_SSE_REGS:50245 FLOAT_SSE_REGS:50245 INT_SSE_REGS:104565 FLOAT_INT_SSE_REGS:104565 ALL_REGS:104565 MEM:22176
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:25126 INDEX_REGS:0 LEGACY_REGS:25126 GENERAL_REGS:25126 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:31038 MEM:4534
  Register 97 costs: AREG:17659 DREG:17659 CREG:17659 BREG:17659 SIREG:17659 DIREG:17659 AD_REGS:17659 Q_REGS:17659 NON_Q_REGS:19359 INDEX_REGS:17659 LEGACY_REGS:19359 GENERAL_REGS:19359 FP_TOP_REG:28227 FP_SECOND_REG:28227 FLOAT_REGS:28227 SSE_REGS:486 FP_TOP_SSE_REGS:28227 FP_SECOND_SSE_REGS:28227 FLOAT_SSE_REGS:28227 FLOAT_INT_REGS:28227 INT_SSE_REGS:17659 FLOAT_INT_SSE_REGS:28227 ALL_REGS:30327 MEM:11454
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6435 MMX_REGS:6435 FP_TOP_SSE_REGS:6435 FP_SECOND_SSE_REGS:6435 FLOAT_SSE_REGS:6435 FLOAT_INT_REGS:4455 INT_SSE_REGS:6435 FLOAT_INT_SSE_REGS:6435 ALL_REGS:6435 MEM:1645
  Register 103 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1212
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10504 MMX_REGS:10504 FP_TOP_SSE_REGS:10504 FP_SECOND_SSE_REGS:10504 FLOAT_SSE_REGS:10504 FLOAT_INT_REGS:7272 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:10504 ALL_REGS:10504 MEM:3030
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 110 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 111 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2564 INDEX_REGS:0 LEGACY_REGS:2564 GENERAL_REGS:2564 SSE_REGS:44993 MMX_REGS:44993 FP_TOP_SSE_REGS:44993 FP_SECOND_SSE_REGS:44993 FLOAT_SSE_REGS:44993 FLOAT_INT_REGS:31149 INT_SSE_REGS:44993 FLOAT_INT_SSE_REGS:44993 ALL_REGS:44993 MEM:12562
  Register 112 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 117 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 121 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 122 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 126 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 127 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 131 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 132 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 136 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 137 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 141 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 142 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 146 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 147 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 152 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:9090 INDEX_REGS:5656 LEGACY_REGS:9090 GENERAL_REGS:9090 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:13130 MEM:4444
  Register 154 costs: AREG:13580 DREG:13580 CREG:13580 BREG:13580 SIREG:13580 DIREG:13580 AD_REGS:13580 Q_REGS:13580 NON_Q_REGS:13580 INDEX_REGS:13580 LEGACY_REGS:13580 GENERAL_REGS:13580 FP_TOP_REG:21388 FP_SECOND_REG:21388 FLOAT_REGS:21388 SSE_REGS:892 FP_TOP_SSE_REGS:21388 FP_SECOND_SSE_REGS:21388 FLOAT_SSE_REGS:21388 FLOAT_INT_REGS:21388 INT_SSE_REGS:13580 FLOAT_INT_SSE_REGS:21388 ALL_REGS:21388 MEM:8574
  Register 155 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:5656 INDEX_REGS:5656 LEGACY_REGS:5656 GENERAL_REGS:5656 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:8888 MEM:3434
  Register 156 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1100
  Register 157 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 158 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5070 MMX_REGS:5070 FP_TOP_SSE_REGS:5070 FP_SECOND_SSE_REGS:5070 FLOAT_SSE_REGS:5070 FLOAT_INT_REGS:3510 INT_SSE_REGS:5070 FLOAT_INT_SSE_REGS:5070 ALL_REGS:5070 MEM:1560
  Register 159 costs: AREG:2800 DREG:2800 CREG:2800 BREG:2800 SIREG:2800 DIREG:2800 AD_REGS:2800 Q_REGS:2800 NON_Q_REGS:4500 INDEX_REGS:2800 LEGACY_REGS:4500 GENERAL_REGS:4500 FP_TOP_REG:4400 FP_SECOND_REG:4400 FLOAT_REGS:4400 SSE_REGS:200 FP_TOP_SSE_REGS:4400 FP_SECOND_SSE_REGS:4400 FLOAT_SSE_REGS:4400 FLOAT_INT_REGS:4400 INT_SSE_REGS:2800 FLOAT_INT_SSE_REGS:4400 ALL_REGS:6500 MEM:2200
  Register 161 costs: AREG:6734 DREG:6734 CREG:6734 BREG:6734 SIREG:6734 DIREG:6734 AD_REGS:6734 Q_REGS:6734 NON_Q_REGS:6734 INDEX_REGS:6734 LEGACY_REGS:6734 GENERAL_REGS:6734 FP_TOP_REG:10606 FP_SECOND_REG:10606 FLOAT_REGS:10606 SSE_REGS:442 FP_TOP_SSE_REGS:10606 FP_SECOND_SSE_REGS:10606 FLOAT_SSE_REGS:10606 FLOAT_INT_REGS:10606 INT_SSE_REGS:6734 FLOAT_INT_SSE_REGS:10606 ALL_REGS:10606 MEM:4251
  Register 162 costs: AREG:2800 DREG:2800 CREG:2800 BREG:2800 SIREG:2800 DIREG:2800 AD_REGS:2800 Q_REGS:2800 NON_Q_REGS:2800 INDEX_REGS:2800 LEGACY_REGS:2800 GENERAL_REGS:2800 FP_TOP_REG:4400 FP_SECOND_REG:4400 FLOAT_REGS:4400 SSE_REGS:200 FP_TOP_SSE_REGS:4400 FP_SECOND_SSE_REGS:4400 FLOAT_SSE_REGS:4400 FLOAT_INT_REGS:4400 INT_SSE_REGS:2800 FLOAT_INT_SSE_REGS:4400 ALL_REGS:4400 MEM:1800
  Register 166 costs: AREG:3734 DREG:3734 CREG:3734 BREG:3734 SIREG:3734 DIREG:3734 AD_REGS:3734 Q_REGS:3734 NON_Q_REGS:5434 INDEX_REGS:3734 LEGACY_REGS:5434 GENERAL_REGS:5434 FP_TOP_REG:6006 FP_SECOND_REG:6006 FLOAT_REGS:6006 SSE_REGS:42 FP_TOP_SSE_REGS:6006 FP_SECOND_SSE_REGS:6006 FLOAT_SSE_REGS:6006 FLOAT_INT_REGS:6006 INT_SSE_REGS:3734 FLOAT_INT_SSE_REGS:6006 ALL_REGS:8106 MEM:2472
  Register 168 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:700
  Register 169 costs: AREG:4860 DREG:4860 CREG:4860 BREG:4860 SIREG:4860 DIREG:4860 AD_REGS:4860 Q_REGS:4860 NON_Q_REGS:6390 INDEX_REGS:4860 LEGACY_REGS:6390 GENERAL_REGS:6390 FP_TOP_REG:7740 FP_SECOND_REG:7740 FLOAT_REGS:7740 SSE_REGS:180 FP_TOP_SSE_REGS:7740 FP_SECOND_SSE_REGS:7740 FLOAT_SSE_REGS:7740 FLOAT_INT_REGS:7740 INT_SSE_REGS:4860 FLOAT_INT_SSE_REGS:7740 ALL_REGS:9630 MEM:3330
  Register 171 costs: AREG:6012 DREG:6012 CREG:6012 BREG:6012 SIREG:6012 DIREG:6012 AD_REGS:6012 Q_REGS:6012 NON_Q_REGS:6012 INDEX_REGS:6012 LEGACY_REGS:6012 GENERAL_REGS:6012 FP_TOP_REG:9468 FP_SECOND_REG:9468 FLOAT_REGS:9468 SSE_REGS:396 FP_TOP_SSE_REGS:9468 FP_SECOND_SSE_REGS:9468 FLOAT_SSE_REGS:9468 FLOAT_INT_REGS:9468 INT_SSE_REGS:6012 FLOAT_INT_SSE_REGS:9468 ALL_REGS:9468 MEM:3798
  Register 172 costs: AREG:2520 DREG:2520 CREG:2520 BREG:2520 SIREG:2520 DIREG:2520 AD_REGS:2520 Q_REGS:2520 NON_Q_REGS:2520 INDEX_REGS:2520 LEGACY_REGS:2520 GENERAL_REGS:2520 FP_TOP_REG:3960 FP_SECOND_REG:3960 FLOAT_REGS:3960 SSE_REGS:180 FP_TOP_SSE_REGS:3960 FP_SECOND_SSE_REGS:3960 FLOAT_SSE_REGS:3960 FLOAT_INT_REGS:3960 INT_SSE_REGS:2520 FLOAT_INT_SSE_REGS:3960 ALL_REGS:3960 MEM:1530
  Register 176 costs: AREG:3312 DREG:3312 CREG:3312 BREG:3312 SIREG:3312 DIREG:3312 AD_REGS:3312 Q_REGS:3312 NON_Q_REGS:4842 INDEX_REGS:3312 LEGACY_REGS:4842 GENERAL_REGS:4842 FP_TOP_REG:5328 FP_SECOND_REG:5328 FLOAT_REGS:5328 SSE_REGS:36 FP_TOP_SSE_REGS:5328 FP_SECOND_SSE_REGS:5328 FLOAT_SSE_REGS:5328 FLOAT_INT_REGS:5328 INT_SSE_REGS:3312 FLOAT_INT_SSE_REGS:5328 ALL_REGS:7218 MEM:2196
  Register 178 costs: AREG:4860 DREG:4860 CREG:4860 BREG:4860 SIREG:4860 DIREG:4860 AD_REGS:4860 Q_REGS:4860 NON_Q_REGS:6390 INDEX_REGS:4860 LEGACY_REGS:6390 GENERAL_REGS:6390 FP_TOP_REG:7740 FP_SECOND_REG:7740 FLOAT_REGS:7740 SSE_REGS:180 FP_TOP_SSE_REGS:7740 FP_SECOND_SSE_REGS:7740 FLOAT_SSE_REGS:7740 FLOAT_INT_REGS:7740 INT_SSE_REGS:4860 FLOAT_INT_SSE_REGS:7740 ALL_REGS:9630 MEM:3330
  Register 180 costs: AREG:6012 DREG:6012 CREG:6012 BREG:6012 SIREG:6012 DIREG:6012 AD_REGS:6012 Q_REGS:6012 NON_Q_REGS:6012 INDEX_REGS:6012 LEGACY_REGS:6012 GENERAL_REGS:6012 FP_TOP_REG:9468 FP_SECOND_REG:9468 FLOAT_REGS:9468 SSE_REGS:396 FP_TOP_SSE_REGS:9468 FP_SECOND_SSE_REGS:9468 FLOAT_SSE_REGS:9468 FLOAT_INT_REGS:9468 INT_SSE_REGS:6012 FLOAT_INT_SSE_REGS:9468 ALL_REGS:9468 MEM:3798
  Register 181 costs: AREG:2520 DREG:2520 CREG:2520 BREG:2520 SIREG:2520 DIREG:2520 AD_REGS:2520 Q_REGS:2520 NON_Q_REGS:2520 INDEX_REGS:2520 LEGACY_REGS:2520 GENERAL_REGS:2520 FP_TOP_REG:3960 FP_SECOND_REG:3960 FLOAT_REGS:3960 SSE_REGS:180 FP_TOP_SSE_REGS:3960 FP_SECOND_SSE_REGS:3960 FLOAT_SSE_REGS:3960 FLOAT_INT_REGS:3960 INT_SSE_REGS:2520 FLOAT_INT_SSE_REGS:3960 ALL_REGS:3960 MEM:1530
  Register 185 costs: AREG:3312 DREG:3312 CREG:3312 BREG:3312 SIREG:3312 DIREG:3312 AD_REGS:3312 Q_REGS:3312 NON_Q_REGS:4842 INDEX_REGS:3312 LEGACY_REGS:4842 GENERAL_REGS:4842 FP_TOP_REG:5328 FP_SECOND_REG:5328 FLOAT_REGS:5328 SSE_REGS:36 FP_TOP_SSE_REGS:5328 FP_SECOND_SSE_REGS:5328 FLOAT_SSE_REGS:5328 FLOAT_INT_REGS:5328 INT_SSE_REGS:3312 FLOAT_INT_SSE_REGS:5328 ALL_REGS:7218 MEM:2196
  Register 187 costs: AREG:4860 DREG:4860 CREG:4860 BREG:4860 SIREG:4860 DIREG:4860 AD_REGS:4860 Q_REGS:4860 NON_Q_REGS:6390 INDEX_REGS:4860 LEGACY_REGS:6390 GENERAL_REGS:6390 FP_TOP_REG:7740 FP_SECOND_REG:7740 FLOAT_REGS:7740 SSE_REGS:180 FP_TOP_SSE_REGS:7740 FP_SECOND_SSE_REGS:7740 FLOAT_SSE_REGS:7740 FLOAT_INT_REGS:7740 INT_SSE_REGS:4860 FLOAT_INT_SSE_REGS:7740 ALL_REGS:9630 MEM:3330
  Register 189 costs: AREG:6012 DREG:6012 CREG:6012 BREG:6012 SIREG:6012 DIREG:6012 AD_REGS:6012 Q_REGS:6012 NON_Q_REGS:6012 INDEX_REGS:6012 LEGACY_REGS:6012 GENERAL_REGS:6012 FP_TOP_REG:9468 FP_SECOND_REG:9468 FLOAT_REGS:9468 SSE_REGS:396 FP_TOP_SSE_REGS:9468 FP_SECOND_SSE_REGS:9468 FLOAT_SSE_REGS:9468 FLOAT_INT_REGS:9468 INT_SSE_REGS:6012 FLOAT_INT_SSE_REGS:9468 ALL_REGS:9468 MEM:3798
  Register 190 costs: AREG:2520 DREG:2520 CREG:2520 BREG:2520 SIREG:2520 DIREG:2520 AD_REGS:2520 Q_REGS:2520 NON_Q_REGS:2520 INDEX_REGS:2520 LEGACY_REGS:2520 GENERAL_REGS:2520 FP_TOP_REG:3960 FP_SECOND_REG:3960 FLOAT_REGS:3960 SSE_REGS:180 FP_TOP_SSE_REGS:3960 FP_SECOND_SSE_REGS:3960 FLOAT_SSE_REGS:3960 FLOAT_INT_REGS:3960 INT_SSE_REGS:2520 FLOAT_INT_SSE_REGS:3960 ALL_REGS:3960 MEM:1530
  Register 194 costs: AREG:3312 DREG:3312 CREG:3312 BREG:3312 SIREG:3312 DIREG:3312 AD_REGS:3312 Q_REGS:3312 NON_Q_REGS:4842 INDEX_REGS:3312 LEGACY_REGS:4842 GENERAL_REGS:4842 FP_TOP_REG:5328 FP_SECOND_REG:5328 FLOAT_REGS:5328 SSE_REGS:36 FP_TOP_SSE_REGS:5328 FP_SECOND_SSE_REGS:5328 FLOAT_SSE_REGS:5328 FLOAT_INT_REGS:5328 INT_SSE_REGS:3312 FLOAT_INT_SSE_REGS:5328 ALL_REGS:7218 MEM:2196
  Register 199 costs: AREG:7520 DREG:7520 CREG:7520 BREG:7520 SIREG:7520 DIREG:7520 AD_REGS:7520 Q_REGS:7520 NON_Q_REGS:10954 INDEX_REGS:7520 LEGACY_REGS:10954 GENERAL_REGS:10954 FP_TOP_REG:12096 FP_SECOND_REG:12096 FLOAT_REGS:12096 SSE_REGS:84 FP_TOP_SSE_REGS:12096 FP_SECOND_SSE_REGS:12096 FLOAT_SSE_REGS:12096 FLOAT_INT_REGS:12096 INT_SSE_REGS:7520 FLOAT_INT_SSE_REGS:12096 ALL_REGS:16338 MEM:4980
  Register 201 costs: AREG:10504 DREG:10504 CREG:10504 BREG:10504 SIREG:10504 DIREG:10504 AD_REGS:10504 Q_REGS:10504 NON_Q_REGS:10504 INDEX_REGS:10504 LEGACY_REGS:10504 GENERAL_REGS:10504 FP_TOP_REG:16968 FP_SECOND_REG:16968 FLOAT_REGS:16968 SSE_REGS:0 FP_TOP_SSE_REGS:16968 FP_SECOND_SSE_REGS:16968 FLOAT_SSE_REGS:16968 FLOAT_INT_REGS:16968 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:16968 ALL_REGS:16968 MEM:6060
  Register 202 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:5252 INDEX_REGS:5252 LEGACY_REGS:5252 GENERAL_REGS:5252 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:8484 MEM:3030
  Register 205 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:9090 INDEX_REGS:5656 LEGACY_REGS:9090 GENERAL_REGS:9090 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:13130 MEM:4444
  Register 207 costs: AREG:13580 DREG:13580 CREG:13580 BREG:13580 SIREG:13580 DIREG:13580 AD_REGS:13580 Q_REGS:13580 NON_Q_REGS:13580 INDEX_REGS:13580 LEGACY_REGS:13580 GENERAL_REGS:13580 FP_TOP_REG:21388 FP_SECOND_REG:21388 FLOAT_REGS:21388 SSE_REGS:892 FP_TOP_SSE_REGS:21388 FP_SECOND_SSE_REGS:21388 FLOAT_SSE_REGS:21388 FLOAT_INT_REGS:21388 INT_SSE_REGS:13580 FLOAT_INT_SSE_REGS:21388 ALL_REGS:21388 MEM:8574
  Register 208 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:5656 INDEX_REGS:5656 LEGACY_REGS:5656 GENERAL_REGS:5656 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:8888 MEM:3434
  Register 212 costs: AREG:7520 DREG:7520 CREG:7520 BREG:7520 SIREG:7520 DIREG:7520 AD_REGS:7520 Q_REGS:7520 NON_Q_REGS:10954 INDEX_REGS:7520 LEGACY_REGS:10954 GENERAL_REGS:10954 FP_TOP_REG:12096 FP_SECOND_REG:12096 FLOAT_REGS:12096 SSE_REGS:84 FP_TOP_SSE_REGS:12096 FP_SECOND_SSE_REGS:12096 FLOAT_SSE_REGS:12096 FLOAT_INT_REGS:12096 INT_SSE_REGS:7520 FLOAT_INT_SSE_REGS:12096 ALL_REGS:16338 MEM:4980
  Register 214 costs: AREG:10504 DREG:10504 CREG:10504 BREG:10504 SIREG:10504 DIREG:10504 AD_REGS:10504 Q_REGS:10504 NON_Q_REGS:10504 INDEX_REGS:10504 LEGACY_REGS:10504 GENERAL_REGS:10504 FP_TOP_REG:16968 FP_SECOND_REG:16968 FLOAT_REGS:16968 SSE_REGS:0 FP_TOP_SSE_REGS:16968 FP_SECOND_SSE_REGS:16968 FLOAT_SSE_REGS:16968 FLOAT_INT_REGS:16968 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:16968 ALL_REGS:16968 MEM:6060
  Register 215 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:5252 INDEX_REGS:5252 LEGACY_REGS:5252 GENERAL_REGS:5252 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:8484 MEM:3030
  Register 218 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:9090 INDEX_REGS:5656 LEGACY_REGS:9090 GENERAL_REGS:9090 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:13130 MEM:4444
  Register 220 costs: AREG:13580 DREG:13580 CREG:13580 BREG:13580 SIREG:13580 DIREG:13580 AD_REGS:13580 Q_REGS:13580 NON_Q_REGS:13580 INDEX_REGS:13580 LEGACY_REGS:13580 GENERAL_REGS:13580 FP_TOP_REG:21388 FP_SECOND_REG:21388 FLOAT_REGS:21388 SSE_REGS:892 FP_TOP_SSE_REGS:21388 FP_SECOND_SSE_REGS:21388 FLOAT_SSE_REGS:21388 FLOAT_INT_REGS:21388 INT_SSE_REGS:13580 FLOAT_INT_SSE_REGS:21388 ALL_REGS:21388 MEM:8574
  Register 221 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:5656 INDEX_REGS:5656 LEGACY_REGS:5656 GENERAL_REGS:5656 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:8888 MEM:3434
  Register 225 costs: AREG:7520 DREG:7520 CREG:7520 BREG:7520 SIREG:7520 DIREG:7520 AD_REGS:7520 Q_REGS:7520 NON_Q_REGS:10954 INDEX_REGS:7520 LEGACY_REGS:10954 GENERAL_REGS:10954 FP_TOP_REG:12096 FP_SECOND_REG:12096 FLOAT_REGS:12096 SSE_REGS:84 FP_TOP_SSE_REGS:12096 FP_SECOND_SSE_REGS:12096 FLOAT_SSE_REGS:12096 FLOAT_INT_REGS:12096 INT_SSE_REGS:7520 FLOAT_INT_SSE_REGS:12096 ALL_REGS:16338 MEM:4980
  Register 227 costs: AREG:10504 DREG:10504 CREG:10504 BREG:10504 SIREG:10504 DIREG:10504 AD_REGS:10504 Q_REGS:10504 NON_Q_REGS:10504 INDEX_REGS:10504 LEGACY_REGS:10504 GENERAL_REGS:10504 FP_TOP_REG:16968 FP_SECOND_REG:16968 FLOAT_REGS:16968 SSE_REGS:0 FP_TOP_SSE_REGS:16968 FP_SECOND_SSE_REGS:16968 FLOAT_SSE_REGS:16968 FLOAT_INT_REGS:16968 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:16968 ALL_REGS:16968 MEM:6060
  Register 228 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:5252 INDEX_REGS:5252 LEGACY_REGS:5252 GENERAL_REGS:5252 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:8484 MEM:3030
  Register 229 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 232 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 235 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 238 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 241 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 244 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 247 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600

  Register 61 pref GENERAL_REGS or none
  Register 62 pref SSE_REGS or none
  Register 63 pref SSE_REGS or none
  Register 64 pref SSE_REGS or none
  Register 65 pref SSE_REGS or none
  Register 66 pref SSE_REGS or none
  Register 67 pref GENERAL_REGS or none
  Register 69 pref SSE_REGS or none
  Register 71 pref SSE_REGS or none
  Register 72 pref SSE_REGS or none
  Register 75 pref DIREG, else GENERAL_REGS
  Register 76 pref SIREG, else GENERAL_REGS
  Register 77 pref SSE_REGS or none
  Register 78 pref GENERAL_REGS or none
  Register 79 pref DIREG, else GENERAL_REGS
  Register 80 pref DIREG, else GENERAL_REGS
  Register 82 pref SSE_REGS or none
  Register 86 pref SSE_REGS or none
  Register 95 pref SSE_REGS or none
  Register 96 pref FLOAT_INT_SSE_REGS or none
  Register 97 pref SSE_REGS or none
  Register 102 pref GENERAL_REGS or none
  Register 103 pref GENERAL_REGS or none
  Register 104 pref GENERAL_REGS or none
  Register 107 pref GENERAL_REGS or none
  Register 108 pref INDEX_REGS, else GENERAL_REGS
  Register 110 pref GENERAL_REGS or none
  Register 111 pref INDEX_REGS, else GENERAL_REGS
  Register 112 pref SSE_REGS or none
  Register 117 pref SSE_REGS or none
  Register 121 pref INDEX_REGS, else GENERAL_REGS
  Register 122 pref SSE_REGS or none
  Register 126 pref INDEX_REGS, else GENERAL_REGS
  Register 127 pref SSE_REGS or none
  Register 131 pref INDEX_REGS, else GENERAL_REGS
  Register 132 pref SSE_REGS or none
  Register 136 pref INDEX_REGS, else GENERAL_REGS
  Register 137 pref SSE_REGS or none
  Register 141 pref INDEX_REGS, else GENERAL_REGS
  Register 142 pref SSE_REGS or none
  Register 146 pref INDEX_REGS, else GENERAL_REGS
  Register 147 pref SSE_REGS or none
  Register 152 pref SSE_REGS or none
  Register 154 pref SSE_REGS or none
  Register 155 pref SSE_REGS or none
  Register 156 pref SSE_REGS or none
  Register 157 pref GENERAL_REGS or none
  Register 158 pref GENERAL_REGS or none
  Register 159 pref SSE_REGS or none
  Register 161 pref SSE_REGS or none
  Register 162 pref SSE_REGS or none
  Register 166 pref SSE_REGS or none
  Register 168 pref FLOAT_INT_SSE_REGS or none
  Register 169 pref SSE_REGS or none
  Register 171 pref SSE_REGS or none
  Register 172 pref SSE_REGS or none
  Register 176 pref SSE_REGS or none
  Register 178 pref SSE_REGS or none
  Register 180 pref SSE_REGS or none
  Register 181 pref SSE_REGS or none
  Register 185 pref SSE_REGS or none
  Register 187 pref SSE_REGS or none
  Register 189 pref SSE_REGS or none
  Register 190 pref SSE_REGS or none
  Register 194 pref SSE_REGS or none
  Register 199 pref SSE_REGS or none
  Register 201 pref SSE_REGS or none
  Register 202 pref SSE_REGS or none
  Register 205 pref SSE_REGS or none
  Register 207 pref SSE_REGS or none
  Register 208 pref SSE_REGS or none
  Register 212 pref SSE_REGS or none
  Register 214 pref SSE_REGS or none
  Register 215 pref SSE_REGS or none
  Register 218 pref SSE_REGS or none
  Register 220 pref SSE_REGS or none
  Register 221 pref SSE_REGS or none
  Register 225 pref SSE_REGS or none
  Register 227 pref SSE_REGS or none
  Register 228 pref SSE_REGS or none
  Register 229 pref SSE_REGS or none
  Register 232 pref SSE_REGS or none
  Register 235 pref SSE_REGS or none
  Register 238 pref SSE_REGS or none
  Register 241 pref SSE_REGS or none
  Register 244 pref SSE_REGS or none
  Register 247 pref SSE_REGS or none


Pass 1

  Register 61 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:21164 MMX_REGS:21164 FP_TOP_SSE_REGS:21164 FP_SECOND_SSE_REGS:21164 FLOAT_SSE_REGS:21164 FLOAT_INT_REGS:14652 INT_SSE_REGS:21164 FLOAT_INT_SSE_REGS:21164 ALL_REGS:21164 MEM:5770
  Register 62 costs: AREG:7520 DREG:7520 CREG:7520 BREG:7520 SIREG:7520 DIREG:7520 AD_REGS:7520 Q_REGS:7520 NON_Q_REGS:10954 INDEX_REGS:7520 LEGACY_REGS:10954 GENERAL_REGS:10954 FP_TOP_REG:12096 FP_SECOND_REG:12096 FLOAT_REGS:12096 SSE_REGS:84 FP_TOP_SSE_REGS:12096 FP_SECOND_SSE_REGS:12096 FLOAT_SSE_REGS:12096 FLOAT_INT_REGS:12096 INT_SSE_REGS:7520 FLOAT_INT_SSE_REGS:12096 ALL_REGS:16338 MEM:4980
  Register 63 costs: AREG:13580 DREG:13580 CREG:13580 BREG:13580 SIREG:13580 DIREG:13580 AD_REGS:13580 Q_REGS:13580 NON_Q_REGS:13580 INDEX_REGS:13580 LEGACY_REGS:13580 GENERAL_REGS:13580 FP_TOP_REG:21388 FP_SECOND_REG:21388 FLOAT_REGS:21388 SSE_REGS:892 FP_TOP_SSE_REGS:21388 FP_SECOND_SSE_REGS:21388 FLOAT_SSE_REGS:21388 FLOAT_INT_REGS:21388 INT_SSE_REGS:13580 FLOAT_INT_SSE_REGS:21388 ALL_REGS:21388 MEM:8574
  Register 64 costs: AREG:16537 DREG:16537 CREG:16537 BREG:16537 SIREG:16537 DIREG:16537 AD_REGS:16537 Q_REGS:16537 NON_Q_REGS:18611 INDEX_REGS:16537 LEGACY_REGS:18611 GENERAL_REGS:18611 FP_TOP_REG:26577 FP_SECOND_REG:26577 FLOAT_REGS:26577 SSE_REGS:222 FP_TOP_SSE_REGS:26577 FP_SECOND_SSE_REGS:26577 FLOAT_SSE_REGS:26577 FLOAT_INT_REGS:26577 INT_SSE_REGS:16537 FLOAT_INT_SSE_REGS:26577 ALL_REGS:29139 MEM:10056
  Register 65 costs: AREG:23089 DREG:23089 CREG:23089 BREG:23089 SIREG:23089 DIREG:23089 AD_REGS:23089 Q_REGS:23089 NON_Q_REGS:23276 INDEX_REGS:23089 LEGACY_REGS:23276 GENERAL_REGS:23276 FP_TOP_REG:37161 FP_SECOND_REG:37161 FLOAT_REGS:37161 SSE_REGS:222 FP_TOP_SSE_REGS:37161 FP_SECOND_SSE_REGS:37161 FLOAT_SSE_REGS:37161 FLOAT_INT_REGS:37161 INT_SSE_REGS:23089 FLOAT_INT_SSE_REGS:37161 ALL_REGS:37392 MEM:13564
  Register 66 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3187 INDEX_REGS:1300 LEGACY_REGS:3187 GENERAL_REGS:3187 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4431 MEM:1144
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18668 MMX_REGS:18668 FP_TOP_SSE_REGS:18668 FP_SECOND_SSE_REGS:18668 FLOAT_SSE_REGS:18668 FLOAT_INT_REGS:12924 INT_SSE_REGS:18668 FLOAT_INT_SSE_REGS:18668 ALL_REGS:18668 MEM:4308
  Register 69 costs: AREG:37664 DREG:37664 CREG:37664 BREG:37664 SIREG:37664 DIREG:37664 AD_REGS:37664 Q_REGS:37664 NON_Q_REGS:39551 INDEX_REGS:37664 LEGACY_REGS:39551 GENERAL_REGS:39551 FP_TOP_REG:59392 FP_SECOND_REG:59392 FLOAT_REGS:59392 SSE_REGS:2356 FP_TOP_SSE_REGS:59392 FP_SECOND_SSE_REGS:59392 FLOAT_SSE_REGS:59392 FLOAT_INT_REGS:59392 INT_SSE_REGS:37664 FLOAT_INT_SSE_REGS:59392 ALL_REGS:61723 MEM:21812
  Register 71 costs: AREG:19214 DREG:19214 CREG:19214 BREG:19214 SIREG:19214 DIREG:19214 AD_REGS:19214 Q_REGS:19214 NON_Q_REGS:19214 INDEX_REGS:19214 LEGACY_REGS:19214 GENERAL_REGS:19214 FP_TOP_REG:31038 FP_SECOND_REG:31038 FLOAT_REGS:31038 SSE_REGS:0 FP_TOP_SSE_REGS:31038 FP_SECOND_SSE_REGS:31038 FLOAT_SSE_REGS:31038 FLOAT_INT_REGS:31038 INT_SSE_REGS:19214 FLOAT_INT_SSE_REGS:31038 ALL_REGS:31038 MEM:10646
  Register 72 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:9090 INDEX_REGS:5656 LEGACY_REGS:9090 GENERAL_REGS:9090 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:13130 MEM:4444
  Register 75 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24180 MMX_REGS:24180 FP_TOP_SSE_REGS:24180 FP_SECOND_SSE_REGS:24180 FLOAT_SSE_REGS:24180 FLOAT_INT_REGS:16740 INT_SSE_REGS:24180 FLOAT_INT_SSE_REGS:24180 ALL_REGS:24180 MEM:7229
  Register 76 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-111 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:18837 MMX_REGS:18837 INT_SSE_REGS:18837 MEM:4780
  Register 77 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3187 INDEX_REGS:1300 LEGACY_REGS:3187 GENERAL_REGS:3187 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4431 MEM:1144
  Register 78 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:777
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:666
  Register 80 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:24323 MMX_REGS:24323 FP_TOP_SSE_REGS:24323 FP_SECOND_SSE_REGS:24323 FLOAT_SSE_REGS:24323 FLOAT_INT_REGS:16839 INT_SSE_REGS:24323 FLOAT_INT_SSE_REGS:24323 ALL_REGS:24323 MEM:7262
  Register 82 costs: AREG:5200 DREG:5200 CREG:5200 BREG:5200 SIREG:5200 DIREG:5200 AD_REGS:5200 Q_REGS:5200 NON_Q_REGS:8600 INDEX_REGS:5200 LEGACY_REGS:8600 GENERAL_REGS:8600 FP_TOP_REG:8400 FP_SECOND_REG:8400 FLOAT_REGS:8400 SSE_REGS:0 FP_TOP_SSE_REGS:8400 FP_SECOND_SSE_REGS:8400 FLOAT_SSE_REGS:8400 FLOAT_INT_REGS:8400 INT_SSE_REGS:5200 FLOAT_INT_SSE_REGS:8400 ALL_REGS:12600 MEM:4000
  Register 86 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:5656 INDEX_REGS:5656 LEGACY_REGS:5656 GENERAL_REGS:5656 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:8888 MEM:3434
  Register 95 costs: SSE_REGS:2356 FP_TOP_SSE_REGS:50245 FP_SECOND_SSE_REGS:50245 FLOAT_SSE_REGS:50245 INT_SSE_REGS:104565 FLOAT_INT_SSE_REGS:104565 ALL_REGS:104565 MEM:22176
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:25126 INDEX_REGS:0 LEGACY_REGS:25126 GENERAL_REGS:25126 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:31038 MEM:4534
  Register 97 costs: AREG:17659 DREG:17659 CREG:17659 BREG:17659 SIREG:17659 DIREG:17659 AD_REGS:17659 Q_REGS:17659 NON_Q_REGS:19359 INDEX_REGS:17659 LEGACY_REGS:19359 GENERAL_REGS:19359 FP_TOP_REG:28227 FP_SECOND_REG:28227 FLOAT_REGS:28227 SSE_REGS:486 FP_TOP_SSE_REGS:28227 FP_SECOND_SSE_REGS:28227 FLOAT_SSE_REGS:28227 FLOAT_INT_REGS:28227 INT_SSE_REGS:17659 FLOAT_INT_SSE_REGS:28227 ALL_REGS:30327 MEM:11454
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:6435 MMX_REGS:6435 FP_TOP_SSE_REGS:6435 FP_SECOND_SSE_REGS:6435 FLOAT_SSE_REGS:6435 FLOAT_INT_REGS:4455 INT_SSE_REGS:6435 FLOAT_INT_SSE_REGS:6435 ALL_REGS:6435 MEM:1645
  Register 103 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5252 MMX_REGS:5252 FP_TOP_SSE_REGS:5252 FP_SECOND_SSE_REGS:5252 FLOAT_SSE_REGS:5252 FLOAT_INT_REGS:3636 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:5252 ALL_REGS:5252 MEM:1212
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10504 MMX_REGS:10504 FP_TOP_SSE_REGS:10504 FP_SECOND_SSE_REGS:10504 FLOAT_SSE_REGS:10504 FLOAT_INT_REGS:7272 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:10504 ALL_REGS:10504 MEM:3030
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 110 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 111 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2564 INDEX_REGS:0 LEGACY_REGS:2564 GENERAL_REGS:2564 SSE_REGS:44993 MMX_REGS:44993 FP_TOP_SSE_REGS:44993 FP_SECOND_SSE_REGS:44993 FLOAT_SSE_REGS:44993 FLOAT_INT_REGS:31149 INT_SSE_REGS:44993 FLOAT_INT_SSE_REGS:44993 ALL_REGS:44993 MEM:12562
  Register 112 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 117 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 121 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 122 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 126 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 127 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 131 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 132 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 136 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 137 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 141 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 142 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 146 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 147 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:8686 INDEX_REGS:5252 LEGACY_REGS:8686 GENERAL_REGS:8686 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:12726 MEM:4040
  Register 152 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:9090 INDEX_REGS:5656 LEGACY_REGS:9090 GENERAL_REGS:9090 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:13130 MEM:4444
  Register 154 costs: AREG:13580 DREG:13580 CREG:13580 BREG:13580 SIREG:13580 DIREG:13580 AD_REGS:13580 Q_REGS:13580 NON_Q_REGS:13580 INDEX_REGS:13580 LEGACY_REGS:13580 GENERAL_REGS:13580 FP_TOP_REG:21388 FP_SECOND_REG:21388 FLOAT_REGS:21388 SSE_REGS:892 FP_TOP_SSE_REGS:21388 FP_SECOND_SSE_REGS:21388 FLOAT_SSE_REGS:21388 FLOAT_INT_REGS:21388 INT_SSE_REGS:13580 FLOAT_INT_SSE_REGS:21388 ALL_REGS:21388 MEM:8574
  Register 155 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:5656 INDEX_REGS:5656 LEGACY_REGS:5656 GENERAL_REGS:5656 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:8888 MEM:3434
  Register 156 costs: AREG:1300 DREG:1300 CREG:1300 BREG:1300 SIREG:1300 DIREG:1300 AD_REGS:1300 Q_REGS:1300 NON_Q_REGS:3000 INDEX_REGS:1300 LEGACY_REGS:3000 GENERAL_REGS:3000 FP_TOP_REG:2100 FP_SECOND_REG:2100 FLOAT_REGS:2100 SSE_REGS:0 FP_TOP_SSE_REGS:2100 FP_SECOND_SSE_REGS:2100 FLOAT_SSE_REGS:2100 FLOAT_INT_REGS:2100 INT_SSE_REGS:1300 FLOAT_INT_SSE_REGS:2100 ALL_REGS:4200 MEM:1100
  Register 157 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2600 MMX_REGS:2600 FP_TOP_SSE_REGS:2600 FP_SECOND_SSE_REGS:2600 FLOAT_SSE_REGS:2600 FLOAT_INT_REGS:1800 INT_SSE_REGS:2600 FLOAT_INT_SSE_REGS:2600 ALL_REGS:2600 MEM:700
  Register 158 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-100 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5070 MMX_REGS:5070 FP_TOP_SSE_REGS:5070 FP_SECOND_SSE_REGS:5070 FLOAT_SSE_REGS:5070 FLOAT_INT_REGS:3510 INT_SSE_REGS:5070 FLOAT_INT_SSE_REGS:5070 ALL_REGS:5070 MEM:1560
  Register 159 costs: AREG:2800 DREG:2800 CREG:2800 BREG:2800 SIREG:2800 DIREG:2800 AD_REGS:2800 Q_REGS:2800 NON_Q_REGS:4500 INDEX_REGS:2800 LEGACY_REGS:4500 GENERAL_REGS:4500 FP_TOP_REG:4400 FP_SECOND_REG:4400 FLOAT_REGS:4400 SSE_REGS:200 FP_TOP_SSE_REGS:4400 FP_SECOND_SSE_REGS:4400 FLOAT_SSE_REGS:4400 FLOAT_INT_REGS:4400 INT_SSE_REGS:2800 FLOAT_INT_SSE_REGS:4400 ALL_REGS:6500 MEM:2200
  Register 161 costs: AREG:6734 DREG:6734 CREG:6734 BREG:6734 SIREG:6734 DIREG:6734 AD_REGS:6734 Q_REGS:6734 NON_Q_REGS:6734 INDEX_REGS:6734 LEGACY_REGS:6734 GENERAL_REGS:6734 FP_TOP_REG:10606 FP_SECOND_REG:10606 FLOAT_REGS:10606 SSE_REGS:442 FP_TOP_SSE_REGS:10606 FP_SECOND_SSE_REGS:10606 FLOAT_SSE_REGS:10606 FLOAT_INT_REGS:10606 INT_SSE_REGS:6734 FLOAT_INT_SSE_REGS:10606 ALL_REGS:10606 MEM:4251
  Register 162 costs: AREG:2800 DREG:2800 CREG:2800 BREG:2800 SIREG:2800 DIREG:2800 AD_REGS:2800 Q_REGS:2800 NON_Q_REGS:2800 INDEX_REGS:2800 LEGACY_REGS:2800 GENERAL_REGS:2800 FP_TOP_REG:4400 FP_SECOND_REG:4400 FLOAT_REGS:4400 SSE_REGS:200 FP_TOP_SSE_REGS:4400 FP_SECOND_SSE_REGS:4400 FLOAT_SSE_REGS:4400 FLOAT_INT_REGS:4400 INT_SSE_REGS:2800 FLOAT_INT_SSE_REGS:4400 ALL_REGS:4400 MEM:1800
  Register 166 costs: AREG:3734 DREG:3734 CREG:3734 BREG:3734 SIREG:3734 DIREG:3734 AD_REGS:3734 Q_REGS:3734 NON_Q_REGS:5434 INDEX_REGS:3734 LEGACY_REGS:5434 GENERAL_REGS:5434 FP_TOP_REG:6006 FP_SECOND_REG:6006 FLOAT_REGS:6006 SSE_REGS:42 FP_TOP_SSE_REGS:6006 FP_SECOND_SSE_REGS:6006 FLOAT_SSE_REGS:6006 FLOAT_INT_REGS:6006 INT_SSE_REGS:3734 FLOAT_INT_SSE_REGS:6006 ALL_REGS:8106 MEM:2472
  Register 168 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:700
  Register 169 costs: AREG:4860 DREG:4860 CREG:4860 BREG:4860 SIREG:4860 DIREG:4860 AD_REGS:4860 Q_REGS:4860 NON_Q_REGS:6390 INDEX_REGS:4860 LEGACY_REGS:6390 GENERAL_REGS:6390 FP_TOP_REG:7740 FP_SECOND_REG:7740 FLOAT_REGS:7740 SSE_REGS:180 FP_TOP_SSE_REGS:7740 FP_SECOND_SSE_REGS:7740 FLOAT_SSE_REGS:7740 FLOAT_INT_REGS:7740 INT_SSE_REGS:4860 FLOAT_INT_SSE_REGS:7740 ALL_REGS:9630 MEM:3330
  Register 171 costs: AREG:6012 DREG:6012 CREG:6012 BREG:6012 SIREG:6012 DIREG:6012 AD_REGS:6012 Q_REGS:6012 NON_Q_REGS:6012 INDEX_REGS:6012 LEGACY_REGS:6012 GENERAL_REGS:6012 FP_TOP_REG:9468 FP_SECOND_REG:9468 FLOAT_REGS:9468 SSE_REGS:396 FP_TOP_SSE_REGS:9468 FP_SECOND_SSE_REGS:9468 FLOAT_SSE_REGS:9468 FLOAT_INT_REGS:9468 INT_SSE_REGS:6012 FLOAT_INT_SSE_REGS:9468 ALL_REGS:9468 MEM:3798
  Register 172 costs: AREG:2520 DREG:2520 CREG:2520 BREG:2520 SIREG:2520 DIREG:2520 AD_REGS:2520 Q_REGS:2520 NON_Q_REGS:2520 INDEX_REGS:2520 LEGACY_REGS:2520 GENERAL_REGS:2520 FP_TOP_REG:3960 FP_SECOND_REG:3960 FLOAT_REGS:3960 SSE_REGS:180 FP_TOP_SSE_REGS:3960 FP_SECOND_SSE_REGS:3960 FLOAT_SSE_REGS:3960 FLOAT_INT_REGS:3960 INT_SSE_REGS:2520 FLOAT_INT_SSE_REGS:3960 ALL_REGS:3960 MEM:1530
  Register 176 costs: AREG:3312 DREG:3312 CREG:3312 BREG:3312 SIREG:3312 DIREG:3312 AD_REGS:3312 Q_REGS:3312 NON_Q_REGS:4842 INDEX_REGS:3312 LEGACY_REGS:4842 GENERAL_REGS:4842 FP_TOP_REG:5328 FP_SECOND_REG:5328 FLOAT_REGS:5328 SSE_REGS:36 FP_TOP_SSE_REGS:5328 FP_SECOND_SSE_REGS:5328 FLOAT_SSE_REGS:5328 FLOAT_INT_REGS:5328 INT_SSE_REGS:3312 FLOAT_INT_SSE_REGS:5328 ALL_REGS:7218 MEM:2196
  Register 178 costs: AREG:4860 DREG:4860 CREG:4860 BREG:4860 SIREG:4860 DIREG:4860 AD_REGS:4860 Q_REGS:4860 NON_Q_REGS:6390 INDEX_REGS:4860 LEGACY_REGS:6390 GENERAL_REGS:6390 FP_TOP_REG:7740 FP_SECOND_REG:7740 FLOAT_REGS:7740 SSE_REGS:180 FP_TOP_SSE_REGS:7740 FP_SECOND_SSE_REGS:7740 FLOAT_SSE_REGS:7740 FLOAT_INT_REGS:7740 INT_SSE_REGS:4860 FLOAT_INT_SSE_REGS:7740 ALL_REGS:9630 MEM:3330
  Register 180 costs: AREG:6012 DREG:6012 CREG:6012 BREG:6012 SIREG:6012 DIREG:6012 AD_REGS:6012 Q_REGS:6012 NON_Q_REGS:6012 INDEX_REGS:6012 LEGACY_REGS:6012 GENERAL_REGS:6012 FP_TOP_REG:9468 FP_SECOND_REG:9468 FLOAT_REGS:9468 SSE_REGS:396 FP_TOP_SSE_REGS:9468 FP_SECOND_SSE_REGS:9468 FLOAT_SSE_REGS:9468 FLOAT_INT_REGS:9468 INT_SSE_REGS:6012 FLOAT_INT_SSE_REGS:9468 ALL_REGS:9468 MEM:3798
  Register 181 costs: AREG:2520 DREG:2520 CREG:2520 BREG:2520 SIREG:2520 DIREG:2520 AD_REGS:2520 Q_REGS:2520 NON_Q_REGS:2520 INDEX_REGS:2520 LEGACY_REGS:2520 GENERAL_REGS:2520 FP_TOP_REG:3960 FP_SECOND_REG:3960 FLOAT_REGS:3960 SSE_REGS:180 FP_TOP_SSE_REGS:3960 FP_SECOND_SSE_REGS:3960 FLOAT_SSE_REGS:3960 FLOAT_INT_REGS:3960 INT_SSE_REGS:2520 FLOAT_INT_SSE_REGS:3960 ALL_REGS:3960 MEM:1530
  Register 185 costs: AREG:3312 DREG:3312 CREG:3312 BREG:3312 SIREG:3312 DIREG:3312 AD_REGS:3312 Q_REGS:3312 NON_Q_REGS:4842 INDEX_REGS:3312 LEGACY_REGS:4842 GENERAL_REGS:4842 FP_TOP_REG:5328 FP_SECOND_REG:5328 FLOAT_REGS:5328 SSE_REGS:36 FP_TOP_SSE_REGS:5328 FP_SECOND_SSE_REGS:5328 FLOAT_SSE_REGS:5328 FLOAT_INT_REGS:5328 INT_SSE_REGS:3312 FLOAT_INT_SSE_REGS:5328 ALL_REGS:7218 MEM:2196
  Register 187 costs: AREG:4860 DREG:4860 CREG:4860 BREG:4860 SIREG:4860 DIREG:4860 AD_REGS:4860 Q_REGS:4860 NON_Q_REGS:6390 INDEX_REGS:4860 LEGACY_REGS:6390 GENERAL_REGS:6390 FP_TOP_REG:7740 FP_SECOND_REG:7740 FLOAT_REGS:7740 SSE_REGS:180 FP_TOP_SSE_REGS:7740 FP_SECOND_SSE_REGS:7740 FLOAT_SSE_REGS:7740 FLOAT_INT_REGS:7740 INT_SSE_REGS:4860 FLOAT_INT_SSE_REGS:7740 ALL_REGS:9630 MEM:3330
  Register 189 costs: AREG:6012 DREG:6012 CREG:6012 BREG:6012 SIREG:6012 DIREG:6012 AD_REGS:6012 Q_REGS:6012 NON_Q_REGS:6012 INDEX_REGS:6012 LEGACY_REGS:6012 GENERAL_REGS:6012 FP_TOP_REG:9468 FP_SECOND_REG:9468 FLOAT_REGS:9468 SSE_REGS:396 FP_TOP_SSE_REGS:9468 FP_SECOND_SSE_REGS:9468 FLOAT_SSE_REGS:9468 FLOAT_INT_REGS:9468 INT_SSE_REGS:6012 FLOAT_INT_SSE_REGS:9468 ALL_REGS:9468 MEM:3798
  Register 190 costs: AREG:2520 DREG:2520 CREG:2520 BREG:2520 SIREG:2520 DIREG:2520 AD_REGS:2520 Q_REGS:2520 NON_Q_REGS:2520 INDEX_REGS:2520 LEGACY_REGS:2520 GENERAL_REGS:2520 FP_TOP_REG:3960 FP_SECOND_REG:3960 FLOAT_REGS:3960 SSE_REGS:180 FP_TOP_SSE_REGS:3960 FP_SECOND_SSE_REGS:3960 FLOAT_SSE_REGS:3960 FLOAT_INT_REGS:3960 INT_SSE_REGS:2520 FLOAT_INT_SSE_REGS:3960 ALL_REGS:3960 MEM:1530
  Register 194 costs: AREG:3312 DREG:3312 CREG:3312 BREG:3312 SIREG:3312 DIREG:3312 AD_REGS:3312 Q_REGS:3312 NON_Q_REGS:4842 INDEX_REGS:3312 LEGACY_REGS:4842 GENERAL_REGS:4842 FP_TOP_REG:5328 FP_SECOND_REG:5328 FLOAT_REGS:5328 SSE_REGS:36 FP_TOP_SSE_REGS:5328 FP_SECOND_SSE_REGS:5328 FLOAT_SSE_REGS:5328 FLOAT_INT_REGS:5328 INT_SSE_REGS:3312 FLOAT_INT_SSE_REGS:5328 ALL_REGS:7218 MEM:2196
  Register 199 costs: AREG:7520 DREG:7520 CREG:7520 BREG:7520 SIREG:7520 DIREG:7520 AD_REGS:7520 Q_REGS:7520 NON_Q_REGS:10954 INDEX_REGS:7520 LEGACY_REGS:10954 GENERAL_REGS:10954 FP_TOP_REG:12096 FP_SECOND_REG:12096 FLOAT_REGS:12096 SSE_REGS:84 FP_TOP_SSE_REGS:12096 FP_SECOND_SSE_REGS:12096 FLOAT_SSE_REGS:12096 FLOAT_INT_REGS:12096 INT_SSE_REGS:7520 FLOAT_INT_SSE_REGS:12096 ALL_REGS:16338 MEM:4980
  Register 201 costs: AREG:10504 DREG:10504 CREG:10504 BREG:10504 SIREG:10504 DIREG:10504 AD_REGS:10504 Q_REGS:10504 NON_Q_REGS:10504 INDEX_REGS:10504 LEGACY_REGS:10504 GENERAL_REGS:10504 FP_TOP_REG:16968 FP_SECOND_REG:16968 FLOAT_REGS:16968 SSE_REGS:0 FP_TOP_SSE_REGS:16968 FP_SECOND_SSE_REGS:16968 FLOAT_SSE_REGS:16968 FLOAT_INT_REGS:16968 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:16968 ALL_REGS:16968 MEM:6060
  Register 202 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:5252 INDEX_REGS:5252 LEGACY_REGS:5252 GENERAL_REGS:5252 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:8484 MEM:3030
  Register 205 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:9090 INDEX_REGS:5656 LEGACY_REGS:9090 GENERAL_REGS:9090 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:13130 MEM:4444
  Register 207 costs: AREG:13580 DREG:13580 CREG:13580 BREG:13580 SIREG:13580 DIREG:13580 AD_REGS:13580 Q_REGS:13580 NON_Q_REGS:13580 INDEX_REGS:13580 LEGACY_REGS:13580 GENERAL_REGS:13580 FP_TOP_REG:21388 FP_SECOND_REG:21388 FLOAT_REGS:21388 SSE_REGS:892 FP_TOP_SSE_REGS:21388 FP_SECOND_SSE_REGS:21388 FLOAT_SSE_REGS:21388 FLOAT_INT_REGS:21388 INT_SSE_REGS:13580 FLOAT_INT_SSE_REGS:21388 ALL_REGS:21388 MEM:8574
  Register 208 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:5656 INDEX_REGS:5656 LEGACY_REGS:5656 GENERAL_REGS:5656 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:8888 MEM:3434
  Register 212 costs: AREG:7520 DREG:7520 CREG:7520 BREG:7520 SIREG:7520 DIREG:7520 AD_REGS:7520 Q_REGS:7520 NON_Q_REGS:10954 INDEX_REGS:7520 LEGACY_REGS:10954 GENERAL_REGS:10954 FP_TOP_REG:12096 FP_SECOND_REG:12096 FLOAT_REGS:12096 SSE_REGS:84 FP_TOP_SSE_REGS:12096 FP_SECOND_SSE_REGS:12096 FLOAT_SSE_REGS:12096 FLOAT_INT_REGS:12096 INT_SSE_REGS:7520 FLOAT_INT_SSE_REGS:12096 ALL_REGS:16338 MEM:4980
  Register 214 costs: AREG:10504 DREG:10504 CREG:10504 BREG:10504 SIREG:10504 DIREG:10504 AD_REGS:10504 Q_REGS:10504 NON_Q_REGS:10504 INDEX_REGS:10504 LEGACY_REGS:10504 GENERAL_REGS:10504 FP_TOP_REG:16968 FP_SECOND_REG:16968 FLOAT_REGS:16968 SSE_REGS:0 FP_TOP_SSE_REGS:16968 FP_SECOND_SSE_REGS:16968 FLOAT_SSE_REGS:16968 FLOAT_INT_REGS:16968 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:16968 ALL_REGS:16968 MEM:6060
  Register 215 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:5252 INDEX_REGS:5252 LEGACY_REGS:5252 GENERAL_REGS:5252 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:8484 MEM:3030
  Register 218 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:9090 INDEX_REGS:5656 LEGACY_REGS:9090 GENERAL_REGS:9090 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:13130 MEM:4444
  Register 220 costs: AREG:13580 DREG:13580 CREG:13580 BREG:13580 SIREG:13580 DIREG:13580 AD_REGS:13580 Q_REGS:13580 NON_Q_REGS:13580 INDEX_REGS:13580 LEGACY_REGS:13580 GENERAL_REGS:13580 FP_TOP_REG:21388 FP_SECOND_REG:21388 FLOAT_REGS:21388 SSE_REGS:892 FP_TOP_SSE_REGS:21388 FP_SECOND_SSE_REGS:21388 FLOAT_SSE_REGS:21388 FLOAT_INT_REGS:21388 INT_SSE_REGS:13580 FLOAT_INT_SSE_REGS:21388 ALL_REGS:21388 MEM:8574
  Register 221 costs: AREG:5656 DREG:5656 CREG:5656 BREG:5656 SIREG:5656 DIREG:5656 AD_REGS:5656 Q_REGS:5656 NON_Q_REGS:5656 INDEX_REGS:5656 LEGACY_REGS:5656 GENERAL_REGS:5656 FP_TOP_REG:8888 FP_SECOND_REG:8888 FLOAT_REGS:8888 SSE_REGS:404 FP_TOP_SSE_REGS:8888 FP_SECOND_SSE_REGS:8888 FLOAT_SSE_REGS:8888 FLOAT_INT_REGS:8888 INT_SSE_REGS:5656 FLOAT_INT_SSE_REGS:8888 ALL_REGS:8888 MEM:3434
  Register 225 costs: AREG:7520 DREG:7520 CREG:7520 BREG:7520 SIREG:7520 DIREG:7520 AD_REGS:7520 Q_REGS:7520 NON_Q_REGS:10954 INDEX_REGS:7520 LEGACY_REGS:10954 GENERAL_REGS:10954 FP_TOP_REG:12096 FP_SECOND_REG:12096 FLOAT_REGS:12096 SSE_REGS:84 FP_TOP_SSE_REGS:12096 FP_SECOND_SSE_REGS:12096 FLOAT_SSE_REGS:12096 FLOAT_INT_REGS:12096 INT_SSE_REGS:7520 FLOAT_INT_SSE_REGS:12096 ALL_REGS:16338 MEM:4980
  Register 227 costs: AREG:10504 DREG:10504 CREG:10504 BREG:10504 SIREG:10504 DIREG:10504 AD_REGS:10504 Q_REGS:10504 NON_Q_REGS:10504 INDEX_REGS:10504 LEGACY_REGS:10504 GENERAL_REGS:10504 FP_TOP_REG:16968 FP_SECOND_REG:16968 FLOAT_REGS:16968 SSE_REGS:0 FP_TOP_SSE_REGS:16968 FP_SECOND_SSE_REGS:16968 FLOAT_SSE_REGS:16968 FLOAT_INT_REGS:16968 INT_SSE_REGS:10504 FLOAT_INT_SSE_REGS:16968 ALL_REGS:16968 MEM:6060
  Register 228 costs: AREG:5252 DREG:5252 CREG:5252 BREG:5252 SIREG:5252 DIREG:5252 AD_REGS:5252 Q_REGS:5252 NON_Q_REGS:5252 INDEX_REGS:5252 LEGACY_REGS:5252 GENERAL_REGS:5252 FP_TOP_REG:8484 FP_SECOND_REG:8484 FLOAT_REGS:8484 SSE_REGS:0 FP_TOP_SSE_REGS:8484 FP_SECOND_SSE_REGS:8484 FLOAT_SSE_REGS:8484 FLOAT_INT_REGS:8484 INT_SSE_REGS:5252 FLOAT_INT_SSE_REGS:8484 ALL_REGS:8484 MEM:3030
  Register 229 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 232 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 235 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 238 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 241 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 244 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600
  Register 247 costs: AREG:4680 DREG:4680 CREG:4680 BREG:4680 SIREG:4680 DIREG:4680 AD_REGS:4680 Q_REGS:4680 NON_Q_REGS:7740 INDEX_REGS:4680 LEGACY_REGS:7740 GENERAL_REGS:7740 FP_TOP_REG:7560 FP_SECOND_REG:7560 FLOAT_REGS:7560 SSE_REGS:0 FP_TOP_SSE_REGS:7560 FP_SECOND_SSE_REGS:7560 FLOAT_SSE_REGS:7560 FLOAT_INT_REGS:7560 INT_SSE_REGS:4680 FLOAT_INT_SSE_REGS:7560 ALL_REGS:11340 MEM:3600

  Register 158 pref DIREG, else GENERAL_REGS
250 registers.

Register 61 used 13 times across 81 insns; set 5 times; GENERAL_REGS or none; pointer.

Register 62 used 7 times across 10 insns; set 3 times; user var; SSE_REGS or none.

Register 63 used 8 times across 10 insns; set 3 times; user var; SSE_REGS or none.

Register 64 used 14 times across 176 insns; set 7 times; user var; dies in 2 places; SSE_REGS or none.

Register 65 used 15 times across 182 insns; set 8 times; user var; dies in 2 places; SSE_REGS or none.

Register 66 used 3 times across 12 insns; set 2 times; user var; crosses 2 calls; SSE_REGS or none.

Register 67 used 12 times across 81 insns; set 5 times; user var; 4 bytes; GENERAL_REGS or none.

Register 69 used 25 times across 279 insns; set 1 time; user var; dies in 0 places; crosses 5 calls; SSE_REGS or none.

Register 71 used 11 times across 142 insns; set 2 times; dies in 0 places; SSE_REGS or none.

Register 72 used 3 times across 12 insns; set 1 time; SSE_REGS or none.

Register 75 used 19 times across 147 insns; set 1 time; user var; crosses 6 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 76 used 15 times across 284 insns; set 1 time; user var; dies in 0 places; crosses 6 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 77 used 2 times across 143 insns; set 1 time; user var; crosses 6 calls; SSE_REGS or none.

Register 78 used 2 times across 2 insns in block 0; set 1 time; GENERAL_REGS or none.

Register 79 used 2 times across 2 insns in block 0; set 1 time; pref DIREG, else GENERAL_REGS.

Register 80 used 21 times across 126 insns; set 1 time; dies in 2 places; crosses 2 calls; pref DIREG, else GENERAL_REGS; pointer.

Register 82 used 6 times across 6 insns in block 32; set 3 times; SSE_REGS or none.

Register 86 used 2 times across 3 insns in block 3; set 1 time; SSE_REGS or none.

Register 95 used 26 times across 1052 insns; set 2 times; dies in 0 places; crosses 2 calls; 16 bytes; SSE_REGS or none.

Register 96 used 11 times across 276 insns; set 1 time; dies in 0 places; FLOAT_INT_SSE_REGS or none.

Register 97 used 16 times across 256 insns; set 1 time; dies in 0 places; SSE_REGS or none.

Register 102 used 6 times across 26 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 103 used 2 times across 42 insns; set 1 time; 4 bytes; GENERAL_REGS or none.

Register 104 used 4 times across 42 insns; set 1 time; GENERAL_REGS or none; pointer.

Register 107 used 10 times across 24 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 108 used 3 times across 5 insns in block 47; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 110 used 19 times across 218 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 111 used 37 times across 214 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 112 used 6 times across 6 insns in block 47; set 3 times; SSE_REGS or none.

Register 117 used 6 times across 6 insns in block 47; set 3 times; SSE_REGS or none.

Register 121 used 3 times across 5 insns in block 47; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 122 used 6 times across 6 insns in block 47; set 3 times; SSE_REGS or none.

Register 126 used 3 times across 5 insns in block 47; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 127 used 6 times across 6 insns in block 47; set 3 times; SSE_REGS or none.

Register 131 used 3 times across 5 insns in block 47; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 132 used 6 times across 6 insns in block 47; set 3 times; SSE_REGS or none.

Register 136 used 3 times across 5 insns in block 47; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 137 used 6 times across 6 insns in block 47; set 3 times; SSE_REGS or none.

Register 141 used 3 times across 5 insns in block 47; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 142 used 6 times across 6 insns in block 47; set 3 times; SSE_REGS or none.

Register 146 used 3 times across 5 insns in block 47; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 147 used 6 times across 6 insns in block 47; set 3 times; SSE_REGS or none.

Register 152 used 3 times across 11 insns; set 1 time; SSE_REGS or none.

Register 154 used 8 times across 10 insns; set 3 times; user var; SSE_REGS or none.

Register 155 used 2 times across 3 insns in block 24; set 1 time; SSE_REGS or none.

Register 156 used 2 times across 34 insns; set 1 time; user var; SSE_REGS or none.

Register 157 used 2 times across 2 insns in block 10; set 1 time; user var; 4 bytes; GENERAL_REGS or none.

Register 158 used 4 times across 32 insns; set 1 time; pref DIREG, else GENERAL_REGS; pointer.

Register 159 used 3 times across 11 insns; set 1 time; SSE_REGS or none.

Register 161 used 8 times across 10 insns; set 3 times; user var; SSE_REGS or none.

Register 162 used 2 times across 4 insns in block 8; set 1 time; SSE_REGS or none.

Register 166 used 7 times across 9 insns; set 3 times; user var; SSE_REGS or none.

Register 168 used 2 times across 34 insns; set 1 time; user var; FLOAT_INT_SSE_REGS or none.

Register 169 used 5 times across 13 insns; set 2 times; SSE_REGS or none.

Register 171 used 8 times across 10 insns; set 3 times; user var; SSE_REGS or none.

Register 172 used 2 times across 3 insns in block 14; set 1 time; SSE_REGS or none.

Register 176 used 7 times across 9 insns; set 3 times; user var; SSE_REGS or none.

Register 178 used 5 times across 13 insns; set 2 times; SSE_REGS or none.

Register 180 used 8 times across 10 insns; set 3 times; user var; SSE_REGS or none.

Register 181 used 2 times across 3 insns in block 17; set 1 time; SSE_REGS or none.

Register 185 used 7 times across 9 insns; set 3 times; user var; SSE_REGS or none.

Register 187 used 5 times across 13 insns; set 2 times; SSE_REGS or none.

Register 189 used 8 times across 10 insns; set 3 times; user var; SSE_REGS or none.

Register 190 used 2 times across 3 insns in block 20; set 1 time; SSE_REGS or none.

Register 194 used 7 times across 9 insns; set 3 times; user var; SSE_REGS or none.

Register 199 used 7 times across 9 insns; set 3 times; user var; SSE_REGS or none.

Register 201 used 4 times across 18 insns; set 2 times; user var; SSE_REGS or none.

Register 202 used 2 times across 16 insns; set 1 time; user var; SSE_REGS or none.

Register 205 used 3 times across 11 insns; set 1 time; SSE_REGS or none.

Register 207 used 8 times across 10 insns; set 3 times; user var; SSE_REGS or none.

Register 208 used 2 times across 3 insns in block 26; set 1 time; SSE_REGS or none.

Register 212 used 7 times across 9 insns; set 3 times; user var; SSE_REGS or none.

Register 214 used 4 times across 16 insns; set 2 times; user var; SSE_REGS or none.

Register 215 used 2 times across 14 insns; set 1 time; user var; SSE_REGS or none.

Register 218 used 3 times across 11 insns; set 1 time; SSE_REGS or none.

Register 220 used 8 times across 10 insns; set 3 times; user var; SSE_REGS or none.

Register 221 used 2 times across 3 insns in block 28; set 1 time; SSE_REGS or none.

Register 225 used 7 times across 9 insns; set 3 times; user var; SSE_REGS or none.

Register 227 used 4 times across 16 insns; set 2 times; user var; SSE_REGS or none.

Register 228 used 2 times across 14 insns; set 1 time; user var; SSE_REGS or none.

Register 229 used 6 times across 6 insns in block 40; set 3 times; SSE_REGS or none.

Register 232 used 6 times across 6 insns in block 41; set 3 times; SSE_REGS or none.

Register 235 used 6 times across 6 insns in block 42; set 3 times; SSE_REGS or none.

Register 238 used 6 times across 6 insns in block 43; set 3 times; SSE_REGS or none.

Register 241 used 6 times across 6 insns in block 44; set 3 times; SSE_REGS or none.

Register 244 used 6 times across 6 insns in block 45; set 3 times; SSE_REGS or none.

Register 247 used 6 times across 6 insns in block 46; set 3 times; SSE_REGS or none.

49 basic blocks, 76 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  1 [10.0%]  (fallthru) 32 [90.0%] 
Registers live at start: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  0 [10.0%]  (fallthru)
Successors:  6 2 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 69 75 76 77

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  1 [100.0%]  (fallthru)
Successors:  7 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 2025, maybe hot.
Predecessors:  23 [100.0%]  31 [100.0%]  11 [25.0%] 
Successors:  24 [79.0%]  4 [21.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 65 67 69 71 72 76 95 96 97
Invalid sum of incoming frequencies 2633, should be 2025

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 425, maybe hot.
Predecessors:  3 [21.0%]  (fallthru)
Successors:  24 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 64 65 67 69 71 72 76 95 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 64 65 67 69 71 72 76 95 96 97

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  47 [10.0%]  (loop_exit) 32 [10.0%]  46 [10.0%] 
Successors:  8 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 69 75 76 77 95
Invalid sum of incoming frequencies 291, should be 1000

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 0.
Predecessors:  1
Successors:  8 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 69 75 76 77
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 69 75 76 77 95

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  2 [100.0%]  30 [10.0%]  (loop_exit) 10 [10.0%]  22 [10.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
Invalid sum of incoming frequencies 504, should be 1111

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  5 [100.0%]  6 [100.0%] 
Successors:  9 [21.0%]  (fallthru) 10 [79.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 69 75 76 77 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 102 156 158 159 161 166 168

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 210, maybe hot.
Predecessors:  8 [21.0%]  (fallthru)
Successors:  10 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 102 156 158 159 161 168
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 102 156 158 159 166 168

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  8 [79.0%]  9 [100.0%]  (fallthru)
Successors:  11 [90.0%]  (fallthru,dfs_back) 7 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 102 156 158 159 166 168
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  10 [90.0%]  (fallthru,dfs_back)
Successors:  12 [75.0%]  (fallthru) 3 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158
Invalid sum of incoming frequencies 900, should be 600

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  11 [75.0%]  (fallthru)
Successors:  13 [66.7%]  (fallthru) 20 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [66.7%]  (fallthru)
Successors:  14 [50.0%]  (fallthru) 17 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 158
Invalid sum of incoming frequencies 300, should be 900

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
Successors:  15 [21.0%]  (fallthru) 16 [79.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 158
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 169 171 176
Invalid sum of incoming frequencies 450, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 189, maybe hot.
Predecessors:  14 [21.0%]  (fallthru)
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 169 171
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 169 176

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [79.0%]  15 [100.0%]  (fallthru)
Successors:  17 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 169 176
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 13 [50.0%] 
Successors:  18 [21.0%]  (fallthru) 19 [79.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 178 180 185
Invalid sum of incoming frequencies 1350, should be 900

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 189, maybe hot.
Predecessors:  17 [21.0%]  (fallthru)
Successors:  19 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 178 180
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 178 185

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  17 [79.0%]  18 [100.0%]  (fallthru)
Successors:  20 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 178 185
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  19 [100.0%]  (fallthru) 12 [33.3%] 
Successors:  21 [21.0%]  (fallthru) 22 [79.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 187 189 194
Invalid sum of incoming frequencies 1050, should be 900

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 189, maybe hot.
Predecessors:  20 [21.0%]  (fallthru)
Successors:  22 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 187 189
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 187 194

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  20 [79.0%]  21 [100.0%]  (fallthru)
Successors:  23 [90.0%]  (fallthru,dfs_back) 7 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 187 194
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 660, maybe hot.
Predecessors:  22 [90.0%]  (fallthru,dfs_back)
Successors:  3 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
Invalid sum of incoming frequencies 810, should be 660

Basic block 24 prev 23, next 25, loop_depth 1, count 0, freq 2025, maybe hot.
Predecessors:  3 [79.0%]  4 [100.0%] 
Successors:  25 [21.0%]  (fallthru) 26 [79.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 64 65 67 69 71 72 76 95 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 152 154 199 201 202

Basic block 25 prev 24, next 26, loop_depth 1, count 0, freq 425, maybe hot.
Predecessors:  24 [21.0%]  (fallthru)
Successors:  26 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 152 154 201 202
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 152 199 201 202

Basic block 26 prev 25, next 27, loop_depth 1, count 0, freq 2025, maybe hot.
Predecessors:  24 [79.0%]  25 [100.0%]  (fallthru)
Successors:  27 [21.0%]  (fallthru) 28 [79.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 152 199 201 202
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 205 207 212 214 215

Basic block 27 prev 26, next 28, loop_depth 1, count 0, freq 425, maybe hot.
Predecessors:  26 [21.0%]  (fallthru)
Successors:  28 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 205 207 214 215
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 205 212 214 215

Basic block 28 prev 27, next 29, loop_depth 1, count 0, freq 2025, maybe hot.
Predecessors:  26 [79.0%]  27 [100.0%]  (fallthru)
Successors:  29 [21.0%]  (fallthru) 30 [79.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 205 212 214 215
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 218 220 225 227 228

Basic block 29 prev 28, next 30, loop_depth 1, count 0, freq 425, maybe hot.
Predecessors:  28 [21.0%]  (fallthru)
Successors:  30 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 218 220 227 228
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 218 225 227 228

Basic block 30 prev 29, next 31, loop_depth 1, count 0, freq 2025, maybe hot.
Predecessors:  28 [79.0%]  29 [100.0%]  (fallthru)
Successors:  31 [90.0%]  (fallthru,dfs_back) 7 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 218 225 227 228
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

Basic block 31 prev 30, next 32, loop_depth 1, count 0, freq 1823, maybe hot.
Predecessors:  30 [90.0%]  (fallthru,dfs_back)
Successors:  3 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

Basic block 32 prev 31, next 33, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  33 [90.0%]  (fallthru,dfs_back) 5 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

Basic block 33 prev 32, next 34, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  32 [90.0%]  (fallthru,dfs_back)
Successors:  34 [87.5%]  (fallthru) 47 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
Invalid sum of incoming frequencies 900, should be 771

Basic block 34 prev 33, next 35, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  33 [87.5%]  (fallthru)
Successors:  35 [85.7%]  (fallthru) 46 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

Basic block 35 prev 34, next 36, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  34 [85.7%]  (fallthru)
Successors:  36 [83.3%]  (fallthru) 45 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

Basic block 36 prev 35, next 37, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  35 [83.3%]  (fallthru)
Successors:  37 [80.0%]  (fallthru) 44 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

Basic block 37 prev 36, next 38, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  36 [80.0%]  (fallthru)
Successors:  38 [75.0%]  (fallthru) 43 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

Basic block 38 prev 37, next 39, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  37 [75.0%]  (fallthru)
Successors:  39 [66.7%]  (fallthru) 42 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

Basic block 39 prev 38, next 40, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  38 [66.7%]  (fallthru)
Successors:  40 [50.0%]  (fallthru) 41 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Invalid sum of incoming frequencies 300, should be 900

Basic block 40 prev 39, next 41, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  39 [50.0%]  (fallthru)
Successors:  41 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Invalid sum of incoming frequencies 450, should be 900

Basic block 41 prev 40, next 42, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  40 [100.0%]  (fallthru) 39 [50.0%] 
Successors:  42 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Invalid sum of incoming frequencies 1350, should be 900

Basic block 42 prev 41, next 43, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  41 [100.0%]  (fallthru) 38 [33.3%] 
Successors:  43 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Invalid sum of incoming frequencies 1050, should be 900

Basic block 43 prev 42, next 44, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  42 [100.0%]  (fallthru) 37 [25.0%] 
Successors:  44 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Invalid sum of incoming frequencies 1050, should be 900

Basic block 44 prev 43, next 45, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  43 [100.0%]  (fallthru) 36 [20.0%] 
Successors:  45 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Invalid sum of incoming frequencies 1035, should be 900

Basic block 45 prev 44, next 46, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  44 [100.0%]  (fallthru) 35 [16.7%] 
Successors:  46 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Invalid sum of incoming frequencies 1020, should be 900

Basic block 46 prev 45, next 47, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  45 [100.0%]  (fallthru) 34 [14.3%] 
Successors:  47 [90.0%]  (fallthru,dfs_back) 5 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Invalid sum of incoming frequencies 1007, should be 900

Basic block 47 prev 46, next 48, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  46 [90.0%]  (fallthru,dfs_back) 48 [100.0%]  33 [12.5%] 
Successors:  48 [90.0%]  (fallthru,dfs_back) 5 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 48 prev 47, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  47 [90.0%]  (fallthru,dfs_back)
Successors:  47 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

;; Register 78 in 5.
;; Register 79 in 5.
;; Register 82 in 21.
;; Register 86 in 21.
;; Register 108 in 0.
;; Register 112 in 21.
;; Register 117 in 21.
;; Register 121 in 0.
;; Register 122 in 21.
;; Register 126 in 0.
;; Register 127 in 21.
;; Register 131 in 0.
;; Register 132 in 21.
;; Register 136 in 0.
;; Register 137 in 21.
;; Register 141 in 0.
;; Register 142 in 21.
;; Register 146 in 0.
;; Register 147 in 21.
;; Register 155 in 21.
;; Register 157 in 0.
;; Register 162 in 21.
;; Register 172 in 21.
;; Register 181 in 21.
;; Register 190 in 21.
;; Register 208 in 21.
;; Register 221 in 21.
;; Register 229 in 21.
;; Register 232 in 21.
;; Register 235 in 21.
;; Register 238 in 21.
;; Register 241 in 21.
;; Register 244 in 21.
;; Register 247 in 21.
(note:HI 1 0 8 ("./CStatUtilities.c") 201)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
(note:HI 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 8 4 0 ./CStatUtilities.c:201 (set (reg/v/f:DI 75 [ x ])
        (reg:DI 5 di [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))

(insn:HI 4 3 5 0 ./CStatUtilities.c:201 (set (reg/v:SI 76 [ len ])
        (reg:SI 4 si [ len ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ len ])
        (nil)))

(insn:HI 5 4 6 0 ./CStatUtilities.c:201 (set (reg/v:DF 77 [ c ])
        (reg:DF 21 xmm0 [ c ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg:DF 21 xmm0 [ c ])
        (nil)))

(note:HI 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 10 6 11 0 ("./CStatUtilities.c") 202)

(insn:HI 11 10 12 0 ./CStatUtilities.c:202 (set (reg:SI 4 si [ len ])
        (reg/v:SI 76 [ len ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(insn:HI 12 11 13 0 ./CStatUtilities.c:202 (set (reg:DI 5 di [ x ])
        (reg/v/f:DI 75 [ x ])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(call_insn:HI 13 12 14 0 ./CStatUtilities.c:202 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x3] <function_decl 0x2b4e9c504e00 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 11 (insn_list:REG_DEP_TRUE 12 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ len ])
        (expr_list:REG_DEAD (reg:DI 5 di [ x ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ x ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ len ]))
            (nil))))

(insn:HI 14 13 15 0 ./CStatUtilities.c:202 (set (reg/v:DF 69 [ median ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 15 14 16 0 ("./CStatUtilities.c") 205)

(insn:HI 16 15 17 0 ./CStatUtilities.c:205 (set (reg:DI 78 [ len ])
        (sign_extend:DI (reg/v:SI 76 [ len ]))) 115 {extendsidi2_rex64} (nil)
    (nil))

(insn:HI 17 16 18 0 ./CStatUtilities.c:205 (parallel [
            (set (reg:DI 79)
                (ashift:DI (reg:DI 78 [ len ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 409 {*ashldi3_1_rex64} (insn_list:REG_DEP_TRUE 16 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 78 [ len ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 18 17 19 0 ./CStatUtilities.c:205 (set (reg:DI 5 di)
        (reg:DI 79)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 17 (nil))
    (expr_list:REG_DEAD (reg:DI 79)
        (nil)))

(call_insn:HI 19 18 20 0 ./CStatUtilities.c:205 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41] <function_decl 0x2b4e9c47b400 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn:HI 20 19 23 0 ./CStatUtilities.c:205 (set (reg/f:DI 80)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 19 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 80)
            (nil))))

(note:HI 23 20 24 0 ("./CStatUtilities.c") 208)

(insn:HI 24 23 25 0 ./CStatUtilities.c:208 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 76 [ len ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 25 24 147 0 ./CStatUtilities.c:208 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 857)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 24 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80

(note:HI 147 25 148 NOTE_INSN_LOOP_BEG)

(note:HI 148 147 49 NOTE_INSN_LOOP_END)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80
(note:HI 49 148 50 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(note:HI 50 49 51 1 ("./CStatUtilities.c") 211)

(insn:HI 51 50 52 1 ./CStatUtilities.c:211 (set (reg:SI 4 si [ len ])
        (reg/v:SI 76 [ len ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 52 51 53 1 ./CStatUtilities.c:211 (set (reg:DI 5 di [ res ])
        (reg/f:DI 80)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 53 52 54 1 ./CStatUtilities.c:211 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x3] <function_decl 0x2b4e9c504e00 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 51 (insn_list:REG_DEP_TRUE 52 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ len ])
        (expr_list:REG_DEAD (reg:DI 5 di [ res ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ len ]))
            (nil))))

(insn:HI 54 53 55 1 ./CStatUtilities.c:211 (set (reg/v:DF 66 [ MAD ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 53 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 55 54 56 1 ("./CStatUtilities.c") 213)

(insn:HI 56 55 57 1 ./CStatUtilities.c:213 (set (reg:DI 5 di [ res ])
        (reg/f:DI 80)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))

(call_insn:HI 57 56 58 1 ./CStatUtilities.c:213 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 56 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ res ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (nil)))

(note:HI 58 57 59 1 ("./CStatUtilities.c") 221)

(insn:HI 59 58 60 1 ./CStatUtilities.c:221 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 76 [ len ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 60 59 62 1 ./CStatUtilities.c:221 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 162)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 59 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 69 75 76 77

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 62 60 63 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 63 62 64 2 ./CStatUtilities.c:221 (set (reg/v:DF 64 [ sum ])
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 64 63 802 2 ./CStatUtilities.c:221 (set (reg/v:DF 65 [ weightedsum ])
        (reg/v:DF 64 [ sum ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 63 (nil))
    (nil))

(jump_insn:HI 802 64 803 2 (set (pc)
        (label_ref 103)) 548 {jump} (nil)
    (nil))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65

(barrier:HI 803 802 149)

(note:HI 149 803 67 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
(code_label:HI 67 149 68 3 664 "" [3 uses])

(note:HI 68 67 69 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 69 68 70 3 ("./CStatUtilities.c") 223)

(insn:HI 70 69 71 3 ./CStatUtilities.c:223 (set (reg:DF 72 [ D.5324 ])
        (mem:DF (reg/f:DI 61 [ ivtmp.635 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 71 70 72 3 ./CStatUtilities.c:223 (set (reg/v:DF 63 [ y ])
        (minus:DF (reg:DF 72 [ D.5324 ])
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 70 (nil))
    (nil))

(insn:HI 72 71 73 3 ./CStatUtilities.c:223 (set (reg/v:DF 63 [ y ])
        (div:DF (reg/v:DF 63 [ y ])
            (reg:DF 71 [ D.5329 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 71 (nil))
    (nil))

(note:HI 73 72 75 3 ("./CStatUtilities.c") 226)

(insn:HI 75 73 153 3 ./CStatUtilities.c:226 (parallel [
            (set (reg:DF 86)
                (abs:DF (reg/v:DF 63 [ y ])))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 72 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg/v:DF 63 [ y ]))
                (nil)))))

(insn:HI 153 75 77 3 ./CStatUtilities.c:226 (set (reg/v:DF 62 [ w ])
        (reg:DF 96 [ weightedsum ])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 77 153 78 3 ./CStatUtilities.c:226 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 97)
            (reg:DF 86))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 75 (nil))
    (expr_list:REG_DEAD (reg:DF 86)
        (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 86))
            (nil))))

(jump_insn:HI 78 77 85 3 ./CStatUtilities.c:226 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 91)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 77 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 63 64 65 67 69 71 72 76 95 96 97

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 63 64 65 67 69 71 72 76 95 96 97
(note:HI 85 78 86 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 86 85 87 4 ("./CStatUtilities.c") 227)

(insn:HI 87 86 89 4 ./CStatUtilities.c:227 (set (reg/v:DF 63 [ y ])
        (mult:DF (reg/v:DF 63 [ y ])
            (reg/v:DF 63 [ y ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 89 87 90 4 ./CStatUtilities.c:227 (set (reg/v:DF 62 [ w ])
        (minus:DF (reg:DF 97)
            (reg/v:DF 63 [ y ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 87 (nil))
    (expr_list:REG_DEAD (reg/v:DF 63 [ y ])
        (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 89))
            (nil))))

(insn:HI 90 89 870 4 ./CStatUtilities.c:227 (set (reg/v:DF 62 [ w ])
        (mult:DF (reg/v:DF 62 [ w ])
            (reg/v:DF 62 [ w ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 89 (nil))
    (nil))

(jump_insn:HI 870 90 871 4 (set (pc)
        (label_ref 91)) 548 {jump} (nil)
    (nil))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 64 65 67 69 71 72 76 95 96 97

(barrier:HI 871 870 150)

(note:HI 150 871 796 NOTE_INSN_LOOP_END)

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95
(code_label:HI 796 150 110 5 712 "" [3 uses])

(note:HI 110 796 111 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 111 110 112 5 ("./CStatUtilities.c") 211)

(insn:HI 112 111 113 5 ./CStatUtilities.c:211 (set (reg:SI 4 si [ len ])
        (reg/v:SI 76 [ len ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 113 112 114 5 ./CStatUtilities.c:211 (set (reg:DI 5 di [ res ])
        (reg/f:DI 80)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 114 113 115 5 ./CStatUtilities.c:211 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("medianInPlace") [flags 0x3] <function_decl 0x2b4e9c504e00 medianInPlace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 112 (insn_list:REG_DEP_TRUE 113 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ len ])
        (expr_list:REG_DEAD (reg:DI 5 di [ res ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ len ]))
            (nil))))

(insn:HI 115 114 116 5 ./CStatUtilities.c:211 (set (reg/v:DF 66 [ MAD ])
        (reg:DF 21 xmm0)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 114 (nil))
    (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))

(note:HI 116 115 117 5 ("./CStatUtilities.c") 213)

(insn:HI 117 116 118 5 ./CStatUtilities.c:213 (set (reg:DI 5 di [ res ])
        (reg/f:DI 80)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 80)
        (nil)))

(call_insn:HI 118 117 813 5 ./CStatUtilities.c:213 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41] <function_decl 0x2b4e9c731f00 free>) [0 S1 A8])
        (const_int 0 [0x0])) 555 {*call_0} (insn_list:REG_DEP_TRUE 117 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ res ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ res ]))
        (nil)))

(jump_insn:HI 813 118 814 5 (set (pc)
        (label_ref 119)) 548 {jump} (nil)
    (nil))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 69 75 76 77 95

(barrier:HI 814 813 162)

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 69 75 76 77
(code_label:HI 162 814 161 6 669 "" [1 uses])

(note:HI 161 162 156 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 156 161 860 6 (set (reg:V2DF 95)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [6 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(jump_insn:HI 860 156 861 6 (set (pc)
        (label_ref 119)) 548 {jump} (nil)
    (nil))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 69 75 76 77 95

(barrier:HI 861 860 131)

(note:HI 131 861 132 NOTE_INSN_FUNCTION_END)

(note:HI 132 131 103 ("./CStatUtilities.c") 234)

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64 65
(code_label:HI 103 132 104 7 663 "" [4 uses])

(note:HI 104 103 105 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 105 104 134 7 NOTE_INSN_DELETED)

(insn:HI 134 105 140 7 ./CStatUtilities.c:234 (set (reg/i:DF 21 xmm0 [ <result> ])
        (div:DF (reg/v:DF 65 [ weightedsum ])
            (reg/v:DF 64 [ sum ]))) 619 {*fop_df_1_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 64 [ sum ])
        (expr_list:REG_DEAD (reg/v:DF 65 [ weightedsum ])
            (nil))))

(insn:HI 140 134 119 7 ./CStatUtilities.c:234 (use (reg/i:DF 21 xmm0 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 134 (nil))
    (nil))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66 69 75 76 77 95
(code_label:HI 119 140 120 8 661 "" [2 uses])

(note:HI 120 119 121 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note:HI 121 120 122 8 ("./CStatUtilities.c") 223)

(insn:HI 122 121 123 8 ./CStatUtilities.c:223 (set (reg:DF 71 [ D.5329 ])
        (mult:DF (reg/v:DF 77 [ c ])
            (reg/v:DF 66 [ MAD ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 77 [ c ])
        (expr_list:REG_DEAD (reg/v:DF 66 [ MAD ])
            (nil))))

(note:HI 123 122 124 8 NOTE_INSN_DELETED)

(insn:HI 124 123 125 8 ./CStatUtilities.c:223 (set (reg:DF 71 [ D.5329 ])
        (plus:DF (reg:DF 71 [ D.5329 ])
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [6 S8 A64]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 122 (nil))
    (nil))

(insn:HI 125 124 126 8 ./CStatUtilities.c:223 (set (reg/f:DI 158 [ ivtmp.635 ])
        (reg/v/f:DI 75 [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 75 [ x ])
        (nil)))

(insn:HI 126 125 158 8 ./CStatUtilities.c:223 (set (reg:DF 96 [ weightedsum ])
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn:HI 158 126 127 8 ./CStatUtilities.c:223 (set (reg/v:DF 156 [ weightedsum ])
        (reg:DF 96 [ weightedsum ])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 126 (nil))
    (expr_list:REG_EQUIV (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(insn:HI 127 158 157 8 ./CStatUtilities.c:223 (set (reg/v:DF 168 [ sum ])
        (reg:DF 96 [ weightedsum ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(note:HI 157 127 172 8 NOTE_INSN_DELETED)

(note:HI 172 157 173 8 NOTE_INSN_DELETED)

(insn:HI 173 172 174 8 (parallel [
            (set (reg:SI 102)
                (plus:SI (reg/v:SI 76 [ len ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 174 173 177 8 (parallel [
            (set (reg:SI 102)
                (and:SI (reg:SI 102)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 173 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 177 174 178 8 ("./CStatUtilities.c") 223)

(insn:HI 178 177 179 8 ./CStatUtilities.c:223 (set (reg:DF 159 [ D.5324 ])
        (mem:DF (reg/f:DI 158 [ ivtmp.635 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 179 178 180 8 ./CStatUtilities.c:223 (set (reg/v:DF 161 [ y ])
        (minus:DF (reg:DF 159 [ D.5324 ])
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 178 (nil))
    (nil))

(insn:HI 180 179 181 8 ./CStatUtilities.c:223 (set (reg/v:DF 161 [ y ])
        (div:DF (reg/v:DF 161 [ y ])
            (reg:DF 71 [ D.5329 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 124 (insn_list:REG_DEP_TRUE 179 (nil)))
    (nil))

(note:HI 181 180 182 8 ("./CStatUtilities.c") 226)

(insn:HI 182 181 184 8 ./CStatUtilities.c:226 (parallel [
            (set (reg:DF 162)
                (abs:DF (reg/v:DF 161 [ y ])))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 180 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg/v:DF 161 [ y ]))
                (nil)))))

(insn:HI 184 182 195 8 ./CStatUtilities.c:226 (set (reg:DF 97)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [6 S8 A64])
        (nil)))

(insn:HI 195 184 185 8 ./CStatUtilities.c:226 (set (reg/v:DF 166 [ w ])
        (reg:DF 96 [ weightedsum ])) 94 {*movdf_integer} (nil)
    (nil))

(jump_insn:HI 185 195 193 8 ./CStatUtilities.c:226 (parallel [
            (set (pc)
                (if_then_else (ungt (reg:DF 162)
                        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [6 S8 A64]))
                    (label_ref:DI 819)
                    (pc)))
            (clobber (reg:CCFP 18 fpsr))
            (clobber (reg:CCFP 17 flags))
        ]) 536 {*fp_jcc_1_sse} (insn_list:REG_DEP_TRUE 182 (nil))
    (expr_list:REG_UNUSED (reg:CCFP 17 flags)
        (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
            (expr_list:REG_DEAD (reg:DF 162)
                (expr_list:REG_UNUSED (reg:CCFP 17 flags)
                    (expr_list:REG_UNUSED (reg:CCFP 18 fpsr)
                        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
                            (nil))))))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 102 156 158 159 161 166 168

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 102 156 158 159 161 168
(note:HI 193 185 189 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note:HI 189 193 190 9 ("./CStatUtilities.c") 227)

(insn:HI 190 189 191 9 ./CStatUtilities.c:227 (set (reg/v:DF 161 [ y ])
        (mult:DF (reg/v:DF 161 [ y ])
            (reg/v:DF 161 [ y ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 191 190 192 9 ./CStatUtilities.c:227 (set (reg/v:DF 166 [ w ])
        (minus:DF (reg:DF 97)
            (reg/v:DF 161 [ y ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 190 (nil))
    (expr_list:REG_DEAD (reg/v:DF 161 [ y ])
        (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 163))
            (nil))))

(insn:HI 192 191 819 9 ./CStatUtilities.c:227 (set (reg/v:DF 166 [ w ])
        (mult:DF (reg/v:DF 166 [ w ])
            (reg/v:DF 166 [ w ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 191 (nil))
    (nil))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 102 156 158 159 166 168

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 102 156 158 159 166 168
(code_label:HI 819 192 208 10 717 "" [1 uses])

(note:HI 208 819 198 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 198 208 199 10 ("./CStatUtilities.c") 229)

(insn:HI 199 198 200 10 ./CStatUtilities.c:229 (set (reg/v:DF 65 [ weightedsum ])
        (mult:DF (reg/v:DF 166 [ w ])
            (reg:DF 159 [ D.5324 ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 159 [ D.5324 ])
        (nil)))

(insn:HI 200 199 201 10 ./CStatUtilities.c:229 (set (reg/v:DF 65 [ weightedsum ])
        (plus:DF (reg/v:DF 156 [ weightedsum ])
            (reg/v:DF 65 [ weightedsum ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 199 (nil))
    (expr_list:REG_DEAD (reg/v:DF 156 [ weightedsum ])
        (nil)))

(note:HI 201 200 873 10 ("./CStatUtilities.c") 230)

(insn 873 201 202 10 ./CStatUtilities.c:230 (set (reg/v:DF 64 [ sum ])
        (reg/v:DF 168 [ sum ])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/v:DF 168 [ sum ])
        (nil)))

(insn:HI 202 873 203 10 ./CStatUtilities.c:230 (set (reg/v:DF 64 [ sum ])
        (plus:DF (reg/v:DF 64 [ sum ])
            (reg/v:DF 166 [ w ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 166 [ w ])
        (nil)))

(note:HI 203 202 874 10 ("./CStatUtilities.c") 221)

(insn 874 203 204 10 ./CStatUtilities.c:221 (set (reg/v:SI 157 [ i ])
        (const_int 0 [0x0])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:HI 204 874 205 10 ./CStatUtilities.c:221 (parallel [
            (set (reg/v:SI 67 [ i ])
                (plus:SI (reg/v:SI 157 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 157 [ i ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 205 204 206 10 ./CStatUtilities.c:221 (parallel [
            (set (reg/f:DI 61 [ ivtmp.635 ])
                (plus:DI (reg/f:DI 158 [ ivtmp.635 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 206 205 207 10 ./CStatUtilities.c:221 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 67 [ i ])
            (reg/v:SI 76 [ len ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 204 (nil))
    (nil))

(jump_insn:HI 207 206 343 10 ./CStatUtilities.c:221 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 103)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 206 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158
(note:HI 343 207 341 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 341 343 342 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 342 341 300 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 67)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 341 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158
(note:HI 300 342 298 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 298 300 299 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 299 298 257 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 862)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 298 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 102 158
(note:HI 257 299 255 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 255 257 256 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 102)
        (nil)))

(jump_insn:HI 256 255 225 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 863)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 255 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 158

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 158
(note:HI 225 256 216 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 216 225 217 14 ("./CStatUtilities.c") 223)

(insn:HI 217 216 218 14 ./CStatUtilities.c:223 (set (reg:DF 169 [ D.5324 ])
        (mem:DF (plus:DI (reg/f:DI 158 [ ivtmp.635 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/f:DI 158 [ ivtmp.635 ])
        (nil)))

(insn:HI 218 217 219 14 ./CStatUtilities.c:223 (set (reg/v:DF 171 [ y ])
        (minus:DF (reg:DF 169 [ D.5324 ])
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 217 (nil))
    (nil))

(insn:HI 219 218 220 14 ./CStatUtilities.c:223 (set (reg/v:DF 171 [ y ])
        (div:DF (reg/v:DF 171 [ y ])
            (reg:DF 71 [ D.5329 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 218 (nil))
    (nil))

(note:HI 220 219 221 14 ("./CStatUtilities.c") 226)

(insn:HI 221 220 234 14 ./CStatUtilities.c:226 (parallel [
            (set (reg:DF 172)
                (abs:DF (reg/v:DF 171 [ y ])))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 219 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg/v:DF 171 [ y ]))
                (nil)))))

(insn:HI 234 221 223 14 ./CStatUtilities.c:226 (set (reg/v:DF 176 [ w ])
        (reg:DF 96 [ weightedsum ])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 223 234 224 14 ./CStatUtilities.c:226 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 97)
            (reg:DF 172))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 221 (nil))
    (expr_list:REG_DEAD (reg:DF 172)
        (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 172))
            (nil))))

(jump_insn:HI 224 223 232 14 ./CStatUtilities.c:226 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 824)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 223 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 169 171 176

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 169 171
(note:HI 232 224 228 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 228 232 229 15 ("./CStatUtilities.c") 227)

(insn:HI 229 228 230 15 ./CStatUtilities.c:227 (set (reg/v:DF 171 [ y ])
        (mult:DF (reg/v:DF 171 [ y ])
            (reg/v:DF 171 [ y ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 230 229 231 15 ./CStatUtilities.c:227 (set (reg/v:DF 176 [ w ])
        (minus:DF (reg:DF 97)
            (reg/v:DF 171 [ y ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 229 (nil))
    (expr_list:REG_DEAD (reg/v:DF 171 [ y ])
        (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 173))
            (nil))))

(insn:HI 231 230 824 15 ./CStatUtilities.c:227 (set (reg/v:DF 176 [ w ])
        (mult:DF (reg/v:DF 176 [ w ])
            (reg/v:DF 176 [ w ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 230 (nil))
    (nil))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 169 176

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 169 176
(code_label:HI 824 231 247 16 720 "" [1 uses])

(note:HI 247 824 237 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 237 247 238 16 ("./CStatUtilities.c") 229)

(insn:HI 238 237 239 16 ./CStatUtilities.c:229 (set (reg:DF 169 [ D.5324 ])
        (mult:DF (reg/v:DF 176 [ w ])
            (reg:DF 169 [ D.5324 ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 239 238 240 16 ./CStatUtilities.c:229 (set (reg/v:DF 65 [ weightedsum ])
        (plus:DF (reg/v:DF 65 [ weightedsum ])
            (reg:DF 169 [ D.5324 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 238 (nil))
    (expr_list:REG_DEAD (reg:DF 169 [ D.5324 ])
        (nil)))

(note:HI 240 239 241 16 ("./CStatUtilities.c") 230)

(insn:HI 241 240 242 16 ./CStatUtilities.c:230 (set (reg/v:DF 64 [ sum ])
        (plus:DF (reg/v:DF 64 [ sum ])
            (reg/v:DF 176 [ w ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 176 [ w ])
        (nil)))

(note:HI 242 241 243 16 ("./CStatUtilities.c") 221)

(insn:HI 243 242 244 16 ./CStatUtilities.c:221 (parallel [
            (set (reg/v:SI 67 [ i ])
                (plus:SI (reg/v:SI 67 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 244 243 863 16 ./CStatUtilities.c:221 (parallel [
            (set (reg/f:DI 61 [ ivtmp.635 ])
                (plus:DI (reg/f:DI 61 [ ivtmp.635 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
(code_label:HI 863 244 268 17 734 "" [1 uses])

(note:HI 268 863 259 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 259 268 260 17 ("./CStatUtilities.c") 223)

(insn:HI 260 259 261 17 ./CStatUtilities.c:223 (set (reg:DF 178 [ D.5324 ])
        (mem:DF (reg/f:DI 61 [ ivtmp.635 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 261 260 262 17 ./CStatUtilities.c:223 (set (reg/v:DF 180 [ y ])
        (minus:DF (reg:DF 178 [ D.5324 ])
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 260 (nil))
    (nil))

(insn:HI 262 261 263 17 ./CStatUtilities.c:223 (set (reg/v:DF 180 [ y ])
        (div:DF (reg/v:DF 180 [ y ])
            (reg:DF 71 [ D.5329 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 261 (nil))
    (nil))

(note:HI 263 262 264 17 ("./CStatUtilities.c") 226)

(insn:HI 264 263 277 17 ./CStatUtilities.c:226 (parallel [
            (set (reg:DF 181)
                (abs:DF (reg/v:DF 180 [ y ])))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 262 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg/v:DF 180 [ y ]))
                (nil)))))

(insn:HI 277 264 266 17 ./CStatUtilities.c:226 (set (reg/v:DF 185 [ w ])
        (reg:DF 96 [ weightedsum ])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 266 277 267 17 ./CStatUtilities.c:226 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 97)
            (reg:DF 181))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 264 (nil))
    (expr_list:REG_DEAD (reg:DF 181)
        (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 181))
            (nil))))

(jump_insn:HI 267 266 275 17 ./CStatUtilities.c:226 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 828)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 266 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 178 180 185

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 178 180
(note:HI 275 267 271 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 271 275 272 18 ("./CStatUtilities.c") 227)

(insn:HI 272 271 273 18 ./CStatUtilities.c:227 (set (reg/v:DF 180 [ y ])
        (mult:DF (reg/v:DF 180 [ y ])
            (reg/v:DF 180 [ y ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 273 272 274 18 ./CStatUtilities.c:227 (set (reg/v:DF 185 [ w ])
        (minus:DF (reg:DF 97)
            (reg/v:DF 180 [ y ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 272 (nil))
    (expr_list:REG_DEAD (reg/v:DF 180 [ y ])
        (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 182))
            (nil))))

(insn:HI 274 273 828 18 ./CStatUtilities.c:227 (set (reg/v:DF 185 [ w ])
        (mult:DF (reg/v:DF 185 [ w ])
            (reg/v:DF 185 [ w ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 273 (nil))
    (nil))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 178 185

;; Start of basic block 19, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 178 185
(code_label:HI 828 274 290 19 722 "" [1 uses])

(note:HI 290 828 280 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 280 290 281 19 ("./CStatUtilities.c") 229)

(insn:HI 281 280 282 19 ./CStatUtilities.c:229 (set (reg:DF 178 [ D.5324 ])
        (mult:DF (reg/v:DF 185 [ w ])
            (reg:DF 178 [ D.5324 ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 282 281 283 19 ./CStatUtilities.c:229 (set (reg/v:DF 65 [ weightedsum ])
        (plus:DF (reg/v:DF 65 [ weightedsum ])
            (reg:DF 178 [ D.5324 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 281 (nil))
    (expr_list:REG_DEAD (reg:DF 178 [ D.5324 ])
        (nil)))

(note:HI 283 282 284 19 ("./CStatUtilities.c") 230)

(insn:HI 284 283 285 19 ./CStatUtilities.c:230 (set (reg/v:DF 64 [ sum ])
        (plus:DF (reg/v:DF 64 [ sum ])
            (reg/v:DF 185 [ w ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 185 [ w ])
        (nil)))

(note:HI 285 284 286 19 ("./CStatUtilities.c") 221)

(insn:HI 286 285 287 19 ./CStatUtilities.c:221 (parallel [
            (set (reg/v:SI 67 [ i ])
                (plus:SI (reg/v:SI 67 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 287 286 862 19 ./CStatUtilities.c:221 (parallel [
            (set (reg/f:DI 61 [ ivtmp.635 ])
                (plus:DI (reg/f:DI 61 [ ivtmp.635 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 19, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

;; Start of basic block 20, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
(code_label:HI 862 287 311 20 733 "" [1 uses])

(note:HI 311 862 302 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note:HI 302 311 303 20 ("./CStatUtilities.c") 223)

(insn:HI 303 302 304 20 ./CStatUtilities.c:223 (set (reg:DF 187 [ D.5324 ])
        (mem:DF (reg/f:DI 61 [ ivtmp.635 ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 304 303 305 20 ./CStatUtilities.c:223 (set (reg/v:DF 189 [ y ])
        (minus:DF (reg:DF 187 [ D.5324 ])
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 303 (nil))
    (nil))

(insn:HI 305 304 306 20 ./CStatUtilities.c:223 (set (reg/v:DF 189 [ y ])
        (div:DF (reg/v:DF 189 [ y ])
            (reg:DF 71 [ D.5329 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 304 (nil))
    (nil))

(note:HI 306 305 307 20 ("./CStatUtilities.c") 226)

(insn:HI 307 306 320 20 ./CStatUtilities.c:226 (parallel [
            (set (reg:DF 190)
                (abs:DF (reg/v:DF 189 [ y ])))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 305 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg/v:DF 189 [ y ]))
                (nil)))))

(insn:HI 320 307 309 20 ./CStatUtilities.c:226 (set (reg/v:DF 194 [ w ])
        (reg:DF 96 [ weightedsum ])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 309 320 310 20 ./CStatUtilities.c:226 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 97)
            (reg:DF 190))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 307 (nil))
    (expr_list:REG_DEAD (reg:DF 190)
        (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 190))
            (nil))))

(jump_insn:HI 310 309 318 20 ./CStatUtilities.c:226 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 832)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 309 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 20, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 187 189 194

;; Start of basic block 21, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 187 189
(note:HI 318 310 314 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note:HI 314 318 315 21 ("./CStatUtilities.c") 227)

(insn:HI 315 314 316 21 ./CStatUtilities.c:227 (set (reg/v:DF 189 [ y ])
        (mult:DF (reg/v:DF 189 [ y ])
            (reg/v:DF 189 [ y ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 316 315 317 21 ./CStatUtilities.c:227 (set (reg/v:DF 194 [ w ])
        (minus:DF (reg:DF 97)
            (reg/v:DF 189 [ y ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 315 (nil))
    (expr_list:REG_DEAD (reg/v:DF 189 [ y ])
        (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 191))
            (nil))))

(insn:HI 317 316 832 21 ./CStatUtilities.c:227 (set (reg/v:DF 194 [ w ])
        (mult:DF (reg/v:DF 194 [ w ])
            (reg/v:DF 194 [ w ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 316 (nil))
    (nil))
;; End of basic block 21, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 187 194

;; Start of basic block 22, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97 187 194
(code_label:HI 832 317 333 22 724 "" [1 uses])

(note:HI 333 832 323 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note:HI 323 333 324 22 ("./CStatUtilities.c") 229)

(insn:HI 324 323 325 22 ./CStatUtilities.c:229 (set (reg:DF 187 [ D.5324 ])
        (mult:DF (reg/v:DF 194 [ w ])
            (reg:DF 187 [ D.5324 ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 325 324 326 22 ./CStatUtilities.c:229 (set (reg/v:DF 65 [ weightedsum ])
        (plus:DF (reg/v:DF 65 [ weightedsum ])
            (reg:DF 187 [ D.5324 ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 324 (nil))
    (expr_list:REG_DEAD (reg:DF 187 [ D.5324 ])
        (nil)))

(note:HI 326 325 327 22 ("./CStatUtilities.c") 230)

(insn:HI 327 326 328 22 ./CStatUtilities.c:230 (set (reg/v:DF 64 [ sum ])
        (plus:DF (reg/v:DF 64 [ sum ])
            (reg/v:DF 194 [ w ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 194 [ w ])
        (nil)))

(note:HI 328 327 329 22 ("./CStatUtilities.c") 221)

(insn:HI 329 328 330 22 ./CStatUtilities.c:221 (parallel [
            (set (reg/v:SI 67 [ i ])
                (plus:SI (reg/v:SI 67 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 330 329 331 22 ./CStatUtilities.c:221 (parallel [
            (set (reg/f:DI 61 [ ivtmp.635 ])
                (plus:DI (reg/f:DI 61 [ ivtmp.635 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 331 330 332 22 ./CStatUtilities.c:221 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 67 [ i ])
            (reg/v:SI 76 [ len ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 329 (nil))
    (nil))

(jump_insn:HI 332 331 339 22 ./CStatUtilities.c:221 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 103)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 331 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 22, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

;; Start of basic block 23, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
(note:HI 339 332 835 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 835 339 836 23 (set (pc)
        (label_ref 67)) 548 {jump} (nil)
    (nil))
;; End of basic block 23, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

(barrier:HI 836 835 91)

;; Start of basic block 24, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 62 64 65 67 69 71 72 76 95 96 97
(code_label:HI 91 836 92 24 667 "" [2 uses])

(note:HI 92 91 93 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note:HI 93 92 94 24 ("./CStatUtilities.c") 229)

(insn:HI 94 93 95 24 ./CStatUtilities.c:229 (set (reg/v:DF 201 [ weightedsum ])
        (mult:DF (reg/v:DF 62 [ w ])
            (reg:DF 72 [ D.5324 ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 72 [ D.5324 ])
        (nil)))

(insn:HI 95 94 96 24 ./CStatUtilities.c:229 (set (reg/v:DF 201 [ weightedsum ])
        (plus:DF (reg/v:DF 65 [ weightedsum ])
            (reg/v:DF 201 [ weightedsum ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 94 (nil))
    (expr_list:REG_DEAD (reg/v:DF 65 [ weightedsum ])
        (nil)))

(note:HI 96 95 97 24 ("./CStatUtilities.c") 230)

(insn:HI 97 96 98 24 ./CStatUtilities.c:230 (set (reg/v:DF 202 [ sum ])
        (plus:DF (reg/v:DF 64 [ sum ])
            (reg/v:DF 62 [ w ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 64 [ sum ])
        (expr_list:REG_DEAD (reg/v:DF 62 [ w ])
            (nil))))

(note:HI 98 97 458 24 ("./CStatUtilities.c") 221)

(insn:HI 458 98 459 24 ./CStatUtilities.c:221 (parallel [
            (set (reg:SI 103)
                (plus:SI (reg/v:SI 67 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 67 [ i ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 459 458 345 24 ./CStatUtilities.c:221 (parallel [
            (set (reg/f:DI 104)
                (plus:DI (reg/f:DI 61 [ ivtmp.635 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 345 459 346 24 ("./CStatUtilities.c") 223)

(insn:HI 346 345 347 24 ./CStatUtilities.c:223 (set (reg:DF 152 [ D.5324 ])
        (mem:DF (plus:DI (reg/f:DI 61 [ ivtmp.635 ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_DEAD (reg/f:DI 61 [ ivtmp.635 ])
        (nil)))

(insn:HI 347 346 348 24 ./CStatUtilities.c:223 (set (reg/v:DF 154 [ y ])
        (minus:DF (reg:DF 152 [ D.5324 ])
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 346 (nil))
    (nil))

(insn:HI 348 347 349 24 ./CStatUtilities.c:223 (set (reg/v:DF 154 [ y ])
        (div:DF (reg/v:DF 154 [ y ])
            (reg:DF 71 [ D.5329 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 347 (nil))
    (nil))

(note:HI 349 348 350 24 ("./CStatUtilities.c") 226)

(insn:HI 350 349 363 24 ./CStatUtilities.c:226 (parallel [
            (set (reg:DF 155)
                (abs:DF (reg/v:DF 154 [ y ])))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 348 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg/v:DF 154 [ y ]))
                (nil)))))

(insn:HI 363 350 352 24 ./CStatUtilities.c:226 (set (reg/v:DF 199 [ w ])
        (reg:DF 96 [ weightedsum ])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 352 363 353 24 ./CStatUtilities.c:226 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 97)
            (reg:DF 155))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 350 (nil))
    (expr_list:REG_DEAD (reg:DF 155)
        (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 155))
            (nil))))

(jump_insn:HI 353 352 361 24 ./CStatUtilities.c:226 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 838)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 352 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 24, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 152 154 199 201 202

;; Start of basic block 25, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 152 154 201 202
(note:HI 361 353 357 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note:HI 357 361 358 25 ("./CStatUtilities.c") 227)

(insn:HI 358 357 359 25 ./CStatUtilities.c:227 (set (reg/v:DF 154 [ y ])
        (mult:DF (reg/v:DF 154 [ y ])
            (reg/v:DF 154 [ y ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 359 358 360 25 ./CStatUtilities.c:227 (set (reg/v:DF 199 [ w ])
        (minus:DF (reg:DF 97)
            (reg/v:DF 154 [ y ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 358 (nil))
    (expr_list:REG_DEAD (reg/v:DF 154 [ y ])
        (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 196))
            (nil))))

(insn:HI 360 359 838 25 ./CStatUtilities.c:227 (set (reg/v:DF 199 [ w ])
        (mult:DF (reg/v:DF 199 [ w ])
            (reg/v:DF 199 [ w ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 359 (nil))
    (nil))
;; End of basic block 25, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 152 199 201 202

;; Start of basic block 26, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 152 199 201 202
(code_label:HI 838 360 376 26 726 "" [1 uses])

(note:HI 376 838 366 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note:HI 366 376 367 26 ("./CStatUtilities.c") 229)

(insn:HI 367 366 368 26 ./CStatUtilities.c:229 (set (reg/v:DF 214 [ weightedsum ])
        (mult:DF (reg/v:DF 199 [ w ])
            (reg:DF 152 [ D.5324 ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 152 [ D.5324 ])
        (nil)))

(insn:HI 368 367 369 26 ./CStatUtilities.c:229 (set (reg/v:DF 214 [ weightedsum ])
        (plus:DF (reg/v:DF 201 [ weightedsum ])
            (reg/v:DF 214 [ weightedsum ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 367 (nil))
    (expr_list:REG_DEAD (reg/v:DF 201 [ weightedsum ])
        (nil)))

(note:HI 369 368 370 26 ("./CStatUtilities.c") 230)

(insn:HI 370 369 371 26 ./CStatUtilities.c:230 (set (reg/v:DF 215 [ sum ])
        (plus:DF (reg/v:DF 202 [ sum ])
            (reg/v:DF 199 [ w ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 202 [ sum ])
        (expr_list:REG_DEAD (reg/v:DF 199 [ w ])
            (nil))))

(note:HI 371 370 383 26 ("./CStatUtilities.c") 221)

(note:HI 383 371 384 26 ("./CStatUtilities.c") 223)

(insn:HI 384 383 385 26 ./CStatUtilities.c:223 (set (reg:DF 205 [ D.5324 ])
        (mem:DF (plus:DI (reg/f:DI 104)
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 385 384 386 26 ./CStatUtilities.c:223 (set (reg/v:DF 207 [ y ])
        (minus:DF (reg:DF 205 [ D.5324 ])
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 384 (nil))
    (nil))

(insn:HI 386 385 387 26 ./CStatUtilities.c:223 (set (reg/v:DF 207 [ y ])
        (div:DF (reg/v:DF 207 [ y ])
            (reg:DF 71 [ D.5329 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 385 (nil))
    (nil))

(note:HI 387 386 388 26 ("./CStatUtilities.c") 226)

(insn:HI 388 387 401 26 ./CStatUtilities.c:226 (parallel [
            (set (reg:DF 208)
                (abs:DF (reg/v:DF 207 [ y ])))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 386 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg/v:DF 207 [ y ]))
                (nil)))))

(insn:HI 401 388 390 26 ./CStatUtilities.c:226 (set (reg/v:DF 212 [ w ])
        (reg:DF 96 [ weightedsum ])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 390 401 391 26 ./CStatUtilities.c:226 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 97)
            (reg:DF 208))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 388 (nil))
    (expr_list:REG_DEAD (reg:DF 208)
        (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 208))
            (nil))))

(jump_insn:HI 391 390 399 26 ./CStatUtilities.c:226 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 842)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 390 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 26, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 205 207 212 214 215

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 205 207 214 215
(note:HI 399 391 395 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note:HI 395 399 396 27 ("./CStatUtilities.c") 227)

(insn:HI 396 395 397 27 ./CStatUtilities.c:227 (set (reg/v:DF 207 [ y ])
        (mult:DF (reg/v:DF 207 [ y ])
            (reg/v:DF 207 [ y ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 397 396 398 27 ./CStatUtilities.c:227 (set (reg/v:DF 212 [ w ])
        (minus:DF (reg:DF 97)
            (reg/v:DF 207 [ y ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 396 (nil))
    (expr_list:REG_DEAD (reg/v:DF 207 [ y ])
        (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 209))
            (nil))))

(insn:HI 398 397 842 27 ./CStatUtilities.c:227 (set (reg/v:DF 212 [ w ])
        (mult:DF (reg/v:DF 212 [ w ])
            (reg/v:DF 212 [ w ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 397 (nil))
    (nil))
;; End of basic block 27, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 205 212 214 215

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 205 212 214 215
(code_label:HI 842 398 414 28 728 "" [1 uses])

(note:HI 414 842 404 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note:HI 404 414 405 28 ("./CStatUtilities.c") 229)

(insn:HI 405 404 406 28 ./CStatUtilities.c:229 (set (reg/v:DF 227 [ weightedsum ])
        (mult:DF (reg/v:DF 212 [ w ])
            (reg:DF 205 [ D.5324 ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 205 [ D.5324 ])
        (nil)))

(insn:HI 406 405 407 28 ./CStatUtilities.c:229 (set (reg/v:DF 227 [ weightedsum ])
        (plus:DF (reg/v:DF 214 [ weightedsum ])
            (reg/v:DF 227 [ weightedsum ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 405 (nil))
    (expr_list:REG_DEAD (reg/v:DF 214 [ weightedsum ])
        (nil)))

(note:HI 407 406 408 28 ("./CStatUtilities.c") 230)

(insn:HI 408 407 409 28 ./CStatUtilities.c:230 (set (reg/v:DF 228 [ sum ])
        (plus:DF (reg/v:DF 215 [ sum ])
            (reg/v:DF 212 [ w ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 215 [ sum ])
        (expr_list:REG_DEAD (reg/v:DF 212 [ w ])
            (nil))))

(note:HI 409 408 421 28 ("./CStatUtilities.c") 221)

(note:HI 421 409 422 28 ("./CStatUtilities.c") 223)

(insn:HI 422 421 423 28 ./CStatUtilities.c:223 (set (reg:DF 218 [ D.5324 ])
        (mem:DF (plus:DI (reg/f:DI 104)
                (const_int 16 [0x10])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 423 422 424 28 ./CStatUtilities.c:223 (set (reg/v:DF 220 [ y ])
        (minus:DF (reg:DF 218 [ D.5324 ])
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 422 (nil))
    (nil))

(insn:HI 424 423 425 28 ./CStatUtilities.c:223 (set (reg/v:DF 220 [ y ])
        (div:DF (reg/v:DF 220 [ y ])
            (reg:DF 71 [ D.5329 ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 423 (nil))
    (nil))

(note:HI 425 424 426 28 ("./CStatUtilities.c") 226)

(insn:HI 426 425 439 28 ./CStatUtilities.c:226 (parallel [
            (set (reg:DF 221)
                (abs:DF (reg/v:DF 220 [ y ])))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 424 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (abs:DF (reg/v:DF 220 [ y ]))
                (nil)))))

(insn:HI 439 426 428 28 ./CStatUtilities.c:226 (set (reg/v:DF 225 [ w ])
        (reg:DF 96 [ weightedsum ])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 428 439 429 28 ./CStatUtilities.c:226 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 97)
            (reg:DF 221))) 31 {*cmpfp_iu_sse} (insn_list:REG_DEP_TRUE 426 (nil))
    (expr_list:REG_DEAD (reg:DF 221)
        (expr_list:REG_EQUAL (compare:CCFPU (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 221))
            (nil))))

(jump_insn:HI 429 428 437 28 ./CStatUtilities.c:226 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 846)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 428 (nil))
    (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 28, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 218 220 225 227 228

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 218 220 227 228
(note:HI 437 429 433 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note:HI 433 437 434 29 ("./CStatUtilities.c") 227)

(insn:HI 434 433 435 29 ./CStatUtilities.c:227 (set (reg/v:DF 220 [ y ])
        (mult:DF (reg/v:DF 220 [ y ])
            (reg/v:DF 220 [ y ]))) 616 {*fop_df_comm_sse} (nil)
    (nil))

(insn:HI 435 434 436 29 ./CStatUtilities.c:227 (set (reg/v:DF 225 [ w ])
        (minus:DF (reg:DF 97)
            (reg/v:DF 220 [ y ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 434 (nil))
    (expr_list:REG_DEAD (reg/v:DF 220 [ y ])
        (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                (reg:DF 222))
            (nil))))

(insn:HI 436 435 846 29 ./CStatUtilities.c:227 (set (reg/v:DF 225 [ w ])
        (mult:DF (reg/v:DF 225 [ w ])
            (reg/v:DF 225 [ w ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 435 (nil))
    (nil))
;; End of basic block 29, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 218 225 227 228

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 71 76 95 96 97 103 104 218 225 227 228
(code_label:HI 846 436 452 30 730 "" [1 uses])

(note:HI 452 846 442 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note:HI 442 452 443 30 ("./CStatUtilities.c") 229)

(insn:HI 443 442 444 30 ./CStatUtilities.c:229 (set (reg/v:DF 65 [ weightedsum ])
        (mult:DF (reg/v:DF 225 [ w ])
            (reg:DF 218 [ D.5324 ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg:DF 218 [ D.5324 ])
        (nil)))

(insn:HI 444 443 445 30 ./CStatUtilities.c:229 (set (reg/v:DF 65 [ weightedsum ])
        (plus:DF (reg/v:DF 227 [ weightedsum ])
            (reg/v:DF 65 [ weightedsum ]))) 616 {*fop_df_comm_sse} (insn_list:REG_DEP_TRUE 443 (nil))
    (expr_list:REG_DEAD (reg/v:DF 227 [ weightedsum ])
        (nil)))

(note:HI 445 444 446 30 ("./CStatUtilities.c") 230)

(insn:HI 446 445 447 30 ./CStatUtilities.c:230 (set (reg/v:DF 64 [ sum ])
        (plus:DF (reg/v:DF 228 [ sum ])
            (reg/v:DF 225 [ w ]))) 616 {*fop_df_comm_sse} (nil)
    (expr_list:REG_DEAD (reg/v:DF 228 [ sum ])
        (expr_list:REG_DEAD (reg/v:DF 225 [ w ])
            (nil))))

(note:HI 447 446 448 30 ("./CStatUtilities.c") 221)

(insn:HI 448 447 449 30 ./CStatUtilities.c:221 (parallel [
            (set (reg/v:SI 67 [ i ])
                (plus:SI (reg:SI 103)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 103)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 449 448 450 30 ./CStatUtilities.c:221 (parallel [
            (set (reg/f:DI 61 [ ivtmp.635 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 104)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 450 449 451 30 ./CStatUtilities.c:221 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 67 [ i ])
            (reg/v:SI 76 [ len ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 448 (nil))
    (nil))

(jump_insn:HI 451 450 455 30 ./CStatUtilities.c:221 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 103)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 450 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 30, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97
(note:HI 455 451 849 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 849 455 850 31 (set (pc)
        (label_ref 67)) 548 {jump} (nil)
    (nil))
;; End of basic block 31, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 61 64 65 67 69 71 76 95 96 97

(barrier:HI 850 849 857)

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80
(code_label:HI 857 850 27 32 732 "" [1 uses])

(note:HI 27 857 155 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:HI 155 27 466 32 (set (reg:V2DF 95)
        (mem/u/c/i:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [6 S16 A128])) 906 {*movv2df_internal} (nil)
    (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +NaN [+NaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))

(note:HI 466 155 467 32 NOTE_INSN_DELETED)

(insn:HI 467 466 468 32 (parallel [
            (set (reg:SI 107)
                (plus:SI (reg/v:SI 76 [ len ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 468 467 471 32 (parallel [
            (set (reg:SI 107)
                (and:SI (reg:SI 107)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 467 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 471 468 472 32 ("./CStatUtilities.c") 201)

(note:HI 472 471 473 32 ("./CStatUtilities.c") 209)

(insn:HI 473 472 474 32 ./CStatUtilities.c:209 (set (reg:DF 82)
        (mem:DF (reg/v/f:DI 75 [ x ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 474 473 475 32 ./CStatUtilities.c:209 (set (reg:DF 82)
        (minus:DF (reg:DF 82)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 473 (nil))
    (nil))

(insn:HI 475 474 476 32 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 82)
                (abs:DF (reg:DF 82)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 155 (insn_list:REG_DEP_TRUE 474 (nil)))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 476 475 477 32 ./CStatUtilities.c:209 (set (mem:DF (reg/f:DI 80) [6 S8 A64])
        (reg:DF 82)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 475 (nil))
    (expr_list:REG_DEAD (reg:DF 82)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 81))
            (nil))))

(note:HI 477 476 478 32 ("./CStatUtilities.c") 208)

(insn:HI 478 477 479 32 ./CStatUtilities.c:208 (set (reg/v:SI 110 [ i.645 ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 479 478 480 32 ./CStatUtilities.c:208 (set (reg:DI 111 [ ivtmp.638 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 480 479 481 32 ./CStatUtilities.c:208 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 110 [ i.645 ])
            (reg/v:SI 76 [ len ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 478 (nil))
    (nil))

(jump_insn:HI 481 480 649 32 ./CStatUtilities.c:208 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 796)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 480 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 32, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

;; Start of basic block 33, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
(note:HI 649 481 647 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:HI 647 649 648 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 648 647 626 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 30)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 647 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 33, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

;; Start of basic block 34, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
(note:HI 626 648 624 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:HI 624 626 625 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 625 624 603 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 864)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 624 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 34, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

;; Start of basic block 35, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
(note:HI 603 625 601 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn:HI 601 603 602 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 602 601 580 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 865)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 601 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 35, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

;; Start of basic block 36, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
(note:HI 580 602 578 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn:HI 578 580 579 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 579 578 557 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 866)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 578 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 36, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

;; Start of basic block 37, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
(note:HI 557 579 555 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn:HI 555 557 556 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 556 555 534 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 867)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 555 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 37, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

;; Start of basic block 38, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
(note:HI 534 556 532 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:HI 532 534 533 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 533 532 511 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 868)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 532 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 38, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111

;; Start of basic block 39, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 107 110 111
(note:HI 511 533 509 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn:HI 509 511 510 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 107)
        (nil)))

(jump_insn:HI 510 509 501 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 869)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 509 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 39, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

;; Start of basic block 40, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95
(note:HI 501 510 490 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(note:HI 490 501 491 40 ("./CStatUtilities.c") 201)

(note:HI 491 490 492 40 ("./CStatUtilities.c") 209)

(insn:HI 492 491 493 40 ./CStatUtilities.c:209 (set (reg:DF 229)
        (mem:DF (plus:DI (reg/v/f:DI 75 [ x ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 493 492 494 40 ./CStatUtilities.c:209 (set (reg:DF 229)
        (minus:DF (reg:DF 229)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 492 (nil))
    (nil))

(insn:HI 494 493 495 40 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 229)
                (abs:DF (reg:DF 229)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 493 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 495 494 496 40 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (reg/f:DI 80)
                (const_int 8 [0x8])) [6 S8 A64])
        (reg:DF 229)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 494 (nil))
    (expr_list:REG_DEAD (reg:DF 229)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 230))
            (nil))))

(note:HI 496 495 497 40 ("./CStatUtilities.c") 208)

(insn:HI 497 496 498 40 ./CStatUtilities.c:208 (set (reg/v:SI 110 [ i.645 ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 498 497 869 40 ./CStatUtilities.c:208 (set (reg:DI 111 [ ivtmp.638 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
;; End of basic block 40, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

;; Start of basic block 41, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
(code_label:HI 869 498 524 41 740 "" [1 uses])

(note:HI 524 869 513 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note:HI 513 524 514 41 ("./CStatUtilities.c") 201)

(note:HI 514 513 515 41 ("./CStatUtilities.c") 209)

(insn:HI 515 514 516 41 ./CStatUtilities.c:209 (set (reg:DF 232)
        (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 516 515 517 41 ./CStatUtilities.c:209 (set (reg:DF 232)
        (minus:DF (reg:DF 232)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 515 (nil))
    (nil))

(insn:HI 517 516 518 41 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 232)
                (abs:DF (reg:DF 232)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 516 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 518 517 519 41 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 232)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 517 (nil))
    (expr_list:REG_DEAD (reg:DF 232)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 233))
            (nil))))

(note:HI 519 518 520 41 ("./CStatUtilities.c") 208)

(insn:HI 520 519 521 41 ./CStatUtilities.c:208 (parallel [
            (set (reg/v:SI 110 [ i.645 ])
                (plus:SI (reg/v:SI 110 [ i.645 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 521 520 868 41 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 111 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 41, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

;; Start of basic block 42, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
(code_label:HI 868 521 547 42 739 "" [1 uses])

(note:HI 547 868 536 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note:HI 536 547 537 42 ("./CStatUtilities.c") 201)

(note:HI 537 536 538 42 ("./CStatUtilities.c") 209)

(insn:HI 538 537 539 42 ./CStatUtilities.c:209 (set (reg:DF 235)
        (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 539 538 540 42 ./CStatUtilities.c:209 (set (reg:DF 235)
        (minus:DF (reg:DF 235)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 538 (nil))
    (nil))

(insn:HI 540 539 541 42 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 235)
                (abs:DF (reg:DF 235)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 539 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 541 540 542 42 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 235)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 540 (nil))
    (expr_list:REG_DEAD (reg:DF 235)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 236))
            (nil))))

(note:HI 542 541 543 42 ("./CStatUtilities.c") 208)

(insn:HI 543 542 544 42 ./CStatUtilities.c:208 (parallel [
            (set (reg/v:SI 110 [ i.645 ])
                (plus:SI (reg/v:SI 110 [ i.645 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 544 543 867 42 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 111 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 42, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

;; Start of basic block 43, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
(code_label:HI 867 544 570 43 738 "" [1 uses])

(note:HI 570 867 559 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(note:HI 559 570 560 43 ("./CStatUtilities.c") 201)

(note:HI 560 559 561 43 ("./CStatUtilities.c") 209)

(insn:HI 561 560 562 43 ./CStatUtilities.c:209 (set (reg:DF 238)
        (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 562 561 563 43 ./CStatUtilities.c:209 (set (reg:DF 238)
        (minus:DF (reg:DF 238)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 561 (nil))
    (nil))

(insn:HI 563 562 564 43 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 238)
                (abs:DF (reg:DF 238)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 562 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 564 563 565 43 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 238)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 563 (nil))
    (expr_list:REG_DEAD (reg:DF 238)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 239))
            (nil))))

(note:HI 565 564 566 43 ("./CStatUtilities.c") 208)

(insn:HI 566 565 567 43 ./CStatUtilities.c:208 (parallel [
            (set (reg/v:SI 110 [ i.645 ])
                (plus:SI (reg/v:SI 110 [ i.645 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 567 566 866 43 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 111 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 43, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

;; Start of basic block 44, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
(code_label:HI 866 567 593 44 737 "" [1 uses])

(note:HI 593 866 582 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(note:HI 582 593 583 44 ("./CStatUtilities.c") 201)

(note:HI 583 582 584 44 ("./CStatUtilities.c") 209)

(insn:HI 584 583 585 44 ./CStatUtilities.c:209 (set (reg:DF 241)
        (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 585 584 586 44 ./CStatUtilities.c:209 (set (reg:DF 241)
        (minus:DF (reg:DF 241)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 584 (nil))
    (nil))

(insn:HI 586 585 587 44 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 241)
                (abs:DF (reg:DF 241)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 585 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 587 586 588 44 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 241)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 586 (nil))
    (expr_list:REG_DEAD (reg:DF 241)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 242))
            (nil))))

(note:HI 588 587 589 44 ("./CStatUtilities.c") 208)

(insn:HI 589 588 590 44 ./CStatUtilities.c:208 (parallel [
            (set (reg/v:SI 110 [ i.645 ])
                (plus:SI (reg/v:SI 110 [ i.645 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 590 589 865 44 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 111 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 44, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

;; Start of basic block 45, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
(code_label:HI 865 590 616 45 736 "" [1 uses])

(note:HI 616 865 605 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(note:HI 605 616 606 45 ("./CStatUtilities.c") 201)

(note:HI 606 605 607 45 ("./CStatUtilities.c") 209)

(insn:HI 607 606 608 45 ./CStatUtilities.c:209 (set (reg:DF 244)
        (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 608 607 609 45 ./CStatUtilities.c:209 (set (reg:DF 244)
        (minus:DF (reg:DF 244)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 607 (nil))
    (nil))

(insn:HI 609 608 610 45 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 244)
                (abs:DF (reg:DF 244)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 608 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 610 609 611 45 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 244)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 609 (nil))
    (expr_list:REG_DEAD (reg:DF 244)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 245))
            (nil))))

(note:HI 611 610 612 45 ("./CStatUtilities.c") 208)

(insn:HI 612 611 613 45 ./CStatUtilities.c:208 (parallel [
            (set (reg/v:SI 110 [ i.645 ])
                (plus:SI (reg/v:SI 110 [ i.645 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 613 612 864 45 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 111 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 45, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

;; Start of basic block 46, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
(code_label:HI 864 613 639 46 735 "" [1 uses])

(note:HI 639 864 628 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(note:HI 628 639 629 46 ("./CStatUtilities.c") 201)

(note:HI 629 628 630 46 ("./CStatUtilities.c") 209)

(insn:HI 630 629 631 46 ./CStatUtilities.c:209 (set (reg:DF 247)
        (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 631 630 632 46 ./CStatUtilities.c:209 (set (reg:DF 247)
        (minus:DF (reg:DF 247)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 630 (nil))
    (nil))

(insn:HI 632 631 633 46 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 247)
                (abs:DF (reg:DF 247)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 631 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 633 632 634 46 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 247)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 632 (nil))
    (expr_list:REG_DEAD (reg:DF 247)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 248))
            (nil))))

(note:HI 634 633 635 46 ("./CStatUtilities.c") 208)

(insn:HI 635 634 636 46 ./CStatUtilities.c:208 (parallel [
            (set (reg/v:SI 110 [ i.645 ])
                (plus:SI (reg/v:SI 110 [ i.645 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 636 635 637 46 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 111 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 637 636 638 46 ./CStatUtilities.c:208 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 110 [ i.645 ])
            (reg/v:SI 76 [ len ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 635 (nil))
    (nil))

(jump_insn:HI 638 637 30 46 ./CStatUtilities.c:208 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 796)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 637 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 46, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

;; Start of basic block 47, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
(code_label:HI 30 638 31 47 659 "" [2 uses])

(note:HI 31 30 32 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(note:HI 32 31 34 47 ("./CStatUtilities.c") 201)

(note:HI 34 32 35 47 ("./CStatUtilities.c") 209)

(insn:HI 35 34 36 47 ./CStatUtilities.c:209 (set (reg:DF 112)
        (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (nil))

(insn:HI 36 35 38 47 ./CStatUtilities.c:209 (set (reg:DF 112)
        (minus:DF (reg:DF 112)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 35 (nil))
    (nil))

(insn:HI 38 36 39 47 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 112)
                (abs:DF (reg:DF 112)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 36 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 39 38 40 47 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 112)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 38 (nil))
    (expr_list:REG_DEAD (reg:DF 112)
        (expr_list:REG_EQUAL (abs:DF (reg:DF 113))
            (nil))))

(note:HI 40 39 777 47 ("./CStatUtilities.c") 208)

(insn:HI 777 40 651 47 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 651 777 652 47 ("./CStatUtilities.c") 201)

(note:HI 652 651 653 47 ("./CStatUtilities.c") 209)

(insn:HI 653 652 654 47 ./CStatUtilities.c:209 (set (reg:DF 117)
        (mem:DF (plus:DI (mult:DI (reg:DI 108)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 777 (nil))
    (nil))

(insn:HI 654 653 655 47 ./CStatUtilities.c:209 (set (reg:DF 117)
        (minus:DF (reg:DF 117)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 653 (nil))
    (nil))

(insn:HI 655 654 656 47 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 117)
                (abs:DF (reg:DF 117)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 654 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 656 655 657 47 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 108)
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 117)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 655 (nil))
    (expr_list:REG_DEAD (reg:DF 117)
        (expr_list:REG_DEAD (reg:DI 108)
            (expr_list:REG_EQUAL (abs:DF (reg:DF 118))
                (nil)))))

(note:HI 657 656 659 47 ("./CStatUtilities.c") 208)

(insn:HI 659 657 669 47 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 121 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 669 659 670 47 ("./CStatUtilities.c") 201)

(note:HI 670 669 671 47 ("./CStatUtilities.c") 209)

(insn:HI 671 670 672 47 ./CStatUtilities.c:209 (set (reg:DF 122)
        (mem:DF (plus:DI (mult:DI (reg:DI 121 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 659 (nil))
    (nil))

(insn:HI 672 671 673 47 ./CStatUtilities.c:209 (set (reg:DF 122)
        (minus:DF (reg:DF 122)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 671 (nil))
    (nil))

(insn:HI 673 672 674 47 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 122)
                (abs:DF (reg:DF 122)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 672 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 674 673 675 47 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 121 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 122)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 673 (nil))
    (expr_list:REG_DEAD (reg:DF 122)
        (expr_list:REG_DEAD (reg:DI 121 [ ivtmp.638 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 123))
                (nil)))))

(note:HI 675 674 677 47 ("./CStatUtilities.c") 208)

(insn:HI 677 675 687 47 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 126 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 687 677 688 47 ("./CStatUtilities.c") 201)

(note:HI 688 687 689 47 ("./CStatUtilities.c") 209)

(insn:HI 689 688 690 47 ./CStatUtilities.c:209 (set (reg:DF 127)
        (mem:DF (plus:DI (mult:DI (reg:DI 126 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 677 (nil))
    (nil))

(insn:HI 690 689 691 47 ./CStatUtilities.c:209 (set (reg:DF 127)
        (minus:DF (reg:DF 127)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 689 (nil))
    (nil))

(insn:HI 691 690 692 47 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 127)
                (abs:DF (reg:DF 127)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 690 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 692 691 693 47 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 126 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 127)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 691 (nil))
    (expr_list:REG_DEAD (reg:DF 127)
        (expr_list:REG_DEAD (reg:DI 126 [ ivtmp.638 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 128))
                (nil)))))

(note:HI 693 692 695 47 ("./CStatUtilities.c") 208)

(insn:HI 695 693 705 47 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 131 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 705 695 706 47 ("./CStatUtilities.c") 201)

(note:HI 706 705 707 47 ("./CStatUtilities.c") 209)

(insn:HI 707 706 708 47 ./CStatUtilities.c:209 (set (reg:DF 132)
        (mem:DF (plus:DI (mult:DI (reg:DI 131 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 695 (nil))
    (nil))

(insn:HI 708 707 709 47 ./CStatUtilities.c:209 (set (reg:DF 132)
        (minus:DF (reg:DF 132)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 707 (nil))
    (nil))

(insn:HI 709 708 710 47 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 132)
                (abs:DF (reg:DF 132)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 708 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 710 709 711 47 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 131 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 132)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 709 (nil))
    (expr_list:REG_DEAD (reg:DF 132)
        (expr_list:REG_DEAD (reg:DI 131 [ ivtmp.638 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 133))
                (nil)))))

(note:HI 711 710 713 47 ("./CStatUtilities.c") 208)

(insn:HI 713 711 723 47 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 136 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 723 713 724 47 ("./CStatUtilities.c") 201)

(note:HI 724 723 725 47 ("./CStatUtilities.c") 209)

(insn:HI 725 724 726 47 ./CStatUtilities.c:209 (set (reg:DF 137)
        (mem:DF (plus:DI (mult:DI (reg:DI 136 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 713 (nil))
    (nil))

(insn:HI 726 725 727 47 ./CStatUtilities.c:209 (set (reg:DF 137)
        (minus:DF (reg:DF 137)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 725 (nil))
    (nil))

(insn:HI 727 726 728 47 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 137)
                (abs:DF (reg:DF 137)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 726 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 728 727 729 47 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 136 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 137)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 727 (nil))
    (expr_list:REG_DEAD (reg:DF 137)
        (expr_list:REG_DEAD (reg:DI 136 [ ivtmp.638 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 138))
                (nil)))))

(note:HI 729 728 731 47 ("./CStatUtilities.c") 208)

(insn:HI 731 729 741 47 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 141 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 741 731 742 47 ("./CStatUtilities.c") 201)

(note:HI 742 741 743 47 ("./CStatUtilities.c") 209)

(insn:HI 743 742 744 47 ./CStatUtilities.c:209 (set (reg:DF 142)
        (mem:DF (plus:DI (mult:DI (reg:DI 141 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 731 (nil))
    (nil))

(insn:HI 744 743 745 47 ./CStatUtilities.c:209 (set (reg:DF 142)
        (minus:DF (reg:DF 142)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 743 (nil))
    (nil))

(insn:HI 745 744 746 47 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 142)
                (abs:DF (reg:DF 142)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 744 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 746 745 747 47 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 141 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 142)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 745 (nil))
    (expr_list:REG_DEAD (reg:DF 142)
        (expr_list:REG_DEAD (reg:DI 141 [ ivtmp.638 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 143))
                (nil)))))

(note:HI 747 746 749 47 ("./CStatUtilities.c") 208)

(insn:HI 749 747 759 47 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 146 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 759 749 760 47 ("./CStatUtilities.c") 201)

(note:HI 760 759 761 47 ("./CStatUtilities.c") 209)

(insn:HI 761 760 762 47 ./CStatUtilities.c:209 (set (reg:DF 147)
        (mem:DF (plus:DI (mult:DI (reg:DI 146 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 75 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 749 (nil))
    (nil))

(insn:HI 762 761 763 47 ./CStatUtilities.c:209 (set (reg:DF 147)
        (minus:DF (reg:DF 147)
            (reg/v:DF 69 [ median ]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 761 (nil))
    (nil))

(insn:HI 763 762 764 47 ./CStatUtilities.c:209 (parallel [
            (set (reg:DF 147)
                (abs:DF (reg:DF 147)))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) 379 {*absnegdf2_sse} (insn_list:REG_DEP_TRUE 762 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 764 763 765 47 ./CStatUtilities.c:209 (set (mem:DF (plus:DI (mult:DI (reg:DI 146 [ ivtmp.638 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 80)) [6 S8 A64])
        (reg:DF 147)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 763 (nil))
    (expr_list:REG_DEAD (reg:DF 147)
        (expr_list:REG_DEAD (reg:DI 146 [ ivtmp.638 ])
            (expr_list:REG_EQUAL (abs:DF (reg:DF 148))
                (nil)))))

(note:HI 765 764 766 47 ("./CStatUtilities.c") 208)

(insn:HI 766 765 767 47 ./CStatUtilities.c:208 (parallel [
            (set (reg/v:SI 110 [ i.645 ])
                (plus:SI (reg/v:SI 110 [ i.645 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 767 766 768 47 ./CStatUtilities.c:208 (parallel [
            (set (reg:DI 111 [ ivtmp.638 ])
                (plus:DI (reg:DI 111 [ ivtmp.638 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 768 767 769 47 ./CStatUtilities.c:208 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 110 [ i.645 ])
            (reg/v:SI 76 [ len ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 766 (nil))
    (nil))

(jump_insn:HI 769 768 774 47 ./CStatUtilities.c:208 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 796)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 768 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 47, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

;; Start of basic block 48, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111
(note:HI 774 769 854 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 854 774 855 48 (set (pc)
        (label_ref 30)) 548 {jump} (nil)
    (nil))
;; End of basic block 48, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 69 75 76 77 80 95 110 111

(barrier:HI 855 854 0)


;; Function which_max2 (which_max2)



Pass 0

  Register 60 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 INT_SSE_REGS:2886 MEM:777
  Register 62 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 63 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:21437 MMX_REGS:21437 FP_TOP_SSE_REGS:21437 FP_SECOND_SSE_REGS:21437 FLOAT_SSE_REGS:21437 FLOAT_INT_REGS:14841 INT_SSE_REGS:21437 FLOAT_INT_SSE_REGS:21437 ALL_REGS:21437 MEM:6596
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-222 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13741 MMX_REGS:13741 INT_SSE_REGS:13741 MEM:3493
  Register 69 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4329 MMX_REGS:4329 FP_TOP_SSE_REGS:4329 FP_SECOND_SSE_REGS:4329 FLOAT_SSE_REGS:4329 FLOAT_INT_REGS:2997 INT_SSE_REGS:4329 FLOAT_INT_SSE_REGS:4329 ALL_REGS:4329 MEM:1332
  Register 70 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5772 MMX_REGS:5772 FP_TOP_SSE_REGS:5772 FP_SECOND_SSE_REGS:5772 FLOAT_SSE_REGS:5772 FLOAT_INT_REGS:3996 INT_SSE_REGS:5772 FLOAT_INT_SSE_REGS:5772 ALL_REGS:5772 MEM:1443
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:31538 MMX_REGS:31538 FP_TOP_SSE_REGS:31538 FP_SECOND_SSE_REGS:31538 FLOAT_SSE_REGS:31538 FLOAT_INT_REGS:21834 INT_SSE_REGS:31538 FLOAT_INT_SSE_REGS:31538 ALL_REGS:31538 MEM:9149
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:800
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:222 INDEX_REGS:0 LEGACY_REGS:222 GENERAL_REGS:222 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:222 INDEX_REGS:0 LEGACY_REGS:222 GENERAL_REGS:222 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 84 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6660 INDEX_REGS:2886 LEGACY_REGS:6660 GENERAL_REGS:6660 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9324 MEM:2664
  Register 91 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2564 INDEX_REGS:0 LEGACY_REGS:2564 GENERAL_REGS:2564 SSE_REGS:44993 MMX_REGS:44993 FP_TOP_SSE_REGS:44993 FP_SECOND_SSE_REGS:44993 FLOAT_SSE_REGS:44993 FLOAT_INT_REGS:31149 INT_SSE_REGS:44993 FLOAT_INT_SSE_REGS:44993 ALL_REGS:44993 MEM:12562
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 101 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 105 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 110 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 111 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 113 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 114 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 118 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 119 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 120 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 121 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 122 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 123 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 124 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720

  Register 60 pref AREG, else GENERAL_REGS
  Register 62 pref AREG, else GENERAL_REGS
  Register 63 pref AREG, else GENERAL_REGS
  Register 67 pref DIREG, else GENERAL_REGS
  Register 68 pref SIREG, else GENERAL_REGS
  Register 69 pref DREG, else GENERAL_REGS
  Register 70 pref CREG, else GENERAL_REGS
  Register 71 pref GENERAL_REGS or none
  Register 74 pref GENERAL_REGS or none
  Register 79 pref DIREG, else GENERAL_REGS
  Register 80 pref FLOAT_INT_SSE_REGS or none
  Register 81 pref INDEX_REGS, else GENERAL_REGS
  Register 83 pref INDEX_REGS, else GENERAL_REGS
  Register 84 pref SSE_REGS or none
  Register 91 pref GENERAL_REGS or none
  Register 93 pref INDEX_REGS, else GENERAL_REGS
  Register 94 pref GENERAL_REGS or none
  Register 95 pref INDEX_REGS, else GENERAL_REGS
  Register 96 pref FLOAT_INT_SSE_REGS or none
  Register 99 pref FLOAT_INT_SSE_REGS or none
  Register 101 pref INDEX_REGS, else GENERAL_REGS
  Register 102 pref FLOAT_INT_SSE_REGS or none
  Register 104 pref INDEX_REGS, else GENERAL_REGS
  Register 105 pref FLOAT_INT_SSE_REGS or none
  Register 107 pref INDEX_REGS, else GENERAL_REGS
  Register 108 pref FLOAT_INT_SSE_REGS or none
  Register 110 pref INDEX_REGS, else GENERAL_REGS
  Register 111 pref FLOAT_INT_SSE_REGS or none
  Register 113 pref INDEX_REGS, else GENERAL_REGS
  Register 114 pref FLOAT_INT_SSE_REGS or none
  Register 116 pref INDEX_REGS, else GENERAL_REGS
  Register 117 pref FLOAT_INT_SSE_REGS or none
  Register 118 pref FLOAT_INT_SSE_REGS or none
  Register 119 pref FLOAT_INT_SSE_REGS or none
  Register 120 pref FLOAT_INT_SSE_REGS or none
  Register 121 pref FLOAT_INT_SSE_REGS or none
  Register 122 pref FLOAT_INT_SSE_REGS or none
  Register 123 pref FLOAT_INT_SSE_REGS or none
  Register 124 pref FLOAT_INT_SSE_REGS or none


Pass 1

  Register 60 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 INT_SSE_REGS:2886 MEM:777
  Register 62 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 63 costs: AREG:-111 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 67 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:21437 MMX_REGS:21437 FP_TOP_SSE_REGS:21437 FP_SECOND_SSE_REGS:21437 FLOAT_SSE_REGS:21437 FLOAT_INT_REGS:14841 INT_SSE_REGS:21437 FLOAT_INT_SSE_REGS:21437 ALL_REGS:21437 MEM:6596
  Register 68 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-222 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:13741 MMX_REGS:13741 INT_SSE_REGS:13741 MEM:3493
  Register 69 costs: AREG:0 DREG:-111 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:4329 MMX_REGS:4329 FP_TOP_SSE_REGS:4329 FP_SECOND_SSE_REGS:4329 FLOAT_SSE_REGS:4329 FLOAT_INT_REGS:2997 INT_SSE_REGS:4329 FLOAT_INT_SSE_REGS:4329 ALL_REGS:4329 MEM:1332
  Register 70 costs: AREG:0 DREG:0 CREG:-111 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 71 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 74 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:5772 MMX_REGS:5772 FP_TOP_SSE_REGS:5772 FP_SECOND_SSE_REGS:5772 FLOAT_SSE_REGS:5772 FLOAT_INT_REGS:3996 INT_SSE_REGS:5772 FLOAT_INT_SSE_REGS:5772 ALL_REGS:5772 MEM:1443
  Register 79 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-111 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:31538 MMX_REGS:31538 FP_TOP_SSE_REGS:31538 FP_SECOND_SSE_REGS:31538 FLOAT_SSE_REGS:31538 FLOAT_INT_REGS:21834 INT_SSE_REGS:31538 FLOAT_INT_SSE_REGS:31538 ALL_REGS:31538 MEM:9149
  Register 80 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3400 INDEX_REGS:0 LEGACY_REGS:3400 GENERAL_REGS:3400 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4200 MEM:800
  Register 81 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:222 INDEX_REGS:0 LEGACY_REGS:222 GENERAL_REGS:222 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 83 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:222 INDEX_REGS:0 LEGACY_REGS:222 GENERAL_REGS:222 SSE_REGS:2886 MMX_REGS:2886 FP_TOP_SSE_REGS:2886 FP_SECOND_SSE_REGS:2886 FLOAT_SSE_REGS:2886 FLOAT_INT_REGS:1998 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:2886 ALL_REGS:2886 MEM:888
  Register 84 costs: AREG:2886 DREG:2886 CREG:2886 BREG:2886 SIREG:2886 DIREG:2886 AD_REGS:2886 Q_REGS:2886 NON_Q_REGS:6660 INDEX_REGS:2886 LEGACY_REGS:6660 GENERAL_REGS:6660 FP_TOP_REG:4662 FP_SECOND_REG:4662 FLOAT_REGS:4662 SSE_REGS:0 FP_TOP_SSE_REGS:4662 FP_SECOND_SSE_REGS:4662 FLOAT_SSE_REGS:4662 FLOAT_INT_REGS:4662 INT_SSE_REGS:2886 FLOAT_INT_SSE_REGS:4662 ALL_REGS:9324 MEM:2664
  Register 91 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:10218 MMX_REGS:10218 FP_TOP_SSE_REGS:10218 FP_SECOND_SSE_REGS:10218 FLOAT_SSE_REGS:10218 FLOAT_INT_REGS:7074 INT_SSE_REGS:10218 FLOAT_INT_SSE_REGS:10218 ALL_REGS:10218 MEM:2535
  Register 93 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 94 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 LEGACY_REGS:0 GENERAL_REGS:0 SSE_REGS:22919 MMX_REGS:22919 FP_TOP_SSE_REGS:22919 FP_SECOND_SSE_REGS:22919 FLOAT_SSE_REGS:22919 FLOAT_INT_REGS:15867 INT_SSE_REGS:22919 FLOAT_INT_SSE_REGS:22919 ALL_REGS:22919 MEM:5479
  Register 95 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2564 INDEX_REGS:0 LEGACY_REGS:2564 GENERAL_REGS:2564 SSE_REGS:44993 MMX_REGS:44993 FP_TOP_SSE_REGS:44993 FP_SECOND_SSE_REGS:44993 FLOAT_SSE_REGS:44993 FLOAT_INT_REGS:31149 INT_SSE_REGS:44993 FLOAT_INT_SSE_REGS:44993 ALL_REGS:44993 MEM:12562
  Register 96 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 99 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 101 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 105 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 107 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 110 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 111 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 113 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 114 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 116 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:404 INDEX_REGS:0 LEGACY_REGS:404 GENERAL_REGS:404 SSE_REGS:3939 MMX_REGS:3939 FP_TOP_SSE_REGS:3939 FP_SECOND_SSE_REGS:3939 FLOAT_SSE_REGS:3939 FLOAT_INT_REGS:2727 INT_SSE_REGS:3939 FLOAT_INT_SSE_REGS:3939 ALL_REGS:3939 MEM:1212
  Register 117 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3434 INDEX_REGS:0 LEGACY_REGS:3434 GENERAL_REGS:3434 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:4242 MEM:808
  Register 118 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 119 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 120 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 121 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 122 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 123 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720
  Register 124 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:3060 INDEX_REGS:0 LEGACY_REGS:3060 GENERAL_REGS:3060 FP_TOP_REG:0 FP_SECOND_REG:0 FLOAT_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:0 FP_SECOND_SSE_REGS:0 FLOAT_SSE_REGS:0 FLOAT_INT_REGS:0 INT_SSE_REGS:0 FLOAT_INT_SSE_REGS:0 ALL_REGS:3780 MEM:720

125 registers.

Register 60 used 2 times across 3 insns in block 1; set 1 time; user var; 4 bytes; pref AREG, else GENERAL_REGS.

Register 62 used 2 times across 2 insns in block 1; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 63 used 2 times across 2 insns in block 1; set 1 time; 4 bytes; pref AREG, else GENERAL_REGS.

Register 67 used 17 times across 92 insns; set 1 time; user var; dies in 0 places; pref DIREG, else GENERAL_REGS; pointer.

Register 68 used 10 times across 106 insns; set 1 time; user var; crosses 2 calls; 4 bytes; pref SIREG, else GENERAL_REGS.

Register 69 used 3 times across 100 insns; set 1 time; user var; crosses 2 calls; pref DREG, else GENERAL_REGS; pointer.

Register 70 used 2 times across 108 insns; set 1 time; user var; crosses 3 calls; pref CREG, else GENERAL_REGS; pointer.

Register 71 used 2 times across 2 insns in block 0; set 1 time; GENERAL_REGS or none.

Register 74 used 4 times across 4 insns in block 0; set 2 times; GENERAL_REGS or none.

Register 79 used 24 times across 101 insns; set 2 times; crosses 2 calls; pref DIREG, else GENERAL_REGS.

Register 80 used 2 times across 4 insns in block 2; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 81 used 2 times across 5 insns in block 1; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 83 used 2 times across 2 insns in block 1; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 84 used 4 times across 4 insns in block 1; set 2 times; SSE_REGS or none.

Register 91 used 10 times across 22 insns; set 2 times; 4 bytes; GENERAL_REGS or none.

Register 93 used 3 times across 3 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 94 used 19 times across 162 insns; set 9 times; user var; dies in 0 places; 4 bytes; GENERAL_REGS or none.

Register 95 used 37 times across 158 insns; set 9 times; dies in 0 places; pref INDEX_REGS, else GENERAL_REGS.

Register 96 used 2 times across 4 insns in block 17; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 99 used 2 times across 4 insns in block 17; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 101 used 3 times across 3 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 102 used 2 times across 4 insns in block 17; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 104 used 3 times across 3 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 105 used 2 times across 4 insns in block 17; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 107 used 3 times across 3 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 108 used 2 times across 4 insns in block 17; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 110 used 3 times across 3 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 111 used 2 times across 4 insns in block 17; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 113 used 3 times across 3 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 114 used 2 times across 4 insns in block 17; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 116 used 3 times across 3 insns in block 17; set 1 time; pref INDEX_REGS, else GENERAL_REGS.

Register 117 used 2 times across 4 insns in block 17; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 118 used 2 times across 4 insns in block 10; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 119 used 2 times across 4 insns in block 11; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 120 used 2 times across 4 insns in block 12; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 121 used 2 times across 4 insns in block 13; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 122 used 2 times across 4 insns in block 14; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 123 used 2 times across 4 insns in block 15; set 1 time; FLOAT_INT_SSE_REGS or none.

Register 124 used 2 times across 4 insns in block 16; set 1 time; FLOAT_INT_SSE_REGS or none.

19 basic blocks, 31 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  1 [10.0%]  (fallthru) 2 [90.0%] 
Registers live at start: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  16 [10.0%]  17 [10.0%]  (loop_exit) 2 [10.0%]  0 [10.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
Invalid sum of incoming frequencies 402, should be 1111

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  3 [90.0%]  (fallthru,dfs_back) 1 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 771, maybe hot.
Predecessors:  2 [90.0%]  (fallthru,dfs_back)
Successors:  4 [87.5%]  (fallthru) 17 [12.5%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
Invalid sum of incoming frequencies 900, should be 771

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 750, maybe hot.
Predecessors:  3 [87.5%]  (fallthru)
Successors:  5 [85.7%]  (fallthru) 16 [14.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 720, maybe hot.
Predecessors:  4 [85.7%]  (fallthru)
Successors:  6 [83.3%]  (fallthru) 15 [16.7%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 675, maybe hot.
Predecessors:  5 [83.3%]  (fallthru)
Successors:  7 [80.0%]  (fallthru) 14 [20.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 600, maybe hot.
Predecessors:  6 [80.0%]  (fallthru)
Successors:  8 [75.0%]  (fallthru) 13 [25.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  7 [75.0%]  (fallthru)
Successors:  9 [66.7%]  (fallthru) 12 [33.3%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  8 [66.7%]  (fallthru)
Successors:  10 [50.0%]  (fallthru) 11 [50.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Invalid sum of incoming frequencies 300, should be 900

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
Successors:  11 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Invalid sum of incoming frequencies 450, should be 900

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 9 [50.0%] 
Successors:  12 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Invalid sum of incoming frequencies 1350, should be 900

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 8 [33.3%] 
Successors:  13 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Invalid sum of incoming frequencies 1050, should be 900

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 7 [25.0%] 
Successors:  14 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Invalid sum of incoming frequencies 1050, should be 900

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 6 [20.0%] 
Successors:  15 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Invalid sum of incoming frequencies 1035, should be 900

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 5 [16.7%] 
Successors:  16 [100.0%]  (fallthru)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Invalid sum of incoming frequencies 1020, should be 900

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 4 [14.3%] 
Successors:  17 [90.0%]  (fallthru,dfs_back) 1 [10.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Invalid sum of incoming frequencies 1007, should be 900

Basic block 17 prev 16, next 18, loop_depth 1, count 0, freq 1013, maybe hot.
Predecessors:  16 [90.0%]  (fallthru,dfs_back) 18 [100.0%]  3 [12.5%] 
Successors:  18 [90.0%]  (fallthru,dfs_back) 1 [10.0%]  (loop_exit)
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Invalid sum of incoming frequencies 1817, should be 1013

Basic block 18 prev 17, next -2, loop_depth 1, count 0, freq 911, maybe hot.
Predecessors:  17 [90.0%]  (fallthru,dfs_back)
Successors:  17 [100.0%] 
Registers live at start: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
Registers live at end: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

;; Register 60 in 0.
;; Register 62 in 0.
;; Register 63 in 0.
;; Register 71 in 0.
;; Register 74 in 0.
;; Register 80 in 0.
;; Register 81 in 1.
;; Register 83 in 0.
;; Register 84 in 21.
;; Register 93 in 1.
;; Register 96 in 0.
;; Register 99 in 0.
;; Register 101 in 1.
;; Register 102 in 0.
;; Register 104 in 1.
;; Register 105 in 0.
;; Register 107 in 1.
;; Register 108 in 0.
;; Register 110 in 1.
;; Register 111 in 0.
;; Register 113 in 1.
;; Register 114 in 0.
;; Register 116 in 1.
;; Register 117 in 0.
;; Register 118 in 0.
;; Register 119 in 0.
;; Register 120 in 0.
;; Register 121 in 0.
;; Register 122 in 0.
;; Register 123 in 0.
;; Register 124 in 0.
(note:HI 1 0 9 ("./CStatUtilities.c") 115)

;; Start of basic block 0, registers live: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
(note:HI 9 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn:HI 3 9 4 0 ./CStatUtilities.c:115 (set (reg/v/f:DI 67 [ x ])
        (reg:DI 5 di [ x ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ x ])
        (nil)))

(insn:HI 4 3 5 0 ./CStatUtilities.c:115 (set (reg/v:SI 68 [ n ])
        (reg:SI 4 si [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))

(insn:HI 5 4 6 0 ./CStatUtilities.c:115 (set (reg/v/f:DI 69 [ i1 ])
        (reg:DI 1 dx [ i1 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 1 dx [ i1 ])
        (nil)))

(insn:HI 6 5 7 0 ./CStatUtilities.c:115 (set (reg/v/f:DI 70 [ i2 ])
        (reg:DI 2 cx [ i2 ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 2 cx [ i2 ])
        (nil)))

(note:HI 7 6 11 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 11 7 12 0 ("./CStatUtilities.c") 116)

(insn:HI 12 11 13 0 ./CStatUtilities.c:116 (set (reg:DI 71 [ n ])
        (sign_extend:DI (reg/v:SI 68 [ n ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(note:HI 13 12 15 0 NOTE_INSN_DELETED)

(insn:HI 15 13 16 0 ./CStatUtilities.c:116 (set (reg:DI 74)
        (plus:DI (mult:DI (reg:DI 71 [ n ])
                (const_int 8 [0x8]))
            (const_int 30 [0x1e]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:DI 71 [ n ])
        (nil)))

(note:HI 16 15 17 0 NOTE_INSN_DELETED)

(insn:HI 17 16 18 0 ./CStatUtilities.c:116 (parallel [
            (set (reg:DI 74)
                (and:DI (reg:DI 74)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 297 {*anddi_1_rex64} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 18 17 20 0 ./CStatUtilities.c:116 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 74)))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 17 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 74)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))

(insn:HI 20 18 21 0 ./CStatUtilities.c:116 (parallel [
            (set (reg:DI 79)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 21 20 22 0 NOTE_INSN_DELETED)

(insn:HI 22 21 25 0 ./CStatUtilities.c:116 (parallel [
            (set (reg:DI 79)
                (and:DI (reg:DI 79)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 297 {*anddi_1_rex64} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 25 22 26 0 ("./CStatUtilities.c") 118)

(insn:HI 26 25 27 0 ./CStatUtilities.c:118 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 68 [ n ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 27 26 81 0 ./CStatUtilities.c:118 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 401)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 26 (nil))
    (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 0, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79

(note:HI 81 27 82 NOTE_INSN_LOOP_BEG)

(note:HI 82 81 44 NOTE_INSN_LOOP_END)

;; Start of basic block 1, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 68 69 70 79
(code_label:HI 44 82 45 1 752 "" [3 uses])

(note:HI 45 44 46 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(note:HI 46 45 48 1 ("./CStatUtilities.c") 121)

(insn:HI 48 46 49 1 ./CStatUtilities.c:121 (set (reg:SI 4 si [ n ])
        (reg/v:SI 68 [ n ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 49 48 50 1 ./CStatUtilities.c:121 (set (reg:DI 5 di [ y.27 ])
        (reg:DI 79)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 50 49 51 1 ./CStatUtilities.c:121 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("which_max") [flags 0x3] <function_decl 0x2b4e9c504a00 which_max>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 48 (insn_list:REG_DEP_TRUE 49 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (expr_list:REG_DEAD (reg:DI 5 di [ y.27 ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ y.27 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ n ]))
            (nil))))

(insn:HI 51 50 52 1 ./CStatUtilities.c:121 (set (reg:SI 63 [ D.5235 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 50 (nil))
    (expr_list:REG_EQUIV (mem:SI (reg/v/f:DI 69 [ i1 ]) [4 S4 A32])
        (expr_list:REG_DEAD (reg:SI 0 ax)
            (nil))))

(insn:HI 52 51 53 1 ./CStatUtilities.c:121 (set (mem:SI (reg/v/f:DI 69 [ i1 ]) [4 S4 A32])
        (reg:SI 63 [ D.5235 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 51 (nil))
    (expr_list:REG_DEAD (reg:SI 63 [ D.5235 ])
        (nil)))

(note:HI 53 52 54 1 ("./CStatUtilities.c") 122)

(insn:HI 54 53 55 1 ./CStatUtilities.c:122 (set (reg:SI 4 si [ n ])
        (reg/v:SI 68 [ n ])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 55 54 56 1 ./CStatUtilities.c:122 (set (reg:DI 5 di [ y.27 ])
        (reg:DI 79)) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn:HI 56 55 57 1 ./CStatUtilities.c:122 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("which_min") [flags 0x3] <function_decl 0x2b4e9c504c00 which_min>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 54 (insn_list:REG_DEP_TRUE 55 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (expr_list:REG_DEAD (reg:DI 5 di [ y.27 ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ y.27 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ n ]))
            (nil))))

(insn:HI 57 56 58 1 ./CStatUtilities.c:122 (set (reg/v:SI 60 [ j ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 56 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(note:HI 58 57 59 1 ("./CStatUtilities.c") 123)

(note:HI 59 58 60 1 NOTE_INSN_DELETED)

(insn:HI 60 59 61 1 ./CStatUtilities.c:123 (set (reg:DI 81)
        (sign_extend:DI (mem:SI (reg/v/f:DI 69 [ i1 ]) [4 S4 A32]))) 115 {extendsidi2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 69 [ i1 ])
        (nil)))

(insn:HI 61 60 62 1 ./CStatUtilities.c:123 (set (reg:DI 83 [ j ])
        (sign_extend:DI (reg/v:SI 60 [ j ]))) 115 {extendsidi2_rex64} (insn_list:REG_DEP_TRUE 57 (nil))
    (expr_list:REG_DEAD (reg/v:SI 60 [ j ])
        (nil)))

(insn:HI 62 61 63 1 ./CStatUtilities.c:123 (set (reg:DF 84)
        (mem/s:DF (plus:DI (mult:DI (reg:DI 83 [ j ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 61 (nil))
    (expr_list:REG_DEAD (reg:DI 83 [ j ])
        (nil)))

(note:HI 63 62 64 1 NOTE_INSN_DELETED)

(insn:HI 64 63 65 1 ./CStatUtilities.c:123 (set (reg:DF 84)
        (minus:DF (reg:DF 84)
            (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [6 S8 A64]))) 619 {*fop_df_1_sse} (insn_list:REG_DEP_TRUE 62 (nil))
    (nil))

(insn:HI 65 64 66 1 ./CStatUtilities.c:123 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 81)
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A64])
        (reg:DF 84)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 60 (insn_list:REG_DEP_TRUE 64 (nil)))
    (expr_list:REG_DEAD (reg:DF 84)
        (expr_list:REG_DEAD (reg:DI 81)
            (nil))))

(note:HI 66 65 67 1 ("./CStatUtilities.c") 124)

(insn:HI 67 66 68 1 ./CStatUtilities.c:124 (set (reg:SI 4 si [ n ])
        (reg/v:SI 68 [ n ])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 68 [ n ])
        (nil)))

(insn:HI 68 67 69 1 ./CStatUtilities.c:124 (set (reg:DI 5 di [ y.27 ])
        (reg:DI 79)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 79)
        (nil)))

(call_insn:HI 69 68 70 1 ./CStatUtilities.c:124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("which_max") [flags 0x3] <function_decl 0x2b4e9c504a00 which_max>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 67 (insn_list:REG_DEP_TRUE 68 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (expr_list:REG_DEAD (reg:DI 5 di [ y.27 ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ y.27 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ n ]))
            (nil))))

(insn:HI 70 69 71 1 ./CStatUtilities.c:124 (set (reg:SI 62 [ D.5241 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 69 (nil))
    (expr_list:REG_EQUIV (mem:SI (reg/v/f:DI 70 [ i2 ]) [4 S4 A32])
        (expr_list:REG_DEAD (reg:SI 0 ax)
            (nil))))

(insn:HI 71 70 401 1 ./CStatUtilities.c:124 (set (mem:SI (reg/v/f:DI 70 [ i2 ]) [4 S4 A32])
        (reg:SI 62 [ D.5241 ])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 70 (nil))
    (expr_list:REG_DEAD (reg:SI 62 [ D.5241 ])
        (expr_list:REG_DEAD (reg/v/f:DI 70 [ i2 ])
            (nil))))
;; End of basic block 1, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79
(code_label:HI 401 71 29 2 782 "" [1 uses])

(note:HI 29 401 90 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 90 29 91 2 NOTE_INSN_DELETED)

(insn:HI 91 90 92 2 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg/v:SI 68 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 92 91 95 2 (parallel [
            (set (reg:SI 91)
                (and:SI (reg:SI 91)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 299 {*andsi_1} (insn_list:REG_DEP_TRUE 91 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 95 92 96 2 ("./CStatUtilities.c") 115)

(note:HI 96 95 97 2 ("./CStatUtilities.c") 119)

(insn:HI 97 96 98 2 ./CStatUtilities.c:119 (set (reg:DF 80)
        (mem:DF (reg/v/f:DI 67 [ x ]) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (reg/v/f:DI 67 [ x ]) [6 S8 A64])
        (nil)))

(insn:HI 98 97 99 2 ./CStatUtilities.c:119 (set (mem/s:DF (reg:DI 79) [6 S8 A8])
        (reg:DF 80)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 97 (nil))
    (expr_list:REG_DEAD (reg:DF 80)
        (nil)))

(note:HI 99 98 100 2 ("./CStatUtilities.c") 118)

(insn:HI 100 99 101 2 ./CStatUtilities.c:118 (set (reg/v:SI 94 [ i ])
        (const_int 1 [0x1])) 40 {*movsi_1} (nil)
    (nil))

(insn:HI 101 100 102 2 ./CStatUtilities.c:118 (set (reg:DI 95 [ ivtmp.682 ])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 102 101 103 2 ./CStatUtilities.c:118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ i ])
            (reg/v:SI 68 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 100 (nil))
    (nil))

(jump_insn:HI 103 102 257 2 ./CStatUtilities.c:118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 44)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 102 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 2, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

;; Start of basic block 3, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
(note:HI 257 103 255 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 255 257 256 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91)
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn:HI 256 255 236 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 32)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 255 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
(note:HI 236 256 234 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 234 236 235 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91)
            (const_int 1 [0x1]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 235 234 215 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 404)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 234 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
(note:HI 215 235 213 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 213 215 214 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91)
            (const_int 2 [0x2]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 214 213 194 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 405)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 213 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 5, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

;; Start of basic block 6, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
(note:HI 194 214 192 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 192 194 193 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91)
            (const_int 3 [0x3]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 193 192 173 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 406)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 192 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 6, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

;; Start of basic block 7, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
(note:HI 173 193 171 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 171 173 172 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91)
            (const_int 4 [0x4]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 172 171 152 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 407)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 171 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 7, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

;; Start of basic block 8, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
(note:HI 152 172 150 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 150 152 151 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91)
            (const_int 5 [0x5]))) 5 {*cmpsi_1_insn} (nil)
    (nil))

(jump_insn:HI 151 150 131 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 408)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 150 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 8, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95

;; Start of basic block 9, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 91 94 95
(note:HI 131 151 129 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 129 131 130 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91)
            (const_int 6 [0x6]))) 5 {*cmpsi_1_insn} (nil)
    (expr_list:REG_DEAD (reg:SI 91)
        (nil)))

(jump_insn:HI 130 129 121 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 409)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 129 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

;; Start of basic block 10, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79
(note:HI 121 130 112 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 112 121 113 10 ("./CStatUtilities.c") 115)

(note:HI 113 112 114 10 ("./CStatUtilities.c") 119)

(insn:HI 114 113 115 10 ./CStatUtilities.c:119 (set (reg:DF 118)
        (mem:DF (plus:DI (reg/v/f:DI 67 [ x ])
                (const_int 8 [0x8])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (reg/v/f:DI 67 [ x ])
                (const_int 8 [0x8])) [6 S8 A64])
        (nil)))

(insn:HI 115 114 116 10 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (reg:DI 79)
                (const_int 8 [0x8])) [6 S8 A8])
        (reg:DF 118)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 114 (nil))
    (expr_list:REG_DEAD (reg:DF 118)
        (nil)))

(note:HI 116 115 117 10 ("./CStatUtilities.c") 118)

(insn:HI 117 116 118 10 ./CStatUtilities.c:118 (set (reg/v:SI 94 [ i ])
        (const_int 2 [0x2])) 40 {*movsi_1} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn:HI 118 117 409 10 ./CStatUtilities.c:118 (set (reg:DI 95 [ ivtmp.682 ])
        (const_int 2 [0x2])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
;; End of basic block 10, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

;; Start of basic block 11, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
(code_label:HI 409 118 142 11 788 "" [1 uses])

(note:HI 142 409 133 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note:HI 133 142 134 11 ("./CStatUtilities.c") 115)

(note:HI 134 133 135 11 ("./CStatUtilities.c") 119)

(insn:HI 135 134 136 11 ./CStatUtilities.c:119 (set (reg:DF 119)
        (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 136 135 137 11 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 119)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 135 (nil))
    (expr_list:REG_DEAD (reg:DF 119)
        (nil)))

(note:HI 137 136 138 11 ("./CStatUtilities.c") 118)

(insn:HI 138 137 139 11 ./CStatUtilities.c:118 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 139 138 408 11 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 95 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 11, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

;; Start of basic block 12, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
(code_label:HI 408 139 163 12 787 "" [1 uses])

(note:HI 163 408 154 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 154 163 155 12 ("./CStatUtilities.c") 115)

(note:HI 155 154 156 12 ("./CStatUtilities.c") 119)

(insn:HI 156 155 157 12 ./CStatUtilities.c:119 (set (reg:DF 120)
        (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 157 156 158 12 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 120)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 156 (nil))
    (expr_list:REG_DEAD (reg:DF 120)
        (nil)))

(note:HI 158 157 159 12 ("./CStatUtilities.c") 118)

(insn:HI 159 158 160 12 ./CStatUtilities.c:118 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 160 159 407 12 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 95 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 12, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

;; Start of basic block 13, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
(code_label:HI 407 160 184 13 786 "" [1 uses])

(note:HI 184 407 175 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 175 184 176 13 ("./CStatUtilities.c") 115)

(note:HI 176 175 177 13 ("./CStatUtilities.c") 119)

(insn:HI 177 176 178 13 ./CStatUtilities.c:119 (set (reg:DF 121)
        (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 178 177 179 13 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 121)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 177 (nil))
    (expr_list:REG_DEAD (reg:DF 121)
        (nil)))

(note:HI 179 178 180 13 ("./CStatUtilities.c") 118)

(insn:HI 180 179 181 13 ./CStatUtilities.c:118 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 181 180 406 13 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 95 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 13, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

;; Start of basic block 14, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
(code_label:HI 406 181 205 14 785 "" [1 uses])

(note:HI 205 406 196 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 196 205 197 14 ("./CStatUtilities.c") 115)

(note:HI 197 196 198 14 ("./CStatUtilities.c") 119)

(insn:HI 198 197 199 14 ./CStatUtilities.c:119 (set (reg:DF 122)
        (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 199 198 200 14 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 122)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 198 (nil))
    (expr_list:REG_DEAD (reg:DF 122)
        (nil)))

(note:HI 200 199 201 14 ("./CStatUtilities.c") 118)

(insn:HI 201 200 202 14 ./CStatUtilities.c:118 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 202 201 405 14 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 95 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 14, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

;; Start of basic block 15, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
(code_label:HI 405 202 226 15 784 "" [1 uses])

(note:HI 226 405 217 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 217 226 218 15 ("./CStatUtilities.c") 115)

(note:HI 218 217 219 15 ("./CStatUtilities.c") 119)

(insn:HI 219 218 220 15 ./CStatUtilities.c:119 (set (reg:DF 123)
        (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 220 219 221 15 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 123)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 219 (nil))
    (expr_list:REG_DEAD (reg:DF 123)
        (nil)))

(note:HI 221 220 222 15 ("./CStatUtilities.c") 118)

(insn:HI 222 221 223 15 ./CStatUtilities.c:118 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 223 222 404 15 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 95 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;; End of basic block 15, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

;; Start of basic block 16, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
(code_label:HI 404 223 247 16 783 "" [1 uses])

(note:HI 247 404 238 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 238 247 239 16 ("./CStatUtilities.c") 115)

(note:HI 239 238 240 16 ("./CStatUtilities.c") 119)

(insn:HI 240 239 241 16 ./CStatUtilities.c:119 (set (reg:DF 124)
        (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 241 240 242 16 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 124)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 240 (nil))
    (expr_list:REG_DEAD (reg:DF 124)
        (nil)))

(note:HI 242 241 243 16 ("./CStatUtilities.c") 118)

(insn:HI 243 242 244 16 ./CStatUtilities.c:118 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 244 243 245 16 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 95 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 245 244 246 16 ./CStatUtilities.c:118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ i ])
            (reg/v:SI 68 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 243 (nil))
    (nil))

(jump_insn:HI 246 245 32 16 ./CStatUtilities.c:118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 44)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 245 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 16, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

;; Start of basic block 17, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
(code_label:HI 32 246 33 17 754 "" [2 uses])

(note:HI 33 32 34 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 34 33 36 17 ("./CStatUtilities.c") 115)

(note:HI 36 34 37 17 ("./CStatUtilities.c") 119)

(insn:HI 37 36 38 17 ./CStatUtilities.c:119 (set (reg:DF 96)
        (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (nil)
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 38 37 39 17 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 96)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 37 (nil))
    (expr_list:REG_DEAD (reg:DF 96)
        (nil)))

(note:HI 39 38 371 17 ("./CStatUtilities.c") 118)

(insn:HI 371 39 259 17 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 259 371 260 17 ("./CStatUtilities.c") 115)

(note:HI 260 259 261 17 ("./CStatUtilities.c") 119)

(insn:HI 261 260 262 17 ./CStatUtilities.c:119 (set (reg:DF 99)
        (mem:DF (plus:DI (mult:DI (reg:DI 93)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 371 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 93)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 262 261 263 17 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 93)
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 99)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 261 (nil))
    (expr_list:REG_DEAD (reg:DF 99)
        (expr_list:REG_DEAD (reg:DI 93)
            (nil))))

(note:HI 263 262 265 17 ("./CStatUtilities.c") 118)

(insn:HI 265 263 275 17 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 101 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 275 265 276 17 ("./CStatUtilities.c") 115)

(note:HI 276 275 277 17 ("./CStatUtilities.c") 119)

(insn:HI 277 276 278 17 ./CStatUtilities.c:119 (set (reg:DF 102)
        (mem:DF (plus:DI (mult:DI (reg:DI 101 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 265 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 101 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 278 277 279 17 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 101 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 102)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 277 (nil))
    (expr_list:REG_DEAD (reg:DF 102)
        (expr_list:REG_DEAD (reg:DI 101 [ ivtmp.682 ])
            (nil))))

(note:HI 279 278 281 17 ("./CStatUtilities.c") 118)

(insn:HI 281 279 291 17 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 104 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 291 281 292 17 ("./CStatUtilities.c") 115)

(note:HI 292 291 293 17 ("./CStatUtilities.c") 119)

(insn:HI 293 292 294 17 ./CStatUtilities.c:119 (set (reg:DF 105)
        (mem:DF (plus:DI (mult:DI (reg:DI 104 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 281 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 104 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 294 293 295 17 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 104 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 105)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 293 (nil))
    (expr_list:REG_DEAD (reg:DF 105)
        (expr_list:REG_DEAD (reg:DI 104 [ ivtmp.682 ])
            (nil))))

(note:HI 295 294 297 17 ("./CStatUtilities.c") 118)

(insn:HI 297 295 307 17 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 107 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 307 297 308 17 ("./CStatUtilities.c") 115)

(note:HI 308 307 309 17 ("./CStatUtilities.c") 119)

(insn:HI 309 308 310 17 ./CStatUtilities.c:119 (set (reg:DF 108)
        (mem:DF (plus:DI (mult:DI (reg:DI 107 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 297 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 107 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 310 309 311 17 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 107 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 108)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 309 (nil))
    (expr_list:REG_DEAD (reg:DF 108)
        (expr_list:REG_DEAD (reg:DI 107 [ ivtmp.682 ])
            (nil))))

(note:HI 311 310 313 17 ("./CStatUtilities.c") 118)

(insn:HI 313 311 323 17 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 110 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 323 313 324 17 ("./CStatUtilities.c") 115)

(note:HI 324 323 325 17 ("./CStatUtilities.c") 119)

(insn:HI 325 324 326 17 ./CStatUtilities.c:119 (set (reg:DF 111)
        (mem:DF (plus:DI (mult:DI (reg:DI 110 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 313 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 110 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 326 325 327 17 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 110 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 111)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 325 (nil))
    (expr_list:REG_DEAD (reg:DF 111)
        (expr_list:REG_DEAD (reg:DI 110 [ ivtmp.682 ])
            (nil))))

(note:HI 327 326 329 17 ("./CStatUtilities.c") 118)

(insn:HI 329 327 339 17 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 113 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 339 329 340 17 ("./CStatUtilities.c") 115)

(note:HI 340 339 341 17 ("./CStatUtilities.c") 119)

(insn:HI 341 340 342 17 ./CStatUtilities.c:119 (set (reg:DF 114)
        (mem:DF (plus:DI (mult:DI (reg:DI 113 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 329 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 113 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 342 341 343 17 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 113 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 114)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 341 (nil))
    (expr_list:REG_DEAD (reg:DF 114)
        (expr_list:REG_DEAD (reg:DI 113 [ ivtmp.682 ])
            (nil))))

(note:HI 343 342 345 17 ("./CStatUtilities.c") 118)

(insn:HI 345 343 355 17 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 116 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(note:HI 355 345 356 17 ("./CStatUtilities.c") 115)

(note:HI 356 355 357 17 ("./CStatUtilities.c") 119)

(insn:HI 357 356 358 17 ./CStatUtilities.c:119 (set (reg:DF 117)
        (mem:DF (plus:DI (mult:DI (reg:DI 116 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 345 (nil))
    (expr_list:REG_EQUIV (mem:DF (plus:DI (mult:DI (reg:DI 116 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 67 [ x ])) [6 S8 A64])
        (nil)))

(insn:HI 358 357 359 17 ./CStatUtilities.c:119 (set (mem/s:DF (plus:DI (mult:DI (reg:DI 116 [ ivtmp.682 ])
                    (const_int 8 [0x8]))
                (reg:DI 79)) [6 S8 A8])
        (reg:DF 117)) 94 {*movdf_integer} (insn_list:REG_DEP_TRUE 357 (nil))
    (expr_list:REG_DEAD (reg:DF 117)
        (expr_list:REG_DEAD (reg:DI 116 [ ivtmp.682 ])
            (nil))))

(note:HI 359 358 360 17 ("./CStatUtilities.c") 118)

(insn:HI 360 359 361 17 ./CStatUtilities.c:118 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 208 {*addsi_1} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 361 360 362 17 ./CStatUtilities.c:118 (parallel [
            (set (reg:DI 95 [ ivtmp.682 ])
                (plus:DI (reg:DI 95 [ ivtmp.682 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))

(insn:HI 362 361 363 17 ./CStatUtilities.c:118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ i ])
            (reg/v:SI 68 [ n ]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 360 (nil))
    (nil))

(jump_insn:HI 363 362 368 17 ./CStatUtilities.c:118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 44)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 362 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 17, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

;; Start of basic block 18, registers live: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95
(note:HI 368 363 398 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 398 368 399 18 (set (pc)
        (label_ref 32)) 548 {jump} (nil)
    (nil))
;; End of basic block 18, registers live:
 6 [bp] 7 [sp] 16 [argp] 20 [frame] 67 68 69 70 79 94 95

(barrier:HI 399 398 72)

(note:HI 72 399 73 NOTE_INSN_FUNCTION_END)

(note:HI 73 72 0 ("./CStatUtilities.c") 136)

