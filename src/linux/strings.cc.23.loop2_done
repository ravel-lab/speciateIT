
;; Function char* strpre(const char*, const char*) (_Z6strprePKcS0_)

;; 2 loops found
;;
;; Loop 0:
;;  header -1, latch -2
;;  depth 0, level 2, outer -1
;;  nodes: -1 0 1 2 3 4 9 5 7 8 -2
;;
;; Loop 1:
;;  header 5, latch 9
;;  depth 1, level 1, outer 0
;;  nodes: 5 9 4
;; 0 succs { 3 1 }
;; 1 succs { 7 2 }
;; 2 succs { 5 }
;; 3 succs { 8 }
;; 4 succs { 7 9 }
;; 9 succs { 5 }
;; 5 succs { 3 4 }
;; 7 succs { 8 }
;; 8 succs { -2 }
Emitting label for block 4
Reordered sequence:
 0 bb 0  [1080]
 1 bb 1  [1026]
 2 bb 2  [975]
 3 bb 3  [554]
 4 bb 4  [9500]
 5 compensation  [9025]
 6 bb 5  [10000]
 7 compensation  [500]
 8 bb 7  [526]
 9 bb 8  [1080]


try_optimize_cfg iteration 1

Forwarding edge 4->5 to 6 failed.
Deleting fallthru block 5.
Forwarding edge 6->7 to 3 failed.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 3 failed.
68 registers.

Register 60 used 1 times across 0 insns; set 1 time; dies in 0 places; 1 bytes.

Register 61 used 2 times across 0 insns; set 2 times; dies in 0 places; pointer.

Register 62 used 2 times across 0 insns; set 2 times; dies in 0 places; pointer.

Register 63 used 1 times across 0 insns; set 1 time; dies in 0 places; 1 bytes.

Register 65 used 2 times across 0 insns; set 2 times; user var; dies in 0 places; pointer.

Register 66 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; pointer.

9 basic blocks, 14 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  3 [5.0%]  1 [95.0%]  (fallthru)

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  0 [95.0%]  (fallthru)
Successors:  8 [5.0%]  2 [95.0%]  (fallthru)

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  1 [95.0%]  (fallthru)
Successors:  6 [100.0%] 

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 554, maybe hot.
Predecessors:  0 [5.0%]  7 [100.0%]  (loop_exit)
Successors:  9 [100.0%] 

Basic block 4 prev 3, next 6, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  6 [95.0%] 
Successors:  8 [5.0%]  (loop_exit) 6 [95.0%]  (fallthru,dfs_back)

Basic block 6 prev 4, next 7, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  4 [95.0%]  (fallthru,dfs_back) 2 [100.0%] 
Successors:  7 [5.0%]  (fallthru) 4 [95.0%] 

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  6 [5.0%]  (fallthru)
Successors:  3 [100.0%]  (loop_exit)

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 526, maybe hot.
Predecessors:  1 [5.0%]  4 [5.0%]  (loop_exit)
Successors:  9 [100.0%]  (fallthru)

Basic block 9 prev 8, next -2, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 3 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)

(note 1 0 12 ("./strings.cc") 43)

;; Start of basic block 0, registers live: (nil)
(note 12 1 8 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 8 12 9 0 ./strings.cc:43 (set (reg/v/f:DI 65 [ str ])
        (reg:DI 5 di [ str ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 9 8 10 0 ./strings.cc:43 (set (reg/v/f:DI 66 [ pre ])
        (reg:DI 4 si [ pre ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 10 9 15 0 NOTE_INSN_FUNCTION_BEG)

(note 15 10 16 0 ("./strings.cc") 47)

(insn 16 15 17 0 ./strings.cc:47 (set (reg:QI 60 [ temp.36 ])
        (mem:QI (reg/v/f:DI 66 [ pre ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 17 16 18 0 ./strings.cc:47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.36 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 18 17 21 0 ./strings.cc:47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

(note 21 18 20 ("./strings.cc") 48)

;; Start of basic block 1, registers live: (nil)
(note 20 21 22 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 1 ./strings.cc:48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.36 ])
            (mem:QI (reg/v/f:DI 65 [ str ]) [0 S1 A8]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 23 22 25 1 ./strings.cc:48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 1, registers live:
 (nil)

;; Start of basic block 2, registers live: (nil)
(note 25 23 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 77 2 ./strings.cc:48 (set (reg/f:DI 61 [ ivtmp.33 ])
        (reg/v/f:DI 66 [ pre ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 77 26 78 2 (set (pc)
        (label_ref 41)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(barrier 78 77 29)

;; Start of basic block 3, registers live: (nil)
(code_label 29 78 30 3 3 "" [2 uses])

(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 31 30 32 3 ("./strings.cc") 47)

(insn 32 31 79 3 ./strings.cc:47 (set (reg/f:DI 62 [ D.2513 ])
        (reg/v/f:DI 65 [ str ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 79 32 80 3 (set (pc)
        (label_ref 55)) -1 (nil)
    (nil))
;; End of basic block 3, registers live:
 (nil)

(barrier 80 79 73)

(note 73 80 81 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: (nil)
(code_label 81 73 36 4 11 "" [1 uses])

(note 36 81 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 4 ./strings.cc:47 (parallel [
            (set (reg/f:DI 61 [ ivtmp.33 ])
                (plus:DI (reg/f:DI 61 [ ivtmp.33 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 38 37 39 4 ("./strings.cc") 48)

(insn 39 38 40 4 ./strings.cc:48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.2512 ])
            (mem:QI (reg/v/f:DI 65 [ str ]) [0 S1 A8]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 40 39 41 4 ./strings.cc:48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 52)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 4, registers live:
 (nil)

;; Start of basic block 6, registers live: (nil)
(code_label 41 40 42 6 7 "" [1 uses])

(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 43 42 44 6 ("./strings.cc") 49)

(insn 44 43 45 6 ./strings.cc:49 (parallel [
            (set (reg/v/f:DI 65 [ str ])
                (plus:DI (reg/v/f:DI 65 [ str ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 45 44 46 6 ("./strings.cc") 47)

(insn 46 45 47 6 ./strings.cc:47 (set (reg:QI 63 [ D.2512 ])
        (mem:QI (plus:DI (reg/f:DI 61 [ ivtmp.33 ])
                (const_int 1 [0x1])) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 47 46 48 6 ./strings.cc:47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 63 [ D.2512 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 48 47 82 6 ./strings.cc:47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 81)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 6, registers live:
 (nil)

;; Start of basic block 7, registers live: (nil)
(note 82 48 83 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 83 82 84 7 (set (pc)
        (label_ref 29)) -1 (nil)
    (nil))
;; End of basic block 7, registers live:
 (nil)

(barrier 84 83 74)

(note 74 84 52 NOTE_INSN_LOOP_END)

;; Start of basic block 8, registers live: (nil)
(code_label 52 74 53 8 5 "" [2 uses])

(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 8 ./strings.cc:47 (set (reg/f:DI 62 [ D.2513 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 8, registers live:
 (nil)

;; Start of basic block 9, registers live: (nil)
(code_label 55 54 56 9 8 "" [1 uses])

(note 56 55 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 60 56 61 9 NOTE_INSN_FUNCTION_END)

(note 61 60 63 9 ("./strings.cc") 51)

(insn 63 61 69 9 ./strings.cc:51 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 62 [ D.2513 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 69 63 0 9 ./strings.cc:51 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 9, registers live:
 (nil)


;; Function char* strlop(char*, char) (_Z6strlopPcc)

;; 2 loops found
;;
;; Loop 0:
;;  header -1, latch -2
;;  depth 0, level 2, outer -1
;;  nodes: -1 0 1 2 3 4 8 6 7 -2
;;
;; Loop 1:
;;  header 3, latch 8
;;  depth 1, level 1, outer 0
;;  nodes: 3 8 4
;; 0 succs { 6 1 }
;; 1 succs { 6 2 }
;; 2 succs { 3 }
;; 3 succs { 7 4 }
;; 4 succs { 8 7 }
;; 8 succs { 3 }
;; 6 succs { 7 }
;; 7 succs { -2 }
Reordered sequence:
 0 bb 0  [1080]
 1 bb 1  [1026]
 2 bb 2  [975]
 3 bb 3  [10000]
 4 bb 4  [9500]
 5 bb 8  [9025]
 6 bb 6  [105]
 7 bb 7  [1080]


try_optimize_cfg iteration 1

Forwarding edge 4->5 to 3 failed.
Deleted label in block 5.
68 registers.

Register 58 used 1 times across 0 insns; set 1 time; dies in 0 places; 1 bytes; NO_REGS or none.

Register 59 used 3 times across 0 insns; set 3 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 60 used 1 times across 0 insns; set 1 time; dies in 0 places; 1 bytes; NO_REGS or none.

Register 62 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; NO_REGS or none; pointer.

Register 63 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; 1 bytes; NO_REGS or none.

Register 64 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

8 basic blocks, 13 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  6 [5.0%]  1 [95.0%]  (fallthru)

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  0 [95.0%]  (fallthru)
Successors:  6 [5.0%]  2 [95.0%]  (fallthru)

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  1 [95.0%]  (fallthru)
Successors:  3 [100.0%]  (fallthru)

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 5 [100.0%] 
Successors:  7 [5.0%]  (loop_exit) 4 [95.0%]  (fallthru)

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  3 [95.0%]  (fallthru)
Successors:  5 [95.0%]  (fallthru,dfs_back) 7 [5.0%]  (loop_exit)

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 9025, maybe hot.
Predecessors:  4 [95.0%]  (fallthru,dfs_back)
Successors:  3 [100.0%] 

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 105, maybe hot.
Predecessors:  0 [5.0%]  1 [5.0%] 
Successors:  7 [100.0%]  (fallthru)

Basic block 7 prev 6, next -2, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  3 [5.0%]  (loop_exit) 4 [5.0%]  (loop_exit) 6 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

(note 1 0 8 ("./strings.cc") 81)

;; Start of basic block 0, registers live: (nil)
(note 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 0 ./strings.cc:81 (set (reg/v/f:DI 62 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 4 3 5 0 ./strings.cc:81 (set (reg:SI 64 [ ch ])
        (reg:SI 4 si [ ch ])) 40 {*movsi_1} (nil)
    (nil))

(insn 5 4 6 0 ./strings.cc:81 (set (reg/v:QI 63 [ ch ])
        (subreg:QI (reg:SI 64 [ ch ]) 0)) 55 {*movqi_1} (nil)
    (nil))

(note 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 0 ("./strings.cc") 84)

(insn 11 10 12 0 ./strings.cc:84 (set (reg:QI 58 [ temp.67 ])
        (mem:QI (reg/v/f:DI 62 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 12 11 13 0 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.67 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 13 12 15 0 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 15 13 16 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 1 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.67 ])
            (reg/v:QI 63 [ ch ]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 17 16 19 1 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 1, registers live:
 (nil)

;; Start of basic block 2, registers live: (nil)
(note 19 17 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 59 2 ./strings.cc:84 (set (reg/v/f:DI 59 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(note 59 20 21 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: (nil)
(code_label 21 59 22 3 19 "" [1 uses])

(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 23 22 24 3 ("./strings.cc") 85)

(insn 24 23 25 3 ./strings.cc:85 (parallel [
            (set (reg/v/f:DI 59 [ last ])
                (plus:DI (reg/v/f:DI 59 [ last ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 25 24 26 3 ("./strings.cc") 84)

(insn 26 25 27 3 ./strings.cc:84 (set (reg:QI 60 [ D.2553 ])
        (mem:QI (reg/v/f:DI 59 [ last ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 27 26 28 3 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2553 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 28 27 30 3 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 39)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

;; Start of basic block 4, registers live: (nil)
(note 30 28 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 4 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2553 ])
            (reg/v:QI 63 [ ch ]))) -1 (nil)
    (nil))

(jump_insn 32 31 60 4 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 39)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 4, registers live:
 (nil)

(note 60 32 63 NOTE_INSN_LOOP_END)

;; Start of basic block 5, registers live: (nil)
(note 63 60 65 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 65 63 66 5 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))
;; End of basic block 5, registers live:
 (nil)

(barrier 66 65 36)

;; Start of basic block 6, registers live: (nil)
(code_label 36 66 37 6 16 "" [2 uses])

(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 6 ./strings.cc:84 (set (reg/v/f:DI 59 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 6, registers live:
 (nil)

;; Start of basic block 7, registers live: (nil)
(code_label 39 38 40 7 20 "" [2 uses])

(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 41 40 42 7 ("./strings.cc") 86)

(insn 42 41 46 7 ./strings.cc:86 (set (mem:QI (reg/v/f:DI 59 [ last ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 46 42 47 7 NOTE_INSN_FUNCTION_END)

(note 47 46 49 7 ("./strings.cc") 88)

(insn 49 47 55 7 ./strings.cc:88 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 55 49 0 7 ./strings.cc:88 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 7, registers live:
 (nil)


;; Function char* strsplit(char*, char) (_Z8strsplitPcc)

;; 3 loops found
;;
;; Loop 0:
;;  header -1, latch -2
;;  depth 0, level 2, outer -1
;;  nodes: -1 0 1 2 3 5 15 6 13 7 8 9 10 14 11 16 12 -2
;;
;; Loop 1:
;;  header 13, latch 15
;;  depth 1, level 1, outer 0
;;  nodes: 13 15 5
;;
;; Loop 2:
;;  header 14, latch 16
;;  depth 1, level 1, outer 0
;;  nodes: 14 16 11
;; 0 succs { 2 1 }
;; 1 succs { 12 }
;; 2 succs { 7 3 }
;; 3 succs { 12 6 }
;; 5 succs { 12 15 }
;; 15 succs { 13 }
;; 6 succs { 13 }
;; 13 succs { 5 7 }
;; 7 succs { 12 8 }
;; 8 succs { 12 9 }
;; 9 succs { 12 10 }
;; 10 succs { 14 }
;; 14 succs { 12 11 }
;; 11 succs { 16 12 }
;; 16 succs { 14 }
;; 12 succs { -2 }
Reordered sequence:
 0 bb 0  [2727]
 1 bb 1  [900]
 2 bb 2  [1827]
 3 bb 3  [1736]
 4 compensation  [191]
 5 bb 5  [9500]
 6 compensation  [8455]
 7 bb 6  [1545]
 8 bb 13  [10000]
 9 bb 7  [591]
 10 bb 8  [396]
 11 bb 9  [376]
 12 bb 10  [358]
 13 bb 14  [3668]
 14 bb 11  [3484]
 15 bb 16  [3310]
 16 bb 12  [2727]


try_optimize_cfg iteration 1

Forwarding edge 3->4 to 16 failed.
Edge 3->7 redirected to 8
Forwarding edge 3->4 to 16 failed.
Forwarding edge 5->6 to 8 failed.
Deleting block 7.
Removing jump 109.
Deleting fallthru block 6.
Forwarding edge 11->12 to 13 failed.
Deleted label in block 12.
Deleting fallthru block 12.
Simplifying condjump 70 around jump 111


try_optimize_cfg iteration 2

Forwarding edge 3->4 to 16 failed.
71 registers.

Register 58 used 1 times across 0 insns; set 1 time; dies in 0 places; 1 bytes; NO_REGS or none.

Register 59 used 2 times across 0 insns; set 2 times; dies in 0 places; 1 bytes; NO_REGS or none.

Register 60 used 1 times across 0 insns; set 1 time; dies in 0 places; 1 bytes; NO_REGS or none.

Register 61 used 1 times across 0 insns; set 1 time; dies in 0 places; 1 bytes; NO_REGS or none.

Register 63 used 6 times across 0 insns; set 6 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 64 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; 1 bytes; NO_REGS or none.

Register 65 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

13 basic blocks, 24 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 2727, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [67.0%]  1 [33.0%]  (fallthru)

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  0 [33.0%]  (fallthru)
Successors:  16 [100.0%] 

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1827, maybe hot.
Predecessors:  0 [67.0%] 
Successors:  9 [5.0%]  3 [95.0%]  (fallthru)

Basic block 3 prev 2, next 4, loop_depth 0, count 0, freq 1736, maybe hot.
Predecessors:  2 [95.0%]  (fallthru)
Successors:  4 [11.0%]  (fallthru) 8 [89.0%] 

Basic block 4 prev 3, next 5, loop_depth 0, count 0, freq 191, maybe hot.
Predecessors:  3 [11.0%]  (fallthru)
Successors:  16 [100.0%] 

Basic block 5 prev 4, next 8, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  8 [95.0%] 
Successors:  16 [11.0%]  (loop_exit) 8 [89.0%]  (fallthru,dfs_back)

Basic block 8 prev 5, next 9, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  3 [89.0%]  5 [89.0%]  (fallthru,dfs_back)
Successors:  5 [95.0%]  9 [5.0%]  (fallthru,loop_exit)

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 591, maybe hot.
Predecessors:  2 [5.0%]  8 [5.0%]  (fallthru,loop_exit)
Successors:  16 [33.0%]  10 [67.0%]  (fallthru)

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 396, maybe hot.
Predecessors:  9 [67.0%]  (fallthru)
Successors:  16 [5.0%]  11 [95.0%]  (fallthru)

Basic block 11 prev 10, next 13, loop_depth 0, count 0, freq 376, maybe hot.
Predecessors:  10 [95.0%]  (fallthru)
Successors:  16 [5.0%]  13 [95.0%]  (fallthru)

Basic block 13 prev 11, next 14, loop_depth 1, count 0, freq 3668, maybe hot.
Predecessors:  11 [95.0%]  (fallthru) 14 [95.0%]  (dfs_back)
Successors:  16 [5.0%]  (loop_exit) 14 [95.0%]  (fallthru)

Basic block 14 prev 13, next 16, loop_depth 1, count 0, freq 3484, maybe hot.
Predecessors:  13 [95.0%]  (fallthru)
Successors:  13 [95.0%]  (dfs_back) 16 [5.0%]  (fallthru,loop_exit)

Basic block 16 prev 14, next -2, loop_depth 0, count 0, freq 2727, maybe hot.
Predecessors:  4 [100.0%]  1 [100.0%]  5 [11.0%]  (loop_exit) 9 [33.0%]  10 [5.0%]  11 [5.0%]  13 [5.0%]  (loop_exit) 14 [5.0%]  (fallthru,loop_exit)
Successors:  EXIT [100.0%]  (fallthru)

(note 1 0 8 ("./strings.cc") 126)

;; Start of basic block 0, registers live: (nil)
(note 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 0 ./strings.cc:126 (set (reg/v/f:DI 63 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 4 3 5 0 ./strings.cc:126 (set (reg:SI 65 [ ch ])
        (reg:SI 4 si [ ch ])) 40 {*movsi_1} (nil)
    (nil))

(insn 5 4 6 0 ./strings.cc:126 (set (reg/v:QI 64 [ ch ])
        (subreg:QI (reg:SI 65 [ ch ]) 0)) 55 {*movqi_1} (nil)
    (nil))

(note 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 0 ("./strings.cc") 128)

(insn 11 10 12 0 ./strings.cc:128 (set (reg:QI 61 [ D.2584 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 12 11 13 0 ./strings.cc:128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2584 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 13 12 15 0 ./strings.cc:128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 6700 [0x1a2c])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 15 13 16 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 103 1 ./strings.cc:128 (set (reg/v/f:DI 63 [ s ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 103 16 104 1 (set (pc)
        (label_ref 71)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 104 103 19)

;; Start of basic block 2, registers live: (nil)
(code_label 19 104 20 2 26 "" [1 uses])

(note 20 19 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 21 20 22 2 ("./strings.cc") 129)

(insn 22 21 23 2 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2584 ])
            (reg/v:QI 64 [ ch ]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 23 22 25 2 ./strings.cc:129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 2, registers live:
 (nil)

;; Start of basic block 3, registers live: (nil)
(note 25 23 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 3 ./strings.cc:129 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 27 26 28 3 ./strings.cc:129 (set (reg:QI 59 [ temp.105 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 28 27 29 3 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 59 [ temp.105 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 29 28 89 3 ./strings.cc:129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 108)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

(note 89 29 105 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: (nil)
(note 105 89 106 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 106 105 107 4 (set (pc)
        (label_ref 71)) -1 (nil)
    (nil))
;; End of basic block 4, registers live:
 (nil)

(barrier 107 106 33)

;; Start of basic block 5, registers live: (nil)
(code_label 33 107 34 5 32 "" [1 uses])

(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 5 ./strings.cc:129 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 36 35 37 5 ./strings.cc:129 (set (reg:QI 59 [ temp.105 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 37 36 38 5 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 59 [ temp.105 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 38 37 108 5 ./strings.cc:129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 71)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
        (nil)))
;; End of basic block 5, registers live:
 (nil)

;; Start of basic block 8, registers live: (nil)
(code_label 108 38 97 8 40 "" [1 uses])

(note 97 108 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 41 97 42 8 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 64 [ ch ])
            (reg:QI 59 [ temp.105 ]))) -1 (nil)
    (nil))

(jump_insn 42 41 90 8 ./strings.cc:129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 8, registers live:
 (nil)

(note 90 42 43 NOTE_INSN_LOOP_END)

;; Start of basic block 9, registers live: (nil)
(code_label 43 90 44 9 29 "" [1 uses])

(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 45 44 46 9 ("./strings.cc") 130)

(insn 46 45 47 9 ./strings.cc:130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 64 [ ch ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 47 46 50 9 ./strings.cc:130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
        (nil)))
;; End of basic block 9, registers live:
 (nil)

(note 50 47 49 ("./strings.cc") 132)

;; Start of basic block 10, registers live: (nil)
(note 49 50 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 51 49 52 10 ./strings.cc:132 (set (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(insn 52 51 53 10 ./strings.cc:132 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 53 52 54 10 ("./strings.cc") 133)

(insn 54 53 55 10 ./strings.cc:133 (set (reg:QI 58 [ temp.106 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 55 54 56 10 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.106 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 56 55 58 10 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 10, registers live:
 (nil)

;; Start of basic block 11, registers live: (nil)
(note 58 56 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 11 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.106 ])
            (reg/v:QI 64 [ ch ]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 60 59 91 11 ./strings.cc:133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 11, registers live:
 (nil)

(note 91 60 99 NOTE_INSN_LOOP_BEG)

;; Start of basic block 13, registers live: (nil)
(code_label 99 91 98 13 38 "" [1 uses])

(note 98 99 63 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 63 98 64 13 ./strings.cc:133 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 64 63 65 13 ./strings.cc:133 (set (reg:QI 60 [ temp.104 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 65 64 66 13 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.104 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 66 65 68 13 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 71)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 13, registers live:
 (nil)

;; Start of basic block 14, registers live: (nil)
(note 68 66 69 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 14 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ temp.104 ])
            (reg:QI 58 [ temp.106 ]))) -1 (nil)
    (nil))

(jump_insn 70 69 92 14 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 99)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 14, registers live:
 (nil)

(note 92 70 71 NOTE_INSN_LOOP_END)

;; Start of basic block 16, registers live: (nil)
(code_label 71 92 72 16 28 "" [7 uses])

(note 72 71 76 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 76 72 77 16 NOTE_INSN_FUNCTION_END)

(note 77 76 79 16 ("./strings.cc") 136)

(insn 79 77 85 16 ./strings.cc:136 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 85 79 0 16 ./strings.cc:136 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 16, registers live:
 (nil)


;; Function char* strtrimto(char*, char) (_Z9strtrimtoPcc)

Reordered sequence:
 0 bb 0  [10000]


try_optimize_cfg iteration 1

69 registers.

Register 58 used 2 times across 0 insns; set 2 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 59 used 2 times across 0 insns; set 2 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 60 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 62 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; NO_REGS or none; pointer.

Register 63 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; 1 bytes; NO_REGS or none.

Register 64 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 67 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none; pointer.

Register 68 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none; pointer.

1 basic blocks, 2 edges.

Basic block 0 prev -1, next -2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

(note 1 0 8 ("./strings.cc") 155)

;; Start of basic block 0, registers live: (nil)
(note 8 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 0 ./strings.cc:155 (set (reg/v/f:DI 62 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 4 3 5 0 ./strings.cc:155 (set (reg:SI 64 [ ch ])
        (reg:SI 4 si [ ch ])) 40 {*movsi_1} (nil)
    (nil))

(insn 5 4 6 0 ./strings.cc:155 (set (reg/v:QI 63 [ ch ])
        (subreg:QI (reg:SI 64 [ ch ]) 0)) 55 {*movqi_1} (nil)
    (nil))

(note 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 0 ("./strings.cc") 157)

(insn 11 10 12 0 ./strings.cc:157 (set (reg:SI 60 [ D.2619 ])
        (sign_extend:SI (reg/v:QI 63 [ ch ]))) 121 {extendqisi2} (nil)
    (nil))

(insn 12 11 13 0 ./strings.cc:157 (set (reg:SI 4 si [ D.2619 ])
        (reg:SI 60 [ D.2619 ])) 40 {*movsi_1} (nil)
    (nil))

(insn 13 12 14 0 ./strings.cc:157 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn/u 14 13 15 0 ./strings.cc:157 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strrchr") [flags 0x41] <function_decl 0x2ad10a49e400 strrchr>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ D.2619 ]))
                (nil)))))

(insn 15 14 17 0 ./strings.cc:157 (set (reg/v/f:DI 59 [ last ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 17 15 18 0 ("./strings.cc") 158)

(insn 18 17 58 0 ./strings.cc:158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(insn 58 18 59 0 ./strings.cc:158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(insn 59 58 25 0 ./strings.cc:158 (set (reg/v/f:DI 59 [ last ])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (reg/v/f:DI 59 [ last ])
            (reg/v/f:DI 62 [ s ]))) 742 {*movdicc_c_rex64} (nil)
    (nil))

(note 25 59 26 0 ("./strings.cc") 159)

(insn 26 25 27 0 ./strings.cc:159 (set (mem:QI (reg/v/f:DI 59 [ last ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 27 26 28 0 ("./strings.cc") 161)

(insn 28 27 29 0 ./strings.cc:161 (set (reg:SI 4 si [ D.2619 ])
        (reg:SI 60 [ D.2619 ])) 40 {*movsi_1} (nil)
    (nil))

(insn 29 28 30 0 ./strings.cc:161 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn/u 30 29 31 0 ./strings.cc:161 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41] <function_decl 0x2ad10a498000 strchr>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ D.2619 ]))
                (nil)))))

(insn 31 30 33 0 ./strings.cc:161 (set (reg/v/f:DI 58 [ first ])
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 33 31 34 0 ("./strings.cc") 162)

(insn 34 33 60 0 ./strings.cc:162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 58 [ first ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(insn 60 34 61 0 ./strings.cc:162 (parallel [
            (set (reg/f:DI 68)
                (plus:DI (reg/v/f:DI 59 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 61 60 62 0 ./strings.cc:162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 58 [ first ])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(insn 62 61 41 0 ./strings.cc:162 (set (reg/v/f:DI 58 [ first ])
        (if_then_else:DI (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (reg/f:DI 68)
            (reg/v/f:DI 58 [ first ]))) 742 {*movdicc_c_rex64} (nil)
    (nil))

(insn 41 62 45 0 ./strings.cc:162 (parallel [
            (set (reg/f:DI 67)
                (plus:DI (reg/v/f:DI 58 [ first ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 45 41 46 0 NOTE_INSN_FUNCTION_END)

(note 46 45 48 0 ("./strings.cc") 164)

(insn 48 46 54 0 ./strings.cc:164 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 67)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 54 48 0 0 ./strings.cc:164 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 0, registers live:
 (nil)


;; Function char* strchomp(char*) (_Z8strchompPc)

;; 2 loops found
;;
;; Loop 0:
;;  header -1, latch -2
;;  depth 0, level 2, outer -1
;;  nodes: -1 0 1 2 3 9 45 4 8 5 6 7 10 11 12 43 38 33 28 23 18 13 14 15 16 17 19 20 21 22 24 25 26 27 29 30 31 32 34 35 36 37 39 40 41 42 44 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 -2
;;
;; Loop 1:
;;  header 5, latch 66
;;  depth 1, level 1, outer 0
;;  nodes: 5 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 8 4
;; 0 succs { 6 1 }
;; 1 succs { 3 2 }
;; 2 succs { 7 }
;; 3 succs { 9 }
;; 9 succs { 45 }
;; 45 succs { 10 44 }
;; 4 succs { 7 8 }
;; 8 succs { 46 }
;; 5 succs { 4 6 }
;; 6 succs { 7 }
;; 7 succs { -2 }
;; 10 succs { 11 }
;; 11 succs { 7 12 }
;; 12 succs { 43 }
;; 43 succs { 38 42 }
;; 38 succs { 33 37 }
;; 33 succs { 28 32 }
;; 28 succs { 23 27 }
;; 23 succs { 18 22 }
;; 18 succs { 13 17 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 7 16 }
;; 16 succs { 17 }
;; 17 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 7 21 }
;; 21 succs { 22 }
;; 22 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 7 26 }
;; 26 succs { 27 }
;; 27 succs { 29 }
;; 29 succs { 30 }
;; 30 succs { 7 31 }
;; 31 succs { 32 }
;; 32 succs { 34 }
;; 34 succs { 35 }
;; 35 succs { 7 36 }
;; 36 succs { 37 }
;; 37 succs { 39 }
;; 39 succs { 40 }
;; 40 succs { 7 41 }
;; 41 succs { 42 }
;; 42 succs { 44 }
;; 44 succs { 5 }
;; 46 succs { 47 }
;; 47 succs { 7 48 }
;; 48 succs { 49 }
;; 49 succs { 50 }
;; 50 succs { 7 51 }
;; 51 succs { 52 }
;; 52 succs { 53 }
;; 53 succs { 7 54 }
;; 54 succs { 55 }
;; 55 succs { 56 }
;; 56 succs { 7 57 }
;; 57 succs { 58 }
;; 58 succs { 59 }
;; 59 succs { 7 60 }
;; 60 succs { 61 }
;; 61 succs { 62 }
;; 62 succs { 7 63 }
;; 63 succs { 64 }
;; 64 succs { 65 }
;; 65 succs { 7 66 }
;; 66 succs { 5 }
Emitting label for block 10
Reordered sequence:
 0 bb 0  [1080]
 1 bb 1  [1026]
 2 bb 2  [51]
 3 bb 3  [975]
 4 bb 9  [975]
 5 bb 45  [975]
 6 compensation  [122]
 7 bb 4  [1042]
 8 compensation  [989]
 9 bb 5  [1096]
 10 bb 6  [554]
 11 bb 7  [1080]
 12 duplicate of 5  [975]
 13 duplicate of 4  [926]
 14 duplicate of 8  [880]
 15 bb 43  [733]
 16 bb 38  [704]
 17 bb 33  [660]
 18 bb 28  [587]
 19 bb 23  [440]
 20 bb 18  [880]
 21 compensation  [880]
 22 duplicate of 5  [929]
 23 duplicate of 4  [882]
 24 duplicate of 8  [838]
 25 bb 17  [838]
 26 duplicate of 5  [885]
 27 duplicate of 4  [841]
 28 duplicate of 8  [799]
 29 bb 22  [799]
 30 duplicate of 5  [843]
 31 duplicate of 4  [801]
 32 duplicate of 8  [761]
 33 bb 27  [761]
 34 duplicate of 5  [803]
 35 duplicate of 4  [763]
 36 duplicate of 8  [725]
 37 bb 32  [725]
 38 duplicate of 5  [765]
 39 duplicate of 4  [727]
 40 duplicate of 8  [690]
 41 bb 37  [690]
 42 duplicate of 5  [729]
 43 duplicate of 4  [692]
 44 duplicate of 8  [658]
 45 bb 42  [658]
 46 bb 44  [658]
 47 duplicate of 5  [990]
 48 duplicate of 4  [940]
 49 duplicate of 8  [893]
 50 duplicate of 5  [943]
 51 duplicate of 4  [896]
 52 duplicate of 8  [851]
 53 duplicate of 5  [898]
 54 duplicate of 4  [853]
 55 duplicate of 8  [810]
 56 duplicate of 5  [855]
 57 duplicate of 4  [813]
 58 duplicate of 8  [772]
 59 duplicate of 5  [815]
 60 duplicate of 4  [774]
 61 duplicate of 8  [735]
 62 duplicate of 5  [776]
 63 duplicate of 4  [738]
 64 duplicate of 8  [701]
 65 duplicate of 5  [739]
 66 duplicate of 4  [703]
 67 duplicate of 8  [667]


try_optimize_cfg iteration 1

Merged 3 and 4 without moving.
Merged 3 and 5 without moving.
Forwarding edge 3->6 to 9 failed.
Redirecting jump 317 from 46 to 9.
Forwarding edge 7->8 to 47 failed.
Merged 12 and 13 without moving.
Forwarding edge 12->14 to 15 failed.
Deleting fallthru block 14.
Edge 15->45 redirected to 9
Edge 16->41 redirected to 42
Edge 17->37 redirected to 38
Edge 18->33 redirected to 34
Edge 19->29 redirected to 30
Forwarding edge 20->21 to 22 failed.
Edge 20->25 redirected to 26
Forwarding edge 20->21 to 22 failed.
Deleting fallthru block 21.
Merged 22 and 23 without moving.
Forwarding edge 22->24 to 26 failed.
Deleting fallthru block 24.
Forwarding edge 22->25 to 26 failed.
Deleted label in block 25.
Deleting fallthru block 25.
Merged 26 and 27 without moving.
Forwarding edge 26->28 to 30 failed.
Deleting fallthru block 28.
Forwarding edge 26->29 to 30 failed.
Deleted label in block 29.
Deleting fallthru block 29.
Merged 30 and 31 without moving.
Forwarding edge 30->32 to 34 failed.
Deleting fallthru block 32.
Forwarding edge 30->33 to 34 failed.
Deleted label in block 33.
Deleting fallthru block 33.
Merged 34 and 35 without moving.
Forwarding edge 34->36 to 38 failed.
Deleting fallthru block 36.
Forwarding edge 34->37 to 38 failed.
Deleted label in block 37.
Deleting fallthru block 37.
Merged 38 and 39 without moving.
Forwarding edge 38->40 to 42 failed.
Deleting fallthru block 40.
Forwarding edge 38->41 to 42 failed.
Deleted label in block 41.
Deleting fallthru block 41.
Merged 42 and 43 without moving.
Forwarding edge 42->44 to 9 failed.
Deleting fallthru block 44.
Forwarding edge 42->45 to 9 failed.
Deleted label in block 45.
Deleting fallthru block 45.
Forwarding edge 42->46 to 9 failed.
Deleted label in block 46.
Merged 47 and 48 without moving.
Forwarding edge 47->49 to 50 failed.
Deleting fallthru block 49.
Merged 50 and 51 without moving.
Forwarding edge 50->52 to 53 failed.
Deleting fallthru block 52.
Merged 53 and 54 without moving.
Forwarding edge 53->55 to 56 failed.
Deleting fallthru block 55.
Merged 56 and 57 without moving.
Forwarding edge 56->58 to 59 failed.
Deleting fallthru block 58.
Merged 59 and 60 without moving.
Forwarding edge 59->61 to 62 failed.
Deleting fallthru block 61.
Merged 62 and 63 without moving.
Forwarding edge 62->64 to 65 failed.
Deleting fallthru block 64.
Merged 65 and 66 without moving.
Forwarding edge 65->67 to 9 failed.


try_optimize_cfg iteration 2

Forwarding edge 3->6 to 9 failed.
Forwarding edge 7->8 to 47 failed.
Forwarding edge 42->46 to 9 failed.
Forwarding edge 65->67 to 9 failed.
76 registers.

Register 58 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; NO_REGS or none; pointer.

Register 59 used 18 times across 0 insns; set 18 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 60 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; NO_REGS or none; pointer.

Register 63 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; NO_REGS or none; pointer.

Register 65 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 66 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 67 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 68 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 69 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 73 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 74 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 75 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none; pointer.

32 basic blocks, 58 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  10 [5.0%]  1 [95.0%]  (fallthru)

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  0 [95.0%]  (fallthru)
Successors:  3 [95.0%]  2 [5.0%]  (fallthru)

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 51, maybe hot.
Predecessors:  1 [5.0%]  (fallthru)
Successors:  11 [100.0%] 

Basic block 3 prev 2, next 6, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  1 [95.0%] 
Successors:  12 [87.5%]  6 [12.5%]  (fallthru)

Basic block 6 prev 3, next 7, loop_depth 0, count 0, freq 122, maybe hot.
Predecessors:  3 [12.5%]  (fallthru)
Successors:  9 [100.0%] 

Basic block 7 prev 6, next 8, loop_depth 1, count 0, freq 1042, maybe hot.
Predecessors:  9 [95.0%] 
Successors:  11 [5.0%]  (loop_exit) 8 [95.0%]  (fallthru,dfs_back)

Basic block 8 prev 7, next 9, loop_depth 1, count 0, freq 989, maybe hot.
Predecessors:  7 [95.0%]  (fallthru,dfs_back)
Successors:  47 [100.0%] 

Basic block 9 prev 8, next 10, loop_depth 1, count 0, freq 1096, maybe hot.
Predecessors:  46 [100.0%]  67 [100.0%]  6 [100.0%]  15 [14.3%] 
Successors:  7 [95.0%]  10 [5.0%]  (fallthru,loop_exit)
Invalid sum of incoming frequencies 1325, should be 1096

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 554, maybe hot.
Predecessors:  0 [5.0%]  9 [5.0%]  (fallthru,loop_exit)
Successors:  11 [100.0%]  (fallthru)
Invalid sum of incoming frequencies 109, should be 554

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  65 [5.0%]  (loop_exit) 7 [5.0%]  (loop_exit) 10 [100.0%]  (fallthru) 12 [5.0%]  (loop_exit) 22 [5.0%]  (loop_exit) 26 [5.0%]  (loop_exit) 30 [5.0%]  (loop_exit) 34 [5.0%]  (loop_exit) 38 [5.0%]  (loop_exit) 42 [5.0%]  (loop_exit) 47 [5.0%]  (loop_exit) 50 [5.0%]  (loop_exit) 53 [5.0%]  (loop_exit) 56 [5.0%]  (loop_exit) 59 [5.0%]  (loop_exit) 62 [5.0%]  (loop_exit) 2 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Invalid sum of incoming frequencies 1254, should be 1080

Basic block 12 prev 11, next 15, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  3 [87.5%] 
Successors:  11 [5.0%]  (loop_exit) 15 [95.0%]  (fallthru,dfs_back)
Invalid sum of incoming frequencies 853, should be 975

Basic block 15 prev 12, next 16, loop_depth 0, count 0, freq 733, maybe hot.
Predecessors:  12 [95.0%]  (fallthru,dfs_back)
Successors:  16 [85.7%]  (fallthru) 9 [14.3%] 
Invalid sum of incoming frequencies 926, should be 733

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 704, maybe hot.
Predecessors:  15 [85.7%]  (fallthru)
Successors:  17 [83.3%]  (fallthru) 42 [16.7%] 

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 660, maybe hot.
Predecessors:  16 [83.3%]  (fallthru)
Successors:  18 [80.0%]  (fallthru) 38 [20.0%] 

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 587, maybe hot.
Predecessors:  17 [80.0%]  (fallthru)
Successors:  19 [75.0%]  (fallthru) 34 [25.0%] 

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 440, maybe hot.
Predecessors:  18 [75.0%]  (fallthru)
Successors:  20 [66.7%]  (fallthru) 30 [33.3%] 

Basic block 20 prev 19, next 22, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  19 [66.7%]  (fallthru)
Successors:  22 [50.0%]  (fallthru) 26 [50.0%] 
Invalid sum of incoming frequencies 293, should be 880

Basic block 22 prev 20, next 26, loop_depth 0, count 0, freq 929, maybe hot.
Predecessors:  20 [50.0%]  (fallthru)
Successors:  11 [5.0%]  (loop_exit) 26 [95.0%]  (fallthru,dfs_back)
Invalid sum of incoming frequencies 440, should be 929

Basic block 26 prev 22, next 30, loop_depth 0, count 0, freq 885, maybe hot.
Predecessors:  22 [95.0%]  (fallthru,dfs_back) 20 [50.0%] 
Successors:  11 [5.0%]  (loop_exit) 30 [95.0%]  (fallthru,dfs_back)
Invalid sum of incoming frequencies 1323, should be 885

Basic block 30 prev 26, next 34, loop_depth 0, count 0, freq 843, maybe hot.
Predecessors:  26 [95.0%]  (fallthru,dfs_back) 19 [33.3%] 
Successors:  11 [5.0%]  (loop_exit) 34 [95.0%]  (fallthru,dfs_back)
Invalid sum of incoming frequencies 988, should be 843

Basic block 34 prev 30, next 38, loop_depth 0, count 0, freq 803, maybe hot.
Predecessors:  30 [95.0%]  (fallthru,dfs_back) 18 [25.0%] 
Successors:  11 [5.0%]  (loop_exit) 38 [95.0%]  (fallthru,dfs_back)
Invalid sum of incoming frequencies 948, should be 803

Basic block 38 prev 34, next 42, loop_depth 0, count 0, freq 765, maybe hot.
Predecessors:  34 [95.0%]  (fallthru,dfs_back) 17 [20.0%] 
Successors:  11 [5.0%]  (loop_exit) 42 [95.0%]  (fallthru,dfs_back)
Invalid sum of incoming frequencies 895, should be 765

Basic block 42 prev 38, next 46, loop_depth 0, count 0, freq 729, maybe hot.
Predecessors:  38 [95.0%]  (fallthru,dfs_back) 16 [16.7%] 
Successors:  11 [5.0%]  (loop_exit) 46 [95.0%]  (fallthru,dfs_back)
Invalid sum of incoming frequencies 844, should be 729

Basic block 46 prev 42, next 47, loop_depth 0, count 0, freq 431, maybe hot.
Predecessors:  42 [95.0%]  (fallthru,dfs_back)
Successors:  9 [100.0%] 
Invalid sum of incoming frequencies 693, should be 431

Basic block 47 prev 46, next 50, loop_depth 1, count 0, freq 990, maybe hot.
Predecessors:  8 [100.0%] 
Successors:  11 [5.0%]  (loop_exit) 50 [95.0%]  (fallthru,dfs_back)

Basic block 50 prev 47, next 53, loop_depth 1, count 0, freq 943, maybe hot.
Predecessors:  47 [95.0%]  (fallthru,dfs_back)
Successors:  11 [5.0%]  (loop_exit) 53 [95.0%]  (fallthru,dfs_back)

Basic block 53 prev 50, next 56, loop_depth 1, count 0, freq 898, maybe hot.
Predecessors:  50 [95.0%]  (fallthru,dfs_back)
Successors:  11 [5.0%]  (loop_exit) 56 [95.0%]  (fallthru,dfs_back)

Basic block 56 prev 53, next 59, loop_depth 1, count 0, freq 855, maybe hot.
Predecessors:  53 [95.0%]  (fallthru,dfs_back)
Successors:  11 [5.0%]  (loop_exit) 59 [95.0%]  (fallthru,dfs_back)

Basic block 59 prev 56, next 62, loop_depth 1, count 0, freq 815, maybe hot.
Predecessors:  56 [95.0%]  (fallthru,dfs_back)
Successors:  11 [5.0%]  (loop_exit) 62 [95.0%]  (fallthru,dfs_back)

Basic block 62 prev 59, next 65, loop_depth 1, count 0, freq 776, maybe hot.
Predecessors:  59 [95.0%]  (fallthru,dfs_back)
Successors:  11 [5.0%]  (loop_exit) 65 [95.0%]  (fallthru,dfs_back)

Basic block 65 prev 62, next 67, loop_depth 1, count 0, freq 739, maybe hot.
Predecessors:  62 [95.0%]  (fallthru,dfs_back)
Successors:  11 [5.0%]  (loop_exit) 67 [95.0%]  (fallthru,dfs_back)

Basic block 67 prev 65, next -2, loop_depth 1, count 0, freq 667, maybe hot.
Predecessors:  65 [95.0%]  (fallthru,dfs_back)
Successors:  9 [100.0%] 

(note 1 0 6 ("./strings.cc") 69)

;; Start of basic block 0, registers live: (nil)
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:69 (set (reg/v/f:DI 63 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 71)

(insn 9 8 10 0 ./strings.cc:71 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn/u 10 9 11 0 ./strings.cc:71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x2ad10a49b200 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (nil))))

(insn 11 10 13 0 ./strings.cc:71 (set (reg:DI 65)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 13 11 14 0 ./strings.cc:71 (parallel [
            (set (reg/v/f:DI 60 [ last ])
                (plus:DI (reg:DI 65)
                    (reg/v/f:DI 63 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 14 13 15 0 ("./strings.cc") 72)

(insn 15 14 16 0 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 63 [ s ])
            (reg/v/f:DI 60 [ last ]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 16 15 18 0 ./strings.cc:72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 18 16 19 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 1 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 58 [ last.167 ])
                (plus:DI (reg/v/f:DI 60 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 20 19 21 1 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 60 [ last ])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn 21 20 23 1 ./strings.cc:72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 1, registers live:
 (nil)

;; Start of basic block 2, registers live: (nil)
(note 23 21 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 313 2 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/v/f:DI 58 [ last.167 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 313 24 314 2 (set (pc)
        (label_ref 48)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(barrier 314 313 27)

;; Start of basic block 3, registers live: (nil)
(code_label 27 314 28 3 53 "" [1 uses])

(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 70 3 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/v/f:DI 58 [ last.167 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 70 29 71 3 (parallel [
            (set (reg:DI 66)
                (minus:DI (reg/v/f:DI 60 [ last ])
                    (reg/v/f:DI 63 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 71 70 72 3 (set (reg:DI 68)
        (const_int 1 [0x1])) -1 (nil)
    (nil))

(insn 72 71 73 3 (parallel [
            (set (reg:DI 67)
                (minus:DI (reg:DI 68)
                    (reg:DI 66)))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (expr_list:REG_EQUAL (minus:DI (const_int 1 [0x1])
            (reg:DI 66))
        (nil)))

(insn 73 72 68 3 (parallel [
            (set (reg:DI 69)
                (plus:DI (reg/v/f:DI 58 [ last.167 ])
                    (reg:DI 67)))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 68 73 77 3 NOTE_INSN_LOOP_BEG)

(insn 77 68 78 3 (parallel [
            (set (reg:DI 73)
                (minus:DI (reg/v/f:DI 59 [ last.166 ])
                    (reg:DI 69)))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 78 77 204 3 (parallel [
            (set (reg:DI 74)
                (and:DI (reg:DI 73)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 204 78 205 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 205 204 316 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 315)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 8750 [0x222e])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

;; Start of basic block 6, registers live: (nil)
(note 316 205 317 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 317 316 318 6 (set (pc)
        (label_ref:DI 37)) 548 {jump} (nil)
    (nil))
;; End of basic block 6, registers live:
 (nil)

(barrier 318 317 32)

;; Start of basic block 7, registers live: (nil)
(code_label 32 318 33 7 57 "" [1 uses])

(note 33 32 298 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 298 33 34 7 ./strings.cc:72 (parallel [
            (set (reg/f:DI 75)
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 34 298 35 7 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/f:DI 75)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 35 34 36 7 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 36 35 76 7 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 7, registers live:
 (nil)

;; Start of basic block 8, registers live: (nil)
(note 76 36 320 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 320 76 321 8 (set (pc)
        (label_ref 319)) -1 (nil)
    (nil))
;; End of basic block 8, registers live:
 (nil)

(barrier 321 320 37)

;; Start of basic block 9, registers live: (nil)
(code_label 37 321 38 9 56 "" [4 uses])

(note 38 37 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 38 44 9 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(jump_insn 44 43 69 9 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 9, registers live:
 (nil)

(note 69 44 45 NOTE_INSN_LOOP_END)

;; Start of basic block 10, registers live: (nil)
(code_label 45 69 46 10 51 "" [1 uses])

(note 46 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 10 ./strings.cc:72 (set (reg/v/f:DI 59 [ last.166 ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 10, registers live:
 (nil)

;; Start of basic block 11, registers live: (nil)
(code_label 48 47 49 11 55 "" [16 uses])

(note 49 48 50 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 50 49 51 11 ("./strings.cc") 74)

(insn 51 50 55 11 ./strings.cc:74 (set (mem:QI (plus:DI (reg/v/f:DI 59 [ last.166 ])
                (const_int 1 [0x1])) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 55 51 56 11 NOTE_INSN_FUNCTION_END)

(note 56 55 58 11 ("./strings.cc") 76)

(insn 58 56 64 11 ./strings.cc:76 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 64 58 315 11 ./strings.cc:76 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 11, registers live:
 (nil)

;; Start of basic block 12, registers live: (nil)
(code_label 315 64 83 12 80 "" [1 uses])

(note 83 315 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 81 83 86 12 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 86 81 87 12 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 87 86 88 12 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 88 87 201 12 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 12, registers live:
 (nil)

;; Start of basic block 15, registers live: (nil)
(note 201 88 199 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 199 201 200 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 200 199 183 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 37)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1428 [0x594])
        (nil)))
;; End of basic block 15, registers live:
 (nil)

;; Start of basic block 16, registers live: (nil)
(note 183 200 181 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 181 183 182 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 182 181 165 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 326)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1666 [0x682])
        (nil)))
;; End of basic block 16, registers live:
 (nil)

;; Start of basic block 17, registers live: (nil)
(note 165 182 163 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 163 165 164 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 164 163 147 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 327)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
        (nil)))
;; End of basic block 17, registers live:
 (nil)

;; Start of basic block 18, registers live: (nil)
(note 147 164 145 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 145 147 146 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

(jump_insn 146 145 129 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 328)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil)))
;; End of basic block 18, registers live:
 (nil)

;; Start of basic block 19, registers live: (nil)
(note 129 146 127 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 127 129 128 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 5 [0x5]))) -1 (nil)
    (nil))

(jump_insn 128 127 111 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 329)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))
;; End of basic block 19, registers live:
 (nil)

;; Start of basic block 20, registers live: (nil)
(note 111 128 109 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 109 111 110 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 74)
            (const_int 6 [0x6]))) -1 (nil)
    (nil))

(jump_insn 110 109 97 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 330)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20, registers live:
 (nil)

;; Start of basic block 22, registers live: (nil)
(note 97 110 95 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 95 97 100 22 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 100 95 101 22 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 101 100 102 22 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 102 101 330 22 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 22, registers live:
 (nil)

;; Start of basic block 26, registers live: (nil)
(code_label 330 102 115 26 86 "" [1 uses])

(note 115 330 113 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 113 115 118 26 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 118 113 119 26 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 119 118 120 26 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 120 119 329 26 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 26, registers live:
 (nil)

;; Start of basic block 30, registers live: (nil)
(code_label 329 120 133 30 85 "" [1 uses])

(note 133 329 131 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 131 133 136 30 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 136 131 137 30 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 137 136 138 30 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 138 137 328 30 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 30, registers live:
 (nil)

;; Start of basic block 34, registers live: (nil)
(code_label 328 138 151 34 84 "" [1 uses])

(note 151 328 149 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 149 151 154 34 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 154 149 155 34 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 155 154 156 34 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 156 155 327 34 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 34, registers live:
 (nil)

;; Start of basic block 38, registers live: (nil)
(code_label 327 156 169 38 83 "" [1 uses])

(note 169 327 167 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 167 169 172 38 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 172 167 173 38 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 173 172 174 38 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 174 173 326 38 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 38, registers live:
 (nil)

;; Start of basic block 42, registers live: (nil)
(code_label 326 174 187 42 82 "" [1 uses])

(note 187 326 185 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 185 187 190 42 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 190 185 191 42 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/v/f:DI 59 [ last.166 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 191 190 192 42 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 192 191 202 42 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 42, registers live:
 (nil)

;; Start of basic block 46, registers live: (nil)
(note 202 192 322 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(jump_insn 322 202 323 46 (set (pc)
        (label_ref 37)) -1 (nil)
    (nil))
;; End of basic block 46, registers live:
 (nil)

(barrier 323 322 319)

;; Start of basic block 47, registers live: (nil)
(code_label 319 323 210 47 81 "" [1 uses])

(note 210 319 208 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 208 210 213 47 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 213 208 214 47 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 214 213 215 47 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 215 214 223 47 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 47, registers live:
 (nil)

;; Start of basic block 50, registers live: (nil)
(note 223 215 221 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 221 223 226 50 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 226 221 227 50 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 227 226 228 50 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 228 227 236 50 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 50, registers live:
 (nil)

;; Start of basic block 53, registers live: (nil)
(note 236 228 234 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 234 236 239 53 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 239 234 240 53 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 240 239 241 53 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 241 240 249 53 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 53, registers live:
 (nil)

;; Start of basic block 56, registers live: (nil)
(note 249 241 247 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 247 249 252 56 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 252 247 253 56 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 253 252 254 56 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 254 253 262 56 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 56, registers live:
 (nil)

;; Start of basic block 59, registers live: (nil)
(note 262 254 260 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 260 262 265 59 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 265 260 266 59 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 266 265 267 59 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 267 266 275 59 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 59, registers live:
 (nil)

;; Start of basic block 62, registers live: (nil)
(note 275 267 273 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 273 275 278 62 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 278 273 279 62 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 279 278 280 62 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 280 279 288 62 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 62, registers live:
 (nil)

;; Start of basic block 65, registers live: (nil)
(note 288 280 286 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 286 288 291 65 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 59 [ last.166 ])
            (reg:DI 69))) -1 (nil)
    (nil))

(insn 291 286 292 65 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 59 [ last.166 ])
                (plus:DI (reg/f:DI 75)
                    (const_int -7 [0xfffffffffffffff9])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 292 291 293 65 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 59 [ last.166 ]) [0 S1 A8])
            (const_int 10 [0xa]))) -1 (nil)
    (nil))

(jump_insn 293 292 296 65 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 65, registers live:
 (nil)

;; Start of basic block 67, registers live: (nil)
(note 296 293 324 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(jump_insn 324 296 325 67 (set (pc)
        (label_ref 37)) -1 (nil)
    (nil))
;; End of basic block 67, registers live:
 (nil)

(barrier 325 324 0)


;; Function char* strtrim(char*) (_Z7strtrimPc)

;; 3 loops found
;;
;; Loop 0:
;;  header -1, latch -2
;;  depth 0, level 2, outer -1
;;  nodes: -1 0 2 11 3 13 9 4 6 12 7 10 8 14 15 16 52 47 42 37 32 27 22 17 18 19 20 21 23 24 25 26 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 48 49 50 51 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 -2
;;
;; Loop 1:
;;  header 9, latch 73
;;  depth 1, level 1, outer 0
;;  nodes: 9 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 11 2
;;
;; Loop 2:
;;  header 10, latch 12
;;  depth 1, level 1, outer 0
;;  nodes: 10 12 6
;; 0 succs { 4 3 }
;; 2 succs { 11 }
;; 11 succs { 53 }
;; 3 succs { 13 }
;; 13 succs { 14 }
;; 9 succs { 2 4 }
;; 4 succs { 8 7 }
;; 6 succs { 8 12 }
;; 12 succs { 10 }
;; 7 succs { 10 }
;; 10 succs { 6 8 }
;; 8 succs { -2 }
;; 14 succs { 15 4 }
;; 15 succs { 4 16 }
;; 16 succs { 52 }
;; 52 succs { 47 51 }
;; 47 succs { 42 46 }
;; 42 succs { 37 41 }
;; 37 succs { 32 36 }
;; 32 succs { 27 31 }
;; 27 succs { 22 26 }
;; 22 succs { 17 21 }
;; 17 succs { 18 }
;; 18 succs { 19 4 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 23 }
;; 23 succs { 24 4 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 28 }
;; 28 succs { 29 4 }
;; 29 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { 33 }
;; 33 succs { 34 4 }
;; 34 succs { 35 }
;; 35 succs { 36 }
;; 36 succs { 38 }
;; 38 succs { 39 4 }
;; 39 succs { 40 }
;; 40 succs { 41 }
;; 41 succs { 43 }
;; 43 succs { 44 4 }
;; 44 succs { 45 }
;; 45 succs { 46 }
;; 46 succs { 48 }
;; 48 succs { 49 4 }
;; 49 succs { 4 50 }
;; 50 succs { 51 }
;; 51 succs { 9 }
;; 53 succs { 54 4 }
;; 54 succs { 55 }
;; 55 succs { 56 }
;; 56 succs { 57 4 }
;; 57 succs { 58 }
;; 58 succs { 59 }
;; 59 succs { 60 4 }
;; 60 succs { 61 }
;; 61 succs { 62 }
;; 62 succs { 63 4 }
;; 63 succs { 64 }
;; 64 succs { 65 }
;; 65 succs { 66 4 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 4 }
;; 69 succs { 70 }
;; 70 succs { 71 }
;; 71 succs { 72 4 }
;; 72 succs { 4 73 }
;; 73 succs { 9 }
Reordered sequence:
 0 bb 0  [1026]
 1 compensation  [51]
 2 bb 2  [845]
 3 compensation  [803]
 4 bb 3  [975]
 5 bb 13  [975]
 6 bb 9  [890]
 7 bb 4  [1026]
 8 compensation  [51]
 9 bb 6  [9500]
 10 compensation  [9025]
 11 bb 7  [975]
 12 bb 10  [10000]
 13 bb 8  [1026]
 14 duplicate of 9  [975]
 15 duplicate of 2  [926]
 16 duplicate of 11  [880]
 17 bb 52  [754]
 18 bb 47  [733]
 19 bb 42  [704]
 20 bb 37  [660]
 21 bb 32  [587]
 22 bb 27  [440]
 23 bb 22  [880]
 24 compensation  [880]
 25 duplicate of 9  [880]
 26 duplicate of 2  [836]
 27 duplicate of 11  [794]
 28 bb 21  [794]
 29 duplicate of 9  [836]
 30 duplicate of 2  [794]
 31 duplicate of 11  [754]
 32 bb 26  [754]
 33 duplicate of 9  [794]
 34 duplicate of 2  [754]
 35 duplicate of 11  [717]
 36 bb 31  [717]
 37 duplicate of 9  [755]
 38 duplicate of 2  [717]
 39 duplicate of 11  [682]
 40 bb 36  [682]
 41 duplicate of 9  [717]
 42 duplicate of 2  [681]
 43 duplicate of 11  [647]
 44 bb 41  [647]
 45 duplicate of 9  [681]
 46 duplicate of 2  [647]
 47 duplicate of 11  [614]
 48 bb 46  [614]
 49 duplicate of 9  [647]
 50 duplicate of 2  [614]
 51 duplicate of 11  [584]
 52 bb 51  [584]
 53 duplicate of 9  [845]
 54 duplicate of 2  [803]
 55 duplicate of 11  [763]
 56 duplicate of 9  [803]
 57 duplicate of 2  [763]
 58 duplicate of 11  [725]
 59 duplicate of 9  [763]
 60 duplicate of 2  [725]
 61 duplicate of 11  [688]
 62 duplicate of 9  [724]
 63 duplicate of 2  [688]
 64 duplicate of 11  [654]
 65 duplicate of 9  [688]
 66 duplicate of 2  [653]
 67 duplicate of 11  [621]
 68 duplicate of 9  [653]
 69 duplicate of 2  [620]
 70 duplicate of 11  [589]
 71 duplicate of 9  [620]
 72 duplicate of 2  [589]
 73 duplicate of 11  [560]


try_optimize_cfg iteration 1

Forwarding edge 0->1 to 7 failed.
Edge 0->4 redirected to 5
Forwarding edge 0->1 to 7 failed.
Merged 2 and 3 without moving.
Moved block 2 before 53 and merged.
Deleting block 4.
Moved block 5 before 14 and merged.
Forwarding edge 7->8 to 13 failed.
Edge 7->11 redirected to 12
Forwarding edge 7->8 to 13 failed.
Forwarding edge 9->10 to 12 failed.
Deleting block 11.
Removing jump 472.
Deleting fallthru block 10.
Deleted label in block 15.
Forwarding edge 15->16 to 17 failed.
Deleting fallthru block 16.
Edge 17->52 redirected to 6
Edge 18->48 redirected to 49
Edge 19->44 redirected to 45
Edge 20->40 redirected to 41
Edge 21->36 redirected to 37
Edge 22->32 redirected to 33
Forwarding edge 23->24 to 25 failed.
Edge 23->28 redirected to 29
Forwarding edge 23->24 to 25 failed.
Deleting fallthru block 24.
Deleted label in block 26.
Merged 26 and 27 without moving.
Merged 26 and 28 without moving.
Deleted label in block 30.
Merged 30 and 31 without moving.
Merged 30 and 32 without moving.
Deleted label in block 34.
Merged 34 and 35 without moving.
Merged 34 and 36 without moving.
Deleted label in block 38.
Merged 38 and 39 without moving.
Merged 38 and 40 without moving.
Deleted label in block 42.
Merged 42 and 43 without moving.
Merged 42 and 44 without moving.
Deleted label in block 46.
Merged 46 and 47 without moving.
Merged 46 and 48 without moving.
Deleted label in block 50.
Forwarding edge 50->51 to 6 failed.
Deleting fallthru block 51.
Forwarding edge 50->52 to 6 failed.
Deleted label in block 52.
Deleted label in block 54.
Merged 54 and 55 without moving.
Merged 54 and 56 without moving.
Deleted label in block 57.
Merged 57 and 58 without moving.
Merged 57 and 59 without moving.
Deleted label in block 60.
Merged 60 and 61 without moving.
Merged 60 and 62 without moving.
Deleted label in block 63.
Merged 63 and 64 without moving.
Merged 63 and 65 without moving.
Deleted label in block 66.
Merged 66 and 67 without moving.
Merged 66 and 68 without moving.
Deleted label in block 69.
Merged 69 and 70 without moving.
Merged 69 and 71 without moving.
Deleted label in block 72.
Forwarding edge 72->73 to 6 failed.


try_optimize_cfg iteration 2

Forwarding edge 0->1 to 7 failed.
Forwarding edge 7->8 to 13 failed.
Forwarding edge 50->52 to 6 failed.
Forwarding edge 72->73 to 6 failed.
78 registers.

Register 58 used 17 times across 0 insns; set 17 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 59 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 60 used 2 times across 0 insns; set 2 times; dies in 0 places; 1 bytes; NO_REGS or none.

Register 61 used 16 times across 0 insns; set 16 times; dies in 0 places; 4 bytes; NO_REGS or none.

Register 64 used 2 times across 0 insns; set 2 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 66 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 67 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 68 used 16 times across 0 insns; set 16 times; dies in 0 places; 4 bytes; NO_REGS or none.

Register 69 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 75 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 76 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none.

Register 77 used 1 times across 0 insns; set 1 time; dies in 0 places; NO_REGS or none; pointer.

41 basic blocks, 72 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  1 [5.0%]  (fallthru) 5 [95.0%] 

Basic block 1 prev 0, next 6, loop_depth 0, count 0, freq 51, maybe hot.
Predecessors:  0 [5.0%]  (fallthru)
Successors:  7 [100.0%] 

Basic block 6 prev 1, next 7, loop_depth 1, count 0, freq 890, maybe hot.
Predecessors:  52 [100.0%]  73 [100.0%]  17 [12.5%] 
Successors:  2 [95.0%]  7 [5.0%]  (fallthru,loop_exit)
Invalid sum of incoming frequencies 1144, should be 890

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  2 [5.0%]  (loop_exit) 57 [5.0%]  (loop_exit) 6 [5.0%]  (fallthru,loop_exit) 5 [5.0%]  (loop_exit) 15 [5.0%]  (loop_exit) 25 [5.0%]  (loop_exit) 72 [5.0%]  (loop_exit) 29 [5.0%]  (loop_exit) 69 [5.0%]  (loop_exit) 33 [5.0%]  (loop_exit) 60 [5.0%]  (loop_exit) 37 [5.0%]  (loop_exit) 66 [5.0%]  (loop_exit) 41 [5.0%]  (loop_exit) 54 [5.0%]  (loop_exit) 45 [5.0%]  (loop_exit) 63 [5.0%]  (loop_exit) 49 [5.0%]  (loop_exit) 50 [5.0%]  (loop_exit) 1 [100.0%] 
Successors:  8 [5.0%]  (fallthru) 12 [95.0%] 
Invalid sum of incoming frequencies 771, should be 1026

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 51, maybe hot.
Predecessors:  7 [5.0%]  (fallthru)
Successors:  13 [100.0%] 

Basic block 9 prev 8, next 12, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  12 [95.0%] 
Successors:  13 [5.0%]  (loop_exit) 12 [95.0%]  (fallthru,dfs_back)

Basic block 12 prev 9, next 13, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  7 [95.0%]  9 [95.0%]  (fallthru,dfs_back)
Successors:  9 [95.0%]  13 [5.0%]  (fallthru,loop_exit)

Basic block 13 prev 12, next 5, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  12 [5.0%]  (fallthru,loop_exit) 9 [5.0%]  (loop_exit) 8 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)

Basic block 5 prev 13, next 15, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  0 [95.0%] 
Successors:  15 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)

Basic block 15 prev 5, next 17, loop_depth 0, count 0, freq 926, maybe hot.
Predecessors:  5 [95.0%]  (fallthru)
Successors:  7 [5.0%]  (loop_exit) 17 [95.0%]  (fallthru,dfs_back)

Basic block 17 prev 15, next 18, loop_depth 0, count 0, freq 754, maybe hot.
Predecessors:  15 [95.0%]  (fallthru,dfs_back)
Successors:  18 [87.5%]  (fallthru) 6 [12.5%] 
Invalid sum of incoming frequencies 880, should be 754

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 733, maybe hot.
Predecessors:  17 [87.5%]  (fallthru)
Successors:  19 [85.7%]  (fallthru) 49 [14.3%] 

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 704, maybe hot.
Predecessors:  18 [85.7%]  (fallthru)
Successors:  20 [83.3%]  (fallthru) 45 [16.7%] 

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 660, maybe hot.
Predecessors:  19 [83.3%]  (fallthru)
Successors:  21 [80.0%]  (fallthru) 41 [20.0%] 

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 587, maybe hot.
Predecessors:  20 [80.0%]  (fallthru)
Successors:  22 [75.0%]  (fallthru) 37 [25.0%] 

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 440, maybe hot.
Predecessors:  21 [75.0%]  (fallthru)
Successors:  23 [66.7%]  (fallthru) 33 [33.3%] 

Basic block 23 prev 22, next 25, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  22 [66.7%]  (fallthru)
Successors:  25 [50.0%]  (fallthru) 29 [50.0%] 
Invalid sum of incoming frequencies 293, should be 880

Basic block 25 prev 23, next 26, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  23 [50.0%]  (fallthru)
Successors:  26 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)
Invalid sum of incoming frequencies 440, should be 880

Basic block 26 prev 25, next 29, loop_depth 0, count 0, freq 836, maybe hot.
Predecessors:  25 [95.0%]  (fallthru)
Successors:  29 [100.0%]  (fallthru)

Basic block 29 prev 26, next 30, loop_depth 0, count 0, freq 836, maybe hot.
Predecessors:  26 [100.0%]  (fallthru) 23 [50.0%] 
Successors:  30 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)
Invalid sum of incoming frequencies 1276, should be 836

Basic block 30 prev 29, next 33, loop_depth 0, count 0, freq 794, maybe hot.
Predecessors:  29 [95.0%]  (fallthru)
Successors:  33 [100.0%]  (fallthru)

Basic block 33 prev 30, next 34, loop_depth 0, count 0, freq 794, maybe hot.
Predecessors:  30 [100.0%]  (fallthru) 22 [33.3%] 
Successors:  34 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)
Invalid sum of incoming frequencies 941, should be 794

Basic block 34 prev 33, next 37, loop_depth 0, count 0, freq 754, maybe hot.
Predecessors:  33 [95.0%]  (fallthru)
Successors:  37 [100.0%]  (fallthru)

Basic block 37 prev 34, next 38, loop_depth 0, count 0, freq 755, maybe hot.
Predecessors:  34 [100.0%]  (fallthru) 21 [25.0%] 
Successors:  38 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)
Invalid sum of incoming frequencies 901, should be 755

Basic block 38 prev 37, next 41, loop_depth 0, count 0, freq 717, maybe hot.
Predecessors:  37 [95.0%]  (fallthru)
Successors:  41 [100.0%]  (fallthru)

Basic block 41 prev 38, next 42, loop_depth 0, count 0, freq 717, maybe hot.
Predecessors:  38 [100.0%]  (fallthru) 20 [20.0%] 
Successors:  42 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)
Invalid sum of incoming frequencies 849, should be 717

Basic block 42 prev 41, next 45, loop_depth 0, count 0, freq 681, maybe hot.
Predecessors:  41 [95.0%]  (fallthru)
Successors:  45 [100.0%]  (fallthru)

Basic block 45 prev 42, next 46, loop_depth 0, count 0, freq 681, maybe hot.
Predecessors:  42 [100.0%]  (fallthru) 19 [16.7%] 
Successors:  46 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)
Invalid sum of incoming frequencies 798, should be 681

Basic block 46 prev 45, next 49, loop_depth 0, count 0, freq 647, maybe hot.
Predecessors:  45 [95.0%]  (fallthru)
Successors:  49 [100.0%]  (fallthru)

Basic block 49 prev 46, next 50, loop_depth 0, count 0, freq 647, maybe hot.
Predecessors:  46 [100.0%]  (fallthru) 18 [14.3%] 
Successors:  50 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)
Invalid sum of incoming frequencies 752, should be 647

Basic block 50 prev 49, next 52, loop_depth 0, count 0, freq 614, maybe hot.
Predecessors:  49 [95.0%]  (fallthru)
Successors:  7 [5.0%]  (loop_exit) 52 [95.0%]  (fallthru,dfs_back)

Basic block 52 prev 50, next 2, loop_depth 0, count 0, freq 490, maybe hot.
Predecessors:  50 [95.0%]  (fallthru,dfs_back)
Successors:  6 [100.0%] 

Basic block 2 prev 52, next 54, loop_depth 1, count 0, freq 845, maybe hot.
Predecessors:  6 [95.0%] 
Successors:  54 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)

Basic block 54 prev 2, next 57, loop_depth 1, count 0, freq 803, maybe hot.
Predecessors:  2 [95.0%]  (fallthru)
Successors:  57 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)

Basic block 57 prev 54, next 60, loop_depth 1, count 0, freq 763, maybe hot.
Predecessors:  54 [95.0%]  (fallthru)
Successors:  60 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)

Basic block 60 prev 57, next 63, loop_depth 1, count 0, freq 725, maybe hot.
Predecessors:  57 [95.0%]  (fallthru)
Successors:  63 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)

Basic block 63 prev 60, next 66, loop_depth 1, count 0, freq 688, maybe hot.
Predecessors:  60 [95.0%]  (fallthru)
Successors:  66 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)

Basic block 66 prev 63, next 69, loop_depth 1, count 0, freq 653, maybe hot.
Predecessors:  63 [95.0%]  (fallthru)
Successors:  69 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)

Basic block 69 prev 66, next 72, loop_depth 1, count 0, freq 620, maybe hot.
Predecessors:  66 [95.0%]  (fallthru)
Successors:  72 [95.0%]  (fallthru) 7 [5.0%]  (loop_exit)

Basic block 72 prev 69, next 73, loop_depth 1, count 0, freq 589, maybe hot.
Predecessors:  69 [95.0%]  (fallthru)
Successors:  7 [5.0%]  (loop_exit) 73 [95.0%]  (fallthru,dfs_back)

Basic block 73 prev 72, next -2, loop_depth 1, count 0, freq 560, maybe hot.
Predecessors:  72 [95.0%]  (fallthru,dfs_back)
Successors:  6 [100.0%] 

(note 1 0 6 ("./strings.cc") 141)

;; Start of basic block 0, registers live: (nil)
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:141 (set (reg/v/f:DI 64 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 143)

(insn 9 8 10 0 ./strings.cc:143 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 64 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(call_insn/u 10 9 11 0 ./strings.cc:143 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x2ad10a49b200 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (nil))))

(insn 11 10 13 0 ./strings.cc:143 (set (reg:DI 66)
        (reg:DI 0 ax)) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 13 11 14 0 ./strings.cc:143 (parallel [
            (set (reg:DI 67)
                (plus:DI (reg:DI 66)
                    (reg/v/f:DI 64 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 14 13 15 0 ./strings.cc:143 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg:DI 67)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 15 14 16 0 ("./strings.cc") 144)

(insn 16 15 17 0 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn 17 16 81 0 ./strings.cc:144 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 479)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

(note 81 17 459 NOTE_INSN_LOOP_BEG)

;; Start of basic block 1, registers live: (nil)
(note 459 81 460 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn 460 459 461 1 (set (pc)
        (label_ref 36)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 461 460 474)

;; Start of basic block 6, registers live: (nil)
(code_label 474 461 89 6 133 "" [3 uses])

(note 89 474 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 89 31 6 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 31 30 32 6 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 32 31 33 6 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 33 32 34 6 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 34 33 35 6 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 35 34 82 6 ./strings.cc:144 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 6, registers live:
 (nil)

(note 82 35 36 NOTE_INSN_LOOP_END)

;; Start of basic block 7, registers live: (nil)
(code_label 36 82 37 7 88 "" [19 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 38 37 39 7 ("./strings.cc") 146)

(insn 39 38 40 7 ./strings.cc:146 (set (mem:QI (plus:DI (reg/v/f:DI 58 [ last ])
                (const_int 1 [0x1])) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 40 39 41 7 ("./strings.cc") 147)

(insn 41 40 42 7 ./strings.cc:147 (set (reg:QI 60 [ D.2609 ])
        (mem:QI (reg/v/f:DI 64 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 42 41 43 7 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2609 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 43 42 83 7 ./strings.cc:147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 471)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 7, registers live:
 (nil)

(note 83 43 468 NOTE_INSN_LOOP_BEG)

;; Start of basic block 8, registers live: (nil)
(note 468 83 469 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 469 468 470 8 (set (pc)
        (label_ref 63)) -1 (nil)
    (nil))
;; End of basic block 8, registers live:
 (nil)

(barrier 470 469 47)

;; Start of basic block 9, registers live: (nil)
(code_label 47 470 48 9 93 "" [1 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 49 48 50 9 ("./strings.cc") 148)

(insn 50 49 51 9 ./strings.cc:148 (parallel [
            (set (reg/v/f:DI 64 [ s ])
                (plus:DI (reg/v/f:DI 64 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 51 50 52 9 ("./strings.cc") 147)

(insn 52 51 53 9 ./strings.cc:147 (set (reg:QI 60 [ D.2609 ])
        (mem:QI (reg/v/f:DI 64 [ s ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 53 52 54 9 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2609 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 54 53 471 9 ./strings.cc:147 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 63)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 9, registers live:
 (nil)

;; Start of basic block 12, registers live: (nil)
(code_label 471 54 90 12 132 "" [1 uses])

(note 90 471 57 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 57 90 58 12 ./strings.cc:147 (set (reg:SI 69 [ D.2609 ])
        (sign_extend:SI (reg:QI 60 [ D.2609 ]))) -1 (nil)
    (nil))

(insn 58 57 59 12 ./strings.cc:147 (set (reg:SI 5 di [ D.2609 ])
        (reg:SI 69 [ D.2609 ])) -1 (nil)
    (nil))

(call_insn/u 59 58 60 12 ./strings.cc:147 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2609 ]))
            (nil))))

(insn 60 59 61 12 ./strings.cc:147 (set (reg:SI 59 [ D.2611 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 61 60 62 12 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.2611 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 62 61 84 12 ./strings.cc:147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 12, registers live:
 (nil)

(note 84 62 63 NOTE_INSN_LOOP_END)

;; Start of basic block 13, registers live: (nil)
(code_label 63 84 64 13 91 "" [2 uses])

(note 64 63 68 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 68 64 69 13 NOTE_INSN_FUNCTION_END)

(note 69 68 71 13 ("./strings.cc") 150)

(insn 71 69 77 13 ./strings.cc:150 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 64 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 77 71 479 13 ./strings.cc:150 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 13, registers live:
 (nil)

;; Start of basic block 5, registers live: (nil)
(code_label 479 77 95 5 134 "" [1 uses])

(note 95 479 93 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 93 95 94 5 (parallel [
            (set (reg:DI 75)
                (minus:DI (reg/v/f:DI 58 [ last ])
                    (reg/v/f:DI 64 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 94 93 97 5 (parallel [
            (set (reg:DI 76)
                (and:DI (reg:DI 75)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 97 94 98 5 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 98 97 99 5 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 99 98 100 5 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 100 99 101 5 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 101 100 102 5 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 102 101 111 5 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 5, registers live:
 (nil)

;; Start of basic block 15, registers live: (nil)
(note 111 102 106 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 106 111 107 15 ("./strings.cc") 145)

(insn 107 106 108 15 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 108 107 109 15 ("./strings.cc") 144)

(insn 109 108 110 15 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(jump_insn 110 109 291 15 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 15, registers live:
 (nil)

;; Start of basic block 17, registers live: (nil)
(note 291 110 289 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 289 291 290 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 290 289 266 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 474)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
        (nil)))
;; End of basic block 17, registers live:
 (nil)

;; Start of basic block 18, registers live: (nil)
(note 266 290 264 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 264 266 265 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 1 [0x1]))) -1 (nil)
    (nil))

(jump_insn 265 264 241 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 480)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1428 [0x594])
        (nil)))
;; End of basic block 18, registers live:
 (nil)

;; Start of basic block 19, registers live: (nil)
(note 241 265 239 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 239 241 240 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 2 [0x2]))) -1 (nil)
    (nil))

(jump_insn 240 239 216 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 481)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1666 [0x682])
        (nil)))
;; End of basic block 19, registers live:
 (nil)

;; Start of basic block 20, registers live: (nil)
(note 216 240 214 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 214 216 215 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 3 [0x3]))) -1 (nil)
    (nil))

(jump_insn 215 214 191 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 482)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
        (nil)))
;; End of basic block 20, registers live:
 (nil)

;; Start of basic block 21, registers live: (nil)
(note 191 215 189 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 189 191 190 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 4 [0x4]))) -1 (nil)
    (nil))

(jump_insn 190 189 166 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 483)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
        (nil)))
;; End of basic block 21, registers live:
 (nil)

;; Start of basic block 22, registers live: (nil)
(note 166 190 164 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 164 166 165 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 5 [0x5]))) -1 (nil)
    (nil))

(jump_insn 165 164 141 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 484)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
        (nil)))
;; End of basic block 22, registers live:
 (nil)

;; Start of basic block 23, registers live: (nil)
(note 141 165 139 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 139 141 140 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 76)
            (const_int 6 [0x6]))) -1 (nil)
    (nil))

(jump_insn 140 139 124 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 485)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 23, registers live:
 (nil)

;; Start of basic block 25, registers live: (nil)
(note 124 140 118 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 118 124 119 25 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 119 118 120 25 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 120 119 121 25 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 121 120 122 25 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 122 121 123 25 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 123 122 132 25 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 25, registers live:
 (nil)

;; Start of basic block 26, registers live: (nil)
(note 132 123 127 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 127 132 128 26 ("./strings.cc") 145)

(insn 128 127 129 26 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 129 128 130 26 ("./strings.cc") 144)

(insn 130 129 485 26 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 26, registers live:
 (nil)

;; Start of basic block 29, registers live: (nil)
(code_label 485 130 149 29 140 "" [1 uses])

(note 149 485 143 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 143 149 144 29 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 144 143 145 29 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 145 144 146 29 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 146 145 147 29 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 147 146 148 29 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 148 147 157 29 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 29, registers live:
 (nil)

;; Start of basic block 30, registers live: (nil)
(note 157 148 152 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 152 157 153 30 ("./strings.cc") 145)

(insn 153 152 154 30 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 154 153 155 30 ("./strings.cc") 144)

(insn 155 154 484 30 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 30, registers live:
 (nil)

;; Start of basic block 33, registers live: (nil)
(code_label 484 155 174 33 139 "" [1 uses])

(note 174 484 168 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 168 174 169 33 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 169 168 170 33 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 170 169 171 33 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 171 170 172 33 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 172 171 173 33 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 173 172 182 33 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 33, registers live:
 (nil)

;; Start of basic block 34, registers live: (nil)
(note 182 173 177 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 177 182 178 34 ("./strings.cc") 145)

(insn 178 177 179 34 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 179 178 180 34 ("./strings.cc") 144)

(insn 180 179 483 34 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 34, registers live:
 (nil)

;; Start of basic block 37, registers live: (nil)
(code_label 483 180 199 37 138 "" [1 uses])

(note 199 483 193 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 193 199 194 37 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 194 193 195 37 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 195 194 196 37 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 196 195 197 37 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 197 196 198 37 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 198 197 207 37 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 37, registers live:
 (nil)

;; Start of basic block 38, registers live: (nil)
(note 207 198 202 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(note 202 207 203 38 ("./strings.cc") 145)

(insn 203 202 204 38 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 204 203 205 38 ("./strings.cc") 144)

(insn 205 204 482 38 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 38, registers live:
 (nil)

;; Start of basic block 41, registers live: (nil)
(code_label 482 205 224 41 137 "" [1 uses])

(note 224 482 218 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 218 224 219 41 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 219 218 220 41 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 220 219 221 41 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 221 220 222 41 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 222 221 223 41 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 223 222 232 41 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 41, registers live:
 (nil)

;; Start of basic block 42, registers live: (nil)
(note 232 223 227 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note 227 232 228 42 ("./strings.cc") 145)

(insn 228 227 229 42 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 229 228 230 42 ("./strings.cc") 144)

(insn 230 229 481 42 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 42, registers live:
 (nil)

;; Start of basic block 45, registers live: (nil)
(code_label 481 230 249 45 136 "" [1 uses])

(note 249 481 243 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 243 249 244 45 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 244 243 245 45 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 245 244 246 45 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 246 245 247 45 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 247 246 248 45 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 248 247 257 45 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 45, registers live:
 (nil)

;; Start of basic block 46, registers live: (nil)
(note 257 248 252 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(note 252 257 253 46 ("./strings.cc") 145)

(insn 253 252 254 46 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 254 253 255 46 ("./strings.cc") 144)

(insn 255 254 480 46 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))
;; End of basic block 46, registers live:
 (nil)

;; Start of basic block 49, registers live: (nil)
(code_label 480 255 274 49 135 "" [1 uses])

(note 274 480 268 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 268 274 269 49 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 269 268 270 49 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 270 269 271 49 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 271 270 272 49 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 272 271 273 49 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 273 272 282 49 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 49, registers live:
 (nil)

;; Start of basic block 50, registers live: (nil)
(note 282 273 277 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(note 277 282 278 50 ("./strings.cc") 145)

(insn 278 277 279 50 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 279 278 280 50 ("./strings.cc") 144)

(insn 280 279 281 50 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(jump_insn 281 280 287 50 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 50, registers live:
 (nil)

;; Start of basic block 52, registers live: (nil)
(note 287 281 475 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(jump_insn 475 287 476 52 (set (pc)
        (label_ref 474)) -1 (nil)
    (nil))
;; End of basic block 52, registers live:
 (nil)

(barrier 476 475 21)

;; Start of basic block 2, registers live: (nil)
(code_label 21 476 22 2 90 "" [1 uses])

(note 22 21 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 23 22 432 2 ("./strings.cc") 145)

(insn 432 23 24 2 ./strings.cc:145 (parallel [
            (set (reg/f:DI 77)
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 24 432 25 2 ./strings.cc:145 (set (reg/v/f:DI 58 [ last ])
        (reg/f:DI 77)) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 25 24 26 2 ("./strings.cc") 144)

(insn 26 25 293 2 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 293 26 294 2 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 294 293 295 2 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 295 294 296 2 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 296 295 297 2 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 297 296 298 2 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 298 297 307 2 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 2, registers live:
 (nil)

;; Start of basic block 54, registers live: (nil)
(note 307 298 302 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(note 302 307 303 54 ("./strings.cc") 145)

(insn 303 302 304 54 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 304 303 305 54 ("./strings.cc") 144)

(insn 305 304 313 54 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 313 305 314 54 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 314 313 315 54 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 315 314 316 54 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 316 315 317 54 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 317 316 318 54 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 318 317 327 54 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 54, registers live:
 (nil)

;; Start of basic block 57, registers live: (nil)
(note 327 318 322 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(note 322 327 323 57 ("./strings.cc") 145)

(insn 323 322 324 57 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 324 323 325 57 ("./strings.cc") 144)

(insn 325 324 333 57 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 333 325 334 57 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 334 333 335 57 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 335 334 336 57 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 336 335 337 57 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 337 336 338 57 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 338 337 347 57 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 57, registers live:
 (nil)

;; Start of basic block 60, registers live: (nil)
(note 347 338 342 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(note 342 347 343 60 ("./strings.cc") 145)

(insn 343 342 344 60 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 344 343 345 60 ("./strings.cc") 144)

(insn 345 344 353 60 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 353 345 354 60 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 354 353 355 60 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 355 354 356 60 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 356 355 357 60 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 357 356 358 60 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 358 357 367 60 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 60, registers live:
 (nil)

;; Start of basic block 63, registers live: (nil)
(note 367 358 362 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(note 362 367 363 63 ("./strings.cc") 145)

(insn 363 362 364 63 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 364 363 365 63 ("./strings.cc") 144)

(insn 365 364 373 63 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 373 365 374 63 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 374 373 375 63 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 375 374 376 63 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 376 375 377 63 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 377 376 378 63 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 378 377 387 63 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 63, registers live:
 (nil)

;; Start of basic block 66, registers live: (nil)
(note 387 378 382 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(note 382 387 383 66 ("./strings.cc") 145)

(insn 383 382 384 66 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 384 383 385 66 ("./strings.cc") 144)

(insn 385 384 393 66 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 393 385 394 66 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 394 393 395 66 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 395 394 396 66 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 396 395 397 66 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 397 396 398 66 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 398 397 407 66 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 66, registers live:
 (nil)

;; Start of basic block 69, registers live: (nil)
(note 407 398 402 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(note 402 407 403 69 ("./strings.cc") 145)

(insn 403 402 404 69 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 404 403 405 69 ("./strings.cc") 144)

(insn 405 404 413 69 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(insn 413 405 414 69 ./strings.cc:144 (set (reg:SI 68)
        (sign_extend:SI (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 414 413 415 69 ./strings.cc:144 (set (reg:SI 5 di)
        (reg:SI 68)) -1 (nil)
    (nil))

(call_insn/u 415 414 416 69 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 416 415 417 69 ./strings.cc:144 (set (reg:SI 61 [ D.2604 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 417 416 418 69 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2604 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 418 417 427 69 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 69, registers live:
 (nil)

;; Start of basic block 72, registers live: (nil)
(note 427 418 422 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(note 422 427 423 72 ("./strings.cc") 145)

(insn 423 422 424 72 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/f:DI 77)
                    (const_int -7 [0xfffffffffffffff9])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 424 423 425 72 ("./strings.cc") 144)

(insn 425 424 426 72 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 64 [ s ])
            (reg/v/f:DI 58 [ last ]))) -1 (nil)
    (nil))

(jump_insn 426 425 430 72 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 72, registers live:
 (nil)

;; Start of basic block 73, registers live: (nil)
(note 430 426 477 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(jump_insn 477 430 478 73 (set (pc)
        (label_ref 474)) -1 (nil)
    (nil))
;; End of basic block 73, registers live:
 (nil)

(barrier 478 477 0)


;; Function char* strsplit(char*) (_Z8strsplitPc)

;; 3 loops found
;;
;; Loop 0:
;;  header -1, latch -2
;;  depth 0, level 2, outer -1
;;  nodes: -1 0 1 2 11 3 9 4 6 12 7 10 8 -2
;;
;; Loop 1:
;;  header 9, latch 11
;;  depth 1, level 1, outer 0
;;  nodes: 9 11 2
;;
;; Loop 2:
;;  header 10, latch 12
;;  depth 1, level 1, outer 0
;;  nodes: 10 12 6
;; 0 succs { 3 1 }
;; 1 succs { 8 }
;; 2 succs { 8 11 }
;; 11 succs { 9 }
;; 3 succs { 9 }
;; 9 succs { 2 4 }
;; 4 succs { 8 7 }
;; 6 succs { 8 12 }
;; 12 succs { 10 }
;; 7 succs { 10 }
;; 10 succs { 6 8 }
;; 8 succs { -2 }
Reordered sequence:
 0 bb 0  [2306]
 1 bb 1  [761]
 2 bb 2  [9500]
 3 compensation  [8455]
 4 bb 3  [1545]
 5 bb 9  [10000]
 6 bb 4  [500]
 7 compensation  [25]
 8 bb 6  [4628]
 9 compensation  [4397]
 10 bb 7  [475]
 11 bb 10  [4872]
 12 bb 8  [2306]


try_optimize_cfg iteration 1

Edge 0->4 redirected to 5
Forwarding edge 2->3 to 5 failed.
Deleting block 4.
Removing jump 89.
Deleting fallthru block 3.
Forwarding edge 6->7 to 12 failed.
Edge 6->10 redirected to 11
Forwarding edge 6->7 to 12 failed.
Forwarding edge 8->9 to 11 failed.
Deleting block 10.
Removing jump 95.
Deleting fallthru block 9.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 12 failed.
69 registers.

Register 58 used 2 times across 0 insns; set 2 times; dies in 0 places; 1 bytes; NO_REGS or none.

Register 59 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 60 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 61 used 2 times across 0 insns; set 2 times; dies in 0 places; 1 bytes; NO_REGS or none.

Register 63 used 5 times across 0 insns; set 5 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 64 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 65 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

9 basic blocks, 16 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 2306, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  5 [67.0%]  1 [33.0%]  (fallthru)

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 761, maybe hot.
Predecessors:  0 [33.0%]  (fallthru)
Successors:  12 [100.0%] 

Basic block 2 prev 1, next 5, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  5 [95.0%] 
Successors:  12 [11.0%]  (loop_exit) 5 [89.0%]  (fallthru,dfs_back)

Basic block 5 prev 2, next 6, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  0 [67.0%]  2 [89.0%]  (fallthru,dfs_back)
Successors:  2 [95.0%]  6 [5.0%]  (fallthru,loop_exit)

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  5 [5.0%]  (fallthru,loop_exit)
Successors:  7 [5.0%]  (fallthru) 11 [95.0%] 

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 25, maybe hot.
Predecessors:  6 [5.0%]  (fallthru)
Successors:  12 [100.0%] 

Basic block 8 prev 7, next 11, loop_depth 1, count 0, freq 4628, maybe hot.
Predecessors:  11 [95.0%] 
Successors:  12 [5.0%]  (loop_exit) 11 [95.0%]  (fallthru,dfs_back)

Basic block 11 prev 8, next 12, loop_depth 1, count 0, freq 4872, maybe hot.
Predecessors:  6 [95.0%]  8 [95.0%]  (fallthru,dfs_back)
Successors:  8 [95.0%]  12 [5.0%]  (fallthru,loop_exit)

Basic block 12 prev 11, next -2, loop_depth 0, count 0, freq 2306, maybe hot.
Predecessors:  11 [5.0%]  (fallthru,loop_exit) 2 [11.0%]  (loop_exit) 1 [100.0%]  8 [5.0%]  (loop_exit) 7 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)

(note 1 0 6 ("./strings.cc") 108)

;; Start of basic block 0, registers live: (nil)
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:108 (set (reg/v/f:DI 63 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 110)

(insn 9 8 10 0 ./strings.cc:110 (set (reg:QI 61 [ D.2569 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 10 9 11 0 ./strings.cc:110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2569 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 11 10 13 0 ./strings.cc:110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 88)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 6700 [0x1a2c])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 86 1 ./strings.cc:110 (set (reg/v/f:DI 63 [ s ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 86 14 87 1 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 87 86 76)

(note 76 87 17 NOTE_INSN_LOOP_BEG)

;; Start of basic block 2, registers live: (nil)
(code_label 17 76 18 2 145 "" [1 uses])

(note 18 17 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 19 18 20 2 ("./strings.cc") 111)

(insn 20 19 21 2 ./strings.cc:111 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(insn 21 20 22 2 ./strings.cc:111 (set (reg:QI 61 [ D.2569 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 22 21 23 2 ./strings.cc:111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 61 [ D.2569 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 23 22 88 2 ./strings.cc:111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 58)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 1100 [0x44c])
        (nil)))
;; End of basic block 2, registers live:
 (nil)

;; Start of basic block 5, registers live: (nil)
(code_label 88 23 82 5 150 "" [1 uses])

(note 82 88 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 82 27 5 ./strings.cc:111 (set (reg:SI 64 [ D.2569 ])
        (sign_extend:SI (reg:QI 61 [ D.2569 ]))) 121 {extendqisi2} (nil)
    (nil))

(insn 27 26 28 5 ./strings.cc:111 (set (reg:SI 5 di [ D.2569 ])
        (reg:SI 64 [ D.2569 ])) 40 {*movsi_1} (nil)
    (nil))

(call_insn/u 28 27 29 5 ./strings.cc:111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2569 ]))
            (nil))))

(insn 29 28 30 5 ./strings.cc:111 (set (reg:SI 60 [ D.2575 ])
        (reg:SI 0 ax)) 40 {*movsi_1} (nil)
    (nil))

(insn 30 29 31 5 ./strings.cc:111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.2575 ])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (nil)
    (nil))

(jump_insn 31 30 77 5 ./strings.cc:111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 5, registers live:
 (nil)

(note 77 31 34 NOTE_INSN_LOOP_END)

(note 34 77 33 ("./strings.cc") 114)

;; Start of basic block 6, registers live: (nil)
(note 33 34 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 6 ./strings.cc:114 (set (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(insn 36 35 37 6 ./strings.cc:114 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (nil))

(note 37 36 38 6 ("./strings.cc") 115)

(insn 38 37 39 6 ./strings.cc:115 (set (reg:QI 58 [ temp.240 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 39 38 40 6 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.240 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 40 39 78 6 ./strings.cc:115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 94)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 6, registers live:
 (nil)

(note 78 40 91 NOTE_INSN_LOOP_BEG)

;; Start of basic block 7, registers live: (nil)
(note 91 78 92 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 92 91 93 7 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))
;; End of basic block 7, registers live:
 (nil)

(barrier 93 92 44)

;; Start of basic block 8, registers live: (nil)
(code_label 44 93 45 8 148 "" [1 uses])

(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 8 ./strings.cc:115 (parallel [
            (set (reg/v/f:DI 63 [ s ])
                (plus:DI (reg/v/f:DI 63 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 47 46 48 8 ./strings.cc:115 (set (reg:QI 58 [ temp.240 ])
        (mem:QI (reg/v/f:DI 63 [ s ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 48 47 49 8 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 58 [ temp.240 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 49 48 94 8 ./strings.cc:115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 58)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 8, registers live:
 (nil)

;; Start of basic block 11, registers live: (nil)
(code_label 94 49 83 11 151 "" [1 uses])

(note 83 94 52 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 52 83 53 11 ./strings.cc:115 (set (reg:SI 65 [ temp.240 ])
        (sign_extend:SI (reg:QI 58 [ temp.240 ]))) -1 (nil)
    (nil))

(insn 53 52 54 11 ./strings.cc:115 (set (reg:SI 5 di [ temp.240 ])
        (reg:SI 65 [ temp.240 ])) -1 (nil)
    (nil))

(call_insn/u 54 53 55 11 ./strings.cc:115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ temp.240 ]))
            (nil))))

(insn 55 54 56 11 ./strings.cc:115 (set (reg:SI 59 [ D.2579 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 56 55 57 11 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.2579 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 57 56 79 11 ./strings.cc:115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 11, registers live:
 (nil)

(note 79 57 58 NOTE_INSN_LOOP_END)

;; Start of basic block 12, registers live: (nil)
(code_label 58 79 59 12 144 "" [4 uses])

(note 59 58 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 63 59 64 12 NOTE_INSN_FUNCTION_END)

(note 64 63 66 12 ("./strings.cc") 118)

(insn 66 64 72 12 ./strings.cc:118 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 63 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 72 66 0 12 ./strings.cc:118 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 12, registers live:
 (nil)


;; Function char* strlopspace(char*) (_Z11strlopspacePc)

;; 2 loops found
;;
;; Loop 0:
;;  header -1, latch -2
;;  depth 0, level 2, outer -1
;;  nodes: -1 0 1 2 3 6 4 5 -2
;;
;; Loop 1:
;;  header 4, latch 6
;;  depth 1, level 1, outer 0
;;  nodes: 4 6 3
;; 0 succs { 2 1 }
;; 1 succs { 5 }
;; 2 succs { 4 }
;; 3 succs { 5 6 }
;; 6 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { -2 }
Reordered sequence:
 0 bb 0  [1026]
 1 bb 1  [51]
 2 bb 2  [975]
 3 bb 3  [9500]
 4 compensation  [9025]
 5 bb 4  [10000]
 6 bb 5  [1026]


try_optimize_cfg iteration 1

Forwarding edge 3->4 to 5 failed.
Deleting fallthru block 4.


try_optimize_cfg iteration 2

67 registers.

Register 58 used 3 times across 0 insns; set 3 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 59 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 60 used 2 times across 0 insns; set 2 times; dies in 0 places; 1 bytes; NO_REGS or none.

Register 62 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; NO_REGS or none; pointer.

Register 63 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

6 basic blocks, 10 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [95.0%]  1 [5.0%]  (fallthru)

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 51, maybe hot.
Predecessors:  0 [5.0%]  (fallthru)
Successors:  6 [100.0%] 

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  0 [95.0%] 
Successors:  5 [100.0%] 

Basic block 3 prev 2, next 5, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  5 [95.0%] 
Successors:  6 [5.0%]  (loop_exit) 5 [95.0%]  (fallthru,dfs_back)

Basic block 5 prev 3, next 6, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  3 [95.0%]  (fallthru,dfs_back) 2 [100.0%] 
Successors:  3 [95.0%]  6 [5.0%]  (fallthru,loop_exit)

Basic block 6 prev 5, next -2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  5 [5.0%]  (fallthru,loop_exit) 3 [5.0%]  (loop_exit) 1 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)

(note 1 0 6 ("./strings.cc") 93)

;; Start of basic block 0, registers live: (nil)
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:93 (set (reg/v/f:DI 62 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 96)

(insn 9 8 10 0 ./strings.cc:96 (set (reg:QI 60 [ D.2562 ])
        (mem:QI (reg/v/f:DI 62 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 10 9 11 0 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2562 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 11 10 13 0 ./strings.cc:96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 63 1 ./strings.cc:96 (set (reg/v/f:DI 58 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 63 14 64 1 (set (pc)
        (label_ref 38)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 64 63 17)

;; Start of basic block 2, registers live: (nil)
(code_label 17 64 18 2 155 "" [1 uses])

(note 18 17 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 58 2 ./strings.cc:96 (set (reg/v/f:DI 58 [ last ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 58 19 65 2 NOTE_INSN_LOOP_BEG)

(jump_insn 65 58 66 2 (set (pc)
        (label_ref 30)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(barrier 66 65 22)

;; Start of basic block 3, registers live: (nil)
(code_label 22 66 23 3 159 "" [1 uses])

(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 24 23 25 3 ("./strings.cc") 97)

(insn 25 24 26 3 ./strings.cc:97 (parallel [
            (set (reg/v/f:DI 58 [ last ])
                (plus:DI (reg/v/f:DI 58 [ last ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 26 25 27 3 ("./strings.cc") 96)

(insn 27 26 28 3 ./strings.cc:96 (set (reg:QI 60 [ D.2562 ])
        (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8])) -1 (nil)
    (nil))

(insn 28 27 29 3 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 60 [ D.2562 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 29 28 30 3 ./strings.cc:96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 38)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

;; Start of basic block 5, registers live: (nil)
(code_label 30 29 31 5 158 "" [1 uses])

(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 5 ./strings.cc:96 (set (reg:SI 63 [ D.2562 ])
        (sign_extend:SI (reg:QI 60 [ D.2562 ]))) -1 (nil)
    (nil))

(insn 33 32 34 5 ./strings.cc:96 (set (reg:SI 5 di [ D.2562 ])
        (reg:SI 63 [ D.2562 ])) -1 (nil)
    (nil))

(call_insn/u 34 33 35 5 ./strings.cc:96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2562 ]))
            (nil))))

(insn 35 34 36 5 ./strings.cc:96 (set (reg:SI 59 [ D.2564 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 36 35 37 5 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 59 [ D.2564 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 37 36 59 5 ./strings.cc:96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 5, registers live:
 (nil)

(note 59 37 38 NOTE_INSN_LOOP_END)

;; Start of basic block 6, registers live: (nil)
(code_label 38 59 39 6 157 "" [2 uses])

(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 40 39 41 6 ("./strings.cc") 98)

(insn 41 40 45 6 ./strings.cc:98 (set (mem:QI (reg/v/f:DI 58 [ last ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 45 41 46 6 NOTE_INSN_FUNCTION_END)

(note 46 45 48 6 ("./strings.cc") 100)

(insn 48 46 54 6 ./strings.cc:100 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 62 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 54 48 0 6 ./strings.cc:100 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 6, registers live:
 (nil)


;; Function char* strcasepre(const char*, const char*) (_Z10strcaseprePKcS0_)

;; 2 loops found
;;
;; Loop 0:
;;  header -1, latch -2
;;  depth 0, level 2, outer -1
;;  nodes: -1 0 1 2 3 4 8 6 7 -2
;;
;; Loop 1:
;;  header 3, latch 8
;;  depth 1, level 1, outer 0
;;  nodes: 3 8 4
;; 0 succs { 2 1 }
;; 1 succs { 7 }
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 1 8 }
;; 8 succs { 3 }
;; 6 succs { 7 }
;; 7 succs { -2 }
Reordered sequence:
 0 bb 0  [1026]
 1 bb 1  [526]
 2 bb 2  [975]
 3 bb 3  [10000]
 4 bb 4  [9500]
 5 compensation  [9025]
 6 bb 6  [500]
 7 bb 7  [1026]


try_optimize_cfg iteration 1

Forwarding edge 4->5 to 3 failed.
71 registers.

Register 58 used 2 times across 0 insns; set 2 times; dies in 0 places; NO_REGS or none; pointer.

Register 59 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 60 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 61 used 2 times across 0 insns; set 2 times; dies in 0 places; NO_REGS or none; pointer.

Register 62 used 2 times across 0 insns; set 2 times; dies in 0 places; 1 bytes; NO_REGS or none.

Register 64 used 2 times across 0 insns; set 2 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 65 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; NO_REGS or none; pointer.

Register 66 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 67 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

8 basic blocks, 12 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [95.0%]  1 [5.0%]  (fallthru)

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 526, maybe hot.
Predecessors:  0 [5.0%]  (fallthru) 4 [5.0%]  (loop_exit)
Successors:  7 [100.0%] 

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  0 [95.0%] 
Successors:  3 [100.0%]  (fallthru)

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 5 [100.0%] 
Successors:  6 [5.0%]  (loop_exit) 4 [95.0%]  (fallthru)

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  3 [95.0%]  (fallthru)
Successors:  1 [5.0%]  (loop_exit) 5 [95.0%]  (fallthru)

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 9025, maybe hot.
Predecessors:  4 [95.0%]  (fallthru)
Successors:  3 [100.0%] 

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  3 [5.0%]  (loop_exit)
Successors:  7 [100.0%]  (fallthru)

Basic block 7 prev 6, next -2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 1 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)

(note 1 0 7 ("./strings.cc") 56)

;; Start of basic block 0, registers live: (nil)
(note 7 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 0 ./strings.cc:56 (set (reg/v/f:DI 64 [ str ])
        (reg:DI 5 di [ str ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 4 3 5 0 ./strings.cc:56 (set (reg/v/f:DI 65 [ pre ])
        (reg:DI 4 si [ pre ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 5 4 10 0 NOTE_INSN_FUNCTION_BEG)

(note 10 5 11 0 ("./strings.cc") 60)

(insn 11 10 12 0 ./strings.cc:60 (set (reg:QI 62 [ D.2522 ])
        (mem:QI (reg/v/f:DI 65 [ pre ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 12 11 13 0 ./strings.cc:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 62 [ D.2522 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 13 12 14 0 ./strings.cc:60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(code_label 14 13 15 1 164 "" [1 uses])

(note 15 14 16 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 75 1 ./strings.cc:60 (set (reg/f:DI 61 [ D.2523 ])
        (reg/v/f:DI 64 [ str ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 75 16 76 1 (set (pc)
        (label_ref 50)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 76 75 19)

;; Start of basic block 2, registers live: (nil)
(code_label 19 76 20 2 163 "" [1 uses])

(note 20 19 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 68 2 ./strings.cc:60 (set (reg/f:DI 58 [ ivtmp.302 ])
        (reg/v/f:DI 65 [ pre ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(note 68 21 22 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: (nil)
(code_label 22 68 23 3 166 "" [1 uses])

(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 24 23 25 3 ("./strings.cc") 61)

(insn 25 24 26 3 ./strings.cc:61 (set (reg:SI 66 [ D.2522 ])
        (sign_extend:SI (reg:QI 62 [ D.2522 ]))) -1 (nil)
    (nil))

(insn 26 25 27 3 ./strings.cc:61 (set (reg:SI 5 di [ D.2522 ])
        (reg:SI 66 [ D.2522 ])) -1 (nil)
    (nil))

(call_insn/u 27 26 28 3 ./strings.cc:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2522 ]))
            (nil))))

(insn 28 27 29 3 ./strings.cc:61 (set (reg:SI 60 [ D.2525 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 29 28 30 3 ./strings.cc:61 (set (reg:SI 67)
        (sign_extend:SI (mem:QI (reg/v/f:DI 64 [ str ]) [0 S1 A8]))) -1 (nil)
    (nil))

(insn 30 29 31 3 ./strings.cc:61 (set (reg:SI 5 di)
        (reg:SI 67)) -1 (nil)
    (nil))

(call_insn/u 31 30 32 3 ./strings.cc:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn 32 31 33 3 ./strings.cc:61 (set (reg:SI 59 [ D.2528 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 33 32 34 3 ./strings.cc:61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.2525 ])
            (reg:SI 59 [ D.2528 ]))) -1 (nil)
    (nil))

(jump_insn 34 33 37 3 ./strings.cc:61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 47)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

(note 37 34 36 ("./strings.cc") 62)

;; Start of basic block 4, registers live: (nil)
(note 36 37 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 38 36 39 4 ./strings.cc:62 (parallel [
            (set (reg/v/f:DI 64 [ str ])
                (plus:DI (reg/v/f:DI 64 [ str ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(note 39 38 40 4 ("./strings.cc") 60)

(insn 40 39 41 4 ./strings.cc:60 (set (reg:QI 62 [ D.2522 ])
        (mem:QI (plus:DI (reg/f:DI 58 [ ivtmp.302 ])
                (const_int 1 [0x1])) [0 S1 A8])) -1 (nil)
    (nil))

(insn 41 40 42 4 ./strings.cc:60 (parallel [
            (set (reg/f:DI 58 [ ivtmp.302 ])
                (plus:DI (reg/f:DI 58 [ ivtmp.302 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 42 41 43 4 ./strings.cc:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 62 [ D.2522 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 43 42 74 4 ./strings.cc:60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 14)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 4, registers live:
 (nil)

;; Start of basic block 5, registers live: (nil)
(note 74 43 77 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 77 74 78 5 (set (pc)
        (label_ref 22)) -1 (nil)
    (nil))
;; End of basic block 5, registers live:
 (nil)

(barrier 78 77 69)

(note 69 78 47 NOTE_INSN_LOOP_END)

;; Start of basic block 6, registers live: (nil)
(code_label 47 69 48 6 167 "" [1 uses])

(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 6 ./strings.cc:60 (set (reg/f:DI 61 [ D.2523 ])
        (const_int 0 [0x0])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 6, registers live:
 (nil)

;; Start of basic block 7, registers live: (nil)
(code_label 50 49 51 7 165 "" [1 uses])

(note 51 50 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 55 51 56 7 NOTE_INSN_FUNCTION_END)

(note 56 55 58 7 ("./strings.cc") 64)

(insn 58 56 64 7 ./strings.cc:64 (set (reg/i:DI 0 ax [ <result> ])
        (reg/f:DI 61 [ D.2523 ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 64 58 0 7 ./strings.cc:64 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 7, registers live:
 (nil)


;; Function char* strclean(char*) (_Z8strcleanPc)

;; 2 loops found
;;
;; Loop 0:
;;  header -1, latch -2
;;  depth 0, level 2, outer -1
;;  nodes: -1 0 1 2 3 4 5 6 7 9 8 -2
;;
;; Loop 1:
;;  header 3, latch 9
;;  depth 1, level 1, outer 0
;;  nodes: 3 9 7 5 6 4
;; 0 succs { 2 1 }
;; 1 succs { 8 }
;; 2 succs { 3 }
;; 3 succs { 6 4 }
;; 4 succs { 6 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 9 succs { 3 }
;; 8 succs { -2 }
Reordered sequence:
 0 bb 0  [1111]
 1 bb 1  [111]
 2 bb 2  [1000]
 3 bb 3  [10000]
 4 bb 4  [7000]
 5 bb 5  [3584]
 6 bb 6  [8208]
 7 bb 7  [10000]
 8 bb 9  [9000]
 9 bb 8  [1111]


try_optimize_cfg iteration 1

Simplifying condjump 55 around jump 86


try_optimize_cfg iteration 2

70 registers.

Register 58 used 2 times across 0 insns; set 2 times; dies in 0 places; NO_REGS or none; pointer.

Register 59 used 3 times across 0 insns; set 3 times; user var; dies in 0 places; NO_REGS or none; pointer.

Register 60 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 61 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 62 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 63 used 1 times across 0 insns; set 1 time; dies in 0 places; 4 bytes; NO_REGS or none.

Register 64 used 2 times across 0 insns; set 2 times; dies in 0 places; 1 bytes; NO_REGS or none.

Register 66 used 1 times across 0 insns; set 1 time; user var; dies in 0 places; NO_REGS or none; pointer.

9 basic blocks, 15 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [90.0%]  1 [10.0%]  (fallthru)

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  0 [10.0%]  (fallthru)
Successors:  9 [100.0%] 

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%] 
Successors:  3 [100.0%]  (fallthru)

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 7 [90.0%]  (dfs_back)
Successors:  6 [30.0%]  4 [70.0%]  (fallthru)

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 7000, maybe hot.
Predecessors:  3 [70.0%]  (fallthru)
Successors:  6 [48.8%]  5 [51.2%]  (fallthru)

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 3584, maybe hot.
Predecessors:  4 [51.2%]  (fallthru)
Successors:  7 [50.0%]  6 [50.0%]  (fallthru)

Basic block 6 prev 5, next 7, loop_depth 1, count 0, freq 8208, maybe hot.
Predecessors:  3 [30.0%]  4 [48.8%]  5 [50.0%]  (fallthru)
Successors:  7 [100.0%]  (fallthru)

Basic block 7 prev 6, next 9, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  5 [50.0%]  6 [100.0%]  (fallthru)
Successors:  3 [90.0%]  (dfs_back) 9 [10.0%]  (fallthru,loop_exit)

Basic block 9 prev 7, next -2, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  1 [100.0%]  7 [10.0%]  (fallthru,loop_exit)
Successors:  EXIT [100.0%]  (fallthru)

(note 1 0 6 ("./strings.cc") 29)

;; Start of basic block 0, registers live: (nil)
(note 6 1 3 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 0 ./strings.cc:29 (set (reg/v/f:DI 66 [ s ])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 0 ("./strings.cc") 33)

(insn 9 8 10 0 ./strings.cc:33 (set (reg:QI 64 [ D.2495 ])
        (mem:QI (reg/v/f:DI 66 [ s ]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn 10 9 11 0 ./strings.cc:33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.2495 ])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn 11 10 13 0 ./strings.cc:33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
        (nil)))
;; End of basic block 0, registers live:
 (nil)

;; Start of basic block 1, registers live: (nil)
(note 13 11 14 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 84 1 ./strings.cc:33 (set (reg/v/f:DI 59 [ p ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 84 14 85 1 (set (pc)
        (label_ref 56)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 (nil)

(barrier 85 84 17)

;; Start of basic block 2, registers live: (nil)
(code_label 17 85 18 2 172 "" [1 uses])

(note 18 17 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 2 ./strings.cc:33 (set (reg/f:DI 58 [ ivtmp.331 ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 20 19 76 2 ./strings.cc:33 (set (reg/v/f:DI 59 [ p ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

(note 76 20 21 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: (nil)
(code_label 21 76 22 3 175 "" [1 uses])

(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 23 22 24 3 ("./strings.cc") 34)

(insn 24 23 25 3 ./strings.cc:34 (set (reg:SI 63 [ D.2499 ])
        (sign_extend:SI (reg:QI 64 [ D.2495 ]))) -1 (nil)
    (nil))

(insn 25 24 26 3 ./strings.cc:34 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 63 [ D.2499 ])) -1 (nil)
    (nil))

(call_insn/u 26 25 27 3 ./strings.cc:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isalnum") [flags 0x41] <function_decl 0x2ad10a4adb00 isalnum>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn 27 26 28 3 ./strings.cc:34 (set (reg:SI 62 [ D.2500 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 28 27 29 3 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ D.2500 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 29 28 31 3 ./strings.cc:34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 3000 [0xbb8])
        (nil)))
;; End of basic block 3, registers live:
 (nil)

;; Start of basic block 4, registers live: (nil)
(note 31 29 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 4 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.2495 ])
            (const_int 45 [0x2d]))) -1 (nil)
    (nil))

(jump_insn 33 32 35 4 ./strings.cc:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 4880 [0x1310])
        (nil)))
;; End of basic block 4, registers live:
 (nil)

;; Start of basic block 5, registers live: (nil)
(note 35 33 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 5 ./strings.cc:34 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 63 [ D.2499 ])) -1 (nil)
    (nil))

(call_insn/u 37 36 38 5 ./strings.cc:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn 38 37 39 5 ./strings.cc:34 (set (reg:SI 61 [ D.2501 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 39 38 40 5 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.2501 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 40 39 41 5 ./strings.cc:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5, registers live:
 (nil)

;; Start of basic block 6, registers live: (nil)
(code_label 41 40 42 6 176 "" [2 uses])

(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 43 42 44 6 ("./strings.cc") 35)

(insn 44 43 45 6 ./strings.cc:35 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 63 [ D.2499 ])) -1 (nil)
    (nil))

(call_insn/u 45 44 46 6 ./strings.cc:35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn 46 45 47 6 ./strings.cc:35 (set (reg:SI 60 [ D.2502 ])
        (reg:SI 0 ax)) -1 (nil)
    (nil))

(insn 47 46 48 6 ./strings.cc:35 (set (mem:QI (reg/v/f:DI 59 [ p ]) [0 S1 A8])
        (subreg:QI (reg:SI 60 [ D.2502 ]) 0)) -1 (nil)
    (nil))

(insn 48 47 49 6 ./strings.cc:35 (parallel [
            (set (reg/v/f:DI 59 [ p ])
                (plus:DI (reg/v/f:DI 59 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))
;; End of basic block 6, registers live:
 (nil)

;; Start of basic block 7, registers live: (nil)
(code_label 49 48 50 7 179 "" [1 uses])

(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 51 50 52 7 ("./strings.cc") 33)

(insn 52 51 53 7 ./strings.cc:33 (set (reg:QI 64 [ D.2495 ])
        (mem:QI (plus:DI (reg/f:DI 58 [ ivtmp.331 ])
                (const_int 1 [0x1])) [0 S1 A8])) -1 (nil)
    (nil))

(insn 53 52 54 7 ./strings.cc:33 (parallel [
            (set (reg/f:DI 58 [ ivtmp.331 ])
                (plus:DI (reg/f:DI 58 [ ivtmp.331 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil)
    (nil))

(insn 54 53 55 7 ./strings.cc:33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 64 [ D.2495 ])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(jump_insn 55 54 77 7 ./strings.cc:33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 21)
            (pc))) 533 {*jcc_1} (nil)
    (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
        (nil)))
;; End of basic block 7, registers live:
 (nil)

(note 77 55 56 NOTE_INSN_LOOP_END)

;; Start of basic block 9, registers live: (nil)
(code_label 56 77 57 9 174 "" [1 uses])

(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 9 ("./strings.cc") 36)

(insn 59 58 63 9 ./strings.cc:36 (set (mem:QI (reg/v/f:DI 59 [ p ]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(note 63 59 64 9 NOTE_INSN_FUNCTION_END)

(note 64 63 66 9 ("./strings.cc") 38)

(insn 66 64 72 9 ./strings.cc:38 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 66 [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 72 66 0 9 ./strings.cc:38 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 9, registers live:
 (nil)

