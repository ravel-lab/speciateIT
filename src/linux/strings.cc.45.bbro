
;; Function char* strpre(const char*, const char*) (_Z6strprePKcS0_)



try_optimize_cfg iteration 1

Forwarding edge 4->5 to 1 failed.


try_optimize_cfg iteration 1

Fallthru edge 4->1 redirected to 1
Deleting block 5.


try_optimize_cfg iteration 2

STC - round 1
Getting bb 0
Basic block 0 was visited in trace 0
Block 3 can't be copied because its size = 4.
  Possible start of this round: 1 (key: -554)
Basic block 3 was visited in trace 0
  Possible start of next round: 6 (key: -526)
Basic block 4 was visited in trace 0
Basic block 2 was visited in trace 0
Block 3 can't be copied because its size = 4.
Rotating loop 3 - 2
Changing key for bb 6 from -526 to -1053126.
Getting bb 1
Basic block 1 was visited in trace 1
STC - round 2
Getting bb 6
Basic block 6 was visited in trace 2
STC - round 3
STC - round 4
Trace 1 (round 1):  0 [1080] 4 [10000] 2 [9500] 3 [10526]
Trace 2 (round 1):  1 [554]
Trace 3 (round 2):  6 [526]
Connection: 3 6
Final order:
0 4 2 3 6 1 

6 basic blocks, 10 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  1 [5.0%]  (fallthru,can_fallthru) 3 [95.0%]  (can_fallthru)
Registers live at start: 4 [si] 5 [di] 7 [sp]
Registers live at end: 0 [ax] 4 [si] 5 [di] 7 [sp]

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 554, maybe hot.
Predecessors:  4 [5.0%]  (fallthru,can_fallthru,loop_exit) 0 [5.0%]  (fallthru,can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 5 [di] 7 [sp]
Registers live at end: 0 [ax] 7 [sp]

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  4 [95.0%]  (can_fallthru)
Successors:  3 [100.0%]  (fallthru,dfs_back,can_fallthru)
Registers live at start: 0 [ax] 4 [si] 5 [di] 7 [sp]
Registers live at end: 0 [ax] 4 [si] 5 [di] 7 [sp]

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10526, maybe hot.
Predecessors:  2 [100.0%]  (fallthru,dfs_back,can_fallthru) 0 [95.0%]  (can_fallthru)
Successors:  6 [5.0%]  (can_fallthru,loop_exit) 4 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 4 [si] 5 [di] 7 [sp]
Registers live at end: 4 [si] 5 [di] 7 [sp]

Basic block 4 prev 3, next 6, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  3 [95.0%]  (fallthru,can_fallthru)
Successors:  1 [5.0%]  (fallthru,can_fallthru,loop_exit) 2 [95.0%]  (can_fallthru)
Registers live at start: 4 [si] 5 [di] 7 [sp]
Registers live at end: 0 [ax] 4 [si] 5 [di] 7 [sp]

Basic block 6 prev 4, next -2, loop_depth 0, count 0, freq 526, maybe hot.
Predecessors:  3 [5.0%]  (can_fallthru,loop_exit)
Successors:  EXIT [100.0%] 
Registers live at start: 7 [sp]
Registers live at end: 0 [ax] 7 [sp]

Emitting label for block 4
Reordered sequence:
 0 bb 0  [1080]
 1 compensation  [54]
 2 bb 4  [10000]
 3 bb 2  [9500]
 4 bb 3  [10526]
 5 bb 6  [526]
 6 bb 1  [554]


try_optimize_cfg iteration 1

Forwarding edge 0->1 to 6 failed.
Deleted label in block 3.
Deleted label in block 5.
(note:HI 1 0 12 ("./strings.cc") 43)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 7 [sp]
(note:HI 12 1 90 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note 90 12 10 0 NOTE_INSN_PROLOGUE_END)

(note:HI 10 90 15 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 15 10 16 0 ("./strings.cc") 47)

(insn:HI 16 15 17 0 ./strings.cc:47 (set (reg:QI 0 ax [orig:60 temp.36 ] [60])
        (mem:QI (reg/v/f:DI 4 si [orig:66 pre ] [66]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 9 (nil))
    (nil))

(insn:HI 17 16 18 0 ./strings.cc:47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 temp.36 ] [60])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 16 (nil))
    (nil))

(jump_insn:HI 18 17 104 0 ./strings.cc:47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 98)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 17 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 0, registers live:
 0 [ax] 4 [si] 5 [di] 7 [sp]

;; Start of basic block 1, registers live: 5 [di] 7 [sp]
(note 104 18 105 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn 105 104 106 1 (set (pc)
        (label_ref 29)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 5 [di] 7 [sp]

(barrier 106 105 107)

;; Start of basic block 2, registers live: 4 [si] 5 [di] 7 [sp]
(code_label 107 106 42 2 14 "" [1 uses])

(note:HI 42 107 43 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 43 42 44 2 ("./strings.cc") 49)

(insn:HI 44 43 45 2 ./strings.cc:49 (parallel [
            (set (reg/v/f:DI 5 di [orig:65 str ] [65])
                (plus:DI (reg/v/f:DI 5 di [orig:65 str ] [65])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 45 44 46 2 ("./strings.cc") 47)

(insn:HI 46 45 47 2 ./strings.cc:47 (set (reg:QI 0 ax [orig:63 D.2512 ] [63])
        (mem:QI (plus:DI (reg/f:DI 4 si [orig:61 ivtmp.33 ] [61])
                (const_int 1 [0x1])) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn:HI 47 46 48 2 ./strings.cc:47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:63 D.2512 ] [63])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 46 (nil))
    (nil))

(jump_insn:HI 48 47 73 2 ./strings.cc:47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 29)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 47 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 2, registers live:
 0 [ax] 4 [si] 5 [di] 7 [sp]

(note:HI 73 48 36 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: 0 [ax] 4 [si] 5 [di] 7 [sp]
(note:HI 36 73 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 37 36 98 3 ./strings.cc:47 (parallel [
            (set (reg/f:DI 4 si [orig:61 ivtmp.33 ] [61])
                (plus:DI (reg/f:DI 4 si [orig:61 ivtmp.33 ] [61])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 3, registers live:
 0 [ax] 4 [si] 5 [di] 7 [sp]

;; Start of basic block 4, registers live: 0 [ax] 4 [si] 5 [di] 7 [sp]
(code_label 98 37 96 4 12 "" [1 uses])

(note 96 98 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 38 96 39 4 ("./strings.cc") 48)

(insn:HI 39 38 40 4 ./strings.cc:48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:63 D.2512 ] [63])
            (mem:QI (reg/v/f:DI 5 di [orig:65 str ] [65]) [0 S1 A8]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:63 D.2512 ] [63])
        (nil)))

(jump_insn:HI 40 39 74 4 ./strings.cc:48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 107)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 39 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 4, registers live:
 4 [si] 5 [di] 7 [sp]

(note:HI 74 40 53 NOTE_INSN_LOOP_END)

;; Start of basic block 5, registers live: 7 [sp]
(note:HI 53 74 101 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 101 53 60 5 ./strings.cc:47 (parallel [
            (set (reg/f:DI 0 ax [orig:62 D.2513 ] [62])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 78 {*movdi_xor_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 60 101 61 5 NOTE_INSN_FUNCTION_END)

(note:HI 61 60 69 5 ("./strings.cc") 51)

(insn 69 61 95 5 ./strings.cc:51 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 63 (nil))
    (nil))

(note 95 69 94 5 ("./strings.cc") 51)

(jump_insn 94 95 93 5 ./strings.cc:51 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 5, registers live:
 0 [ax] 7 [sp]

(barrier 93 94 21)

(note:HI 21 93 29 ("./strings.cc") 48)

;; Start of basic block 6, registers live: 5 [di] 7 [sp]
(code_label:HI 29 21 30 6 3 "" [2 uses])

(note:HI 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note:HI 31 30 32 6 ("./strings.cc") 47)

(insn:HI 32 31 92 6 ./strings.cc:47 (set (reg/f:DI 0 ax [orig:62 D.2513 ] [62])
        (reg/v/f:DI 5 di [orig:65 str ] [65])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:65 str ] [65])
        (nil)))

(note 92 32 91 6 ("./strings.cc") 51)

(jump_insn 91 92 80 6 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 6, registers live:
 0 [ax] 7 [sp]

(barrier:HI 80 91 89)

(note 89 80 0 NOTE_INSN_DELETED)


;; Function char* strlop(char*, char) (_Z6strlopPcc)



try_optimize_cfg iteration 1

Forwarding edge 4->5 to 3 failed.


try_optimize_cfg iteration 1

Fallthru edge 4->3 redirected to 3
Deleting block 5.


try_optimize_cfg iteration 2

STC - round 1
Getting bb 0
Basic block 0 was visited in trace 0
  Possible start of next round: 6 (key: -105)
Basic block 1 was visited in trace 0
Basic block 2 was visited in trace 0
Block 3 can't be copied because its size = 11.
Basic block 3 was visited in trace 0
  Possible start of this round: 7 (key: -1080)
Basic block 4 was visited in trace 0
Block 3 can't be copied because its size = 11.
Rotating loop 3 - 4
Block 3 can't be copied because its size = 11.
Changing key for bb 7 from -1080 to -1051080.
Getting bb 7
Basic block 7 was visited in trace 1
STC - round 2
Getting bb 6
  Possible start point of next round: 6 (key: -105)
STC - round 3
Getting bb 6
Basic block 6 was visited in trace 2
STC - round 4
Trace 1 (round 1):  0 [1080] 1 [1026] 2 [975] 4 [9500] 3 [10000]
Trace 2 (round 1):  7 [1080]
Trace 3 (round 3):  6 [105]
Connection: 3 7
Block 7 can't be copied because its size = 10.
Final order:
0 1 2 4 3 7 6 

7 basic blocks, 12 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  6 [5.0%]  (can_fallthru) 1 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 4 [si] 5 [di] 7 [sp]
Registers live at end: 0 [ax] 2 [cx] 4 [si] 5 [di] 7 [sp]

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  0 [95.0%]  (fallthru,can_fallthru)
Successors:  6 [5.0%]  (can_fallthru) 2 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 2 [cx] 4 [si] 5 [di] 7 [sp]
Registers live at end: 2 [cx] 5 [di] 7 [sp]

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  1 [95.0%]  (fallthru,can_fallthru)
Successors:  3 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 2 [cx] 5 [di] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 5 [di] 7 [sp]

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru,can_fallthru) 4 [95.0%]  (fallthru,dfs_back,can_fallthru)
Successors:  7 [5.0%]  (can_fallthru,loop_exit) 4 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 2 [cx] 5 [di] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]

Basic block 4 prev 3, next 6, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  3 [95.0%]  (fallthru,can_fallthru)
Successors:  3 [95.0%]  (fallthru,dfs_back,can_fallthru) 7 [5.0%]  (can_fallthru,loop_exit)
Registers live at start: 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 5 [di] 7 [sp]

Basic block 6 prev 4, next 7, loop_depth 0, count 0, freq 105, maybe hot.
Predecessors:  0 [5.0%]  (can_fallthru) 1 [5.0%]  (can_fallthru)
Successors:  7 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 5 [di] 7 [sp]
Registers live at end: 1 [dx] 5 [di] 7 [sp]

Basic block 7 prev 6, next -2, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  3 [5.0%]  (can_fallthru,loop_exit) 4 [5.0%]  (can_fallthru,loop_exit) 6 [100.0%]  (fallthru,can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 1 [dx] 5 [di] 7 [sp]
Registers live at end: 0 [ax] 7 [sp]

Emitting label for block 4
Reordered sequence:
 0 bb 0  [1080]
 1 bb 1  [1026]
 2 bb 2  [975]
 3 bb 4  [9500]
 4 bb 3  [10000]
 5 bb 7  [1080]
 6 bb 6  [105]


try_optimize_cfg iteration 1

(note:HI 1 0 8 ("./strings.cc") 81)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 7 [sp]
(note:HI 8 1 69 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note 69 8 5 0 NOTE_INSN_PROLOGUE_END)

(insn:HI 5 69 6 0 ./strings.cc:81 (set (reg/v:QI 2 cx [orig:63 ch ] [63])
        (reg:QI 4 si [orig:64 ch ] [64])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(note:HI 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 10 6 11 0 ("./strings.cc") 84)

(insn:HI 11 10 12 0 ./strings.cc:84 (set (reg:QI 0 ax [orig:58 temp.67 ] [58])
        (mem:QI (reg/v/f:DI 5 di [orig:62 s ] [62]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn:HI 12 11 13 0 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:58 temp.67 ] [58])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 11 (nil))
    (nil))

(jump_insn:HI 13 12 15 0 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 0, registers live:
 0 [ax] 2 [cx] 4 [si] 5 [di] 7 [sp]

;; Start of basic block 1, registers live: 0 [ax] 2 [cx] 4 [si] 5 [di] 7 [sp]
(note:HI 15 13 16 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 16 15 17 1 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:58 temp.67 ] [58])
            (reg:QI 4 si [orig:63 ch ] [63]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:58 temp.67 ] [58])
        (expr_list:REG_DEAD (reg:QI 4 si [orig:63 ch ] [63])
            (nil))))

(jump_insn:HI 17 16 19 1 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 16 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 1, registers live:
 2 [cx] 5 [di] 7 [sp]

;; Start of basic block 2, registers live: 2 [cx] 5 [di] 7 [sp]
(note:HI 19 17 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 20 19 73 2 ./strings.cc:84 (set (reg/v/f:DI 1 dx [orig:59 last ] [59])
        (reg/v/f:DI 5 di [orig:62 s ] [62])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 73 20 74 2 (set (pc)
        (label_ref 21)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 1 [dx] 2 [cx] 5 [di] 7 [sp]

(barrier 74 73 75)

;; Start of basic block 3, registers live: 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]
(code_label 75 74 30 3 24 "" [1 uses])

(note:HI 30 75 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 31 30 32 3 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 D.2553 ] [60])
            (reg/v:QI 2 cx [orig:63 ch ] [63]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:60 D.2553 ] [60])
        (nil)))

(jump_insn:HI 32 31 60 3 ./strings.cc:84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 39)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 3, registers live:
 1 [dx] 2 [cx] 5 [di] 7 [sp]

(note:HI 60 32 59 NOTE_INSN_LOOP_END)

(note:HI 59 60 21 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: 1 [dx] 2 [cx] 5 [di] 7 [sp]
(code_label:HI 21 59 22 4 19 "" [1 uses])

(note:HI 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 23 22 24 4 ("./strings.cc") 85)

(insn:HI 24 23 25 4 ./strings.cc:85 (parallel [
            (set (reg/v/f:DI 1 dx [orig:59 last ] [59])
                (plus:DI (reg/v/f:DI 1 dx [orig:59 last ] [59])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 25 24 26 4 ("./strings.cc") 84)

(insn:HI 26 25 27 4 ./strings.cc:84 (set (reg:QI 0 ax [orig:60 D.2553 ] [60])
        (mem:QI (reg/v/f:DI 1 dx [orig:59 last ] [59]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 24 (nil))
    (nil))

(insn:HI 27 26 28 4 ./strings.cc:84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 D.2553 ] [60])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 26 (nil))
    (nil))

(jump_insn:HI 28 27 39 4 ./strings.cc:84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 75)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 4, registers live:
 0 [ax] 1 [dx] 2 [cx] 5 [di] 7 [sp]

;; Start of basic block 5, registers live: 1 [dx] 5 [di] 7 [sp]
(code_label:HI 39 28 40 5 20 "" [2 uses])

(note:HI 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 41 40 42 5 ("./strings.cc") 86)

(insn:HI 42 41 46 5 ./strings.cc:86 (set (mem:QI (reg/v/f:DI 1 dx [orig:59 last ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:59 last ] [59])
        (nil)))

(note:HI 46 42 47 5 NOTE_INSN_FUNCTION_END)

(note:HI 47 46 49 5 ("./strings.cc") 88)

(insn:HI 49 47 55 5 ./strings.cc:88 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 5 di [orig:62 s ] [62])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:62 s ] [62])
        (nil)))

(insn 55 49 70 5 ./strings.cc:88 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 49 (nil))
    (nil))

(note 70 55 71 5 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 71 70 72 5 ./strings.cc:88 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 5, registers live:
 0 [ax] 7 [sp]

(barrier 72 71 36)

;; Start of basic block 6, registers live: 5 [di] 7 [sp]
(code_label:HI 36 72 37 6 16 "" [2 uses])

(note:HI 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 38 37 76 6 ./strings.cc:84 (set (reg/v/f:DI 1 dx [orig:59 last ] [59])
        (reg/v/f:DI 5 di [orig:62 s ] [62])) 81 {*movdi_1_rex64} (nil)
    (nil))

(jump_insn 76 38 77 6 (set (pc)
        (label_ref 39)) -1 (nil)
    (nil))
;; End of basic block 6, registers live:
 1 [dx] 5 [di] 7 [sp]

(barrier 77 76 68)

(note 68 77 0 NOTE_INSN_DELETED)


;; Function char* strsplit(char*, char) (_Z8strsplitPcc)



try_optimize_cfg iteration 1



try_optimize_cfg iteration 1

Removing jump 103.


try_optimize_cfg iteration 2

STC - round 1
Getting bb 0
Basic block 0 was visited in trace 0
  Possible start of next round: 1 (key: -900)
Basic block 2 was visited in trace 0
Block 3 can't be copied because its size = 11.
  Possible start of next round: 5 (key: -591)
Basic block 3 was visited in trace 0
  Possible start of this round: 10 (key: -2727)
Basic block 4 was visited in trace 0
Block 3 can't be copied because its size = 11.
Rotating loop 3 - 4
Changing key for bb 10 from -2727 to -1126327.
Getting bb 10
Basic block 10 was visited in trace 1
STC - round 2
Getting bb 1
Basic block 1 was visited in trace 2
Getting bb 5
Basic block 5 was visited in trace 3
  Possible start of next round: 6 (key: -396)
Changing key for bb 6 from -396 to -1039996.
STC - round 3
Getting bb 6
Basic block 6 was visited in trace 4
Basic block 7 was visited in trace 4
Block 8 can't be copied because its size = 11.
Basic block 8 was visited in trace 4
Basic block 9 was visited in trace 4
Block 8 can't be copied because its size = 11.
Rotating loop 8 - 9
STC - round 4
Trace 1 (round 1):  0 [2727] 2 [1827] 4 [10000] 3 [11236]
Trace 2 (round 1):  10 [2727]
Trace 3 (round 2):  1 [900]
Trace 4 (round 2):  5 [591]
Trace 5 (round 3):  6 [396] 7 [376] 9 [3484] 8 [3668]
Connection: 3 10
Connection: 1 10 
Fallthru edge 1->11 redirected to 11
Duplicated bb 10 (created bb 11)
Connection: 5 6
Block 10 can't be copied because its size = 7.
Final order:
0 2 4 3 10 1 11 5 6 7 9 8 

12 basic blocks, 22 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 2727, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [67.0%]  (can_fallthru) 1 [33.0%]  (fallthru,can_fallthru)
Registers live at start: 4 [si] 5 [di] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  0 [33.0%]  (fallthru,can_fallthru)
Successors:  11 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 7 [sp]
Registers live at end: 5 [di] 7 [sp]

Basic block 2 prev 1, next 3, loop_depth 0, count 0, freq 1827, maybe hot.
Predecessors:  0 [67.0%]  (can_fallthru)
Successors:  5 [5.0%]  (can_fallthru) 3 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
Registers live at end: 1 [dx] 5 [di] 7 [sp]

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 11236, maybe hot.
Predecessors:  4 [95.0%]  (dfs_back,can_fallthru) 2 [95.0%]  (fallthru,can_fallthru)
Successors:  10 [11.0%]  (can_fallthru,loop_exit) 4 [89.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 5 [di] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 5 [di] 7 [sp]

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  3 [89.0%]  (fallthru,can_fallthru)
Successors:  3 [95.0%]  (dfs_back,can_fallthru) 5 [5.0%]  (fallthru,can_fallthru,loop_exit)
Registers live at start: 0 [ax] 1 [dx] 5 [di] 7 [sp]
Registers live at end: 1 [dx] 5 [di] 7 [sp]

Basic block 5 prev 4, next 6, loop_depth 0, count 0, freq 591, maybe hot.
Predecessors:  2 [5.0%]  (can_fallthru) 4 [5.0%]  (fallthru,can_fallthru,loop_exit)
Successors:  10 [33.0%]  (can_fallthru) 6 [67.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 5 [di] 7 [sp]
Registers live at end: 1 [dx] 5 [di] 7 [sp]

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 396, maybe hot.
Predecessors:  5 [67.0%]  (fallthru,can_fallthru)
Successors:  10 [5.0%]  (can_fallthru) 7 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 5 [di] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 5 [di] 7 [sp]

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 376, maybe hot.
Predecessors:  6 [95.0%]  (fallthru,can_fallthru)
Successors:  10 [5.0%]  (can_fallthru) 8 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 2 [cx] 5 [di] 7 [sp]
Registers live at end: 2 [cx] 5 [di] 7 [sp]

Basic block 8 prev 7, next 9, loop_depth 1, count 0, freq 3668, maybe hot.
Predecessors:  7 [95.0%]  (fallthru,can_fallthru) 9 [95.0%]  (dfs_back,can_fallthru)
Successors:  10 [5.0%]  (can_fallthru,loop_exit) 9 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 2 [cx] 5 [di] 7 [sp]
Registers live at end: 0 [ax] 2 [cx] 5 [di] 7 [sp]

Basic block 9 prev 8, next 10, loop_depth 1, count 0, freq 3484, maybe hot.
Predecessors:  8 [95.0%]  (fallthru,can_fallthru)
Successors:  8 [95.0%]  (dfs_back,can_fallthru) 10 [5.0%]  (fallthru,can_fallthru,loop_exit)
Registers live at start: 0 [ax] 2 [cx] 5 [di] 7 [sp]
Registers live at end: 2 [cx] 5 [di] 7 [sp]

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 1827, maybe hot.
Predecessors:  9 [5.0%]  (fallthru,can_fallthru,loop_exit) 8 [5.0%]  (can_fallthru,loop_exit) 3 [11.0%]  (can_fallthru,loop_exit) 5 [33.0%]  (can_fallthru) 6 [5.0%]  (can_fallthru) 7 [5.0%]  (can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 5 [di] 7 [sp]
Registers live at end: 0 [ax] 7 [sp]

Basic block 11 prev 10, next -2, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  1 [100.0%]  (fallthru,can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 5 [di] 7 [sp]
Registers live at end: 0 [ax] 7 [sp]

Emitting label for block 1
Emitting label for block 4
Emitting label for block 9
Reordered sequence:
 0 bb 0  [2727]
 1 bb 2  [1827]
 2 compensation  [91]
 3 bb 4  [10000]
 4 bb 3  [11236]
 5 bb 10  [1827]
 6 bb 1  [900]
 7 duplicate of 10  [900]
 8 bb 5  [591]
 9 bb 6  [396]
 10 bb 7  [376]
 11 compensation  [19]
 12 bb 9  [3484]
 13 bb 8  [3668]
 14 compensation  [183]


try_optimize_cfg iteration 1

Deleted label in block 1.
Forwarding edge 1->2 to 8 failed.
Merged 6 and 7 without moving.
Forwarding edge 10->11 to 5 failed.
Forwarding edge 13->14 to 5 failed.


try_optimize_cfg iteration 2

Forwarding edge 1->2 to 8 failed.
Forwarding edge 10->11 to 5 failed.
Forwarding edge 13->14 to 5 failed.
(note:HI 1 0 8 ("./strings.cc") 126)

;; Start of basic block 0, registers live: 4 [si] 5 [di] 7 [sp]
(note:HI 8 1 115 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note 115 8 5 0 NOTE_INSN_PROLOGUE_END)

(insn:HI 5 115 6 0 ./strings.cc:126 (set (reg/v:QI 1 dx [orig:64 ch ] [64])
        (reg:QI 4 si [orig:65 ch ] [65])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(note:HI 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 10 6 11 0 ("./strings.cc") 128)

(insn:HI 11 10 12 0 ./strings.cc:128 (set (reg:QI 0 ax [orig:61 D.2584 ] [61])
        (mem:QI (reg/v/f:DI 5 di [orig:63 s ] [63]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn:HI 12 11 13 0 ./strings.cc:128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:61 D.2584 ] [61])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 11 (nil))
    (nil))

(jump_insn:HI 13 12 20 0 ./strings.cc:128 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 131)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
            (nil))))
;; End of basic block 0, registers live:
 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]

;; Start of basic block 1, registers live: 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp]
(note:HI 20 13 21 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(note:HI 21 20 22 1 ("./strings.cc") 129)

(insn:HI 22 21 23 1 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:61 D.2584 ] [61])
            (reg:QI 4 si [orig:64 ch ] [64]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:61 D.2584 ] [61])
        (expr_list:REG_DEAD (reg:QI 4 si [orig:64 ch ] [64])
            (nil))))

(jump_insn:HI 23 22 132 1 ./strings.cc:129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 33)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 22 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 1, registers live:
 1 [dx] 5 [di] 7 [sp]

;; Start of basic block 2, registers live: 1 [dx] 5 [di] 7 [sp]
(note 132 23 133 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(jump_insn 133 132 134 2 (set (pc)
        (label_ref 43)) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 1 [dx] 5 [di] 7 [sp]

(barrier 134 133 135)

;; Start of basic block 3, registers live: 0 [ax] 1 [dx] 5 [di] 7 [sp]
(code_label 135 134 97 3 42 "" [1 uses])

(note:HI 97 135 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 41 97 42 3 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 1 dx [orig:64 ch ] [64])
            (reg:QI 0 ax [orig:59 temp.105 ] [59]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:59 temp.105 ] [59])
        (nil)))

(jump_insn:HI 42 41 90 3 ./strings.cc:129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 43)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 41 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 3, registers live:
 1 [dx] 5 [di] 7 [sp]

(note:HI 90 42 89 NOTE_INSN_LOOP_END)

(note:HI 89 90 33 NOTE_INSN_LOOP_BEG)

;; Start of basic block 4, registers live: 1 [dx] 5 [di] 7 [sp]
(code_label:HI 33 89 34 4 32 "" [1 uses])

(note:HI 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 35 34 36 4 ./strings.cc:129 (parallel [
            (set (reg/v/f:DI 5 di [orig:63 s ] [63])
                (plus:DI (reg/v/f:DI 5 di [orig:63 s ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 36 35 37 4 ./strings.cc:129 (set (reg:QI 0 ax [orig:59 temp.105 ] [59])
        (mem:QI (reg/v/f:DI 5 di [orig:63 s ] [63]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 35 (nil))
    (nil))

(insn:HI 37 36 38 4 ./strings.cc:129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:59 temp.105 ] [59])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 36 (nil))
    (nil))

(jump_insn:HI 38 37 71 4 ./strings.cc:129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 135)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 37 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
            (nil))))
;; End of basic block 4, registers live:
 0 [ax] 1 [dx] 5 [di] 7 [sp]

;; Start of basic block 5, registers live: 5 [di] 7 [sp]
(code_label:HI 71 38 72 5 28 "" [5 uses])

(note:HI 72 71 76 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 76 72 77 5 NOTE_INSN_FUNCTION_END)

(note:HI 77 76 79 5 ("./strings.cc") 136)

(insn:HI 79 77 85 5 ./strings.cc:136 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 5 di [orig:63 s ] [63])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:63 s ] [63])
        (nil)))

(insn 85 79 116 5 ./strings.cc:136 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 79 (nil))
    (nil))

(note 116 85 117 5 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 117 116 118 5 ./strings.cc:136 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 5, registers live:
 0 [ax] 7 [sp]

(barrier 118 117 131)

;; Start of basic block 6, registers live: 7 [sp]
(code_label 131 118 15 6 41 "" [1 uses])

(note:HI 15 131 122 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 122 15 124 6 ./strings.cc:128 (parallel [
            (set (reg/v/f:DI 5 di [orig:63 s ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 78 {*movdi_xor_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 124 122 125 6 ("./strings.cc") 136)

(insn 125 124 126 6 ./strings.cc:136 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 5 di [orig:63 s ] [63])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:63 s ] [63])
        (nil)))

(insn 126 125 127 6 ./strings.cc:136 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))

(jump_insn 127 126 130 6 ./strings.cc:136 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 6, registers live:
 0 [ax] 7 [sp]

(barrier 130 127 43)

;; Start of basic block 8, registers live: 1 [dx] 5 [di] 7 [sp]
(code_label:HI 43 130 44 8 29 "" [2 uses])

(note:HI 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note:HI 45 44 46 8 ("./strings.cc") 130)

(insn:HI 46 45 47 8 ./strings.cc:130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 1 dx [orig:64 ch ] [64])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (nil)
    (nil))

(jump_insn:HI 47 46 50 8 ./strings.cc:130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
            (nil))))
;; End of basic block 8, registers live:
 1 [dx] 5 [di] 7 [sp]

(note:HI 50 47 49 ("./strings.cc") 132)

;; Start of basic block 9, registers live: 1 [dx] 5 [di] 7 [sp]
(note:HI 49 50 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 51 49 52 9 ./strings.cc:132 (set (mem:QI (reg/v/f:DI 5 di [orig:63 s ] [63]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(insn:HI 52 51 53 9 ./strings.cc:132 (parallel [
            (set (reg/v/f:DI 5 di [orig:63 s ] [63])
                (plus:DI (reg/v/f:DI 5 di [orig:63 s ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 53 52 54 9 ("./strings.cc") 133)

(insn:HI 54 53 55 9 ./strings.cc:133 (set (reg:QI 2 cx [orig:58 temp.106 ] [58])
        (mem:QI (reg/v/f:DI 5 di [orig:63 s ] [63]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 52 (nil))
    (nil))

(insn:HI 55 54 56 9 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 2 cx [orig:58 temp.106 ] [58])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 54 (nil))
    (nil))

(jump_insn:HI 56 55 58 9 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 55 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 9, registers live:
 1 [dx] 2 [cx] 5 [di] 7 [sp]

;; Start of basic block 10, registers live: 1 [dx] 2 [cx] 5 [di] 7 [sp]
(note:HI 58 56 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 59 58 60 10 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 2 cx [orig:58 temp.106 ] [58])
            (reg/v:QI 1 dx [orig:64 ch ] [64]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg/v:QI 1 dx [orig:64 ch ] [64])
        (nil)))

(jump_insn:HI 60 59 136 10 ./strings.cc:133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 99)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 59 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 10, registers live:
 2 [cx] 5 [di] 7 [sp]

;; Start of basic block 11, registers live: 5 [di] 7 [sp]
(note 136 60 137 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(jump_insn 137 136 138 11 (set (pc)
        (label_ref 71)) -1 (nil)
    (nil))
;; End of basic block 11, registers live:
 5 [di] 7 [sp]

(barrier 138 137 139)

;; Start of basic block 12, registers live: 0 [ax] 2 [cx] 5 [di] 7 [sp]
(code_label 139 138 68 12 43 "" [1 uses])

(note:HI 68 139 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 69 68 70 12 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 temp.104 ] [60])
            (reg:QI 2 cx [orig:58 temp.106 ] [58]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:60 temp.104 ] [60])
        (nil)))

(jump_insn:HI 70 69 92 12 ./strings.cc:133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 71)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 69 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 12, registers live:
 2 [cx] 5 [di] 7 [sp]

(note:HI 92 70 91 NOTE_INSN_LOOP_END)

(note:HI 91 92 99 NOTE_INSN_LOOP_BEG)

;; Start of basic block 13, registers live: 2 [cx] 5 [di] 7 [sp]
(code_label:HI 99 91 98 13 38 "" [1 uses])

(note:HI 98 99 63 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 63 98 64 13 ./strings.cc:133 (parallel [
            (set (reg/v/f:DI 5 di [orig:63 s ] [63])
                (plus:DI (reg/v/f:DI 5 di [orig:63 s ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 64 63 65 13 ./strings.cc:133 (set (reg:QI 0 ax [orig:60 temp.104 ] [60])
        (mem:QI (reg/v/f:DI 5 di [orig:63 s ] [63]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 63 (nil))
    (nil))

(insn:HI 65 64 66 13 ./strings.cc:133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 temp.104 ] [60])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 64 (nil))
    (nil))

(jump_insn:HI 66 65 140 13 ./strings.cc:133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 139)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 65 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 13, registers live:
 0 [ax] 2 [cx] 5 [di] 7 [sp]

;; Start of basic block 14, registers live: 5 [di] 7 [sp]
(note 140 66 141 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(jump_insn 141 140 142 14 (set (pc)
        (label_ref 71)) -1 (nil)
    (nil))
;; End of basic block 14, registers live:
 5 [di] 7 [sp]

(barrier 142 141 114)

(note 114 142 0 NOTE_INSN_DELETED)


;; Function char* strtrimto(char*, char) (_Z9strtrimtoPcc)



try_optimize_cfg iteration 1



try_optimize_cfg iteration 1

(note:HI 1 0 8 ("./strings.cc") 155)

;; Start of basic block 0, registers live: 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
(note:HI 8 1 67 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn/f 67 8 68 0 ./strings.cc:155 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -24 [0xffffffffffffffe8])) [0 S8 A8])
        (reg:DI 3 bx)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 68 67 69 0 ./strings.cc:155 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -16 [0xfffffffffffffff0])) [0 S8 A8])
        (reg:DI 6 bp)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 69 68 70 0 ./strings.cc:155 (set (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A8])
        (reg:DI 41 r12)) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 70 69 71 0 ./strings.cc:155 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 762 {pro_epilogue_adjust_stack_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 71 70 3 0 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 71 5 0 ./strings.cc:155 (set (reg/v/f:DI 41 r12 [orig:62 s ] [62])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 5 3 6 0 NOTE_INSN_DELETED)

(note:HI 6 5 10 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 10 6 11 0 ("./strings.cc") 157)

(insn:HI 11 10 12 0 ./strings.cc:157 (set (reg:SI 3 bx [orig:60 D.2619 ] [60])
        (sign_extend:SI (reg:QI 4 si [orig:64 ch ] [64]))) 121 {extendqisi2} (insn_list:REG_DEP_TRUE 4 (nil))
    (expr_list:REG_DEAD (reg:QI 4 si [orig:64 ch ] [64])
        (nil)))

(insn:HI 12 11 14 0 ./strings.cc:157 (set (reg:SI 4 si [ D.2619 ])
        (reg:SI 3 bx [orig:60 D.2619 ] [60])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 11 (nil))
    (nil))

(call_insn/u:HI 14 12 17 0 ./strings.cc:157 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strrchr") [flags 0x41] <function_decl 0x2ad10a49e400 strrchr>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 12 (insn_list:REG_DEP_TRUE 13 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ D.2619 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ s ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ D.2619 ]))
                (nil)))))

(note:HI 17 14 58 0 ("./strings.cc") 158)

(insn:HI 58 17 65 0 ./strings.cc:158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:59 last ] [59])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 15 (nil))
    (nil))

(insn 65 58 59 0 ./strings.cc:158 (set (reg/v/f:DI 6 bp [orig:69 last ] [69])
        (reg/v/f:DI 41 r12 [orig:62 s ] [62])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 59 65 25 0 ./strings.cc:158 (set (reg/v/f:DI 6 bp [orig:69 last ] [69])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (reg/v/f:DI 0 ax [orig:59 last ] [59])
            (reg/v/f:DI 6 bp [orig:69 last ] [69]))) 742 {*movdicc_c_rex64} (insn_list:REG_DEP_TRUE 58 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_DEAD (reg/v/f:DI 0 ax [orig:59 last ] [59])
            (nil))))

(note:HI 25 59 26 0 ("./strings.cc") 159)

(insn:HI 26 25 27 0 ./strings.cc:159 (set (mem:QI (reg/v/f:DI 6 bp [orig:69 last ] [69]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 59 (nil))
    (nil))

(note:HI 27 26 28 0 ("./strings.cc") 161)

(insn:HI 28 27 29 0 ./strings.cc:161 (set (reg:SI 4 si [ D.2619 ])
        (reg:SI 3 bx [orig:60 D.2619 ] [60])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 3 bx [orig:60 D.2619 ] [60])
        (nil)))

(insn:HI 29 28 30 0 ./strings.cc:161 (set (reg:DI 5 di [ s ])
        (reg/v/f:DI 41 r12 [orig:62 s ] [62])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:62 s ] [62])
        (nil)))

(call_insn/u:HI 30 29 33 0 ./strings.cc:161 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41] <function_decl 0x2ad10a498000 strchr>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 28 (insn_list:REG_DEP_TRUE 29 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 si [ D.2619 ])
        (expr_list:REG_DEAD (reg:DI 5 di [ s ])
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si [ D.2619 ]))
                (nil)))))

(note:HI 33 30 66 0 ("./strings.cc") 162)

(insn 66 33 61 0 ./strings.cc:162 (set (reg/f:DI 1 dx [68])
        (plus:DI (reg/v/f:DI 6 bp [orig:69 last ] [69])
            (const_int -1 [0xffffffffffffffff]))) 196 {*lea_2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:69 last ] [69])
        (nil)))

(insn:HI 61 66 62 0 ./strings.cc:162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:58 first ] [58])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (insn_list:REG_DEP_TRUE 31 (nil))
    (nil))

(insn:HI 62 61 41 0 ./strings.cc:162 (set (reg/v/f:DI 0 ax [orig:58 first ] [58])
        (if_then_else:DI (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (reg/f:DI 1 dx [68])
            (reg/v/f:DI 0 ax [orig:58 first ] [58]))) 742 {*movdicc_c_rex64} (insn_list:REG_DEP_TRUE 60 (insn_list:REG_DEP_TRUE 61 (nil)))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_DEAD (reg/f:DI 1 dx [68])
            (nil))))

(insn:HI 41 62 45 0 ./strings.cc:162 (parallel [
            (set (reg/f:DI 0 ax [67])
                (plus:DI (reg/v/f:DI 0 ax [orig:58 first ] [58])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (insn_list:REG_DEP_TRUE 62 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 45 41 46 0 NOTE_INSN_FUNCTION_END)

(note:HI 46 45 54 0 ("./strings.cc") 164)

(insn 54 46 72 0 ./strings.cc:164 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 48 (nil))
    (nil))

(note 72 54 73 0 NOTE_INSN_EPILOGUE_BEG)

(insn 73 72 74 0 ./strings.cc:164 (set (reg:DI 3 bx)
        (mem:DI (reg/f:DI 7 sp) [0 S8 A8])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 74 73 75 0 ./strings.cc:164 (set (reg:DI 6 bp)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 S8 A8])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 75 74 76 0 ./strings.cc:164 (set (reg:DI 41 r12)
        (mem:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [0 S8 A8])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn 76 75 77 0 ./strings.cc:164 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 762 {pro_epilogue_adjust_stack_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(jump_insn 77 76 78 0 ./strings.cc:164 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 0, registers live:
 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 78 77 64)

(note 64 78 0 NOTE_INSN_DELETED)


;; Function char* strchomp(char*) (_Z8strchompPc)



try_optimize_cfg iteration 1

Forwarding edge 2->3 to 6 failed.
Forwarding edge 4->5 to 23 failed.
Forwarding edge 21->22 to 6 failed.
Forwarding edge 29->30 to 6 failed.


try_optimize_cfg iteration 1

Fallthru edge 2->6 redirected to 6
Deleting block 3.
Fallthru edge 4->23 redirected to 23
Deleting block 5.
Fallthru edge 21->6 redirected to 6
Deleting block 22.
Deleted label in block 23.
Fallthru edge 29->6 redirected to 6
Deleting block 30.


try_optimize_cfg iteration 2

STC - round 1
Getting bb 0
Basic block 0 was visited in trace 0
  Possible start of this round: 7 (key: -554)
Basic block 1 was visited in trace 0
  Possible start of this round: 8 (key: -1080)
Basic block 2 was visited in trace 0
  Possible start of this round: 6 (key: -1071296)
Basic block 9 was visited in trace 0
Basic block 10 was visited in trace 0
Basic block 11 was visited in trace 0
  Possible start of this round: 21 (key: -729)
Basic block 12 was visited in trace 0
  Possible start of this round: 13 (key: -587)
  Possible start of this round: 20 (key: -765)
Changing key for bb 13 from -587 to -1053387.
Changing key for bb 20 from -765 to -1013965.
Getting bb 6
Basic block 6 was visited in trace 1
Basic block 4 was visited in trace 1
Basic block 23 was visited in trace 1
Basic block 24 was visited in trace 1
Basic block 25 was visited in trace 1
Basic block 26 was visited in trace 1
Basic block 27 was visited in trace 1
Basic block 28 was visited in trace 1
Basic block 29 was visited in trace 1
Block 6 can't be copied because its size = 5.
Changing key for bb 8 from -1080 to -1004780.
Getting bb 13
Basic block 13 was visited in trace 2
  Possible start of next round: 14 (key: -440)
  Possible start of this round: 19 (key: -803)
Changing key for bb 14 from -440 to -1044440.
Changing key for bb 19 from -803 to -1015503.
Getting bb 19
Basic block 19 was visited in trace 3
Block 20 can't be copied because its size = 9.
Basic block 20 was visited in trace 3
Block 21 can't be copied because its size = 9.
Basic block 21 was visited in trace 3
Getting bb 8
Basic block 8 was visited in trace 4
Getting bb 7
Basic block 7 was visited in trace 5
STC - round 2
Getting bb 14
Basic block 14 was visited in trace 6
  Possible start of this round: 18 (key: -843)
Basic block 15 was visited in trace 6
  Possible start of this round: 17 (key: -885)
Basic block 16 was visited in trace 6
Block 17 can't be copied because its size = 9.
Basic block 17 was visited in trace 6
Block 18 can't be copied because its size = 9.
Basic block 18 was visited in trace 6
STC - round 3
STC - round 4
Trace 1 (round 1):  0 [1080] 1 [1026] 2 [975] 9 [975] 10 [733] 11 [704] 12 [660]
Trace 2 (round 1):  6 [1096] 4 [1042] 23 [990] 24 [943] 25 [898] 26 [855] 27 [815] 28 [776] 29 [739]
Trace 3 (round 1):  13 [587]
Trace 4 (round 1):  19 [803] 20 [765] 21 [729]
Trace 5 (round 1):  8 [1080]
Trace 6 (round 1):  7 [554]
Trace 7 (round 2):  14 [440] 15 [880] 16 [929] 17 [885] 18 [843]
Connection: 12 13
Connection: 13 14
Connection: 18 19
Connection: 21 6
Connection: 29 8
Connection: 7 8 
Fallthru edge 7->31 redirected to 31
Duplicated bb 8 (created bb 31)
Final order:
0 1 2 9 10 11 12 13 14 15 16 17 18 19 20 21 6 4 23 24 25 26 27 28 29 8 7 31 

28 basic blocks, 54 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1080, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  7 [5.0%]  (can_fallthru) 1 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 5 [di] 7 [sp]
Registers live at end: 2 [cx] 3 [bx] 7 [sp]

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  0 [95.0%]  (fallthru,can_fallthru)
Successors:  8 [5.0%]  (can_fallthru) 2 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 2 prev 1, next 4, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  1 [95.0%]  (fallthru,can_fallthru)
Successors:  9 [87.5%]  (can_fallthru) 6 [12.5%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 4 prev 2, next 6, loop_depth 1, count 0, freq 1042, maybe hot.
Predecessors:  6 [95.0%]  (can_fallthru)
Successors:  8 [5.0%]  (can_fallthru,loop_exit) 23 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 6 prev 4, next 7, loop_depth 1, count 0, freq 1096, maybe hot.
Predecessors:  21 [95.0%]  (fallthru,can_fallthru) 29 [95.0%]  (fallthru,dfs_back,can_fallthru) 2 [12.5%]  (fallthru,can_fallthru) 10 [14.3%]  (can_fallthru)
Successors:  4 [95.0%]  (can_fallthru) 7 [5.0%]  (fallthru,can_fallthru,loop_exit)
Registers live at start: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 1622, should be 1096

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 554, maybe hot.
Predecessors:  0 [5.0%]  (can_fallthru) 6 [5.0%]  (fallthru,can_fallthru,loop_exit)
Successors:  31 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 7 [sp]
Registers live at end: 1 [dx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 109, should be 554

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 526, maybe hot.
Predecessors:  29 [5.0%]  (can_fallthru,loop_exit) 4 [5.0%]  (can_fallthru,loop_exit) 1 [5.0%]  (can_fallthru) 9 [5.0%]  (can_fallthru) 16 [5.0%]  (can_fallthru) 17 [5.0%]  (can_fallthru) 18 [5.0%]  (can_fallthru) 19 [5.0%]  (can_fallthru) 20 [5.0%]  (can_fallthru) 21 [5.0%]  (can_fallthru) 23 [5.0%]  (can_fallthru,loop_exit) 24 [5.0%]  (can_fallthru,loop_exit) 25 [5.0%]  (can_fallthru,loop_exit) 26 [5.0%]  (can_fallthru,loop_exit) 27 [5.0%]  (can_fallthru,loop_exit) 28 [5.0%]  (can_fallthru,loop_exit)
Successors:  EXIT [100.0%] 
Registers live at start: 1 [dx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 700, should be 526

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  2 [87.5%]  (can_fallthru)
Successors:  8 [5.0%]  (can_fallthru) 10 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 853, should be 975

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 733, maybe hot.
Predecessors:  9 [95.0%]  (fallthru,can_fallthru)
Successors:  11 [85.7%]  (fallthru,can_fallthru) 6 [14.3%]  (can_fallthru)
Registers live at start: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 926, should be 733

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 704, maybe hot.
Predecessors:  10 [85.7%]  (fallthru,can_fallthru)
Successors:  12 [83.3%]  (fallthru,can_fallthru) 21 [16.7%]  (can_fallthru)
Registers live at start: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 660, maybe hot.
Predecessors:  11 [83.3%]  (fallthru,can_fallthru)
Successors:  13 [80.0%]  (fallthru,can_fallthru) 20 [20.0%]  (can_fallthru)
Registers live at start: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 587, maybe hot.
Predecessors:  12 [80.0%]  (fallthru,can_fallthru)
Successors:  14 [75.0%]  (fallthru,can_fallthru) 19 [25.0%]  (can_fallthru)
Registers live at start: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 440, maybe hot.
Predecessors:  13 [75.0%]  (fallthru,can_fallthru)
Successors:  15 [66.7%]  (fallthru,can_fallthru) 18 [33.3%]  (can_fallthru)
Registers live at start: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  14 [66.7%]  (fallthru,can_fallthru)
Successors:  16 [50.0%]  (fallthru,can_fallthru) 17 [50.0%]  (can_fallthru)
Registers live at start: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 293, should be 880

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 929, maybe hot.
Predecessors:  15 [50.0%]  (fallthru,can_fallthru)
Successors:  8 [5.0%]  (can_fallthru) 17 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 440, should be 929

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 885, maybe hot.
Predecessors:  16 [95.0%]  (fallthru,can_fallthru) 15 [50.0%]  (can_fallthru)
Successors:  8 [5.0%]  (can_fallthru) 18 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 1323, should be 885

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 843, maybe hot.
Predecessors:  17 [95.0%]  (fallthru,can_fallthru) 14 [33.3%]  (can_fallthru)
Successors:  8 [5.0%]  (can_fallthru) 19 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 988, should be 843

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 803, maybe hot.
Predecessors:  18 [95.0%]  (fallthru,can_fallthru) 13 [25.0%]  (can_fallthru)
Successors:  8 [5.0%]  (can_fallthru) 20 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 948, should be 803

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 765, maybe hot.
Predecessors:  19 [95.0%]  (fallthru,can_fallthru) 12 [20.0%]  (can_fallthru)
Successors:  8 [5.0%]  (can_fallthru) 21 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 895, should be 765

Basic block 21 prev 20, next 23, loop_depth 0, count 0, freq 729, maybe hot.
Predecessors:  20 [95.0%]  (fallthru,can_fallthru) 11 [16.7%]  (can_fallthru)
Successors:  8 [5.0%]  (can_fallthru) 6 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
Invalid sum of incoming frequencies 844, should be 729

Basic block 23 prev 21, next 24, loop_depth 1, count 0, freq 990, maybe hot.
Predecessors:  4 [95.0%]  (fallthru,can_fallthru)
Successors:  8 [5.0%]  (can_fallthru,loop_exit) 24 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 24 prev 23, next 25, loop_depth 1, count 0, freq 943, maybe hot.
Predecessors:  23 [95.0%]  (fallthru,can_fallthru)
Successors:  8 [5.0%]  (can_fallthru,loop_exit) 25 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 25 prev 24, next 26, loop_depth 1, count 0, freq 898, maybe hot.
Predecessors:  24 [95.0%]  (fallthru,can_fallthru)
Successors:  8 [5.0%]  (can_fallthru,loop_exit) 26 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 26 prev 25, next 27, loop_depth 1, count 0, freq 855, maybe hot.
Predecessors:  25 [95.0%]  (fallthru,can_fallthru)
Successors:  8 [5.0%]  (can_fallthru,loop_exit) 27 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 27 prev 26, next 28, loop_depth 1, count 0, freq 815, maybe hot.
Predecessors:  26 [95.0%]  (fallthru,can_fallthru)
Successors:  8 [5.0%]  (can_fallthru,loop_exit) 28 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 28 prev 27, next 29, loop_depth 1, count 0, freq 776, maybe hot.
Predecessors:  27 [95.0%]  (fallthru,can_fallthru)
Successors:  8 [5.0%]  (can_fallthru,loop_exit) 29 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 29 prev 28, next 31, loop_depth 1, count 0, freq 739, maybe hot.
Predecessors:  28 [95.0%]  (fallthru,can_fallthru)
Successors:  8 [5.0%]  (can_fallthru,loop_exit) 6 [95.0%]  (fallthru,dfs_back,can_fallthru)
Registers live at start: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
Registers live at end: 1 [dx] 2 [cx] 3 [bx] 7 [sp]

Basic block 31 prev 29, next -2, loop_depth 0, count 0, freq 554, maybe hot.
Predecessors:  7 [100.0%]  (fallthru,can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 1 [dx] 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 7 [sp]

Reordered sequence:
 0 bb 0  [1080]
 1 bb 1  [1026]
 2 bb 2  [975]
 3 bb 9  [975]
 4 bb 10  [733]
 5 bb 11  [704]
 6 bb 12  [660]
 7 bb 13  [587]
 8 bb 14  [440]
 9 bb 15  [880]
 10 bb 16  [929]
 11 bb 17  [885]
 12 bb 18  [843]
 13 bb 19  [803]
 14 bb 20  [765]
 15 bb 21  [729]
 16 bb 6  [1096]
 17 bb 4  [1042]
 18 bb 23  [990]
 19 bb 24  [943]
 20 bb 25  [898]
 21 bb 26  [855]
 22 bb 27  [815]
 23 bb 28  [776]
 24 bb 29  [739]
 25 bb 8  [526]
 26 bb 7  [554]
 27 duplicate of 8  [554]


try_optimize_cfg iteration 1

Deleted label in block 3.
Deleted label in block 17.
Merged 26 and 27 without moving.


try_optimize_cfg iteration 2

(note:HI 1 0 6 ("./strings.cc") 69)

;; Start of basic block 0, registers live: 3 [bx] 5 [di] 7 [sp]
(note:HI 6 1 345 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn/f 345 6 346 0 ./strings.cc:69 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 346 345 3 0 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 346 4 0 ./strings.cc:69 (set (reg/v/f:DI 3 bx [orig:63 s ] [63])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 8 4 10 0 ("./strings.cc") 71)

(call_insn/u:HI 10 8 344 0 ./strings.cc:71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x2ad10a49b200 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 9 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (nil))))

(insn 344 10 14 0 ./strings.cc:71 (set (reg/v/f:DI 2 cx [orig:60 last ] [60])
        (plus:DI (reg:DI 0 ax [65])
            (reg/v/f:DI 3 bx [orig:63 s ] [63]))) 196 {*lea_2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 0 ax [65])
        (nil)))

(note:HI 14 344 15 0 ("./strings.cc") 72)

(insn:HI 15 14 16 0 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 3 bx [orig:63 s ] [63])
            (reg/v/f:DI 2 cx [orig:60 last ] [60]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 13 (nil))
    (nil))

(jump_insn:HI 16 15 18 0 ./strings.cc:72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 15 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 0, registers live:
 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 1, registers live: 2 [cx] 3 [bx] 7 [sp]
(note:HI 18 16 343 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 343 18 24 1 ./strings.cc:72 (set (reg/v/f:DI 0 ax [orig:58 last.167 ] [58])
        (plus:DI (reg/v/f:DI 2 cx [orig:60 last ] [60])
            (const_int -1 [0xffffffffffffffff]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 24 343 20 1 ./strings.cc:72 (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (reg/v/f:DI 0 ax [orig:58 last.167 ] [58])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 20 24 21 1 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 2 cx [orig:60 last ] [60])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn:HI 21 20 28 1 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 1, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 2, registers live: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(note:HI 28 21 70 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 70 28 71 2 (parallel [
            (set (reg/v/f:DI 2 cx [orig:60 last ] [60])
                (minus:DI (reg/v/f:DI 2 cx [orig:60 last ] [60])
                    (reg/v/f:DI 3 bx [orig:63 s ] [63])))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 71 70 72 2 (set (reg:DI 4 si [68])
        (const_int 1 [0x1])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 72 71 342 2 (parallel [
            (set (reg:DI 4 si [68])
                (minus:DI (reg:DI 4 si [68])
                    (reg/v/f:DI 2 cx [orig:60 last ] [60])))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 70 (insn_list:REG_DEP_TRUE 71 (nil)))
    (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:60 last ] [60])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:DI (const_int 1 [0x1])
                    (reg:DI 66))
                (nil)))))

(insn 342 72 68 2 (set (reg:DI 2 cx [69])
        (plus:DI (reg:DI 0 ax [orig:59 last.166 ] [59])
            (reg:DI 4 si [68]))) 196 {*lea_2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 4 si [68])
        (nil)))

(note:HI 68 342 77 2 NOTE_INSN_LOOP_BEG)

(insn:HI 77 68 78 2 (parallel [
            (set (reg:DI 0 ax [73])
                (minus:DI (reg:DI 0 ax [73])
                    (reg:DI 2 cx [69])))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (insn_list:REG_DEP_TRUE 73 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 78 77 204 2 NOTE_INSN_DELETED)

(insn:HI 204 78 205 2 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:DI (reg:DI 0 ax [73])
                        (const_int 7 [0x7]))
                    (const_int 0 [0x0])))
            (set (reg:DI 0 ax [74])
                (and:DI (reg:DI 0 ax [73])
                    (const_int 7 [0x7])))
        ]) 298 {*anddi_2} (insn_list:REG_DEP_TRUE 77 (nil))
    (nil))

(jump_insn:HI 205 204 83 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 37)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 204 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 2, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 3, registers live: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(note:HI 83 205 86 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 86 83 87 3 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                (plus:DI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 87 86 88 3 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 86 (nil))
    (nil))

(jump_insn:HI 88 87 201 3 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 87 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 3, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 4, registers live: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(note:HI 201 88 199 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 199 201 200 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [74])
            (const_int 1 [0x1]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 200 199 183 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 37)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 199 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 4, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 5, registers live: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(note:HI 183 200 181 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 181 183 182 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [74])
            (const_int 2 [0x2]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 182 181 165 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 326)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 181 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 5, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 6, registers live: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(note:HI 165 182 163 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 163 165 164 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [74])
            (const_int 3 [0x3]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 164 163 147 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 327)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 163 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 6, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 7, registers live: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(note:HI 147 164 145 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 145 147 146 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [74])
            (const_int 4 [0x4]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 146 145 129 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 328)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 145 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 7, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 8, registers live: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(note:HI 129 146 127 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 127 129 128 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [74])
            (const_int 5 [0x5]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 128 127 111 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 329)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 127 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 8, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 9, registers live: 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(note:HI 111 128 109 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 109 111 110 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [74])
            (const_int 6 [0x6]))) 2 {cmpdi_1_insn_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 0 ax [74])
        (nil)))

(jump_insn:HI 110 109 97 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 330)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 109 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9, registers live:
 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 10, registers live: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(note:HI 97 110 100 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 100 97 101 10 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                (plus:DI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 101 100 102 10 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 100 (nil))
    (nil))

(jump_insn:HI 102 101 330 10 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 101 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 10, registers live:
 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 11, registers live: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(code_label:HI 330 102 115 11 86 "" [1 uses])

(note:HI 115 330 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 118 115 119 11 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                (plus:DI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 119 118 120 11 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 118 (nil))
    (nil))

(jump_insn:HI 120 119 329 11 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 119 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 11, registers live:
 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 12, registers live: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(code_label:HI 329 120 133 12 85 "" [1 uses])

(note:HI 133 329 136 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 136 133 137 12 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                (plus:DI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 137 136 138 12 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 136 (nil))
    (nil))

(jump_insn:HI 138 137 328 12 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 137 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 12, registers live:
 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 13, registers live: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(code_label:HI 328 138 151 13 84 "" [1 uses])

(note:HI 151 328 154 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 154 151 155 13 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                (plus:DI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 155 154 156 13 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 154 (nil))
    (nil))

(jump_insn:HI 156 155 327 13 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 155 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 13, registers live:
 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 14, registers live: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(code_label:HI 327 156 169 14 83 "" [1 uses])

(note:HI 169 327 172 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 172 169 173 14 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                (plus:DI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 173 172 174 14 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 172 (nil))
    (nil))

(jump_insn:HI 174 173 326 14 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 173 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 14, registers live:
 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 15, registers live: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(code_label:HI 326 174 187 15 82 "" [1 uses])

(note:HI 187 326 190 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:HI 190 187 191 15 ./strings.cc:72 (parallel [
            (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                (plus:DI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 191 190 192 15 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 190 (nil))
    (nil))

(jump_insn:HI 192 191 37 15 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 191 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 15, registers live:
 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 16, registers live: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(code_label:HI 37 192 38 16 56 "" [3 uses])

(note:HI 38 37 43 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 43 38 44 16 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
            (reg:DI 2 cx [69]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 44 43 69 16 ./strings.cc:72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 45)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 43 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 16, registers live:
 1 [dx] 2 [cx] 3 [bx] 7 [sp]

(note:HI 69 44 33 NOTE_INSN_LOOP_END)

;; Start of basic block 17, registers live: 1 [dx] 2 [cx] 3 [bx] 7 [sp]
(note:HI 33 69 341 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 341 33 34 17 ./strings.cc:72 (set (reg/f:DI 0 ax [75])
        (plus:DI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
            (const_int -1 [0xffffffffffffffff]))) 196 {*lea_2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (nil)))

(insn:HI 34 341 35 17 ./strings.cc:72 (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (reg/f:DI 0 ax [75])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 298 (nil))
    (nil))

(insn:HI 35 34 36 17 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg:DI 0 ax [orig:59 last.166 ] [59]) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (insn_list:REG_DEP_TRUE 34 (nil))
    (nil))

(jump_insn:HI 36 35 210 17 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 35 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 17, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 18, registers live: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
(note:HI 210 36 340 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 340 210 214 18 ./strings.cc:72 (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (plus:DI (reg/f:DI 0 ax [75])
            (const_int -1 [0xffffffffffffffff]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 214 340 215 18 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 0 ax [75])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn:HI 215 214 223 18 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 214 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 18, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 19, registers live: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
(note:HI 223 215 339 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 339 223 227 19 ./strings.cc:72 (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (plus:DI (reg/f:DI 0 ax [75])
            (const_int -2 [0xfffffffffffffffe]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 227 339 228 19 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 0 ax [75])
                    (const_int -2 [0xfffffffffffffffe])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn:HI 228 227 236 19 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 227 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 19, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 20, registers live: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
(note:HI 236 228 338 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 338 236 240 20 ./strings.cc:72 (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (plus:DI (reg/f:DI 0 ax [75])
            (const_int -3 [0xfffffffffffffffd]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 240 338 241 20 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 0 ax [75])
                    (const_int -3 [0xfffffffffffffffd])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn:HI 241 240 249 20 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 240 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 20, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 21, registers live: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
(note:HI 249 241 337 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 337 249 253 21 ./strings.cc:72 (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (plus:DI (reg/f:DI 0 ax [75])
            (const_int -4 [0xfffffffffffffffc]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 253 337 254 21 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 0 ax [75])
                    (const_int -4 [0xfffffffffffffffc])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn:HI 254 253 262 21 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 253 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 21, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 22, registers live: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
(note:HI 262 254 336 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 336 262 266 22 ./strings.cc:72 (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (plus:DI (reg/f:DI 0 ax [75])
            (const_int -5 [0xfffffffffffffffb]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 266 336 267 22 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 0 ax [75])
                    (const_int -5 [0xfffffffffffffffb])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn:HI 267 266 275 22 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 266 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 22, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 23, registers live: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
(note:HI 275 267 335 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 335 275 279 23 ./strings.cc:72 (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (plus:DI (reg/f:DI 0 ax [75])
            (const_int -6 [0xfffffffffffffffa]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 279 335 280 23 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 0 ax [75])
                    (const_int -6 [0xfffffffffffffffa])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (nil))

(jump_insn:HI 280 279 288 23 ./strings.cc:72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 48)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 279 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 23, registers live:
 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 24, registers live: 0 [ax] 2 [cx] 3 [bx] 7 [sp]
(note:HI 288 280 334 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 334 288 292 24 ./strings.cc:72 (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (plus:DI (reg/f:DI 0 ax [75])
            (const_int -7 [0xfffffffffffffff9]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 292 334 293 24 ./strings.cc:72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 0 ax [75])
                    (const_int -7 [0xfffffffffffffff9])) [0 S1 A8])
            (const_int 10 [0xa]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg/f:DI 0 ax [75])
        (nil)))

(jump_insn:HI 293 292 48 24 ./strings.cc:72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 37)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 292 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 24, registers live:
 1 [dx] 2 [cx] 3 [bx] 7 [sp]

;; Start of basic block 25, registers live: 1 [dx] 3 [bx] 7 [sp]
(code_label:HI 48 293 49 25 55 "" [15 uses])

(note:HI 49 48 50 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note:HI 50 49 51 25 ("./strings.cc") 74)

(insn:HI 51 50 55 25 ./strings.cc:74 (set (mem:QI (plus:DI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                (const_int 1 [0x1])) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (nil)))

(note:HI 55 51 56 25 NOTE_INSN_FUNCTION_END)

(note:HI 56 55 58 25 ("./strings.cc") 76)

(insn:HI 58 56 64 25 ./strings.cc:76 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 3 bx [orig:63 s ] [63])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 s ] [63])
        (nil)))

(insn 64 58 347 25 ./strings.cc:76 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 58 (nil))
    (nil))

(note 347 64 348 25 NOTE_INSN_EPILOGUE_BEG)

(insn 348 347 349 25 ./strings.cc:76 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(jump_insn 349 348 350 25 ./strings.cc:76 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 25, registers live:
 0 [ax] 3 [bx] 7 [sp]

(barrier 350 349 45)

;; Start of basic block 26, registers live: 3 [bx] 7 [sp]
(code_label:HI 45 350 46 26 51 "" [2 uses])

(note:HI 46 45 47 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:HI 47 46 352 26 ./strings.cc:72 (set (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (reg/v/f:DI 3 bx [orig:63 s ] [63])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note 352 47 353 26 ("./strings.cc") 74)

(insn 353 352 354 26 ./strings.cc:74 (set (mem:QI (plus:DI (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
                (const_int 1 [0x1])) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:59 last.166 ] [59])
        (nil)))

(note 354 353 355 26 ("./strings.cc") 76)

(insn 355 354 356 26 ./strings.cc:76 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 3 bx [orig:63 s ] [63])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 s ] [63])
        (nil)))

(insn 356 355 357 26 ./strings.cc:76 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))

(insn 357 356 358 26 ./strings.cc:76 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(jump_insn 358 357 361 26 ./strings.cc:76 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 26, registers live:
 0 [ax] 3 [bx] 7 [sp]

(barrier 361 358 332)

(note 332 361 0 NOTE_INSN_DELETED)


;; Function char* strtrim(char*) (_Z7strtrimPc)



try_optimize_cfg iteration 1

Forwarding edge 0->1 to 3 failed.
Forwarding edge 3->4 to 7 failed.
Forwarding edge 30->31 to 2 failed.
Forwarding edge 39->40 to 2 failed.


try_optimize_cfg iteration 1

Fallthru edge 0->3 redirected to 3
Deleting block 1.
Fallthru edge 3->7 redirected to 7
Deleting block 4.
Fallthru edge 30->2 redirected to 2
Deleting block 31.
Fallthru edge 39->2 redirected to 2
Deleting block 40.


try_optimize_cfg iteration 2

STC - round 1
Getting bb 0
Basic block 0 was visited in trace 0
  Possible start of this round: 3 (key: -1026)
Basic block 8 was visited in trace 0
Basic block 9 was visited in trace 0
Basic block 10 was visited in trace 0
  Possible start of this round: 2 (key: -1056890)
Basic block 11 was visited in trace 0
  Possible start of this round: 29 (key: -647)
Basic block 12 was visited in trace 0
  Possible start of this round: 27 (key: -681)
Basic block 13 was visited in trace 0
  Possible start of this round: 25 (key: -717)
Basic block 14 was visited in trace 0
  Possible start of next round: 15 (key: -440)
  Possible start of this round: 23 (key: -755)
Changing key for bb 15 from -440 to -1044440.
Changing key for bb 23 from -755 to -1015455.
Getting bb 2
Basic block 2 was visited in trace 1
Basic block 32 was visited in trace 1
Basic block 33 was visited in trace 1
Basic block 34 was visited in trace 1
Basic block 35 was visited in trace 1
Basic block 36 was visited in trace 1
Basic block 37 was visited in trace 1
Basic block 38 was visited in trace 1
Basic block 39 was visited in trace 1
Block 2 can't be copied because its size = 12.
Changing key for bb 3 from -1026 to -1003926.
Getting bb 23
Basic block 23 was visited in trace 2
Basic block 24 was visited in trace 2
Block 25 can't be copied because its size = 12.
Basic block 25 was visited in trace 2
Basic block 26 was visited in trace 2
Block 27 can't be copied because its size = 12.
Basic block 27 was visited in trace 2
Basic block 28 was visited in trace 2
Block 29 can't be copied because its size = 12.
Basic block 29 was visited in trace 2
Basic block 30 was visited in trace 2
Changing key for bb 3 from -1003926 to -1004126.
Getting bb 3
Basic block 3 was visited in trace 3
Block 6 can't be copied because its size = 12.
  Possible start of this round: 7 (key: -1026)
Basic block 6 was visited in trace 3
Basic block 5 was visited in trace 3
Block 6 can't be copied because its size = 12.
Rotating loop 6 - 5
Changing key for bb 7 from -1026 to -1051026.
Getting bb 7
Basic block 7 was visited in trace 4
STC - round 2
Getting bb 15
Basic block 15 was visited in trace 5
  Possible start of this round: 21 (key: -794)
Basic block 16 was visited in trace 5
  Possible start of this round: 19 (key: -836)
Basic block 17 was visited in trace 5
Basic block 18 was visited in trace 5
Block 19 can't be copied because its size = 12.
Basic block 19 was visited in trace 5
Basic block 20 was visited in trace 5
Block 21 can't be copied because its size = 12.
Basic block 21 was visited in trace 5
Basic block 22 was visited in trace 5
STC - round 3
STC - round 4
Trace 1 (round 1):  0 [1026] 8 [975] 9 [926] 10 [754] 11 [733] 12 [704] 13 [660] 14 [587]
Trace 2 (round 1):  2 [890] 32 [845] 33 [803] 34 [763] 35 [725] 36 [688] 37 [653] 38 [620] 39 [589]
Trace 3 (round 1):  23 [755] 24 [717] 25 [717] 26 [681] 27 [681] 28 [647] 29 [647] 30 [614]
Trace 4 (round 1):  3 [1026] 5 [9500] 6 [10000]
Trace 5 (round 1):  7 [1026]
Trace 6 (round 2):  15 [440] 16 [880] 17 [880] 18 [836] 19 [836] 20 [794] 21 [794] 22 [754]
Connection: 14 15
Connection: 22 23
Connection: 30 2
Connection: 39 3
Connection: 6 7
Final order:
0 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 2 32 33 34 35 36 37 38 39 3 5 6 7 

37 basic blocks, 68 edges.

Basic block 0 prev -1, next 2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  3 [5.0%]  (fallthru,can_fallthru) 8 [95.0%]  (can_fallthru)
Registers live at start: 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]

Basic block 2 prev 0, next 3, loop_depth 1, count 0, freq 890, maybe hot.
Predecessors:  30 [95.0%]  (fallthru,can_fallthru) 39 [95.0%]  (fallthru,dfs_back,can_fallthru) 10 [12.5%]  (can_fallthru)
Successors:  32 [95.0%]  (can_fallthru) 3 [5.0%]  (fallthru,can_fallthru,loop_exit)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 1237, should be 890

Basic block 3 prev 2, next 5, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  32 [5.0%]  (can_fallthru,loop_exit) 34 [5.0%]  (can_fallthru,loop_exit) 2 [5.0%]  (fallthru,can_fallthru,loop_exit) 8 [5.0%]  (can_fallthru) 9 [5.0%]  (can_fallthru) 17 [5.0%]  (can_fallthru) 39 [5.0%]  (can_fallthru,loop_exit) 19 [5.0%]  (can_fallthru) 38 [5.0%]  (can_fallthru,loop_exit) 21 [5.0%]  (can_fallthru) 35 [5.0%]  (can_fallthru,loop_exit) 23 [5.0%]  (can_fallthru) 37 [5.0%]  (can_fallthru,loop_exit) 25 [5.0%]  (can_fallthru) 33 [5.0%]  (can_fallthru,loop_exit) 27 [5.0%]  (can_fallthru) 36 [5.0%]  (can_fallthru,loop_exit) 29 [5.0%]  (can_fallthru) 30 [5.0%]  (can_fallthru) 0 [5.0%]  (fallthru,can_fallthru)
Successors:  7 [5.0%]  (fallthru,can_fallthru) 6 [95.0%]  (can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 0 [ax] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 771, should be 1026

Basic block 5 prev 3, next 6, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  6 [95.0%]  (can_fallthru)
Successors:  7 [5.0%]  (can_fallthru,loop_exit) 6 [95.0%]  (fallthru,dfs_back,can_fallthru)
Registers live at start: 7 [sp] 41 [r12]
Registers live at end: 0 [ax] 7 [sp] 41 [r12]

Basic block 6 prev 5, next 7, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  3 [95.0%]  (can_fallthru) 5 [95.0%]  (fallthru,dfs_back,can_fallthru)
Successors:  5 [95.0%]  (can_fallthru) 7 [5.0%]  (fallthru,can_fallthru,loop_exit)
Registers live at start: 0 [ax] 7 [sp] 41 [r12]
Registers live at end: 7 [sp] 41 [r12]

Basic block 7 prev 6, next 8, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  6 [5.0%]  (fallthru,can_fallthru,loop_exit) 5 [5.0%]  (can_fallthru,loop_exit) 3 [5.0%]  (fallthru,can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 7 [sp] 41 [r12]
Registers live at end: 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 975, maybe hot.
Predecessors:  0 [95.0%]  (can_fallthru)
Successors:  9 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 926, maybe hot.
Predecessors:  8 [95.0%]  (fallthru,can_fallthru)
Successors:  3 [5.0%]  (can_fallthru) 10 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 10 prev 9, next 11, loop_depth 0, count 0, freq 754, maybe hot.
Predecessors:  9 [95.0%]  (fallthru,can_fallthru)
Successors:  11 [87.5%]  (fallthru,can_fallthru) 2 [12.5%]  (can_fallthru)
Registers live at start: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 880, should be 754

Basic block 11 prev 10, next 12, loop_depth 0, count 0, freq 733, maybe hot.
Predecessors:  10 [87.5%]  (fallthru,can_fallthru)
Successors:  12 [85.7%]  (fallthru,can_fallthru) 29 [14.3%]  (can_fallthru)
Registers live at start: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 12 prev 11, next 13, loop_depth 0, count 0, freq 704, maybe hot.
Predecessors:  11 [85.7%]  (fallthru,can_fallthru)
Successors:  13 [83.3%]  (fallthru,can_fallthru) 27 [16.7%]  (can_fallthru)
Registers live at start: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 13 prev 12, next 14, loop_depth 0, count 0, freq 660, maybe hot.
Predecessors:  12 [83.3%]  (fallthru,can_fallthru)
Successors:  14 [80.0%]  (fallthru,can_fallthru) 25 [20.0%]  (can_fallthru)
Registers live at start: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 14 prev 13, next 15, loop_depth 0, count 0, freq 587, maybe hot.
Predecessors:  13 [80.0%]  (fallthru,can_fallthru)
Successors:  15 [75.0%]  (fallthru,can_fallthru) 23 [25.0%]  (can_fallthru)
Registers live at start: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 15 prev 14, next 16, loop_depth 0, count 0, freq 440, maybe hot.
Predecessors:  14 [75.0%]  (fallthru,can_fallthru)
Successors:  16 [66.7%]  (fallthru,can_fallthru) 21 [33.3%]  (can_fallthru)
Registers live at start: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 16 prev 15, next 17, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  15 [66.7%]  (fallthru,can_fallthru)
Successors:  17 [50.0%]  (fallthru,can_fallthru) 19 [50.0%]  (can_fallthru)
Registers live at start: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 293, should be 880

Basic block 17 prev 16, next 18, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  16 [50.0%]  (fallthru,can_fallthru)
Successors:  18 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 440, should be 880

Basic block 18 prev 17, next 19, loop_depth 0, count 0, freq 836, maybe hot.
Predecessors:  17 [95.0%]  (fallthru,can_fallthru)
Successors:  19 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]

Basic block 19 prev 18, next 20, loop_depth 0, count 0, freq 836, maybe hot.
Predecessors:  18 [100.0%]  (fallthru,can_fallthru) 16 [50.0%]  (can_fallthru)
Successors:  20 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 1276, should be 836

Basic block 20 prev 19, next 21, loop_depth 0, count 0, freq 794, maybe hot.
Predecessors:  19 [95.0%]  (fallthru,can_fallthru)
Successors:  21 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]

Basic block 21 prev 20, next 22, loop_depth 0, count 0, freq 794, maybe hot.
Predecessors:  20 [100.0%]  (fallthru,can_fallthru) 15 [33.3%]  (can_fallthru)
Successors:  22 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 941, should be 794

Basic block 22 prev 21, next 23, loop_depth 0, count 0, freq 754, maybe hot.
Predecessors:  21 [95.0%]  (fallthru,can_fallthru)
Successors:  23 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]

Basic block 23 prev 22, next 24, loop_depth 0, count 0, freq 755, maybe hot.
Predecessors:  22 [100.0%]  (fallthru,can_fallthru) 14 [25.0%]  (can_fallthru)
Successors:  24 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 901, should be 755

Basic block 24 prev 23, next 25, loop_depth 0, count 0, freq 717, maybe hot.
Predecessors:  23 [95.0%]  (fallthru,can_fallthru)
Successors:  25 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]

Basic block 25 prev 24, next 26, loop_depth 0, count 0, freq 717, maybe hot.
Predecessors:  24 [100.0%]  (fallthru,can_fallthru) 13 [20.0%]  (can_fallthru)
Successors:  26 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 849, should be 717

Basic block 26 prev 25, next 27, loop_depth 0, count 0, freq 681, maybe hot.
Predecessors:  25 [95.0%]  (fallthru,can_fallthru)
Successors:  27 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]

Basic block 27 prev 26, next 28, loop_depth 0, count 0, freq 681, maybe hot.
Predecessors:  26 [100.0%]  (fallthru,can_fallthru) 12 [16.7%]  (can_fallthru)
Successors:  28 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 798, should be 681

Basic block 28 prev 27, next 29, loop_depth 0, count 0, freq 647, maybe hot.
Predecessors:  27 [95.0%]  (fallthru,can_fallthru)
Successors:  29 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]

Basic block 29 prev 28, next 30, loop_depth 0, count 0, freq 647, maybe hot.
Predecessors:  28 [100.0%]  (fallthru,can_fallthru) 11 [14.3%]  (can_fallthru)
Successors:  30 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]
Invalid sum of incoming frequencies 752, should be 647

Basic block 30 prev 29, next 32, loop_depth 0, count 0, freq 614, maybe hot.
Predecessors:  29 [95.0%]  (fallthru,can_fallthru)
Successors:  3 [5.0%]  (can_fallthru) 2 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]

Basic block 32 prev 30, next 33, loop_depth 1, count 0, freq 845, maybe hot.
Predecessors:  2 [95.0%]  (can_fallthru)
Successors:  33 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru,loop_exit)
Registers live at start: 3 [bx] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 33 prev 32, next 34, loop_depth 1, count 0, freq 803, maybe hot.
Predecessors:  32 [95.0%]  (fallthru,can_fallthru)
Successors:  34 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru,loop_exit)
Registers live at start: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 34 prev 33, next 35, loop_depth 1, count 0, freq 763, maybe hot.
Predecessors:  33 [95.0%]  (fallthru,can_fallthru)
Successors:  35 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 35 prev 34, next 36, loop_depth 1, count 0, freq 725, maybe hot.
Predecessors:  34 [95.0%]  (fallthru,can_fallthru)
Successors:  36 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 36 prev 35, next 37, loop_depth 1, count 0, freq 688, maybe hot.
Predecessors:  35 [95.0%]  (fallthru,can_fallthru)
Successors:  37 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 37 prev 36, next 38, loop_depth 1, count 0, freq 653, maybe hot.
Predecessors:  36 [95.0%]  (fallthru,can_fallthru)
Successors:  38 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 38 prev 37, next 39, loop_depth 1, count 0, freq 620, maybe hot.
Predecessors:  37 [95.0%]  (fallthru,can_fallthru)
Successors:  39 [95.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru,loop_exit)
Registers live at start: 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 39 prev 38, next -2, loop_depth 1, count 0, freq 589, maybe hot.
Predecessors:  38 [95.0%]  (fallthru,can_fallthru)
Successors:  3 [5.0%]  (can_fallthru,loop_exit) 2 [95.0%]  (fallthru,dfs_back,can_fallthru)
Registers live at start: 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 3 [bx] 7 [sp] 41 [r12]

Reordered sequence:
 0 bb 0  [1026]
 1 bb 8  [975]
 2 bb 9  [926]
 3 bb 10  [754]
 4 bb 11  [733]
 5 bb 12  [704]
 6 bb 13  [660]
 7 bb 14  [587]
 8 bb 15  [440]
 9 bb 16  [880]
 10 bb 17  [880]
 11 bb 18  [836]
 12 bb 19  [836]
 13 bb 20  [794]
 14 bb 21  [794]
 15 bb 22  [754]
 16 bb 23  [755]
 17 bb 24  [717]
 18 bb 25  [717]
 19 bb 26  [681]
 20 bb 27  [681]
 21 bb 28  [647]
 22 bb 29  [647]
 23 bb 30  [614]
 24 bb 2  [890]
 25 bb 32  [845]
 26 bb 33  [803]
 27 bb 34  [763]
 28 bb 35  [725]
 29 bb 36  [688]
 30 bb 37  [653]
 31 bb 38  [620]
 32 bb 39  [589]
 33 bb 3  [1026]
 34 compensation  [51]
 35 bb 5  [9500]
 36 bb 6  [10000]
 37 bb 7  [1026]


try_optimize_cfg iteration 1

Deleted label in block 1.
Deleted label in block 25.
Forwarding edge 33->34 to 37 failed.
(note:HI 1 0 6 ("./strings.cc") 141)

;; Start of basic block 0, registers live: 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
(note:HI 6 1 496 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn/f 496 6 497 0 ./strings.cc:141 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 497 496 498 0 ./strings.cc:141 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 6 bp)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 498 497 499 0 ./strings.cc:141 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 499 498 3 0 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 499 4 0 ./strings.cc:141 (set (reg/v/f:DI 41 r12 [orig:64 s ] [64])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 8 4 10 0 ("./strings.cc") 143)

(call_insn/u:HI 10 8 13 0 ./strings.cc:143 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41] <function_decl 0x2ad10a49b200 strlen>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 9 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [ s ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di [ s ]))
            (nil))))

(note:HI 13 10 14 0 NOTE_INSN_DELETED)

(insn:HI 14 13 15 0 ./strings.cc:143 (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (plus:DI (plus:DI (reg:DI 0 ax [66])
                (reg/v/f:DI 41 r12 [orig:64 s ] [64]))
            (const_int -1 [0xffffffffffffffff]))) 196 {*lea_2_rex64} (insn_list:REG_DEP_TRUE 11 (nil))
    (expr_list:REG_DEAD (reg:DI 0 ax [66])
        (nil)))

(note:HI 15 14 16 0 ("./strings.cc") 144)

(insn:HI 16 15 17 0 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 41 r12 [orig:64 s ] [64])
            (reg/v/f:DI 3 bx [orig:58 last ] [58]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 14 (nil))
    (nil))

(jump_insn:HI 17 16 95 0 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 16 (nil))
    (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 0, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 1, registers live: 3 [bx] 7 [sp] 41 [r12]
(note:HI 95 17 488 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn 488 95 93 1 (set (reg:DI 6 bp [76])
        (reg/v/f:DI 3 bx [orig:58 last ] [58])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 93 488 94 1 (parallel [
            (set (reg:DI 6 bp [76])
                (minus:DI (reg:DI 6 bp [76])
                    (reg/v/f:DI 41 r12 [orig:64 s ] [64])))
            (clobber (reg:CC 17 flags))
        ]) 235 {*subdi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 94 93 97 1 (parallel [
            (set (reg:DI 6 bp [76])
                (and:DI (reg:DI 6 bp [76])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 297 {*anddi_1_rex64} (insn_list:REG_DEP_TRUE 93 (nil))
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 97 94 99 1 ./strings.cc:144 (set (reg:SI 5 di [78])
        (sign_extend:SI (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 99 97 101 1 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 98 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 101 99 102 1 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:79 D.2604 ] [79])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 100 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:79 D.2604 ] [79])
        (nil)))

(jump_insn:HI 102 101 111 1 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 101 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 1, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 2, registers live: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
(note:HI 111 102 107 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 107 111 109 2 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 109 107 110 2 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 41 r12 [orig:64 s ] [64])
            (reg/v/f:DI 3 bx [orig:58 last ] [58]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 107 (nil))
    (nil))

(jump_insn:HI 110 109 291 2 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 109 (nil))
    (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 2, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 3, registers live: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
(note:HI 291 110 289 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 289 291 290 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 6 bp [76])
            (const_int 0 [0x0]))) 0 {cmpdi_ccno_1_rex64} (nil)
    (nil))

(jump_insn:HI 290 289 266 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 474)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 289 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1250 [0x4e2])
            (nil))))
;; End of basic block 3, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 4, registers live: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
(note:HI 266 290 264 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 264 266 265 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 6 bp [76])
            (const_int 1 [0x1]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 265 264 241 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 480)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 264 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1428 [0x594])
            (nil))))
;; End of basic block 4, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 5, registers live: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
(note:HI 241 265 239 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 239 241 240 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 6 bp [76])
            (const_int 2 [0x2]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 240 239 216 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 481)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 239 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1666 [0x682])
            (nil))))
;; End of basic block 5, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 6, registers live: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
(note:HI 216 240 214 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 214 216 215 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 6 bp [76])
            (const_int 3 [0x3]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 215 214 191 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 482)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 214 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2000 [0x7d0])
            (nil))))
;; End of basic block 6, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 7, registers live: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
(note:HI 191 215 189 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 189 191 190 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 6 bp [76])
            (const_int 4 [0x4]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 190 189 166 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 483)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 189 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 2500 [0x9c4])
            (nil))))
;; End of basic block 7, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 8, registers live: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
(note:HI 166 190 164 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 164 166 165 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 6 bp [76])
            (const_int 5 [0x5]))) 2 {cmpdi_1_insn_rex64} (nil)
    (nil))

(jump_insn:HI 165 164 141 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 484)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 164 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 8, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 9, registers live: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
(note:HI 141 165 139 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 139 141 140 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 6 bp [76])
            (const_int 6 [0x6]))) 2 {cmpdi_1_insn_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 6 bp [76])
        (nil)))

(jump_insn:HI 140 139 124 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 485)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 139 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 10, registers live: 3 [bx] 7 [sp] 41 [r12]
(note:HI 124 140 118 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:HI 118 124 120 10 ./strings.cc:144 (set (reg:SI 5 di [82])
        (sign_extend:SI (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 120 118 122 10 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 119 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 122 120 123 10 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:83 D.2604 ] [83])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 121 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:83 D.2604 ] [83])
        (nil)))

(jump_insn:HI 123 122 132 10 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 122 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 10, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 11, registers live: 3 [bx] 7 [sp] 41 [r12]
(note:HI 132 123 128 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 128 132 485 11 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 11, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 12, registers live: 3 [bx] 7 [sp] 41 [r12]
(code_label:HI 485 128 149 12 140 "" [1 uses])

(note:HI 149 485 143 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 143 149 145 12 ./strings.cc:144 (set (reg:SI 5 di [84])
        (sign_extend:SI (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 145 143 147 12 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 144 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 147 145 148 12 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 D.2604 ] [85])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 146 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:85 D.2604 ] [85])
        (nil)))

(jump_insn:HI 148 147 157 12 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 147 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 12, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 13, registers live: 3 [bx] 7 [sp] 41 [r12]
(note:HI 157 148 153 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 153 157 484 13 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 13, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 14, registers live: 3 [bx] 7 [sp] 41 [r12]
(code_label:HI 484 153 174 14 139 "" [1 uses])

(note:HI 174 484 168 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 168 174 170 14 ./strings.cc:144 (set (reg:SI 5 di [86])
        (sign_extend:SI (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 170 168 172 14 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 169 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 172 170 173 14 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:87 D.2604 ] [87])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 171 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:87 D.2604 ] [87])
        (nil)))

(jump_insn:HI 173 172 182 14 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 172 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 14, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 15, registers live: 3 [bx] 7 [sp] 41 [r12]
(note:HI 182 173 178 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:HI 178 182 483 15 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 15, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 16, registers live: 3 [bx] 7 [sp] 41 [r12]
(code_label:HI 483 178 199 16 138 "" [1 uses])

(note:HI 199 483 193 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 193 199 195 16 ./strings.cc:144 (set (reg:SI 5 di [88])
        (sign_extend:SI (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 195 193 197 16 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 194 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 197 195 198 16 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:89 D.2604 ] [89])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 196 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:89 D.2604 ] [89])
        (nil)))

(jump_insn:HI 198 197 207 16 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 197 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 16, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 17, registers live: 3 [bx] 7 [sp] 41 [r12]
(note:HI 207 198 203 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:HI 203 207 482 17 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 17, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 18, registers live: 3 [bx] 7 [sp] 41 [r12]
(code_label:HI 482 203 224 18 137 "" [1 uses])

(note:HI 224 482 218 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:HI 218 224 220 18 ./strings.cc:144 (set (reg:SI 5 di [90])
        (sign_extend:SI (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 220 218 222 18 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 219 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 222 220 223 18 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:91 D.2604 ] [91])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 221 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:91 D.2604 ] [91])
        (nil)))

(jump_insn:HI 223 222 232 18 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 222 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 18, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 19, registers live: 3 [bx] 7 [sp] 41 [r12]
(note:HI 232 223 228 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:HI 228 232 481 19 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 19, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 20, registers live: 3 [bx] 7 [sp] 41 [r12]
(code_label:HI 481 228 249 20 136 "" [1 uses])

(note:HI 249 481 243 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:HI 243 249 245 20 ./strings.cc:144 (set (reg:SI 5 di [92])
        (sign_extend:SI (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 245 243 247 20 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 244 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 247 245 248 20 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:93 D.2604 ] [93])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 246 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:93 D.2604 ] [93])
        (nil)))

(jump_insn:HI 248 247 257 20 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 247 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 20, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 21, registers live: 3 [bx] 7 [sp] 41 [r12]
(note:HI 257 248 253 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:HI 253 257 480 21 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 21, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 22, registers live: 3 [bx] 7 [sp] 41 [r12]
(code_label:HI 480 253 274 22 135 "" [1 uses])

(note:HI 274 480 268 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 268 274 270 22 ./strings.cc:144 (set (reg:SI 5 di [94])
        (sign_extend:SI (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 270 268 272 22 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 269 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 272 270 273 22 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:95 D.2604 ] [95])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 271 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:95 D.2604 ] [95])
        (nil)))

(jump_insn:HI 273 272 282 22 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 272 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 22, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 23, registers live: 3 [bx] 7 [sp] 41 [r12]
(note:HI 282 273 278 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:HI 278 282 280 23 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 280 278 281 23 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 41 r12 [orig:64 s ] [64])
            (reg/v/f:DI 3 bx [orig:58 last ] [58]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 278 (nil))
    (nil))

(jump_insn:HI 281 280 81 23 ./strings.cc:144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 280 (nil))
    (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 23, registers live:
 3 [bx] 7 [sp] 41 [r12]

(note:HI 81 281 474 NOTE_INSN_LOOP_BEG)

;; Start of basic block 24, registers live: 3 [bx] 7 [sp] 41 [r12]
(code_label:HI 474 81 89 24 133 "" [2 uses])

(note:HI 89 474 30 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:HI 30 89 32 24 ./strings.cc:144 (set (reg:SI 5 di [80])
        (sign_extend:SI (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 32 30 34 24 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 34 32 35 24 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:81 D.2604 ] [81])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:81 D.2604 ] [81])
        (nil)))

(jump_insn:HI 35 34 82 24 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 34 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 24, registers live:
 3 [bx] 7 [sp] 41 [r12]

(note:HI 82 35 22 NOTE_INSN_LOOP_END)

;; Start of basic block 25, registers live: 3 [bx] 7 [sp] 41 [r12]
(note:HI 22 82 495 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 495 22 24 25 ./strings.cc:145 (set (reg/f:DI 6 bp [77])
        (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
            (const_int -1 [0xffffffffffffffff]))) 196 {*lea_2_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (nil)))

(insn:HI 24 495 293 25 ./strings.cc:145 (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (reg/f:DI 6 bp [77])) 81 {*movdi_1_rex64} (insn_list:REG_DEP_TRUE 432 (nil))
    (nil))

(insn:HI 293 24 295 25 ./strings.cc:144 (set (reg:SI 5 di [68])
        (sign_extend:SI (mem:QI (reg:DI 6 bp [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (insn_list:REG_DEP_TRUE 24 (nil))
    (nil))

(call_insn/u:HI 295 293 297 25 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 294 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 297 295 298 25 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:61 D.2604 ] [61])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 296 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.2604 ] [61])
        (nil)))

(jump_insn:HI 298 297 307 25 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 297 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 25, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 26, registers live: 3 [bx] 6 [bp] 7 [sp] 41 [r12]
(note:HI 307 298 303 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:HI 303 307 313 26 ./strings.cc:145 (parallel [
            (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 313 303 315 26 ./strings.cc:144 (set (reg:SI 5 di [96])
        (sign_extend:SI (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8]))) 121 {extendqisi2} (insn_list:REG_DEP_TRUE 303 (nil))
    (nil))

(call_insn/u:HI 315 313 317 26 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 314 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 317 315 318 26 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:97 D.2604 ] [97])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 316 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:97 D.2604 ] [97])
        (nil)))

(jump_insn:HI 318 317 327 26 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 317 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 26, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 27, registers live: 6 [bp] 7 [sp] 41 [r12]
(note:HI 327 318 494 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 494 327 333 27 ./strings.cc:145 (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (plus:DI (reg/f:DI 6 bp [77])
            (const_int -2 [0xfffffffffffffffe]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 333 494 335 27 ./strings.cc:144 (set (reg:SI 5 di [98])
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 6 bp [77])
                    (const_int -2 [0xfffffffffffffffe])) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 335 333 337 27 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 334 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 337 335 338 27 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:99 D.2604 ] [99])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 336 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:99 D.2604 ] [99])
        (nil)))

(jump_insn:HI 338 337 347 27 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 337 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 27, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 28, registers live: 6 [bp] 7 [sp] 41 [r12]
(note:HI 347 338 493 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 493 347 353 28 ./strings.cc:145 (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (plus:DI (reg/f:DI 6 bp [77])
            (const_int -3 [0xfffffffffffffffd]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 353 493 355 28 ./strings.cc:144 (set (reg:SI 5 di [100])
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 6 bp [77])
                    (const_int -3 [0xfffffffffffffffd])) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 355 353 357 28 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 354 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 357 355 358 28 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:101 D.2604 ] [101])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 356 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:101 D.2604 ] [101])
        (nil)))

(jump_insn:HI 358 357 367 28 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 357 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 28, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 29, registers live: 6 [bp] 7 [sp] 41 [r12]
(note:HI 367 358 492 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 492 367 373 29 ./strings.cc:145 (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (plus:DI (reg/f:DI 6 bp [77])
            (const_int -4 [0xfffffffffffffffc]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 373 492 375 29 ./strings.cc:144 (set (reg:SI 5 di [102])
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 6 bp [77])
                    (const_int -4 [0xfffffffffffffffc])) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 375 373 377 29 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 374 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 377 375 378 29 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:103 D.2604 ] [103])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 376 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:103 D.2604 ] [103])
        (nil)))

(jump_insn:HI 378 377 387 29 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 377 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 29, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 30, registers live: 6 [bp] 7 [sp] 41 [r12]
(note:HI 387 378 491 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 491 387 393 30 ./strings.cc:145 (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (plus:DI (reg/f:DI 6 bp [77])
            (const_int -5 [0xfffffffffffffffb]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 393 491 395 30 ./strings.cc:144 (set (reg:SI 5 di [104])
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 6 bp [77])
                    (const_int -5 [0xfffffffffffffffb])) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 395 393 397 30 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 394 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 397 395 398 30 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:105 D.2604 ] [105])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 396 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:105 D.2604 ] [105])
        (nil)))

(jump_insn:HI 398 397 407 30 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 397 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 30, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 31, registers live: 6 [bp] 7 [sp] 41 [r12]
(note:HI 407 398 490 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 490 407 413 31 ./strings.cc:145 (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (plus:DI (reg/f:DI 6 bp [77])
            (const_int -6 [0xfffffffffffffffa]))) 196 {*lea_2_rex64} (nil)
    (nil))

(insn:HI 413 490 415 31 ./strings.cc:144 (set (reg:SI 5 di [106])
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 6 bp [77])
                    (const_int -6 [0xfffffffffffffffa])) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 415 413 417 31 ./strings.cc:144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 414 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 417 415 418 31 ./strings.cc:144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:107 D.2604 ] [107])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 416 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:107 D.2604 ] [107])
        (nil)))

(jump_insn:HI 418 417 427 31 ./strings.cc:144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 36)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 417 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 31, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 32, registers live: 6 [bp] 7 [sp] 41 [r12]
(note:HI 427 418 489 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 489 427 425 32 ./strings.cc:145 (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (plus:DI (reg/f:DI 6 bp [77])
            (const_int -7 [0xfffffffffffffff9]))) 196 {*lea_2_rex64} (nil)
    (expr_list:REG_DEAD (reg/f:DI 6 bp [77])
        (nil)))

(insn:HI 425 489 426 32 ./strings.cc:144 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 41 r12 [orig:64 s ] [64])
            (reg/v/f:DI 3 bx [orig:58 last ] [58]))) 2 {cmpdi_1_insn_rex64} (insn_list:REG_DEP_TRUE 423 (nil))
    (nil))

(jump_insn:HI 426 425 36 32 ./strings.cc:144 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 474)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 425 (nil))
    (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 32, registers live:
 3 [bx] 7 [sp] 41 [r12]

;; Start of basic block 33, registers live: 3 [bx] 7 [sp] 41 [r12]
(code_label:HI 36 426 37 33 88 "" [19 uses])

(note:HI 37 36 38 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note:HI 38 37 39 33 ("./strings.cc") 146)

(insn:HI 39 38 40 33 ./strings.cc:146 (set (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (const_int 1 [0x1])) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (nil)))

(note:HI 40 39 41 33 ("./strings.cc") 147)

(insn:HI 41 40 42 33 ./strings.cc:147 (set (reg:QI 0 ax [orig:60 D.2609 ] [60])
        (mem:QI (reg/v/f:DI 41 r12 [orig:64 s ] [64]) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn:HI 42 41 43 33 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 D.2609 ] [60])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 41 (nil))
    (nil))

(jump_insn:HI 43 42 83 33 ./strings.cc:147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 471)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 42 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 33, registers live:
 0 [ax] 7 [sp] 41 [r12]

(note:HI 83 43 506 NOTE_INSN_LOOP_BEG)

;; Start of basic block 34, registers live: 7 [sp] 41 [r12]
(note 506 83 507 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(jump_insn 507 506 508 34 (set (pc)
        (label_ref 63)) -1 (nil)
    (nil))
;; End of basic block 34, registers live:
 7 [sp] 41 [r12]

(barrier 508 507 47)

;; Start of basic block 35, registers live: 7 [sp] 41 [r12]
(code_label:HI 47 508 48 35 93 "" [1 uses])

(note:HI 48 47 49 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note:HI 49 48 50 35 ("./strings.cc") 148)

(insn:HI 50 49 51 35 ./strings.cc:148 (parallel [
            (set (reg/v/f:DI 41 r12 [orig:64 s ] [64])
                (plus:DI (reg/v/f:DI 41 r12 [orig:64 s ] [64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 51 50 52 35 ("./strings.cc") 147)

(insn:HI 52 51 53 35 ./strings.cc:147 (set (reg:QI 0 ax [orig:60 D.2609 ] [60])
        (mem:QI (reg/v/f:DI 41 r12 [orig:64 s ] [64]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 50 (nil))
    (nil))

(insn:HI 53 52 54 35 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 D.2609 ] [60])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 52 (nil))
    (nil))

(jump_insn:HI 54 53 471 35 ./strings.cc:147 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 63)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 53 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 35, registers live:
 0 [ax] 7 [sp] 41 [r12]

;; Start of basic block 36, registers live: 0 [ax] 7 [sp] 41 [r12]
(code_label:HI 471 54 90 36 132 "" [1 uses])

(note:HI 90 471 57 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn:HI 57 90 59 36 ./strings.cc:147 (set (reg:SI 5 di [orig:69 D.2609 ] [69])
        (sign_extend:SI (reg:QI 0 ax [orig:60 D.2609 ] [60]))) 121 {extendqisi2} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:60 D.2609 ] [60])
        (nil)))

(call_insn/u:HI 59 57 61 36 ./strings.cc:147 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 58 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2609 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2609 ]))
            (nil))))

(insn:HI 61 59 62 36 ./strings.cc:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:59 D.2611 ] [59])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 60 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.2611 ] [59])
        (nil)))

(jump_insn:HI 62 61 84 36 ./strings.cc:147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 61 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 36, registers live:
 7 [sp] 41 [r12]

(note:HI 84 62 63 NOTE_INSN_LOOP_END)

;; Start of basic block 37, registers live: 7 [sp] 41 [r12]
(code_label:HI 63 84 64 37 91 "" [2 uses])

(note:HI 64 63 68 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note:HI 68 64 69 37 NOTE_INSN_FUNCTION_END)

(note:HI 69 68 71 37 ("./strings.cc") 150)

(insn:HI 71 69 77 37 ./strings.cc:150 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 41 r12 [orig:64 s ] [64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:64 s ] [64])
        (nil)))

(insn 77 71 106 37 ./strings.cc:150 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 71 (nil))
    (nil))

(note:HI 106 77 108 37 ("./strings.cc") 145)

(note:HI 108 106 127 37 ("./strings.cc") 144)

(note:HI 127 108 129 37 ("./strings.cc") 145)

(note:HI 129 127 152 37 ("./strings.cc") 144)

(note:HI 152 129 154 37 ("./strings.cc") 145)

(note:HI 154 152 177 37 ("./strings.cc") 144)

(note:HI 177 154 179 37 ("./strings.cc") 145)

(note:HI 179 177 202 37 ("./strings.cc") 144)

(note:HI 202 179 204 37 ("./strings.cc") 145)

(note:HI 204 202 227 37 ("./strings.cc") 144)

(note:HI 227 204 229 37 ("./strings.cc") 145)

(note:HI 229 227 252 37 ("./strings.cc") 144)

(note:HI 252 229 254 37 ("./strings.cc") 145)

(note:HI 254 252 277 37 ("./strings.cc") 144)

(note:HI 277 254 279 37 ("./strings.cc") 145)

(note:HI 279 277 23 37 ("./strings.cc") 144)

(note:HI 23 279 25 37 ("./strings.cc") 145)

(note:HI 25 23 302 37 ("./strings.cc") 144)

(note:HI 302 25 304 37 ("./strings.cc") 145)

(note:HI 304 302 322 37 ("./strings.cc") 144)

(note:HI 322 304 324 37 ("./strings.cc") 145)

(note:HI 324 322 342 37 ("./strings.cc") 144)

(note:HI 342 324 344 37 ("./strings.cc") 145)

(note:HI 344 342 362 37 ("./strings.cc") 144)

(note:HI 362 344 364 37 ("./strings.cc") 145)

(note:HI 364 362 382 37 ("./strings.cc") 144)

(note:HI 382 364 384 37 ("./strings.cc") 145)

(note:HI 384 382 402 37 ("./strings.cc") 144)

(note:HI 402 384 404 37 ("./strings.cc") 145)

(note:HI 404 402 422 37 ("./strings.cc") 144)

(note:HI 422 404 424 37 ("./strings.cc") 145)

(note:HI 424 422 500 37 ("./strings.cc") 144)

(note 500 424 501 37 NOTE_INSN_EPILOGUE_BEG)

(insn 501 500 502 37 ./strings.cc:150 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 502 501 503 37 ./strings.cc:150 (parallel [
            (set (reg:DI 6 bp)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 503 502 504 37 ./strings.cc:150 (parallel [
            (set (reg:DI 41 r12)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(jump_insn 504 503 505 37 ./strings.cc:150 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 37, registers live:
 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 505 504 487)

(note 487 505 0 NOTE_INSN_DELETED)


;; Function char* strsplit(char*) (_Z8strsplitPc)



try_optimize_cfg iteration 1

Forwarding edge 4->5 to 8 failed.


try_optimize_cfg iteration 1

Removing jump 86.
Fallthru edge 4->8 redirected to 8
Deleting block 5.


try_optimize_cfg iteration 2

STC - round 1
Getting bb 0
Basic block 0 was visited in trace 0
Block 3 can't be copied because its size = 12.
  Possible start of next round: 1 (key: -761)
Basic block 3 was visited in trace 0
  Possible start of next round: 4 (key: -500)
Basic block 2 was visited in trace 0
Block 3 can't be copied because its size = 12.
  Possible start of this round: 8 (key: -2306)
Rotating loop 3 - 2
Changing key for bb 8 from -2306 to -1106806.
Getting bb 8
Basic block 8 was visited in trace 1
STC - round 2
Getting bb 1
Basic block 1 was visited in trace 2
Getting bb 4
Basic block 4 was visited in trace 3
Block 7 can't be copied because its size = 12.
Basic block 7 was visited in trace 3
Basic block 6 was visited in trace 3
Block 7 can't be copied because its size = 12.
Rotating loop 7 - 6
STC - round 3
STC - round 4
Trace 1 (round 1):  0 [2306] 3 [10000] 2 [9500]
Trace 2 (round 1):  8 [2306]
Trace 3 (round 2):  1 [761]
Trace 4 (round 2):  4 [500] 6 [4628] 7 [4872]
Connection: 2 8
Connection: 1 8 
Fallthru edge 1->9 redirected to 9
Duplicated bb 8 (created bb 9)
Connection: 7 8 
Fallthru edge 7->10 redirected to 10
Duplicated bb 8 (created bb 10)
Final order:
0 3 2 8 1 9 4 6 7 10 

10 basic blocks, 17 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 2306, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  3 [67.0%]  (can_fallthru) 1 [33.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 5 [di] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 7 [sp]

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 761, maybe hot.
Predecessors:  0 [33.0%]  (fallthru,can_fallthru)
Successors:  9 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 7 [sp]
Registers live at end: 3 [bx] 7 [sp]

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  3 [95.0%]  (can_fallthru)
Successors:  8 [11.0%]  (can_fallthru,loop_exit) 3 [89.0%]  (fallthru,dfs_back,can_fallthru)
Registers live at start: 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 7 [sp]

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  0 [67.0%]  (can_fallthru) 2 [89.0%]  (fallthru,dfs_back,can_fallthru)
Successors:  2 [95.0%]  (can_fallthru) 4 [5.0%]  (fallthru,can_fallthru,loop_exit)
Registers live at start: 0 [ax] 3 [bx] 7 [sp]
Registers live at end: 3 [bx] 7 [sp]

Basic block 4 prev 3, next 6, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  3 [5.0%]  (fallthru,can_fallthru,loop_exit)
Successors:  8 [5.0%]  (fallthru,can_fallthru) 7 [95.0%]  (can_fallthru)
Registers live at start: 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 7 [sp]

Basic block 6 prev 4, next 7, loop_depth 1, count 0, freq 4628, maybe hot.
Predecessors:  7 [95.0%]  (can_fallthru)
Successors:  8 [5.0%]  (can_fallthru,loop_exit) 7 [95.0%]  (fallthru,dfs_back,can_fallthru)
Registers live at start: 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 7 [sp]

Basic block 7 prev 6, next 8, loop_depth 1, count 0, freq 4872, maybe hot.
Predecessors:  4 [95.0%]  (can_fallthru) 6 [95.0%]  (fallthru,dfs_back,can_fallthru)
Successors:  6 [95.0%]  (can_fallthru) 10 [5.0%]  (fallthru,can_fallthru,loop_exit)
Registers live at start: 0 [ax] 3 [bx] 7 [sp]
Registers live at end: 3 [bx] 7 [sp]

Basic block 8 prev 7, next 9, loop_depth 0, count 0, freq 1301, maybe hot.
Predecessors:  6 [5.0%]  (can_fallthru,loop_exit) 2 [11.0%]  (can_fallthru,loop_exit) 4 [5.0%]  (fallthru,can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 7 [sp]

Basic block 9 prev 8, next 10, loop_depth 0, count 0, freq 761, maybe hot.
Predecessors:  1 [100.0%]  (fallthru,can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 7 [sp]

Basic block 10 prev 9, next -2, loop_depth 0, count 0, freq 244, maybe hot.
Predecessors:  7 [5.0%]  (fallthru,can_fallthru,loop_exit)
Successors:  EXIT [100.0%] 
Registers live at start: 3 [bx] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 7 [sp]

Emitting label for block 1
Emitting label for block 4
Reordered sequence:
 0 bb 0  [2306]
 1 bb 3  [10000]
 2 bb 2  [9500]
 3 bb 8  [1301]
 4 bb 1  [761]
 5 duplicate of 8  [761]
 6 bb 4  [500]
 7 compensation  [25]
 8 bb 6  [4628]
 9 bb 7  [4872]
 10 duplicate of 8  [244]


try_optimize_cfg iteration 1

Deleted label in block 2.
Merged 4 and 5 without moving.
Forwarding edge 6->7 to 3 failed.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 3 failed.
(note:HI 1 0 6 ("./strings.cc") 108)

;; Start of basic block 0, registers live: 3 [bx] 5 [di] 7 [sp]
(note:HI 6 1 99 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn/f 99 6 100 0 ./strings.cc:108 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 100 99 3 0 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 100 4 0 ./strings.cc:108 (set (reg/v/f:DI 3 bx [orig:63 s ] [63])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 8 4 9 0 ("./strings.cc") 110)

(insn:HI 9 8 10 0 ./strings.cc:110 (set (reg:QI 0 ax [orig:61 D.2569 ] [61])
        (mem:QI (reg:DI 5 di [orig:63 s ] [63]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 3 (nil))
    (expr_list:REG_DEAD (reg:DI 5 di [orig:63 s ] [63])
        (nil)))

(insn:HI 10 9 11 0 ./strings.cc:110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:61 D.2569 ] [61])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 9 (nil))
    (nil))

(jump_insn:HI 11 10 88 0 ./strings.cc:110 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 124)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
            (nil))))
;; End of basic block 0, registers live:
 0 [ax] 3 [bx] 7 [sp]

;; Start of basic block 1, registers live: 0 [ax] 3 [bx] 7 [sp]
(code_label:HI 88 11 82 1 150 "" [1 uses])

(note:HI 82 88 26 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 26 82 28 1 ./strings.cc:111 (set (reg:SI 5 di [orig:64 D.2569 ] [64])
        (sign_extend:SI (reg:QI 0 ax [orig:61 D.2569 ] [61]))) 121 {extendqisi2} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:61 D.2569 ] [61])
        (nil)))

(call_insn/u:HI 28 26 30 1 ./strings.cc:111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2569 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2569 ]))
            (nil))))

(insn:HI 30 28 31 1 ./strings.cc:111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:60 D.2575 ] [60])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 29 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.2575 ] [60])
        (nil)))

(jump_insn:HI 31 30 77 1 ./strings.cc:111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 125)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 30 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 1, registers live:
 3 [bx] 7 [sp]

(note:HI 77 31 76 NOTE_INSN_LOOP_END)

(note:HI 76 77 18 NOTE_INSN_LOOP_BEG)

;; Start of basic block 2, registers live: 3 [bx] 7 [sp]
(note:HI 18 76 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 19 18 20 2 ("./strings.cc") 111)

(insn:HI 20 19 21 2 ./strings.cc:111 (parallel [
            (set (reg/v/f:DI 3 bx [orig:63 s ] [63])
                (plus:DI (reg/v/f:DI 3 bx [orig:63 s ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 21 20 22 2 ./strings.cc:111 (set (reg:QI 0 ax [orig:61 D.2569 ] [61])
        (mem:QI (reg/v/f:DI 3 bx [orig:63 s ] [63]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 20 (nil))
    (nil))

(insn:HI 22 21 23 2 ./strings.cc:111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:61 D.2569 ] [61])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 21 (nil))
    (nil))

(jump_insn:HI 23 22 58 2 ./strings.cc:111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 88)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 22 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
            (nil))))
;; End of basic block 2, registers live:
 0 [ax] 3 [bx] 7 [sp]

;; Start of basic block 3, registers live: 3 [bx] 7 [sp]
(code_label:HI 58 23 59 3 144 "" [2 uses])

(note:HI 59 58 63 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 63 59 64 3 NOTE_INSN_FUNCTION_END)

(note:HI 64 63 66 3 ("./strings.cc") 118)

(insn:HI 66 64 72 3 ./strings.cc:118 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 3 bx [orig:63 s ] [63])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 s ] [63])
        (nil)))

(insn 72 66 101 3 ./strings.cc:118 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 66 (nil))
    (nil))

(note 101 72 102 3 NOTE_INSN_EPILOGUE_BEG)

(insn 102 101 103 3 ./strings.cc:118 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(jump_insn 103 102 104 3 ./strings.cc:118 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 3, registers live:
 0 [ax] 3 [bx] 7 [sp]

(barrier 104 103 124)

;; Start of basic block 4, registers live: 7 [sp]
(code_label 124 104 13 4 152 "" [1 uses])

(note:HI 13 124 105 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 105 13 107 4 ./strings.cc:110 (parallel [
            (set (reg/v/f:DI 3 bx [orig:63 s ] [63])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 78 {*movdi_xor_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 107 105 108 4 ("./strings.cc") 118)

(insn 108 107 109 4 ./strings.cc:118 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 3 bx [orig:63 s ] [63])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 s ] [63])
        (nil)))

(insn 109 108 110 4 ./strings.cc:118 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))

(insn 110 109 111 4 ./strings.cc:118 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(jump_insn 111 110 114 4 ./strings.cc:118 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 4, registers live:
 0 [ax] 3 [bx] 7 [sp]

(barrier 114 111 34)

(note:HI 34 114 125 ("./strings.cc") 114)

;; Start of basic block 6, registers live: 3 [bx] 7 [sp]
(code_label 125 34 33 6 153 "" [1 uses])

(note:HI 33 125 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 35 33 36 6 ./strings.cc:114 (set (mem:QI (reg/v/f:DI 3 bx [orig:63 s ] [63]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (nil))

(insn:HI 36 35 37 6 ./strings.cc:114 (parallel [
            (set (reg/v/f:DI 3 bx [orig:63 s ] [63])
                (plus:DI (reg/v/f:DI 3 bx [orig:63 s ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 37 36 38 6 ("./strings.cc") 115)

(insn:HI 38 37 39 6 ./strings.cc:115 (set (reg:QI 0 ax [orig:58 temp.240 ] [58])
        (mem:QI (reg/v/f:DI 3 bx [orig:63 s ] [63]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 36 (nil))
    (nil))

(insn:HI 39 38 40 6 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:58 temp.240 ] [58])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 38 (nil))
    (nil))

(jump_insn:HI 40 39 78 6 ./strings.cc:115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 94)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 39 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 6, registers live:
 0 [ax] 3 [bx] 7 [sp]

(note:HI 78 40 126 NOTE_INSN_LOOP_BEG)

;; Start of basic block 7, registers live: 3 [bx] 7 [sp]
(note 126 78 127 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 127 126 128 7 (set (pc)
        (label_ref 58)) -1 (nil)
    (nil))
;; End of basic block 7, registers live:
 3 [bx] 7 [sp]

(barrier 128 127 44)

;; Start of basic block 8, registers live: 3 [bx] 7 [sp]
(code_label:HI 44 128 45 8 148 "" [1 uses])

(note:HI 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 46 45 47 8 ./strings.cc:115 (parallel [
            (set (reg/v/f:DI 3 bx [orig:63 s ] [63])
                (plus:DI (reg/v/f:DI 3 bx [orig:63 s ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 47 46 48 8 ./strings.cc:115 (set (reg:QI 0 ax [orig:58 temp.240 ] [58])
        (mem:QI (reg/v/f:DI 3 bx [orig:63 s ] [63]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 46 (nil))
    (nil))

(insn:HI 48 47 49 8 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:58 temp.240 ] [58])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 47 (nil))
    (nil))

(jump_insn:HI 49 48 94 8 ./strings.cc:115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 58)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 48 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 8, registers live:
 0 [ax] 3 [bx] 7 [sp]

;; Start of basic block 9, registers live: 0 [ax] 3 [bx] 7 [sp]
(code_label:HI 94 49 83 9 151 "" [1 uses])

(note:HI 83 94 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 52 83 54 9 ./strings.cc:115 (set (reg:SI 5 di [orig:65 temp.240 ] [65])
        (sign_extend:SI (reg:QI 0 ax [orig:58 temp.240 ] [58]))) 121 {extendqisi2} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:58 temp.240 ] [58])
        (nil)))

(call_insn/u:HI 54 52 56 9 ./strings.cc:115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 53 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ temp.240 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ temp.240 ]))
            (nil))))

(insn:HI 56 54 57 9 ./strings.cc:115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:59 D.2579 ] [59])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 55 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.2579 ] [59])
        (nil)))

(jump_insn:HI 57 56 79 9 ./strings.cc:115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 56 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 9, registers live:
 3 [bx] 7 [sp]

(note:HI 79 57 121 NOTE_INSN_LOOP_END)

;; Start of basic block 10, registers live: 3 [bx] 7 [sp]
(note 121 79 116 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 116 121 117 10 ("./strings.cc") 118)

(insn 117 116 118 10 ./strings.cc:118 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 3 bx [orig:63 s ] [63])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:63 s ] [63])
        (nil)))

(insn 118 117 119 10 ./strings.cc:118 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))

(insn 119 118 120 10 ./strings.cc:118 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(jump_insn 120 119 123 10 ./strings.cc:118 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 10, registers live:
 0 [ax] 3 [bx] 7 [sp]

(barrier 123 120 98)

(note 98 123 0 NOTE_INSN_DELETED)


;; Function char* strlopspace(char*) (_Z11strlopspacePc)



try_optimize_cfg iteration 1

Forwarding edge 0->1 to 3 failed.


try_optimize_cfg iteration 1

Fallthru edge 0->3 redirected to 3
Deleting block 1.


try_optimize_cfg iteration 2

STC - round 1
Getting bb 0
Basic block 0 was visited in trace 0
Block 3 can't be copied because its size = 12.
  Possible start of this round: 4 (key: -1026)
Basic block 3 was visited in trace 0
Basic block 2 was visited in trace 0
Block 3 can't be copied because its size = 12.
Rotating loop 3 - 2
Changing key for bb 4 from -1026 to -1051026.
Getting bb 4
Basic block 4 was visited in trace 1
STC - round 2
STC - round 3
STC - round 4
Trace 1 (round 1):  0 [1026] 2 [9500] 3 [10000]
Trace 2 (round 1):  4 [1026]
Connection: 3 4
Final order:
0 2 3 4 

4 basic blocks, 8 edges.

Basic block 0 prev -1, next 2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [5.0%]  (can_fallthru) 3 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 5 [di] 6 [bp] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 6 [bp] 7 [sp]

Basic block 2 prev 0, next 3, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  3 [95.0%]  (can_fallthru)
Successors:  4 [5.0%]  (can_fallthru,loop_exit) 3 [95.0%]  (fallthru,dfs_back,can_fallthru)
Registers live at start: 3 [bx] 6 [bp] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 6 [bp] 7 [sp]

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [95.0%]  (fallthru,dfs_back,can_fallthru) 0 [95.0%]  (fallthru,can_fallthru)
Successors:  2 [95.0%]  (can_fallthru) 4 [5.0%]  (fallthru,can_fallthru,loop_exit)
Registers live at start: 0 [ax] 3 [bx] 6 [bp] 7 [sp]
Registers live at end: 3 [bx] 6 [bp] 7 [sp]

Basic block 4 prev 3, next -2, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  3 [5.0%]  (fallthru,can_fallthru,loop_exit) 2 [5.0%]  (can_fallthru,loop_exit) 0 [5.0%]  (can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 3 [bx] 6 [bp] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 6 [bp] 7 [sp]

Reordered sequence:
 0 bb 0  [1026]
 1 compensation  [51]
 2 bb 2  [9500]
 3 bb 3  [10000]
 4 bb 4  [1026]


try_optimize_cfg iteration 1

Forwarding edge 0->1 to 4 failed.
(note:HI 1 0 6 ("./strings.cc") 93)

;; Start of basic block 0, registers live: 3 [bx] 5 [di] 6 [bp] 7 [sp]
(note:HI 6 1 69 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn/f 69 6 70 0 ./strings.cc:93 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 6 bp)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 70 69 71 0 ./strings.cc:93 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(insn/f 71 70 72 0 ./strings.cc:93 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 762 {pro_epilogue_adjust_stack_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 72 71 3 0 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 72 4 0 ./strings.cc:93 (set (reg/v/f:DI 6 bp [orig:62 s ] [62])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 8 4 9 0 ("./strings.cc") 96)

(insn:HI 9 8 14 0 ./strings.cc:96 (set (reg:QI 0 ax [orig:60 D.2562 ] [60])
        (mem:QI (reg:DI 5 di [orig:62 s ] [62]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn:HI 14 9 10 0 ./strings.cc:96 (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (reg:DI 5 di [orig:62 s ] [62])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [orig:62 s ] [62])
        (nil)))

(insn:HI 10 14 11 0 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 D.2562 ] [60])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 9 (nil))
    (nil))

(jump_insn:HI 11 10 58 0 ./strings.cc:96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 30)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 0, registers live:
 0 [ax] 3 [bx] 6 [bp] 7 [sp]

(note:HI 58 11 79 1 NOTE_INSN_LOOP_BEG)

;; Start of basic block 1, registers live: 3 [bx] 6 [bp] 7 [sp]
(note 79 58 80 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn 80 79 81 1 (set (pc)
        (label_ref 38)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 3 [bx] 6 [bp] 7 [sp]

(barrier 81 80 22)

;; Start of basic block 2, registers live: 3 [bx] 6 [bp] 7 [sp]
(code_label:HI 22 81 23 2 159 "" [1 uses])

(note:HI 23 22 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 24 23 25 2 ("./strings.cc") 97)

(insn:HI 25 24 26 2 ./strings.cc:97 (parallel [
            (set (reg/v/f:DI 3 bx [orig:58 last ] [58])
                (plus:DI (reg/v/f:DI 3 bx [orig:58 last ] [58])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 26 25 27 2 ("./strings.cc") 96)

(insn:HI 27 26 28 2 ./strings.cc:96 (set (reg:QI 0 ax [orig:60 D.2562 ] [60])
        (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 25 (nil))
    (nil))

(insn:HI 28 27 29 2 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 D.2562 ] [60])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 27 (nil))
    (nil))

(jump_insn:HI 29 28 30 2 ./strings.cc:96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 38)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 28 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 2, registers live:
 0 [ax] 3 [bx] 6 [bp] 7 [sp]

;; Start of basic block 3, registers live: 0 [ax] 3 [bx] 6 [bp] 7 [sp]
(code_label:HI 30 29 31 3 158 "" [1 uses])

(note:HI 31 30 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 32 31 34 3 ./strings.cc:96 (set (reg:SI 5 di [orig:63 D.2562 ] [63])
        (sign_extend:SI (reg:QI 0 ax [orig:60 D.2562 ] [60]))) 121 {extendqisi2} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:60 D.2562 ] [60])
        (nil)))

(call_insn/u:HI 34 32 36 3 ./strings.cc:96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2562 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2562 ]))
            (nil))))

(insn:HI 36 34 37 3 ./strings.cc:96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:59 D.2564 ] [59])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 35 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.2564 ] [59])
        (nil)))

(jump_insn:HI 37 36 59 3 ./strings.cc:96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 36 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 3, registers live:
 3 [bx] 6 [bp] 7 [sp]

(note:HI 59 37 38 NOTE_INSN_LOOP_END)

;; Start of basic block 4, registers live: 3 [bx] 6 [bp] 7 [sp]
(code_label:HI 38 59 39 4 157 "" [2 uses])

(note:HI 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 40 39 41 4 ("./strings.cc") 98)

(insn:HI 41 40 45 4 ./strings.cc:98 (set (mem:QI (reg/v/f:DI 3 bx [orig:58 last ] [58]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:58 last ] [58])
        (nil)))

(note:HI 45 41 46 4 NOTE_INSN_FUNCTION_END)

(note:HI 46 45 48 4 ("./strings.cc") 100)

(insn:HI 48 46 54 4 ./strings.cc:100 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 6 bp [orig:62 s ] [62])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:62 s ] [62])
        (nil)))

(insn 54 48 73 4 ./strings.cc:100 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 48 (nil))
    (nil))

(note 73 54 74 4 NOTE_INSN_EPILOGUE_BEG)

(insn 74 73 75 4 ./strings.cc:100 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) 762 {pro_epilogue_adjust_stack_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn 75 74 76 4 ./strings.cc:100 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 76 75 77 4 ./strings.cc:100 (parallel [
            (set (reg:DI 6 bp)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(jump_insn 77 76 78 4 ./strings.cc:100 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 4, registers live:
 0 [ax] 3 [bx] 6 [bp] 7 [sp]

(barrier 78 77 68)

(note 68 78 0 NOTE_INSN_DELETED)


;; Function char* strcasepre(const char*, const char*) (_Z10strcaseprePKcS0_)



try_optimize_cfg iteration 1

Forwarding edge 3->4 to 2 failed.


try_optimize_cfg iteration 1

Removing jump 75.
Fallthru edge 3->2 redirected to 2
Deleting block 4.


try_optimize_cfg iteration 2

STC - round 1
Getting bb 0
Basic block 0 was visited in trace 0
Block 2 can't be copied because its size = 23.
  Possible start of this round: 1 (key: -526)
Basic block 2 was visited in trace 0
  Possible start of next round: 5 (key: -500)
Basic block 3 was visited in trace 0
Block 2 can't be copied because its size = 23.
Rotating loop 2 - 3
Changing key for bb 5 from -500 to -1050500.
Getting bb 1
Basic block 1 was visited in trace 1
Block 6 can't be copied because its size = 5.
Basic block 6 was visited in trace 1
STC - round 2
Getting bb 5
Basic block 5 was visited in trace 2
STC - round 3
STC - round 4
Trace 1 (round 1):  0 [1026] 3 [9500] 2 [10000]
Trace 2 (round 1):  1 [526] 6 [1026]
Trace 3 (round 2):  5 [500]
Connection: 2 5
Connection: 5 6 exit
Fallthru edge 5->7 redirected to 7
Duplicated bb 6 (created bb 7)
Final order:
0 3 2 5 7 1 6 

7 basic blocks, 11 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1026, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  2 [95.0%]  (can_fallthru) 1 [5.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 41 [r12]

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 526, maybe hot.
Predecessors:  0 [5.0%]  (fallthru,can_fallthru) 3 [5.0%]  (can_fallthru,loop_exit)
Successors:  6 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 7 [sp] 41 [r12]
Registers live at end: 0 [ax] 7 [sp]

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  0 [95.0%]  (can_fallthru) 3 [95.0%]  (fallthru,dfs_back,can_fallthru)
Successors:  5 [5.0%]  (can_fallthru,loop_exit) 3 [95.0%]  (fallthru,can_fallthru)
Registers live at start: 0 [ax] 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 6 [bp] 7 [sp] 41 [r12]

Basic block 3 prev 2, next 5, loop_depth 1, count 0, freq 9500, maybe hot.
Predecessors:  2 [95.0%]  (fallthru,can_fallthru)
Successors:  1 [5.0%]  (can_fallthru,loop_exit) 2 [95.0%]  (fallthru,dfs_back,can_fallthru)
Registers live at start: 6 [bp] 7 [sp] 41 [r12]
Registers live at end: 0 [ax] 6 [bp] 7 [sp] 41 [r12]

Basic block 5 prev 3, next 6, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  2 [5.0%]  (can_fallthru,loop_exit)
Successors:  7 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 7 [sp]
Registers live at end: 0 [ax] 7 [sp]

Basic block 6 prev 5, next 7, loop_depth 0, count 0, freq 526, maybe hot.
Predecessors:  1 [100.0%]  (fallthru,can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 0 [ax] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Basic block 7 prev 6, next -2, loop_depth 0, count 0, freq 500, maybe hot.
Predecessors:  5 [100.0%]  (fallthru,can_fallthru)
Successors:  EXIT [100.0%] 
Registers live at start: 0 [ax] 7 [sp]
Registers live at end: 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

Emitting label for block 3
Reordered sequence:
 0 bb 0  [1026]
 1 compensation  [51]
 2 bb 3  [9500]
 3 bb 2  [10000]
 4 bb 5  [500]
 5 duplicate of 6  [500]
 6 bb 1  [526]
 7 bb 6  [526]


try_optimize_cfg iteration 1

Forwarding edge 0->1 to 6 failed.
Deleted label in block 4.
Merged 4 and 5 without moving.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2

Forwarding edge 0->1 to 6 failed.
(note:HI 1 0 7 ("./strings.cc") 56)

;; Start of basic block 0, registers live: 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
(note:HI 7 1 81 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn/f 81 7 82 0 ./strings.cc:56 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 82 81 83 0 ./strings.cc:56 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 6 bp)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 83 82 84 0 ./strings.cc:56 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 84 83 3 0 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 84 5 0 ./strings.cc:56 (set (reg/v/f:DI 41 r12 [orig:64 str ] [64])
        (reg:DI 5 di [ str ])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [ str ])
        (nil)))

(note:HI 5 3 10 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 10 5 11 0 ("./strings.cc") 60)

(insn:HI 11 10 21 0 ./strings.cc:60 (set (reg:QI 0 ax [orig:62 D.2522 ] [62])
        (mem:QI (reg/v/f:DI 4 si [orig:65 pre ] [65]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 4 (nil))
    (nil))

(insn:HI 21 11 12 0 ./strings.cc:60 (set (reg/f:DI 6 bp [orig:58 ivtmp.302 ] [58])
        (reg/v/f:DI 4 si [orig:65 pre ] [65])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:65 pre ] [65])
        (nil)))

(insn:HI 12 21 13 0 ./strings.cc:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:62 D.2522 ] [62])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 11 (nil))
    (nil))

(jump_insn:HI 13 12 102 0 ./strings.cc:60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 22)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 0, registers live:
 0 [ax] 6 [bp] 7 [sp] 41 [r12]

;; Start of basic block 1, registers live: 7 [sp] 41 [r12]
(note 102 13 103 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn 103 102 104 1 (set (pc)
        (label_ref 14)) -1 (nil)
    (nil))
;; End of basic block 1, registers live:
 7 [sp] 41 [r12]

(barrier 104 103 37)

(note:HI 37 104 105 ("./strings.cc") 62)

;; Start of basic block 2, registers live: 6 [bp] 7 [sp] 41 [r12]
(code_label 105 37 36 2 170 "" [1 uses])

(note:HI 36 105 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 38 36 39 2 ./strings.cc:62 (parallel [
            (set (reg/v/f:DI 41 r12 [orig:64 str ] [64])
                (plus:DI (reg/v/f:DI 41 r12 [orig:64 str ] [64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note:HI 39 38 40 2 ("./strings.cc") 60)

(insn:HI 40 39 41 2 ./strings.cc:60 (set (reg:QI 0 ax [orig:62 D.2522 ] [62])
        (mem:QI (plus:DI (reg/f:DI 6 bp [orig:58 ivtmp.302 ] [58])
                (const_int 1 [0x1])) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn:HI 41 40 42 2 ./strings.cc:60 (parallel [
            (set (reg/f:DI 6 bp [orig:58 ivtmp.302 ] [58])
                (plus:DI (reg/f:DI 6 bp [orig:58 ivtmp.302 ] [58])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 42 41 43 2 ./strings.cc:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:62 D.2522 ] [62])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 40 (nil))
    (nil))

(jump_insn:HI 43 42 68 2 ./strings.cc:60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref/s 14)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 42 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 2, registers live:
 0 [ax] 6 [bp] 7 [sp] 41 [r12]

(note:HI 68 43 22 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: 0 [ax] 6 [bp] 7 [sp] 41 [r12]
(code_label:HI 22 68 23 3 166 "" [1 uses])

(note:HI 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 24 23 25 3 ("./strings.cc") 61)

(insn:HI 25 24 27 3 ./strings.cc:61 (set (reg:SI 5 di [orig:66 D.2522 ] [66])
        (sign_extend:SI (reg:QI 0 ax [orig:62 D.2522 ] [62]))) 121 {extendqisi2} (nil)
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:62 D.2522 ] [62])
        (nil)))

(call_insn/u:HI 27 25 28 3 ./strings.cc:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 26 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2522 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2522 ]))
            (nil))))

(insn:HI 28 27 29 3 ./strings.cc:61 (set (reg:SI 3 bx [orig:60 D.2525 ] [60])
        (reg:SI 0 ax)) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))

(insn:HI 29 28 31 3 ./strings.cc:61 (set (reg:SI 5 di [67])
        (sign_extend:SI (mem:QI (reg/v/f:DI 41 r12 [orig:64 str ] [64]) [0 S1 A8]))) 121 {extendqisi2} (nil)
    (nil))

(call_insn/u:HI 31 29 33 3 ./strings.cc:61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 30 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
            (nil))))

(insn:HI 33 31 34 3 ./strings.cc:61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 3 bx [orig:60 D.2525 ] [60])
            (reg:SI 0 ax [orig:59 D.2528 ] [59]))) 5 {*cmpsi_1_insn} (insn_list:REG_DEP_TRUE 28 (insn_list:REG_DEP_TRUE 32 (nil)))
    (expr_list:REG_DEAD (reg:SI 3 bx [orig:60 D.2525 ] [60])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.2528 ] [59])
            (nil))))

(jump_insn:HI 34 33 69 3 ./strings.cc:61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 105)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 41 [r12]

(note:HI 69 34 48 NOTE_INSN_LOOP_END)

;; Start of basic block 4, registers live: 7 [sp]
(note:HI 48 69 91 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 91 48 93 4 ./strings.cc:60 (parallel [
            (set (reg/f:DI 0 ax [orig:61 D.2523 ] [61])
                (const_int 0 [0x0]))
            (clobber (reg:CC 17 flags))
        ]) 78 {*movdi_xor_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(note 93 91 94 4 ("./strings.cc") 64)

(insn 94 93 95 4 ./strings.cc:64 (use (reg/i:DI 0 ax [ <result> ])) -1 (nil)
    (nil))

(insn 95 94 96 4 ./strings.cc:64 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 96 95 97 4 ./strings.cc:64 (parallel [
            (set (reg:DI 6 bp)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 97 96 98 4 ./strings.cc:64 (parallel [
            (set (reg:DI 41 r12)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(jump_insn 98 97 101 4 ./strings.cc:64 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 4, registers live:
 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 101 98 14)

;; Start of basic block 6, registers live: 7 [sp] 41 [r12]
(code_label:HI 14 101 15 6 164 "" [2 uses])

(note:HI 15 14 16 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 16 15 55 6 ./strings.cc:60 (set (reg/f:DI 0 ax [orig:61 D.2523 ] [61])
        (reg/v/f:DI 41 r12 [orig:64 str ] [64])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:64 str ] [64])
        (nil)))

(note:HI 55 16 56 6 NOTE_INSN_FUNCTION_END)

(note:HI 56 55 64 6 ("./strings.cc") 64)

(insn 64 56 85 6 ./strings.cc:64 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 58 (nil))
    (nil))

(note 85 64 86 6 NOTE_INSN_EPILOGUE_BEG)

(insn 86 85 87 6 ./strings.cc:64 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 87 86 88 6 ./strings.cc:64 (parallel [
            (set (reg:DI 6 bp)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 88 87 89 6 ./strings.cc:64 (parallel [
            (set (reg:DI 41 r12)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(jump_insn 89 88 90 6 ./strings.cc:64 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 6, registers live:
 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 90 89 80)

(note 80 90 0 NOTE_INSN_DELETED)


;; Function char* strclean(char*) (_Z8strcleanPc)



try_optimize_cfg iteration 1



try_optimize_cfg iteration 1

STC - round 1
Getting bb 0
Basic block 0 was visited in trace 0
  Possible start of this round: 7 (key: -1111)
Basic block 1 was visited in trace 0
Block 2 can't be copied because its size = 14.
Basic block 2 was visited in trace 0
  Possible start of this round: 5 (key: -8208)
Basic block 3 was visited in trace 0
Basic block 4 was visited in trace 0
Block 5 can't be copied because its size = 14.
  Possible start of this round: 6 (key: -10000)
Basic block 5 was visited in trace 0
Block 6 can't be copied because its size = 13.
Basic block 6 was visited in trace 0
Block 2 can't be copied because its size = 14.
Rotating loop 2 - 6
Block 2 can't be copied because its size = 14.
Changing key for bb 7 from -1111 to -1101111.
Getting bb 7
Basic block 7 was visited in trace 1
STC - round 2
STC - round 3
STC - round 4
Trace 1 (round 1):  0 [1111] 1 [1000] 2 [10000] 3 [7000] 4 [3584] 5 [8208] 6 [10000]
Trace 2 (round 1):  7 [1111]
Connection: 6 7
Final order:
0 1 2 3 4 5 6 7 

8 basic blocks, 14 edges.

Basic block 0 prev -1, next 1, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  7 [10.0%]  (can_fallthru) 1 [90.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
Registers live at end: 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14]

Basic block 1 prev 0, next 2, loop_depth 0, count 0, freq 1000, maybe hot.
Predecessors:  0 [90.0%]  (fallthru,can_fallthru)
Successors:  2 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14]
Registers live at end: 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

Basic block 2 prev 1, next 3, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  1 [100.0%]  (fallthru,can_fallthru) 6 [90.0%]  (dfs_back,can_fallthru)
Successors:  5 [30.0%]  (can_fallthru) 3 [70.0%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
Registers live at end: 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

Basic block 3 prev 2, next 4, loop_depth 1, count 0, freq 7000, maybe hot.
Predecessors:  2 [70.0%]  (fallthru,can_fallthru)
Successors:  5 [48.8%]  (can_fallthru) 4 [51.2%]  (fallthru,can_fallthru)
Registers live at start: 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
Registers live at end: 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

Basic block 4 prev 3, next 5, loop_depth 1, count 0, freq 3584, maybe hot.
Predecessors:  3 [51.2%]  (fallthru,can_fallthru)
Successors:  6 [50.0%]  (can_fallthru) 5 [50.0%]  (fallthru,can_fallthru)
Registers live at start: 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
Registers live at end: 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

Basic block 5 prev 4, next 6, loop_depth 1, count 0, freq 8208, maybe hot.
Predecessors:  2 [30.0%]  (can_fallthru) 3 [48.8%]  (can_fallthru) 4 [50.0%]  (fallthru,can_fallthru)
Successors:  6 [100.0%]  (fallthru,can_fallthru)
Registers live at start: 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
Registers live at end: 7 [sp] 41 [r12] 42 [r13] 43 [r14]

Basic block 6 prev 5, next 7, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  4 [50.0%]  (can_fallthru) 5 [100.0%]  (fallthru,can_fallthru)
Successors:  2 [90.0%]  (dfs_back,can_fallthru) 7 [10.0%]  (fallthru,can_fallthru,loop_exit)
Registers live at start: 7 [sp] 41 [r12] 42 [r13] 43 [r14]
Registers live at end: 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

Basic block 7 prev 6, next -2, loop_depth 0, count 0, freq 1111, maybe hot.
Predecessors:  0 [10.0%]  (can_fallthru) 6 [10.0%]  (fallthru,can_fallthru,loop_exit)
Successors:  EXIT [100.0%] 
Registers live at start: 7 [sp] 42 [r13] 43 [r14]
Registers live at end: 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

Reordered sequence:
 0 bb 0  [1111]
 1 bb 1  [1000]
 2 bb 2  [10000]
 3 bb 3  [7000]
 4 bb 4  [3584]
 5 bb 5  [8208]
 6 bb 6  [10000]
 7 bb 7  [1111]


try_optimize_cfg iteration 1

(note:HI 1 0 6 ("./strings.cc") 29)

;; Start of basic block 0, registers live: 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
(note:HI 6 1 90 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn/f 90 6 91 0 ./strings.cc:29 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 43 r14)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))

(insn/f 91 90 92 0 ./strings.cc:29 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 42 r13)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))

(insn/f 92 91 93 0 ./strings.cc:29 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 41 r12)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))

(insn/f 93 92 94 0 ./strings.cc:29 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 6 bp)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))

(insn/f 94 93 95 0 ./strings.cc:29 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0 S8 A8])
        (reg:DI 3 bx)) 74 {*pushdi2_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))

(note 95 94 3 0 NOTE_INSN_PROLOGUE_END)

(insn:HI 3 95 4 0 ./strings.cc:29 (set (reg/v/f:DI 43 r14 [orig:66 s ] [66])
        (reg:DI 5 di [ s ])) 81 {*movdi_1_rex64} (nil)
    (nil))

(note:HI 4 3 8 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 8 4 9 0 ("./strings.cc") 33)

(insn:HI 9 8 14 0 ./strings.cc:33 (set (reg:QI 3 bx [orig:64 D.2495 ] [64])
        (mem:QI (reg:DI 5 di [orig:66 s ] [66]) [0 S1 A8])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(insn:HI 14 9 10 0 ./strings.cc:33 (set (reg/v/f:DI 42 r13 [orig:59 p ] [59])
        (reg:DI 5 di [orig:66 s ] [66])) 81 {*movdi_1_rex64} (nil)
    (nil))

(insn:HI 10 14 11 0 ./strings.cc:33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 3 bx [orig:64 D.2495 ] [64])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 9 (nil))
    (nil))

(jump_insn:HI 11 10 18 0 ./strings.cc:33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 56)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
            (nil))))
;; End of basic block 0, registers live:
 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14]

;; Start of basic block 1, registers live: 3 [bx] 5 [di] 7 [sp] 42 [r13] 43 [r14]
(note:HI 18 11 19 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 19 18 76 1 ./strings.cc:33 (set (reg/f:DI 41 r12 [orig:58 ivtmp.331 ] [58])
        (reg:DI 5 di [orig:66 s ] [66])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg:DI 5 di [orig:66 s ] [66])
        (nil)))
;; End of basic block 1, registers live:
 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(note:HI 76 19 21 NOTE_INSN_LOOP_BEG)

;; Start of basic block 2, registers live: 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
(code_label:HI 21 76 22 2 175 "" [1 uses])

(note:HI 22 21 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 23 22 24 2 ("./strings.cc") 34)

(insn:HI 24 23 25 2 ./strings.cc:34 (set (reg:SI 6 bp [orig:63 D.2499 ] [63])
        (sign_extend:SI (reg:QI 3 bx [orig:64 D.2495 ] [64]))) 121 {extendqisi2} (nil)
    (nil))

(insn:HI 25 24 26 2 ./strings.cc:34 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 6 bp [orig:63 D.2499 ] [63])) 40 {*movsi_1} (insn_list:REG_DEP_TRUE 24 (nil))
    (nil))

(call_insn/u:HI 26 25 28 2 ./strings.cc:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isalnum") [flags 0x41] <function_decl 0x2ad10a4adb00 isalnum>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 25 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2499 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn:HI 28 26 29 2 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:62 D.2500 ] [62])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.2500 ] [62])
        (nil)))

(jump_insn:HI 29 28 31 2 ./strings.cc:34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 28 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 3000 [0xbb8])
            (nil))))
;; End of basic block 2, registers live:
 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; Start of basic block 3, registers live: 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
(note:HI 31 29 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 32 31 33 3 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 3 bx [orig:64 D.2495 ] [64])
            (const_int 45 [0x2d]))) 10 {*cmpqi_1} (nil)
    (expr_list:REG_DEAD (reg:QI 3 bx [orig:64 D.2495 ] [64])
        (nil)))

(jump_insn:HI 33 32 35 3 ./strings.cc:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 32 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 4880 [0x1310])
            (nil))))
;; End of basic block 3, registers live:
 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; Start of basic block 4, registers live: 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
(note:HI 35 33 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 36 35 37 4 ./strings.cc:34 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 6 bp [orig:63 D.2499 ] [63])) 40 {*movsi_1} (nil)
    (nil))

(call_insn/u:HI 37 36 39 4 ./strings.cc:34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isspace") [flags 0x41] <function_decl 0x2ad10a4b2900 isspace>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 36 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2499 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn:HI 39 37 40 4 ./strings.cc:34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:61 D.2501 ] [61])
            (const_int 0 [0x0]))) 3 {*cmpsi_ccno_1} (insn_list:REG_DEP_TRUE 38 (nil))
    (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.2501 ] [61])
        (nil)))

(jump_insn:HI 40 39 41 4 ./strings.cc:34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 39 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4, registers live:
 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; Start of basic block 5, registers live: 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
(code_label:HI 41 40 42 5 176 "" [2 uses])

(note:HI 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 43 42 44 5 ("./strings.cc") 35)

(insn:HI 44 43 45 5 ./strings.cc:35 (set (reg:SI 5 di [ D.2499 ])
        (reg:SI 6 bp [orig:63 D.2499 ] [63])) 40 {*movsi_1} (nil)
    (expr_list:REG_DEAD (reg:SI 6 bp [orig:63 D.2499 ] [63])
        (nil)))

(call_insn/u:HI 45 44 47 5 ./strings.cc:35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41] <function_decl 0x2ad10a4b3500 tolower>) [0 S1 A8])
            (const_int 0 [0x0]))) 769 {*call_value_0_rex64} (insn_list:REG_DEP_TRUE 44 (nil))
    (expr_list:REG_DEAD (reg:SI 5 di [ D.2499 ])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 di [ D.2499 ]))
            (nil))))

(insn:HI 47 45 48 5 ./strings.cc:35 (set (mem:QI (reg/v/f:DI 42 r13 [orig:59 p ] [59]) [0 S1 A8])
        (reg:QI 0 ax [orig:60 D.2502 ] [60])) 55 {*movqi_1} (insn_list:REG_DEP_TRUE 46 (nil))
    (expr_list:REG_DEAD (reg:QI 0 ax [orig:60 D.2502 ] [60])
        (nil)))

(insn:HI 48 47 49 5 ./strings.cc:35 (parallel [
            (set (reg/v/f:DI 42 r13 [orig:59 p ] [59])
                (plus:DI (reg/v/f:DI 42 r13 [orig:59 p ] [59])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;; End of basic block 5, registers live:
 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; Start of basic block 6, registers live: 7 [sp] 41 [r12] 42 [r13] 43 [r14]
(code_label:HI 49 48 50 6 179 "" [1 uses])

(note:HI 50 49 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note:HI 51 50 52 6 ("./strings.cc") 33)

(insn:HI 52 51 53 6 ./strings.cc:33 (set (reg:QI 3 bx [orig:64 D.2495 ] [64])
        (mem:QI (plus:DI (reg/f:DI 41 r12 [orig:58 ivtmp.331 ] [58])
                (const_int 1 [0x1])) [0 S1 A8])) 55 {*movqi_1} (nil)
    (nil))

(insn:HI 53 52 54 6 ./strings.cc:33 (parallel [
            (set (reg/f:DI 41 r12 [orig:58 ivtmp.331 ] [58])
                (plus:DI (reg/f:DI 41 r12 [orig:58 ivtmp.331 ] [58])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 203 {*adddi_1_rex64} (nil)
    (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))

(insn:HI 54 53 55 6 ./strings.cc:33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 3 bx [orig:64 D.2495 ] [64])
            (const_int 0 [0x0]))) 9 {*cmpqi_ccno_1} (insn_list:REG_DEP_TRUE 52 (nil))
    (nil))

(jump_insn:HI 55 54 77 6 ./strings.cc:33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref:DI 21)
            (pc))) 533 {*jcc_1} (insn_list:REG_DEP_TRUE 54 (nil))
    (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 6, registers live:
 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(note:HI 77 55 56 NOTE_INSN_LOOP_END)

;; Start of basic block 7, registers live: 7 [sp] 42 [r13] 43 [r14]
(code_label:HI 56 77 57 7 174 "" [1 uses])

(note:HI 57 56 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 58 57 59 7 ("./strings.cc") 36)

(insn:HI 59 58 63 7 ./strings.cc:36 (set (mem:QI (reg/v/f:DI 42 r13 [orig:59 p ] [59]) [0 S1 A8])
        (const_int 0 [0x0])) 55 {*movqi_1} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:59 p ] [59])
        (nil)))

(note:HI 63 59 64 7 NOTE_INSN_FUNCTION_END)

(note:HI 64 63 66 7 ("./strings.cc") 38)

(insn:HI 66 64 72 7 ./strings.cc:38 (set (reg/i:DI 0 ax [ <result> ])
        (reg/v/f:DI 43 r14 [orig:66 s ] [66])) 81 {*movdi_1_rex64} (nil)
    (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:66 s ] [66])
        (nil)))

(insn 72 66 96 7 ./strings.cc:38 (use (reg/i:DI 0 ax [ <result> ])) -1 (insn_list:REG_DEP_TRUE 66 (nil))
    (nil))

(note 96 72 97 7 NOTE_INSN_EPILOGUE_BEG)

(insn 97 96 98 7 ./strings.cc:38 (parallel [
            (set (reg:DI 3 bx)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 98 97 99 7 ./strings.cc:38 (parallel [
            (set (reg:DI 6 bp)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 99 98 100 7 ./strings.cc:38 (parallel [
            (set (reg:DI 41 r12)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 100 99 101 7 ./strings.cc:38 (parallel [
            (set (reg:DI 42 r13)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(insn 101 100 102 7 ./strings.cc:38 (parallel [
            (set (reg:DI 43 r14)
                (mem:DI (reg/f:DI 7 sp) [0 S8 A8]))
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
        ]) 77 {popdi1} (nil)
    (nil))

(jump_insn 102 101 103 7 ./strings.cc:38 (return) 562 {return_internal} (nil)
    (nil))
;; End of basic block 7, registers live:
 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 103 102 89)

(note 89 103 0 NOTE_INSN_DELETED)

